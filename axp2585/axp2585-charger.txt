
axp2585-charger.o：     文件格式 elf32-littlearm


Disassembly of section .text:

00000000 <axp2585_set_ac_ihold>:
axp2585_set_ac_ihold():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:40
}

static int axp2585_set_ac_ihold(struct axp_charger_dev *cdev, int cur)
{
	return 0;
}
       0:	e3a00000 	mov	r0, #0
       4:	e12fff1e 	bx	lr

00000008 <axp2585_get_usb_current>:
axp2585_get_usb_current():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:68
}

static int axp2585_get_usb_current(struct axp_charger_dev *cdev)
{
	return 0;
}
       8:	e3a00000 	mov	r0, #0
       c:	e12fff1e 	bx	lr

00000010 <axp2585_get_bat_health>:
axp2585_get_bat_health():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:189
}

static int axp2585_get_bat_health(struct axp_charger_dev *cdev)
{
	return POWER_SUPPLY_HEALTH_GOOD;
}
      10:	e3a00001 	mov	r0, #1
      14:	e12fff1e 	bx	lr

00000018 <axp2585_charger_resume>:
axp2585_charger_resume():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:763

	return 0;
}

static int axp2585_charger_resume(struct platform_device *dev)
{
      18:	e92d4070 	push	{r4, r5, r6, lr}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:768
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);
	int pre_rest_vol;

	if (axp_suspend_flag == AXP_SUSPEND_WITH_IRQ) {
		axp_suspend_flag = AXP_NOT_SUSPEND;
      1c:	e3003000 	movw	r3, #0
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
#endif
}

static inline void *dev_get_drvdata(const struct device *dev)
{
	return dev->driver_data;
      20:	e590405c 	ldr	r4, [r0, #92]	; 0x5c
axp2585_charger_resume():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:768
      24:	e3a02001 	mov	r2, #1
      28:	e3403000 	movt	r3, #0
      2c:	e5832000 	str	r2, [r3]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:774
	//	sunxi_nmi_enable();
	} else {
		axp_suspend_flag = AXP_NOT_SUSPEND;
	}
	pre_rest_vol = chg_dev->rest_vol;
	axp_charger_resume(chg_dev);
      30:	e1a00004 	mov	r0, r4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:773
		axp_suspend_flag = AXP_NOT_SUSPEND;
	//	sunxi_nmi_enable();
	} else {
		axp_suspend_flag = AXP_NOT_SUSPEND;
	}
	pre_rest_vol = chg_dev->rest_vol;
      34:	e59450b0 	ldr	r5, [r4, #176]	; 0xb0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:774
	axp_charger_resume(chg_dev);
      38:	ebfffffe 	bl	0 <axp_charger_resume>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:776

	if (chg_dev->rest_vol - pre_rest_vol) {
      3c:	e59420b0 	ldr	r2, [r4, #176]	; 0xb0
      40:	e1550002 	cmp	r5, r2
      44:	1a000001 	bne	50 <axp2585_charger_resume+0x38>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:783
				pre_rest_vol, chg_dev->rest_vol);
		/*axp_regmap_write(map, 0x05, chg_dev->rest_vol | 0x80);*/
	}

	return 0;
}
      48:	e3a00000 	mov	r0, #0
      4c:	e8bd8070 	pop	{r4, r5, r6, pc}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:777
	}
	pre_rest_vol = chg_dev->rest_vol;
	axp_charger_resume(chg_dev);

	if (chg_dev->rest_vol - pre_rest_vol) {
		pr_info("battery vol change: %d->%d\n",
      50:	e3000000 	movw	r0, #0
      54:	e1a01005 	mov	r1, r5
      58:	e3400000 	movt	r0, #0
      5c:	ebfffffe 	bl	0 <printk>
      60:	eafffff8 	b	48 <axp2585_charger_resume+0x30>

00000064 <axp2585_charger_suspend>:
axp2585_charger_suspend():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
static int axp2585_charger_suspend(struct platform_device *dev,
				pm_message_t state)
{
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_suspend_flag = AXP_WAS_SUSPEND;
      64:	e3003000 	movw	r3, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:753
	return 0;
}

static int axp2585_charger_suspend(struct platform_device *dev,
				pm_message_t state)
{
      68:	e92d4010 	push	{r4, lr}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_suspend_flag = AXP_WAS_SUSPEND;
      6c:	e3403000 	movt	r3, #0
      70:	e3a02002 	mov	r2, #2
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
      74:	e590005c 	ldr	r0, [r0, #92]	; 0x5c
axp2585_charger_suspend():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
      78:	e5832000 	str	r2, [r3]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:757
	axp_charger_suspend(chg_dev);
      7c:	ebfffffe 	bl	0 <axp_charger_suspend>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:760

	return 0;
}
      80:	e3a00000 	mov	r0, #0
      84:	e8bd8010 	pop	{r4, pc}

00000088 <axp2585_charger_shutdown>:
axp2585_charger_shutdown():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:789

static void axp2585_charger_shutdown(struct platform_device *dev)
{
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_charger_shutdown(chg_dev);
      88:	e590005c 	ldr	r0, [r0, #92]	; 0x5c
      8c:	eafffffe 	b	0 <axp_charger_shutdown>

00000090 <axp2585_charger_remove>:
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:734
fail:
	return -1;
}

static int axp2585_charger_remove(struct platform_device *pdev)
{
      90:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
      94:	e3001000 	movw	r1, #0
      98:	e59f4050 	ldr	r4, [pc, #80]	; f0 <axp2585_charger_remove+0x60>
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:734
      9c:	e1a05000 	mov	r5, r0
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
      a0:	e3401000 	movt	r1, #0
      a4:	e5903010 	ldr	r3, [r0, #16]
      a8:	e590805c 	ldr	r8, [r0, #92]	; 0x5c
      ac:	e2846040 	add	r6, r4, #64	; 0x40
      b0:	e593704c 	ldr	r7, [r3, #76]	; 0x4c
      b4:	ea000000 	b	bc <axp2585_charger_remove+0x2c>
      b8:	e5141008 	ldr	r1, [r4, #-8]
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:740
	int i, irq;
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
      bc:	e1a00005 	mov	r0, r5
      c0:	e2844008 	add	r4, r4, #8
      c4:	ebfffffe 	bl	0 <platform_get_irq_byname>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:741
		if (irq < 0)
      c8:	e2501000 	subs	r1, r0, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:743
			continue;
		axp_free_irq(axp_dev, irq);
      cc:	e1a00007 	mov	r0, r7
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:741
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
		if (irq < 0)
      d0:	ba000000 	blt	d8 <axp2585_charger_remove+0x48>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:743
			continue;
		axp_free_irq(axp_dev, irq);
      d4:	ebfffffe 	bl	0 <axp_free_irq>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:739 (discriminator 2)
{
	int i, irq;
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
      d8:	e1540006 	cmp	r4, r6
      dc:	1afffff5 	bne	b8 <axp2585_charger_remove+0x28>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:746
		if (irq < 0)
			continue;
		axp_free_irq(axp_dev, irq);
	}

	axp_power_supply_unregister(chg_dev);
      e0:	e1a00008 	mov	r0, r8
      e4:	ebfffffe 	bl	0 <axp_power_supply_unregister>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:749

	return 0;
}
      e8:	e3a00000 	mov	r0, #0
      ec:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
      f0:	00000024 	andeq	r0, r0, r4, lsr #32

000000f4 <show_boost_mode>:
show_boost_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:554
	return count;
}

static ssize_t show_boost_mode(struct device *dev,
			struct device_attribute *attr, char *buf)
{
      f4:	e92d4070 	push	{r4, r5, r6, lr}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:558
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "1: open  0: close");
      f8:	e3003000 	movw	r3, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:554
	return count;
}

static ssize_t show_boost_mode(struct device *dev,
			struct device_attribute *attr, char *buf)
{
      fc:	e1a05002 	mov	r5, r2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:558
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "1: open  0: close");
     100:	e3002000 	movw	r2, #0
     104:	e1a00005 	mov	r0, r5
     108:	e3403000 	movt	r3, #0
     10c:	e3402000 	movt	r2, #0
     110:	e3a01a01 	mov	r1, #4096	; 0x1000
     114:	ebfffffe 	bl	0 <scnprintf>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:559
	s += scnprintf(s, end - s, "boost_mode=%d\n", boost_mode);
     118:	e3003000 	movw	r3, #0
     11c:	e0854000 	add	r4, r5, r0
     120:	e3403000 	movt	r3, #0
     124:	e3002000 	movw	r2, #0
     128:	e2601a01 	rsb	r1, r0, #4096	; 0x1000
     12c:	e593305c 	ldr	r3, [r3, #92]	; 0x5c
     130:	e1a00004 	mov	r0, r4
     134:	e3402000 	movt	r2, #0
     138:	ebfffffe 	bl	0 <scnprintf>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:560
	return s - buf;
     13c:	e0840000 	add	r0, r4, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:561
}
     140:	e0400005 	sub	r0, r0, r5
     144:	e8bd8070 	pop	{r4, r5, r6, pc}

00000148 <show_tc_mode>:
show_tc_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:526
static int tc_mode = 1;
static int boost_mode = 1;
static int power = 1;
static ssize_t show_tc_mode(struct device *dev,
			    struct device_attribute *attr, char *buf)
{
     148:	e92d4070 	push	{r4, r5, r6, lr}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:530
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "0: close 1: sink 2: source 3: drp");
     14c:	e3003000 	movw	r3, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:526
static int tc_mode = 1;
static int boost_mode = 1;
static int power = 1;
static ssize_t show_tc_mode(struct device *dev,
			    struct device_attribute *attr, char *buf)
{
     150:	e1a05002 	mov	r5, r2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:530
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "0: close 1: sink 2: source 3: drp");
     154:	e3002000 	movw	r2, #0
     158:	e1a00005 	mov	r0, r5
     15c:	e3403000 	movt	r3, #0
     160:	e3402000 	movt	r2, #0
     164:	e3a01a01 	mov	r1, #4096	; 0x1000
     168:	ebfffffe 	bl	0 <scnprintf>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:531
	s += scnprintf(s, end - s, "tc_mode=%d\n", tc_mode);
     16c:	e3003000 	movw	r3, #0
     170:	e0854000 	add	r4, r5, r0
     174:	e3403000 	movt	r3, #0
     178:	e3002000 	movw	r2, #0
     17c:	e2601a01 	rsb	r1, r0, #4096	; 0x1000
     180:	e5933060 	ldr	r3, [r3, #96]	; 0x60
     184:	e1a00004 	mov	r0, r4
     188:	e3402000 	movt	r2, #0
     18c:	ebfffffe 	bl	0 <scnprintf>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:532
	return s - buf;
     190:	e0840000 	add	r0, r4, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:533
}
     194:	e0400005 	sub	r0, r0, r5
     198:	e8bd8070 	pop	{r4, r5, r6, pc}

0000019c <axp2585_get_vbat>:
axp2585_get_vbat():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:197
{
	return ((int)(((reg >> 8) << 4) | (reg & 0x000F))) * 1200 / 1000;
}

static int axp2585_get_vbat(struct axp_charger_dev *cdev)
{
     19c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
     1a0:	e24dd00c 	sub	sp, sp, #12
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:200
	u8 tmp[2];
	u32 res;
	struct axp_regmap *map = cdev->chip->regmap;
     1a4:	e5900018 	ldr	r0, [r0, #24]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:202

	axp_regmap_reads(map, AXP2585_VBATH_RES, 2, tmp);
     1a8:	e28d3006 	add	r3, sp, #6
     1ac:	e3a02002 	mov	r2, #2
     1b0:	e3a01078 	mov	r1, #120	; 0x78
     1b4:	e5900004 	ldr	r0, [r0, #4]
     1b8:	ebfffffe 	bl	0 <axp_regmap_reads>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:203
	res = (tmp[0] << 8) | tmp[1];
     1bc:	e5dd3007 	ldrb	r3, [sp, #7]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:205

	return axp2585_vbat_to_mV(res);
     1c0:	e3a00e4b 	mov	r0, #1200	; 0x4b0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:203
	u8 tmp[2];
	u32 res;
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, AXP2585_VBATH_RES, 2, tmp);
	res = (tmp[0] << 8) | tmp[1];
     1c4:	e5dd1006 	ldrb	r1, [sp, #6]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:205

	return axp2585_vbat_to_mV(res);
     1c8:	e3042dd3 	movw	r2, #19923	; 0x4dd3
     1cc:	e3412062 	movt	r2, #4194	; 0x1062
     1d0:	e203300f 	and	r3, r3, #15
     1d4:	e1833201 	orr	r3, r3, r1, lsl #4
     1d8:	e0000390 	mul	r0, r0, r3
     1dc:	e0c32290 	smull	r2, r3, r0, r2
     1e0:	e1a00fc0 	asr	r0, r0, #31
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:206
}
     1e4:	e0600343 	rsb	r0, r0, r3, asr #6
     1e8:	e28dd00c 	add	sp, sp, #12
     1ec:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000001f0 <axp2585_get_disibat>:
axp2585_get_disibat():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:231

	return axp2585_icharge_to_mA(res);
}

static int axp2585_get_disibat(struct axp_charger_dev *cdev)
{
     1f0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
     1f4:	e24dd00c 	sub	sp, sp, #12
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:234
	u8 tmp[2];
	u32 dis_res;
	struct axp_regmap *map = cdev->chip->regmap;
     1f8:	e5900018 	ldr	r0, [r0, #24]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:236

	axp_regmap_reads(map, AXP2585_DISIBATH_REG, 2, tmp);
     1fc:	e28d3006 	add	r3, sp, #6
     200:	e3a02002 	mov	r2, #2
     204:	e3a0107c 	mov	r1, #124	; 0x7c
     208:	e5900004 	ldr	r0, [r0, #4]
     20c:	ebfffffe 	bl	0 <axp_regmap_reads>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:237
	dis_res = (tmp[0] << 8) | tmp[1];
     210:	e5dd0007 	ldrb	r0, [sp, #7]
     214:	e5dd3006 	ldrb	r3, [sp, #6]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:239

	return axp2585_ibat_to_mA(dis_res);
     218:	e200000f 	and	r0, r0, #15
     21c:	e1800203 	orr	r0, r0, r3, lsl #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:240
}
     220:	e1a00080 	lsl	r0, r0, #1
     224:	e28dd00c 	add	sp, sp, #12
     228:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000022c <axp2585_power_show>:
axp2585_power_show():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:585
	return count;
}

static ssize_t axp2585_power_show(struct device *dev,
			    struct device_attribute *attr, char *buf)
{
     22c:	e92d4070 	push	{r4, r5, r6, lr}
     230:	e1a06002 	mov	r6, r2
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
     234:	e590504c 	ldr	r5, [r0, #76]	; 0x4c
axp2585_power_show():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:590
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);
	int vbat, ibat;
	vbat = axp2585_get_vbat(chg_dev);
     238:	e1a00005 	mov	r0, r5
     23c:	ebffffd6 	bl	19c <axp2585_get_vbat>
     240:	e1a04000 	mov	r4, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:591
	ibat = axp2585_get_disibat(chg_dev);
     244:	e1a00005 	mov	r0, r5
     248:	ebffffe8 	bl	1f0 <axp2585_get_disibat>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:593
	power = vbat*ibat/1000;
	s += scnprintf(s, end - s, "%dmV\n", power);
     24c:	e0030490 	mul	r3, r0, r4
     250:	e3044dd3 	movw	r4, #19923	; 0x4dd3
     254:	e3414062 	movt	r4, #4194	; 0x1062
     258:	e3002000 	movw	r2, #0
     25c:	e1a00006 	mov	r0, r6
     260:	e3402000 	movt	r2, #0
     264:	e3a01a01 	mov	r1, #4096	; 0x1000
     268:	e0c54493 	smull	r4, r5, r3, r4
     26c:	e1a03fc3 	asr	r3, r3, #31
     270:	e0633345 	rsb	r3, r3, r5, asr #6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:595
	return s - buf;
}
     274:	e8bd4070 	pop	{r4, r5, r6, lr}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:593
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);
	int vbat, ibat;
	vbat = axp2585_get_vbat(chg_dev);
	ibat = axp2585_get_disibat(chg_dev);
	power = vbat*ibat/1000;
	s += scnprintf(s, end - s, "%dmV\n", power);
     278:	eafffffe 	b	0 <scnprintf>

0000027c <axp2585_get_ibat>:
axp2585_get_ibat():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:219
{
	return (int)((((reg >> 8) << 4) | (reg & 0x000F)) << 1);
}

static int axp2585_get_ibat(struct axp_charger_dev *cdev)
{
     27c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
     280:	e24dd00c 	sub	sp, sp, #12
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:222
	u8 tmp[2];
	u32 res;
	struct axp_regmap *map = cdev->chip->regmap;
     284:	e5900018 	ldr	r0, [r0, #24]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:224

	axp_regmap_reads(map, AXP2585_IBATH_REG, 2, tmp);
     288:	e28d3006 	add	r3, sp, #6
     28c:	e3a02002 	mov	r2, #2
     290:	e3a0107a 	mov	r1, #122	; 0x7a
     294:	e5900004 	ldr	r0, [r0, #4]
     298:	ebfffffe 	bl	0 <axp_regmap_reads>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:225
	res = (tmp[0] << 8) | tmp[1];
     29c:	e5dd0007 	ldrb	r0, [sp, #7]
     2a0:	e5dd3006 	ldrb	r3, [sp, #6]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:227

	return axp2585_icharge_to_mA(res);
     2a4:	e200000f 	and	r0, r0, #15
     2a8:	e1800203 	orr	r0, r0, r3, lsl #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:228
}
     2ac:	e1a00080 	lsl	r0, r0, #1
     2b0:	e28dd00c 	add	sp, sp, #12
     2b4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000002b8 <store_boost_mode>:
store_boost_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:565
	return s - buf;
}

static ssize_t store_boost_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
     2b8:	e92d4030 	push	{r4, r5, lr}
     2bc:	e1a04003 	mov	r4, r3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:568
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;
     2c0:	e590c04c 	ldr	ip, [r0, #76]	; 0x4c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:565
	return s - buf;
}

static ssize_t store_boost_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
     2c4:	e24dd00c 	sub	sp, sp, #12
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:570
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;

	err = kstrtoint(buf, 16, &val);
     2c8:	e1a00002 	mov	r0, r2
     2cc:	e3a01010 	mov	r1, #16
     2d0:	e28d2004 	add	r2, sp, #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:568
static ssize_t store_boost_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;
     2d4:	e59c3018 	ldr	r3, [ip, #24]
     2d8:	e5935004 	ldr	r5, [r3, #4]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:570

	err = kstrtoint(buf, 16, &val);
     2dc:	ebfffffe 	bl	0 <kstrtoint>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:571
	if (err)
     2e0:	e2503000 	subs	r3, r0, #0
     2e4:	11a00003 	movne	r0, r3
     2e8:	1a00000b 	bne	31c <store_boost_mode+0x64>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:573
		return err;
	if (val != 1)
     2ec:	e59dc004 	ldr	ip, [sp, #4]
     2f0:	e35c0001 	cmp	ip, #1
     2f4:	0a00000a 	beq	324 <store_boost_mode+0x6c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
		val = 0;
	boost_mode = val;
     2f8:	e300c000 	movw	ip, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:579
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
	else
		axp_regmap_clr_bits(map, 0x12, 0x80);
     2fc:	e1a00005 	mov	r0, r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
	boost_mode = val;
     300:	e340c000 	movt	ip, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:579
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
	else
		axp_regmap_clr_bits(map, 0x12, 0x80);
     304:	e3a02080 	mov	r2, #128	; 0x80
     308:	e3a01012 	mov	r1, #18
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:574

	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
     30c:	e58d3004 	str	r3, [sp, #4]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	boost_mode = val;
     310:	e58c305c 	str	r3, [ip, #92]	; 0x5c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:579
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
	else
		axp_regmap_clr_bits(map, 0x12, 0x80);
     314:	ebfffffe 	bl	0 <axp_regmap_clr_bits>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:580
	return count;
     318:	e1a00004 	mov	r0, r4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:581
}
     31c:	e28dd00c 	add	sp, sp, #12
     320:	e8bd8030 	pop	{r4, r5, pc}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
	boost_mode = val;
     324:	e3003000 	movw	r3, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:577
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
     328:	e1a00005 	mov	r0, r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
	boost_mode = val;
     32c:	e3403000 	movt	r3, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:577
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
     330:	e3a02080 	mov	r2, #128	; 0x80
     334:	e3a01012 	mov	r1, #18
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
	boost_mode = val;
     338:	e583c05c 	str	ip, [r3, #92]	; 0x5c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:577
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
     33c:	ebfffffe 	bl	0 <axp_regmap_set_bits>
     340:	eafffff4 	b	318 <store_boost_mode+0x60>

00000344 <store_tc_mode>:
store_tc_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:537
	return s - buf;
}

static ssize_t store_tc_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
     344:	e92d4030 	push	{r4, r5, lr}
     348:	e1a04003 	mov	r4, r3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:540
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;
     34c:	e590c04c 	ldr	ip, [r0, #76]	; 0x4c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:537
	return s - buf;
}

static ssize_t store_tc_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
     350:	e24dd00c 	sub	sp, sp, #12
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:542
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;

	err = kstrtoint(buf, 16, &val);
     354:	e1a00002 	mov	r0, r2
     358:	e3a01010 	mov	r1, #16
     35c:	e28d2004 	add	r2, sp, #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:540
static ssize_t store_tc_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;
     360:	e59c3018 	ldr	r3, [ip, #24]
     364:	e5935004 	ldr	r5, [r3, #4]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:542

	err = kstrtoint(buf, 16, &val);
     368:	ebfffffe 	bl	0 <kstrtoint>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:543
	if (err)
     36c:	e3500000 	cmp	r0, #0
     370:	1a00000e 	bne	3b0 <store_tc_mode+0x6c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:545
		return err;
	if (val > 3)
     374:	e59de004 	ldr	lr, [sp, #4]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:547
		val = 1;
	tc_mode = val;
     378:	e300c000 	movw	ip, #0
     37c:	e340c000 	movt	ip, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:548
		axp_regmap_update(map, 0x33, tc_mode, 0x03);
     380:	e1a00005 	mov	r0, r5
     384:	e3a01033 	mov	r1, #51	; 0x33
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:545
	struct axp_regmap *map = chg_dev->chip->regmap;

	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val > 3)
     388:	e35e0003 	cmp	lr, #3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:546
		val = 1;
     38c:	c3a03001 	movgt	r3, #1
     390:	d6ef207e 	uxtble	r2, lr
     394:	c1a02003 	movgt	r2, r3
     398:	c58d3004 	strgt	r3, [sp, #4]
     39c:	c1a0e002 	movgt	lr, r2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:548
	tc_mode = val;
		axp_regmap_update(map, 0x33, tc_mode, 0x03);
     3a0:	e3a03003 	mov	r3, #3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:547
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val > 3)
		val = 1;
	tc_mode = val;
     3a4:	e58ce060 	str	lr, [ip, #96]	; 0x60
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:548
		axp_regmap_update(map, 0x33, tc_mode, 0x03);
     3a8:	ebfffffe 	bl	0 <axp_regmap_update>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:549
	return count;
     3ac:	e1a00004 	mov	r0, r4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:550
}
     3b0:	e28dd00c 	add	sp, sp, #12
     3b4:	e8bd8030 	pop	{r4, r5, pc}

000003b8 <axp2585_set_chg_vol>:
axp2585_set_chg_vol():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:264
static int axp2585_set_chg_vol(struct axp_charger_dev *cdev, int vol)
{
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;

	if (vol > 3840 && vol < 4608)
     3b8:	e2413c0f 	sub	r3, r1, #3840	; 0xf00
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:260
	axp_regmap_update(map, 0x8b, tmp, 0x3F);
	return 0;
}

static int axp2585_set_chg_vol(struct axp_charger_dev *cdev, int vol)
{
     3bc:	e92d4010 	push	{r4, lr}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:264
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;

	if (vol > 3840 && vol < 4608)
     3c0:	e300c2fe 	movw	ip, #766	; 0x2fe
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:262
}

static int axp2585_set_chg_vol(struct axp_charger_dev *cdev, int vol)
{
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;
     3c4:	e5900018 	ldr	r0, [r0, #24]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:264

	if (vol > 3840 && vol < 4608)
     3c8:	e2433001 	sub	r3, r3, #1
     3cc:	e153000c 	cmp	r3, ip
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:262
}

static int axp2585_set_chg_vol(struct axp_charger_dev *cdev, int vol)
{
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;
     3d0:	e5904004 	ldr	r4, [r0, #4]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:264

	if (vol > 3840 && vol < 4608)
     3d4:	8a000009 	bhi	400 <axp2585_set_chg_vol+0x48>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:265
		tmp = (vol - 3840)/16;
     3d8:	e2412c0f 	sub	r2, r1, #3840	; 0xf00
     3dc:	e7e72252 	ubfx	r2, r2, #4, #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:270
	else {
		pr_warn("unsupported voltage: %dmv, use default 4200mv\n", vol);
		tmp = (4200 - 3840)/16;
	}
	axp_regmap_update(map, 0x8c, tmp << 2, 0xfc);
     3e0:	e1a02102 	lsl	r2, r2, #2
     3e4:	e3a030fc 	mov	r3, #252	; 0xfc
     3e8:	e1a00004 	mov	r0, r4
     3ec:	e0022003 	and	r2, r2, r3
     3f0:	e3a0108c 	mov	r1, #140	; 0x8c
     3f4:	ebfffffe 	bl	0 <axp_regmap_update>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:272
	return 0;
}
     3f8:	e3a00000 	mov	r0, #0
     3fc:	e8bd8010 	pop	{r4, pc}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:267
	struct axp_regmap *map = cdev->chip->regmap;

	if (vol > 3840 && vol < 4608)
		tmp = (vol - 3840)/16;
	else {
		pr_warn("unsupported voltage: %dmv, use default 4200mv\n", vol);
     400:	e3000000 	movw	r0, #0
     404:	e3400000 	movt	r0, #0
     408:	ebfffffe 	bl	0 <printk>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:268
		tmp = (4200 - 3840)/16;
     40c:	e3a02016 	mov	r2, #22
     410:	eafffff2 	b	3e0 <axp2585_set_chg_vol+0x28>

00000414 <axp2585_set_chg_cur>:
axp2585_set_chg_cur():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:252
	if (cur == 0)
		axp_regmap_clr_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
	else
		axp_regmap_set_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
*/
	tmp = (cur) / 64;
     414:	e3510000 	cmp	r1, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:243

	return axp2585_ibat_to_mA(dis_res);
}

static int axp2585_set_chg_cur(struct axp_charger_dev *cdev, int cur)
{
     418:	e92d4010 	push	{r4, lr}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:252
	if (cur == 0)
		axp_regmap_clr_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
	else
		axp_regmap_set_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
*/
	tmp = (cur) / 64;
     41c:	e281203f 	add	r2, r1, #63	; 0x3f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:245
}

static int axp2585_set_chg_cur(struct axp_charger_dev *cdev, int cur)
{
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;
     420:	e5900018 	ldr	r0, [r0, #24]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:252
	if (cur == 0)
		axp_regmap_clr_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
	else
		axp_regmap_set_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
*/
	tmp = (cur) / 64;
     424:	a1a02001 	movge	r2, r1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:255
	if (tmp > 0x3f)
		tmp = 0x3f;
	axp_regmap_update(map, 0x8b, tmp, 0x3F);
     428:	e3a0303f 	mov	r3, #63	; 0x3f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:252
	if (cur == 0)
		axp_regmap_clr_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
	else
		axp_regmap_set_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
*/
	tmp = (cur) / 64;
     42c:	e7e72352 	ubfx	r2, r2, #6, #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:255
	if (tmp > 0x3f)
		tmp = 0x3f;
	axp_regmap_update(map, 0x8b, tmp, 0x3F);
     430:	e3a0108b 	mov	r1, #139	; 0x8b
     434:	e1520003 	cmp	r2, r3
     438:	e5900004 	ldr	r0, [r0, #4]
     43c:	21a02003 	movcs	r2, r3
     440:	ebfffffe 	bl	0 <axp_regmap_update>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:257
	return 0;
}
     444:	e3a00000 	mov	r0, #0
     448:	e8bd8010 	pop	{r4, pc}

0000044c <axp2585_private_debug>:
axp2585_private_debug():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:612
	.name = "bmu_control",
	.attrs = bmu_control_attrs,
};

static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
     44c:	e92d4070 	push	{r4, r5, r6, lr}
     450:	e1a06000 	mov	r6, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:614
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;
     454:	e5900018 	ldr	r0, [r0, #24]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:612
	.name = "bmu_control",
	.attrs = bmu_control_attrs,
};

static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
     458:	e24dd008 	sub	sp, sp, #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:617
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, 0x5a, 2, tmp);
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     45c:	e3004000 	movw	r4, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:616
static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, 0x5a, 2, tmp);
     460:	e28d3006 	add	r3, sp, #6
     464:	e3a02002 	mov	r2, #2
     468:	e3a0105a 	mov	r1, #90	; 0x5a
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:614
};

static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;
     46c:	e5905004 	ldr	r5, [r0, #4]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:617

	axp_regmap_reads(map, 0x5a, 2, tmp);
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     470:	e3404000 	movt	r4, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:616
static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, 0x5a, 2, tmp);
     474:	e1a00005 	mov	r0, r5
     478:	ebfffffe 	bl	0 <axp_regmap_reads>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:617
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     47c:	e5943000 	ldr	r3, [r4]
     480:	e3130001 	tst	r3, #1
     484:	1a000009 	bne	4b0 <axp2585_private_debug+0x64>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:620
			"acin_vol = %d\n", ((tmp[0] << 4) | (tmp[1] & 0xF))
			* 8);
	axp_regmap_reads(map, 0xbc, 2, tmp);
     488:	e28d3006 	add	r3, sp, #6
     48c:	e1a00005 	mov	r0, r5
     490:	e3a02002 	mov	r2, #2
     494:	e3a010bc 	mov	r1, #188	; 0xbc
     498:	ebfffffe 	bl	0 <axp_regmap_reads>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:621
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     49c:	e5943000 	ldr	r3, [r4]
     4a0:	e3130001 	tst	r3, #1
     4a4:	1a000011 	bne	4f0 <axp2585_private_debug+0xa4>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:625
			"ocv_vol = %d\n", ((tmp[0] << 4) | (tmp[1] & 0xF))
			* 1200 / 1000);

}
     4a8:	e28dd008 	add	sp, sp, #8
     4ac:	e8bd8070 	pop	{r4, r5, r6, pc}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:617 (discriminator 1)
{
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, 0x5a, 2, tmp);
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     4b0:	e5963018 	ldr	r3, [r6, #24]
     4b4:	e5930024 	ldr	r0, [r3, #36]	; 0x24
     4b8:	ebfffffe 	bl	0 <get_pmu_cur_name>
     4bc:	e1a01000 	mov	r1, r0
     4c0:	e3000000 	movw	r0, #0
     4c4:	e3400000 	movt	r0, #0
     4c8:	ebfffffe 	bl	0 <printk>
     4cc:	e5dd3006 	ldrb	r3, [sp, #6]
     4d0:	e3000000 	movw	r0, #0
     4d4:	e5dd1007 	ldrb	r1, [sp, #7]
     4d8:	e3400000 	movt	r0, #0
     4dc:	e201100f 	and	r1, r1, #15
     4e0:	e1811203 	orr	r1, r1, r3, lsl #4
     4e4:	e1a01181 	lsl	r1, r1, #3
     4e8:	ebfffffe 	bl	0 <printk>
     4ec:	eaffffe5 	b	488 <axp2585_private_debug+0x3c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:621 (discriminator 1)
			"acin_vol = %d\n", ((tmp[0] << 4) | (tmp[1] & 0xF))
			* 8);
	axp_regmap_reads(map, 0xbc, 2, tmp);
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     4f0:	e5963018 	ldr	r3, [r6, #24]
     4f4:	e5930024 	ldr	r0, [r3, #36]	; 0x24
     4f8:	ebfffffe 	bl	0 <get_pmu_cur_name>
     4fc:	e1a01000 	mov	r1, r0
     500:	e3000000 	movw	r0, #0
     504:	e3400000 	movt	r0, #0
     508:	ebfffffe 	bl	0 <printk>
     50c:	e5ddc006 	ldrb	ip, [sp, #6]
     510:	e3a01e4b 	mov	r1, #1200	; 0x4b0
     514:	e5dd3007 	ldrb	r3, [sp, #7]
     518:	e3042dd3 	movw	r2, #19923	; 0x4dd3
     51c:	e3412062 	movt	r2, #4194	; 0x1062
     520:	e3000000 	movw	r0, #0
     524:	e3400000 	movt	r0, #0
     528:	e203300f 	and	r3, r3, #15
     52c:	e183320c 	orr	r3, r3, ip, lsl #4
     530:	e0010391 	mul	r1, r1, r3
     534:	e0c32291 	smull	r2, r3, r1, r2
     538:	e1a01fc1 	asr	r1, r1, #31
     53c:	e0611343 	rsb	r1, r1, r3, asr #6
     540:	ebfffffe 	bl	0 <printk>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:625 (discriminator 1)
			"ocv_vol = %d\n", ((tmp[0] << 4) | (tmp[1] & 0xF))
			* 1200 / 1000);

}
     544:	e28dd008 	add	sp, sp, #8
     548:	e8bd8070 	pop	{r4, r5, r6, pc}

0000054c <axp2585_get_rest_cap>:
axp2585_get_rest_cap():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:142
	.set_usb_ihold   = axp2585_set_usb_ihold,
	.get_usb_ihold   = axp2585_get_usb_ihold,
};

static int axp2585_get_rest_cap(struct axp_charger_dev *cdev)
{
     54c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
     550:	e24dd008 	sub	sp, sp, #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:148
	u8 val, temp_val[2], tmp[2];
	u8 ocv_percent = 0;
	u8 coulomb_percent = 0;
	int batt_max_cap, coulumb_counter;
	int rest_vol;
	struct axp_regmap *map = cdev->chip->regmap;
     554:	e5903018 	ldr	r3, [r0, #24]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:142
	.set_usb_ihold   = axp2585_set_usb_ihold,
	.get_usb_ihold   = axp2585_get_usb_ihold,
};

static int axp2585_get_rest_cap(struct axp_charger_dev *cdev)
{
     558:	e1a06000 	mov	r6, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:150
	u8 coulomb_percent = 0;
	int batt_max_cap, coulumb_counter;
	int rest_vol;
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_read(map, AXP2585_CAP, &val);
     55c:	e28d2003 	add	r2, sp, #3
     560:	e3a010b9 	mov	r1, #185	; 0xb9
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:148
	u8 val, temp_val[2], tmp[2];
	u8 ocv_percent = 0;
	u8 coulomb_percent = 0;
	int batt_max_cap, coulumb_counter;
	int rest_vol;
	struct axp_regmap *map = cdev->chip->regmap;
     564:	e5935004 	ldr	r5, [r3, #4]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:150

	axp_regmap_read(map, AXP2585_CAP, &val);
     568:	e1a00005 	mov	r0, r5
     56c:	ebfffffe 	bl	0 <axp_regmap_read>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:151
	if (!(val & 0x80))
     570:	e5dd3003 	ldrb	r3, [sp, #3]
     574:	e3130080 	tst	r3, #128	; 0x80
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:152
		return 0;
     578:	03a00000 	moveq	r0, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:151
	int batt_max_cap, coulumb_counter;
	int rest_vol;
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_read(map, AXP2585_CAP, &val);
	if (!(val & 0x80))
     57c:	1a000001 	bne	588 <axp2585_get_rest_cap+0x3c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:184
						* 1456 / 1000;

	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
			"batt_max_cap = %d\n", batt_max_cap);
	return rest_vol;
}
     580:	e28dd008 	add	sp, sp, #8
     584:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:154

	axp_regmap_read(map, AXP2585_CAP, &val);
	if (!(val & 0x80))
		return 0;
	rest_vol = (int) (val & 0x7F);
	axp_regmap_read(map, 0xe4, &tmp[0]);
     588:	e3a010e4 	mov	r1, #228	; 0xe4
     58c:	e28d2006 	add	r2, sp, #6
     590:	e1a00005 	mov	r0, r5
     594:	e203407f 	and	r4, r3, #127	; 0x7f
     598:	ebfffffe 	bl	0 <axp_regmap_read>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:155
	if (tmp[0] & 0x80) {
     59c:	e5dd3006 	ldrb	r3, [sp, #6]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:153
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_read(map, AXP2585_CAP, &val);
	if (!(val & 0x80))
		return 0;
	rest_vol = (int) (val & 0x7F);
     5a0:	e1a09004 	mov	r9, r4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:155
	axp_regmap_read(map, 0xe4, &tmp[0]);
	if (tmp[0] & 0x80) {
     5a4:	e3130080 	tst	r3, #128	; 0x80
     5a8:	1a00002d 	bne	664 <axp2585_get_rest_cap+0x118>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:160
		ocv_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
     5ac:	e28d2006 	add	r2, sp, #6
     5b0:	e3a010e5 	mov	r1, #229	; 0xe5
     5b4:	e1a00005 	mov	r0, r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:163
	if (tmp[0] & 0x80) {
		coulomb_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     5b8:	e3007000 	movw	r7, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:160
	if (tmp[0] & 0x80) {
		ocv_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
     5bc:	ebfffffe 	bl	0 <axp_regmap_read>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:161
	if (tmp[0] & 0x80) {
     5c0:	e5dd3006 	ldrb	r3, [sp, #6]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:163
		coulomb_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     5c4:	e3407000 	movt	r7, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:161
		ocv_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
	if (tmp[0] & 0x80) {
     5c8:	e3130080 	tst	r3, #128	; 0x80
     5cc:	1a000074 	bne	7a4 <axp2585_get_rest_cap+0x258>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:173
		axp_regmap_clr_bits(map, AXP2585_COULOMB_CTL, 0x80);
		axp_regmap_set_bits(map, AXP2585_COULOMB_CTL, 0x80);
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num, "Reset coulumb\n");
		rest_vol = 100;
	}
	axp_regmap_reads(map, 0xe2, 2, temp_val);
     5d0:	e3a02002 	mov	r2, #2
     5d4:	e28d3004 	add	r3, sp, #4
     5d8:	e3a010e2 	mov	r1, #226	; 0xe2
     5dc:	e1a00005 	mov	r0, r5
     5e0:	ebfffffe 	bl	0 <axp_regmap_reads>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:177
	coulumb_counter = (((temp_val[0] & 0x7f) << 8) + temp_val[1])
						* 1456 / 1000;

	axp_regmap_reads(map, 0xe0, 2, temp_val);
     5e4:	e1a00005 	mov	r0, r5
     5e8:	e28d3004 	add	r3, sp, #4
     5ec:	e3a02002 	mov	r2, #2
     5f0:	e3a010e0 	mov	r1, #224	; 0xe0
     5f4:	ebfffffe 	bl	0 <axp_regmap_reads>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:181
	batt_max_cap = (((temp_val[0] & 0x7f) << 8) + temp_val[1])
						* 1456 / 1000;

	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     5f8:	e5973000 	ldr	r3, [r7]
     5fc:	e3130001 	tst	r3, #1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:183
			"batt_max_cap = %d\n", batt_max_cap);
	return rest_vol;
     600:	01a00004 	moveq	r0, r4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:181

	axp_regmap_reads(map, 0xe0, 2, temp_val);
	batt_max_cap = (((temp_val[0] & 0x7f) << 8) + temp_val[1])
						* 1456 / 1000;

	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     604:	0affffdd 	beq	580 <axp2585_get_rest_cap+0x34>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:181 (discriminator 1)
     608:	e5963018 	ldr	r3, [r6, #24]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:178 (discriminator 1)
	axp_regmap_reads(map, 0xe2, 2, temp_val);
	coulumb_counter = (((temp_val[0] & 0x7f) << 8) + temp_val[1])
						* 1456 / 1000;

	axp_regmap_reads(map, 0xe0, 2, temp_val);
	batt_max_cap = (((temp_val[0] & 0x7f) << 8) + temp_val[1])
     60c:	e5dd5005 	ldrb	r5, [sp, #5]
     610:	e5dd6004 	ldrb	r6, [sp, #4]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:181 (discriminator 1)
						* 1456 / 1000;

	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     614:	e5930024 	ldr	r0, [r3, #36]	; 0x24
     618:	ebfffffe 	bl	0 <get_pmu_cur_name>
     61c:	e206607f 	and	r6, r6, #127	; 0x7f
     620:	e1a01000 	mov	r1, r0
     624:	e3000000 	movw	r0, #0
     628:	e0855406 	add	r5, r5, r6, lsl #8
     62c:	e3400000 	movt	r0, #0
     630:	ebfffffe 	bl	0 <printk>
     634:	e3a01e5b 	mov	r1, #1456	; 0x5b0
     638:	e3042dd3 	movw	r2, #19923	; 0x4dd3
     63c:	e0010591 	mul	r1, r1, r5
     640:	e3412062 	movt	r2, #4194	; 0x1062
     644:	e3000000 	movw	r0, #0
     648:	e3400000 	movt	r0, #0
     64c:	e0c32291 	smull	r2, r3, r1, r2
     650:	e1a01fc1 	asr	r1, r1, #31
     654:	e0611343 	rsb	r1, r1, r3, asr #6
     658:	ebfffffe 	bl	0 <printk>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:183 (discriminator 1)
			"batt_max_cap = %d\n", batt_max_cap);
	return rest_vol;
     65c:	e1a00004 	mov	r0, r4
     660:	eaffffc6 	b	580 <axp2585_get_rest_cap+0x34>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:157
		return 0;
	rest_vol = (int) (val & 0x7F);
	axp_regmap_read(map, 0xe4, &tmp[0]);
	if (tmp[0] & 0x80) {
		ocv_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     664:	e3007000 	movw	r7, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:156
	if (!(val & 0x80))
		return 0;
	rest_vol = (int) (val & 0x7F);
	axp_regmap_read(map, 0xe4, &tmp[0]);
	if (tmp[0] & 0x80) {
		ocv_percent = tmp[0] & 0x7f;
     668:	e203807f 	and	r8, r3, #127	; 0x7f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:157
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     66c:	e3407000 	movt	r7, #0
     670:	e5973000 	ldr	r3, [r7]
     674:	e3130001 	tst	r3, #1
     678:	1a00003d 	bne	774 <axp2585_get_rest_cap+0x228>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:160
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
     67c:	e28d2006 	add	r2, sp, #6
     680:	e3a010e5 	mov	r1, #229	; 0xe5
     684:	e1a00005 	mov	r0, r5
     688:	ebfffffe 	bl	0 <axp_regmap_read>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:161
	if (tmp[0] & 0x80) {
     68c:	e5dd3006 	ldrb	r3, [sp, #6]
     690:	e3130080 	tst	r3, #128	; 0x80
     694:	1a000026 	bne	734 <axp2585_get_rest_cap+0x1e8>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:166
		coulomb_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
			"coulomb_percent = %d\n", coulomb_percent);
	}
	if (ocv_percent == 100 && cdev->charging == 0 && rest_vol == 99
     698:	e3580064 	cmp	r8, #100	; 0x64
     69c:	1affffcb 	bne	5d0 <axp2585_get_rest_cap+0x84>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:166 (discriminator 1)
     6a0:	e2499063 	sub	r9, r9, #99	; 0x63
     6a4:	e5d630db 	ldrb	r3, [r6, #219]	; 0xdb
     6a8:	e16f9f19 	clz	r9, r9
     6ac:	e1a092a9 	lsr	r9, r9, #5
     6b0:	e1590003 	cmp	r9, r3
     6b4:	9affffc5 	bls	5d0 <axp2585_get_rest_cap+0x84>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:167
		&& (cdev->ac_valid == 1 || cdev->usb_valid == 1)) {
     6b8:	e5d630d7 	ldrb	r3, [r6, #215]	; 0xd7
     6bc:	e3530000 	cmp	r3, #0
     6c0:	1a000003 	bne	6d4 <axp2585_get_rest_cap+0x188>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:167 (discriminator 1)
     6c4:	e5d630d8 	ldrb	r3, [r6, #216]	; 0xd8
     6c8:	e3530000 	cmp	r3, #0
     6cc:	03a04063 	moveq	r4, #99	; 0x63
     6d0:	0affffbe 	beq	5d0 <axp2585_get_rest_cap+0x84>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:168
		axp_regmap_clr_bits(map, AXP2585_COULOMB_CTL, 0x80);
     6d4:	e3a02080 	mov	r2, #128	; 0x80
     6d8:	e3a010b8 	mov	r1, #184	; 0xb8
     6dc:	e1a00005 	mov	r0, r5
     6e0:	ebfffffe 	bl	0 <axp_regmap_clr_bits>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:169
		axp_regmap_set_bits(map, AXP2585_COULOMB_CTL, 0x80);
     6e4:	e3a02080 	mov	r2, #128	; 0x80
     6e8:	e3a010b8 	mov	r1, #184	; 0xb8
     6ec:	e1a00005 	mov	r0, r5
     6f0:	ebfffffe 	bl	0 <axp_regmap_set_bits>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:170
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num, "Reset coulumb\n");
     6f4:	e5973000 	ldr	r3, [r7]
     6f8:	e3130001 	tst	r3, #1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:171
		rest_vol = 100;
     6fc:	03a04064 	moveq	r4, #100	; 0x64
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:170
	}
	if (ocv_percent == 100 && cdev->charging == 0 && rest_vol == 99
		&& (cdev->ac_valid == 1 || cdev->usb_valid == 1)) {
		axp_regmap_clr_bits(map, AXP2585_COULOMB_CTL, 0x80);
		axp_regmap_set_bits(map, AXP2585_COULOMB_CTL, 0x80);
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num, "Reset coulumb\n");
     700:	0affffb2 	beq	5d0 <axp2585_get_rest_cap+0x84>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:170 (discriminator 1)
     704:	e5963018 	ldr	r3, [r6, #24]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:171 (discriminator 1)
		rest_vol = 100;
     708:	e3a04064 	mov	r4, #100	; 0x64
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:170 (discriminator 1)
	}
	if (ocv_percent == 100 && cdev->charging == 0 && rest_vol == 99
		&& (cdev->ac_valid == 1 || cdev->usb_valid == 1)) {
		axp_regmap_clr_bits(map, AXP2585_COULOMB_CTL, 0x80);
		axp_regmap_set_bits(map, AXP2585_COULOMB_CTL, 0x80);
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num, "Reset coulumb\n");
     70c:	e5930024 	ldr	r0, [r3, #36]	; 0x24
     710:	ebfffffe 	bl	0 <get_pmu_cur_name>
     714:	e1a01000 	mov	r1, r0
     718:	e3000000 	movw	r0, #0
     71c:	e3400000 	movt	r0, #0
     720:	ebfffffe 	bl	0 <printk>
     724:	e3000000 	movw	r0, #0
     728:	e3400000 	movt	r0, #0
     72c:	ebfffffe 	bl	0 <printk>
     730:	eaffffa6 	b	5d0 <axp2585_get_rest_cap+0x84>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:163
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
	if (tmp[0] & 0x80) {
		coulomb_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     734:	e5972000 	ldr	r2, [r7]
     738:	e3120001 	tst	r2, #1
     73c:	0affffd5 	beq	698 <axp2585_get_rest_cap+0x14c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:162
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
	if (tmp[0] & 0x80) {
		coulomb_percent = tmp[0] & 0x7f;
     740:	e203a07f 	and	sl, r3, #127	; 0x7f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:163 (discriminator 1)
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     744:	e5963018 	ldr	r3, [r6, #24]
     748:	e5930024 	ldr	r0, [r3, #36]	; 0x24
     74c:	ebfffffe 	bl	0 <get_pmu_cur_name>
     750:	e1a01000 	mov	r1, r0
     754:	e3000000 	movw	r0, #0
     758:	e3400000 	movt	r0, #0
     75c:	ebfffffe 	bl	0 <printk>
     760:	e3000000 	movw	r0, #0
     764:	e1a0100a 	mov	r1, sl
     768:	e3400000 	movt	r0, #0
     76c:	ebfffffe 	bl	0 <printk>
     770:	eaffffc8 	b	698 <axp2585_get_rest_cap+0x14c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:157 (discriminator 1)
		return 0;
	rest_vol = (int) (val & 0x7F);
	axp_regmap_read(map, 0xe4, &tmp[0]);
	if (tmp[0] & 0x80) {
		ocv_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     774:	e5963018 	ldr	r3, [r6, #24]
     778:	e5930024 	ldr	r0, [r3, #36]	; 0x24
     77c:	ebfffffe 	bl	0 <get_pmu_cur_name>
     780:	e1a01000 	mov	r1, r0
     784:	e3000000 	movw	r0, #0
     788:	e3400000 	movt	r0, #0
     78c:	ebfffffe 	bl	0 <printk>
     790:	e3000000 	movw	r0, #0
     794:	e1a01008 	mov	r1, r8
     798:	e3400000 	movt	r0, #0
     79c:	ebfffffe 	bl	0 <printk>
     7a0:	eaffffb5 	b	67c <axp2585_get_rest_cap+0x130>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:163
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
	if (tmp[0] & 0x80) {
		coulomb_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     7a4:	e5972000 	ldr	r2, [r7]
     7a8:	e3120001 	tst	r2, #1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:162
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
	if (tmp[0] & 0x80) {
		coulomb_percent = tmp[0] & 0x7f;
     7ac:	1203a07f 	andne	sl, r3, #127	; 0x7f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:144
};

static int axp2585_get_rest_cap(struct axp_charger_dev *cdev)
{
	u8 val, temp_val[2], tmp[2];
	u8 ocv_percent = 0;
     7b0:	13a08000 	movne	r8, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:163
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
	if (tmp[0] & 0x80) {
		coulomb_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     7b4:	0affff85 	beq	5d0 <axp2585_get_rest_cap+0x84>
     7b8:	eaffffe1 	b	744 <axp2585_get_rest_cap+0x1f8>

000007bc <axp2585_get_usb_ihold>:
axp2585_get_usb_ihold():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:120
	}
	return 0;
}

static int axp2585_get_usb_ihold(struct axp_charger_dev *cdev)
{
     7bc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
     7c0:	e24dd00c 	sub	sp, sp, #12
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:122
	u8 tmp;
	struct axp_regmap *map = cdev->chip->regmap;
     7c4:	e5903018 	ldr	r3, [r0, #24]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:124

	axp_regmap_read(map, 0x10, &tmp);
     7c8:	e28d2007 	add	r2, sp, #7
     7cc:	e3a01010 	mov	r1, #16
     7d0:	e5930004 	ldr	r0, [r3, #4]
     7d4:	ebfffffe 	bl	0 <axp_regmap_read>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:125
	return (tmp*50 + 100);
     7d8:	e5dd2007 	ldrb	r2, [sp, #7]
     7dc:	e3a03064 	mov	r3, #100	; 0x64
     7e0:	e3a00032 	mov	r0, #50	; 0x32
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:126
}
     7e4:	e0203290 	mla	r0, r0, r2, r3
     7e8:	e28dd00c 	add	sp, sp, #12
     7ec:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000007f0 <axp2585_get_usb_vhold>:
axp2585_get_usb_vhold():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:91
	}
	return 0;
}

static int axp2585_get_usb_vhold(struct axp_charger_dev *cdev)
{
     7f0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
     7f4:	e24dd00c 	sub	sp, sp, #12
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:93
	u8 tmp;
	struct axp_regmap *map = cdev->chip->regmap;
     7f8:	e5903018 	ldr	r3, [r0, #24]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:95

	axp_regmap_read(map, 0x11, &tmp);
     7fc:	e28d2007 	add	r2, sp, #7
     800:	e3a01011 	mov	r1, #17
     804:	e5930004 	ldr	r0, [r3, #4]
     808:	ebfffffe 	bl	0 <axp_regmap_read>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:96
	return (tmp*80 + 3880);
     80c:	e5dd2007 	ldrb	r2, [sp, #7]
     810:	e3003f28 	movw	r3, #3880	; 0xf28
     814:	e3a00050 	mov	r0, #80	; 0x50
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:97
}
     818:	e0203290 	mla	r0, r0, r2, r3
     81c:	e28dd00c 	add	sp, sp, #12
     820:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00000824 <axp2585_charger_probe>:
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:628
			* 1200 / 1000);

}

static int axp2585_charger_probe(struct platform_device *pdev)
{
     824:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:629
    printk("[axp2585]Entering %s\n",__func__);
     828:	e3008000 	movw	r8, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:628
			* 1200 / 1000);

}

static int axp2585_charger_probe(struct platform_device *pdev)
{
     82c:	e1a06000 	mov	r6, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:629
    printk("[axp2585]Entering %s\n",__func__);
     830:	e3408000 	movt	r8, #0
     834:	e3000000 	movw	r0, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:628
			* 1200 / 1000);

}

static int axp2585_charger_probe(struct platform_device *pdev)
{
     838:	e24dd06c 	sub	sp, sp, #108	; 0x6c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:629
    printk("[axp2585]Entering %s\n",__func__);
     83c:	e3400000 	movt	r0, #0
     840:	e288105c 	add	r1, r8, #92	; 0x5c
     844:	ebfffffe 	bl	0 <printk>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:634
	int ret, i, irq;
	struct axp_charger_dev *chg_dev;
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	if (pdev->dev.of_node) {
     848:	e596013c 	ldr	r0, [r6, #316]	; 0x13c
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
     84c:	e5963010 	ldr	r3, [r6, #16]
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:634
     850:	e3500000 	cmp	r0, #0
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
     854:	e593b04c 	ldr	fp, [r3, #76]	; 0x4c
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:634
     858:	0a000246 	beq	1178 <axp2585_charger_probe+0x954>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:636
		/* get dt and sysconfig */
		ret = axp_charger_dt_parse(pdev->dev.of_node, &axp2585_config);
     85c:	e3004000 	movw	r4, #0
     860:	e3404000 	movt	r4, #0
     864:	e1a01004 	mov	r1, r4
     868:	ebfffffe 	bl	0 <axp_charger_dt_parse>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:637
		if (ret) {
     86c:	e2509000 	subs	r9, r0, #0
     870:	1a00022d 	bne	112c <axp2585_charger_probe+0x908>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:657
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
	battery_data.voltage_max_design = axp2585_config.pmu_init_chgvol
								* 1000;
	battery_data.voltage_min_design = axp2585_config.pmu_pwroff_vol
     874:	e594a0e0 	ldr	sl, [r4, #224]	; 0xe0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:646
	} else {
		pr_err("axp2585 charger device tree err!\n");
		return -EBUSY;
	}

	axp2585_ac_info.ac_vol = axp2585_config.pmu_ac_vol;
     878:	e3007000 	movw	r7, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:655
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
	battery_data.voltage_max_design = axp2585_config.pmu_init_chgvol
     87c:	e594e024 	ldr	lr, [r4, #36]	; 0x24
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:646
	} else {
		pr_err("axp2585 charger device tree err!\n");
		return -EBUSY;
	}

	axp2585_ac_info.ac_vol = axp2585_config.pmu_ac_vol;
     880:	e3407000 	movt	r7, #0
axp2585_charger_init():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:316
};

static int axp2585_charger_init(struct axp_dev *axp_dev)
{
	u8 ocv_cap[32];
	u8 val = 0;
     884:	e5cd9017 	strb	r9, [sp, #23]
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:655
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
	battery_data.voltage_max_design = axp2585_config.pmu_init_chgvol
     888:	e3a0cffa 	mov	ip, #1000	; 0x3e8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:648
		return -EBUSY;
	}

	axp2585_ac_info.ac_vol = axp2585_config.pmu_ac_vol;
	axp2585_ac_info.ac_cur = axp2585_config.pmu_ac_cur;
	axp2585_usb_info.usb_pc_vol = axp2585_config.pmu_usbpc_vol;
     88c:	e59490d8 	ldr	r9, [r4, #216]	; 0xd8
axp2585_charger_init():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:319
{
	u8 ocv_cap[32];
	u8 val = 0;
	int cur_coulomb_counter, rdc;
	struct axp_regmap *map = axp_dev->regmap;
	int i, ocv_cou_adjust_time[4] = {60, 120, 15, 30};
     890:	e2883074 	add	r3, r8, #116	; 0x74
     894:	e893000f 	ldm	r3, {r0, r1, r2, r3}
     898:	e28d5018 	add	r5, sp, #24
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:655
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
	battery_data.voltage_max_design = axp2585_config.pmu_init_chgvol
     89c:	e00e0e9c 	mul	lr, ip, lr
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:648
		return -EBUSY;
	}

	axp2585_ac_info.ac_vol = axp2585_config.pmu_ac_vol;
	axp2585_ac_info.ac_cur = axp2585_config.pmu_ac_cur;
	axp2585_usb_info.usb_pc_vol = axp2585_config.pmu_usbpc_vol;
     8a0:	e58790b0 	str	r9, [r7, #176]	; 0xb0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:657
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
	battery_data.voltage_max_design = axp2585_config.pmu_init_chgvol
								* 1000;
	battery_data.voltage_min_design = axp2585_config.pmu_pwroff_vol
     8a4:	e00c0a9c 	mul	ip, ip, sl
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:653
	axp2585_usb_info.usb_pc_vol = axp2585_config.pmu_usbpc_vol;
	axp2585_usb_info.usb_pc_cur = axp2585_config.pmu_usbpc_cur;
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
     8a8:	e594901c 	ldr	r9, [r4, #28]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:649
	}

	axp2585_ac_info.ac_vol = axp2585_config.pmu_ac_vol;
	axp2585_ac_info.ac_cur = axp2585_config.pmu_ac_cur;
	axp2585_usb_info.usb_pc_vol = axp2585_config.pmu_usbpc_vol;
	axp2585_usb_info.usb_pc_cur = axp2585_config.pmu_usbpc_cur;
     8ac:	e594a0dc 	ldr	sl, [r4, #220]	; 0xdc
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:655
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
	battery_data.voltage_max_design = axp2585_config.pmu_init_chgvol
     8b0:	e587e148 	str	lr, [r7, #328]	; 0x148
axp2585_charger_init():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:320
	u8 ocv_cap[32];
	u8 val = 0;
	int cur_coulomb_counter, rdc;
	struct axp_regmap *map = axp_dev->regmap;
	int i, ocv_cou_adjust_time[4] = {60, 120, 15, 30};
	int update_min_times[8] = {30, 60, 120, 164, 0, 5, 10, 20};
     8b4:	e288e084 	add	lr, r8, #132	; 0x84
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:653
	axp2585_usb_info.usb_pc_vol = axp2585_config.pmu_usbpc_vol;
	axp2585_usb_info.usb_pc_cur = axp2585_config.pmu_usbpc_cur;
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
     8b8:	e5879114 	str	r9, [r7, #276]	; 0x114
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:649
	}

	axp2585_ac_info.ac_vol = axp2585_config.pmu_ac_vol;
	axp2585_ac_info.ac_cur = axp2585_config.pmu_ac_cur;
	axp2585_usb_info.usb_pc_vol = axp2585_config.pmu_usbpc_vol;
	axp2585_usb_info.usb_pc_cur = axp2585_config.pmu_usbpc_cur;
     8bc:	e587a0b4 	str	sl, [r7, #180]	; 0xb4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:654
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
     8c0:	e5949020 	ldr	r9, [r4, #32]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:652
	axp2585_ac_info.ac_cur = axp2585_config.pmu_ac_cur;
	axp2585_usb_info.usb_pc_vol = axp2585_config.pmu_usbpc_vol;
	axp2585_usb_info.usb_pc_cur = axp2585_config.pmu_usbpc_cur;
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
     8c4:	e594a018 	ldr	sl, [r4, #24]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:657
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
	battery_data.voltage_max_design = axp2585_config.pmu_init_chgvol
								* 1000;
	battery_data.voltage_min_design = axp2585_config.pmu_pwroff_vol
     8c8:	e587c14c 	str	ip, [r7, #332]	; 0x14c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:654
	axp2585_usb_info.usb_pc_cur = axp2585_config.pmu_usbpc_cur;
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
     8cc:	e5879118 	str	r9, [r7, #280]	; 0x118
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:652
	axp2585_ac_info.ac_cur = axp2585_config.pmu_ac_cur;
	axp2585_usb_info.usb_pc_vol = axp2585_config.pmu_usbpc_vol;
	axp2585_usb_info.usb_pc_cur = axp2585_config.pmu_usbpc_cur;
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
     8d0:	e587a110 	str	sl, [r7, #272]	; 0x110
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:647
		pr_err("axp2585 charger device tree err!\n");
		return -EBUSY;
	}

	axp2585_ac_info.ac_vol = axp2585_config.pmu_ac_vol;
	axp2585_ac_info.ac_cur = axp2585_config.pmu_ac_cur;
     8d4:	e59490d4 	ldr	r9, [r4, #212]	; 0xd4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:646
	} else {
		pr_err("axp2585 charger device tree err!\n");
		return -EBUSY;
	}

	axp2585_ac_info.ac_vol = axp2585_config.pmu_ac_vol;
     8d8:	e594a0d0 	ldr	sl, [r4, #208]	; 0xd0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:659
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
	battery_data.voltage_max_design = axp2585_config.pmu_init_chgvol
								* 1000;
	battery_data.voltage_min_design = axp2585_config.pmu_pwroff_vol
								* 1000;
	battery_data.energy_full_design = axp2585_config.pmu_battery_cap;
     8dc:	e594c00c 	ldr	ip, [r4, #12]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:647
		pr_err("axp2585 charger device tree err!\n");
		return -EBUSY;
	}

	axp2585_ac_info.ac_vol = axp2585_config.pmu_ac_vol;
	axp2585_ac_info.ac_cur = axp2585_config.pmu_ac_cur;
     8e0:	e5879080 	str	r9, [r7, #128]	; 0x80
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:651
	axp2585_usb_info.usb_pc_vol = axp2585_config.pmu_usbpc_vol;
	axp2585_usb_info.usb_pc_cur = axp2585_config.pmu_usbpc_cur;
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
     8e4:	e58790bc 	str	r9, [r7, #188]	; 0xbc
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:659
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
	battery_data.voltage_max_design = axp2585_config.pmu_init_chgvol
								* 1000;
	battery_data.voltage_min_design = axp2585_config.pmu_pwroff_vol
								* 1000;
	battery_data.energy_full_design = axp2585_config.pmu_battery_cap;
     8e8:	e587c158 	str	ip, [r7, #344]	; 0x158
axp2585_charger_init():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:320
	u8 ocv_cap[32];
	u8 val = 0;
	int cur_coulomb_counter, rdc;
	struct axp_regmap *map = axp_dev->regmap;
	int i, ocv_cou_adjust_time[4] = {60, 120, 15, 30};
	int update_min_times[8] = {30, 60, 120, 164, 0, 5, 10, 20};
     8ec:	e28dc028 	add	ip, sp, #40	; 0x28
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:646
	} else {
		pr_err("axp2585 charger device tree err!\n");
		return -EBUSY;
	}

	axp2585_ac_info.ac_vol = axp2585_config.pmu_ac_vol;
     8f0:	e587a07c 	str	sl, [r7, #124]	; 0x7c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:650
	axp2585_ac_info.ac_cur = axp2585_config.pmu_ac_cur;
	axp2585_usb_info.usb_pc_vol = axp2585_config.pmu_usbpc_vol;
	axp2585_usb_info.usb_pc_cur = axp2585_config.pmu_usbpc_cur;
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
     8f4:	e587a0b8 	str	sl, [r7, #184]	; 0xb8
axp2585_charger_init():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:319
{
	u8 ocv_cap[32];
	u8 val = 0;
	int cur_coulomb_counter, rdc;
	struct axp_regmap *map = axp_dev->regmap;
	int i, ocv_cou_adjust_time[4] = {60, 120, 15, 30};
     8f8:	e885000f 	stm	r5, {r0, r1, r2, r3}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:318
static int axp2585_charger_init(struct axp_dev *axp_dev)
{
	u8 ocv_cap[32];
	u8 val = 0;
	int cur_coulomb_counter, rdc;
	struct axp_regmap *map = axp_dev->regmap;
     8fc:	e59b5004 	ldr	r5, [fp, #4]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:320
	int i, ocv_cou_adjust_time[4] = {60, 120, 15, 30};
	int update_min_times[8] = {30, 60, 120, 164, 0, 5, 10, 20};
     900:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:322
	/*set chg time */
	if (axp2585_config.pmu_init_chg_pretime < 40)
     904:	e594903c 	ldr	r9, [r4, #60]	; 0x3c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:320
	u8 ocv_cap[32];
	u8 val = 0;
	int cur_coulomb_counter, rdc;
	struct axp_regmap *map = axp_dev->regmap;
	int i, ocv_cou_adjust_time[4] = {60, 120, 15, 30};
	int update_min_times[8] = {30, 60, 120, 164, 0, 5, 10, 20};
     908:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:322
	/*set chg time */
	if (axp2585_config.pmu_init_chg_pretime < 40)
     90c:	e3590027 	cmp	r9, #39	; 0x27
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:320
	u8 ocv_cap[32];
	u8 val = 0;
	int cur_coulomb_counter, rdc;
	struct axp_regmap *map = axp_dev->regmap;
	int i, ocv_cou_adjust_time[4] = {60, 120, 15, 30};
	int update_min_times[8] = {30, 60, 120, 164, 0, 5, 10, 20};
     910:	e89e000f 	ldm	lr, {r0, r1, r2, r3}
     914:	e88c000f 	stm	ip, {r0, r1, r2, r3}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:322
	/*set chg time */
	if (axp2585_config.pmu_init_chg_pretime < 40)
     918:	8a00003f 	bhi	a1c <axp2585_charger_probe+0x1f8>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:323
		axp2585_config.pmu_init_chg_pretime = 40;
     91c:	e3a0c080 	mov	ip, #128	; 0x80
     920:	e3a03028 	mov	r3, #40	; 0x28
     924:	e584303c 	str	r3, [r4, #60]	; 0x3c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:328
	val = (axp2585_config.pmu_init_chg_pretime - 40)/10;
	if (val >= 3)
		val = 3;
	val = 0x80 + (val<<5);
	axp_regmap_update(map, 0x8e, val, 0xe0);
     928:	e1a0200c 	mov	r2, ip
     92c:	e3a030e0 	mov	r3, #224	; 0xe0
     930:	e3a0108e 	mov	r1, #142	; 0x8e
     934:	e1a00005 	mov	r0, r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:327
	if (axp2585_config.pmu_init_chg_pretime < 40)
		axp2585_config.pmu_init_chg_pretime = 40;
	val = (axp2585_config.pmu_init_chg_pretime - 40)/10;
	if (val >= 3)
		val = 3;
	val = 0x80 + (val<<5);
     938:	e5cdc017 	strb	ip, [sp, #23]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:328
	axp_regmap_update(map, 0x8e, val, 0xe0);
     93c:	ebfffffe 	bl	0 <axp_regmap_update>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:329
    printk("==%s==line:%d==file:%s==\n",__func__,__LINE__,__FILE__);
     940:	e3003000 	movw	r3, #0
     944:	e3000000 	movw	r0, #0
     948:	e3403000 	movt	r3, #0
     94c:	e3400000 	movt	r0, #0
     950:	e3002149 	movw	r2, #329	; 0x149
     954:	e59f1830 	ldr	r1, [pc, #2096]	; 118c <axp2585_charger_probe+0x968>
     958:	ebfffffe 	bl	0 <printk>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:331

	if (axp2585_config.pmu_init_chg_csttime <= 60 * 5)
     95c:	e5943040 	ldr	r3, [r4, #64]	; 0x40
     960:	e3530f4b 	cmp	r3, #300	; 0x12c
     964:	93a0c001 	movls	ip, #1
     968:	9a000005 	bls	984 <axp2585_charger_probe+0x160>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:333
		val = 0;
	else if (axp2585_config.pmu_init_chg_csttime <= 60 * 8)
     96c:	e3530e1e 	cmp	r3, #480	; 0x1e0
     970:	93a0c003 	movls	ip, #3
     974:	9a000002 	bls	984 <axp2585_charger_probe+0x160>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:335
		val = 1;
	else if (axp2585_config.pmu_init_chg_csttime <= 60 * 12)
     978:	e3530e2d 	cmp	r3, #720	; 0x2d0
     97c:	93a0c005 	movls	ip, #5
     980:	83a0c007 	movhi	ip, #7
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:342
	else if (axp2585_config.pmu_init_chg_csttime <= 60 * 20)
		val = 3;
	else
		val = 3;
	val = (val << 1) + 0x01;
	axp_regmap_update(map, 0x8d, val, 0x07);
     984:	e1a0200c 	mov	r2, ip
     988:	e3a03007 	mov	r3, #7
     98c:	e3a0108d 	mov	r1, #141	; 0x8d
     990:	e1a00005 	mov	r0, r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:341
		val = 2;
	else if (axp2585_config.pmu_init_chg_csttime <= 60 * 20)
		val = 3;
	else
		val = 3;
	val = (val << 1) + 0x01;
     994:	e5cdc017 	strb	ip, [sp, #23]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:342
	axp_regmap_update(map, 0x8d, val, 0x07);
     998:	ebfffffe 	bl	0 <axp_regmap_update>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:345
	/* adc set */
	val = AXP2585_ADC_BATVOL_ENABLE | AXP2585_ADC_BATCUR_ENABLE;
	if (axp2585_config.pmu_bat_temp_enable != 0)
     99c:	e5943150 	ldr	r3, [r4, #336]	; 0x150
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:344
	else
		val = 3;
	val = (val << 1) + 0x01;
	axp_regmap_update(map, 0x8d, val, 0x07);
	/* adc set */
	val = AXP2585_ADC_BATVOL_ENABLE | AXP2585_ADC_BATCUR_ENABLE;
     9a0:	e3a02050 	mov	r2, #80	; 0x50
     9a4:	e5cd2017 	strb	r2, [sp, #23]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:347
	if (axp2585_config.pmu_bat_temp_enable != 0)
		val = val | AXP2585_ADC_TSVOL_ENABLE;
	axp_regmap_update(map, AXP2585_ADC_CONTROL, val,
     9a8:	e3a01080 	mov	r1, #128	; 0x80
     9ac:	e1a00005 	mov	r0, r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:345
		val = 3;
	val = (val << 1) + 0x01;
	axp_regmap_update(map, 0x8d, val, 0x07);
	/* adc set */
	val = AXP2585_ADC_BATVOL_ENABLE | AXP2585_ADC_BATCUR_ENABLE;
	if (axp2585_config.pmu_bat_temp_enable != 0)
     9b0:	e3530000 	cmp	r3, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:347
		val = val | AXP2585_ADC_TSVOL_ENABLE;
	axp_regmap_update(map, AXP2585_ADC_CONTROL, val,
     9b4:	e3a03070 	mov	r3, #112	; 0x70
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:346
	val = (val << 1) + 0x01;
	axp_regmap_update(map, 0x8d, val, 0x07);
	/* adc set */
	val = AXP2585_ADC_BATVOL_ENABLE | AXP2585_ADC_BATCUR_ENABLE;
	if (axp2585_config.pmu_bat_temp_enable != 0)
		val = val | AXP2585_ADC_TSVOL_ENABLE;
     9b8:	13a02070 	movne	r2, #112	; 0x70
     9bc:	15cd2017 	strbne	r2, [sp, #23]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:347
	axp_regmap_update(map, AXP2585_ADC_CONTROL, val,
     9c0:	ebfffffe 	bl	0 <axp_regmap_update>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:352
						AXP2585_ADC_BATVOL_ENABLE
						| AXP2585_ADC_BATCUR_ENABLE
						| AXP2585_ADC_TSVOL_ENABLE);

	axp_regmap_read(map, AXP2585_TS_PIN_CONTROL, &val);
     9c4:	e3a01081 	mov	r1, #129	; 0x81
     9c8:	e28d2017 	add	r2, sp, #23
     9cc:	e1a00005 	mov	r0, r5
     9d0:	ebfffffe 	bl	0 <axp_regmap_read>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:353
	switch (axp2585_config.pmu_init_adc_freq / 100) {
     9d4:	e5942034 	ldr	r2, [r4, #52]	; 0x34
     9d8:	e308351f 	movw	r3, #34079	; 0x851f
     9dc:	e34531eb 	movt	r3, #20971	; 0x51eb
     9e0:	e0832392 	umull	r2, r3, r2, r3
     9e4:	e5dd2017 	ldrb	r2, [sp, #23]
     9e8:	e1a032a3 	lsr	r3, r3, #5
     9ec:	e2433001 	sub	r3, r3, #1
     9f0:	e3530007 	cmp	r3, #7
     9f4:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
     9f8:	ea000014 	b	a50 <axp2585_charger_probe+0x22c>
     9fc:	000010c4 	andeq	r1, r0, r4, asr #1
     a00:	000010b4 	strheq	r1, [r0], -r4
     a04:	00000a50 	andeq	r0, r0, r0, asr sl
     a08:	000010a4 	andeq	r1, r0, r4, lsr #1
     a0c:	00000a50 	andeq	r0, r0, r0, asr sl
     a10:	00000a50 	andeq	r0, r0, r0, asr sl
     a14:	00000a50 	andeq	r0, r0, r0, asr sl
     a18:	00000a48 	andeq	r0, r0, r8, asr #20
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:324
	int i, ocv_cou_adjust_time[4] = {60, 120, 15, 30};
	int update_min_times[8] = {30, 60, 120, 164, 0, 5, 10, 20};
	/*set chg time */
	if (axp2585_config.pmu_init_chg_pretime < 40)
		axp2585_config.pmu_init_chg_pretime = 40;
	val = (axp2585_config.pmu_init_chg_pretime - 40)/10;
     a1c:	e30c3ccd 	movw	r3, #52429	; 0xcccd
     a20:	e2492028 	sub	r2, r9, #40	; 0x28
     a24:	e34c3ccc 	movt	r3, #52428	; 0xcccc
     a28:	e0832392 	umull	r2, r3, r2, r3
     a2c:	e7e731d3 	ubfx	r3, r3, #3, #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:325
	if (val >= 3)
     a30:	e3530002 	cmp	r3, #2
     a34:	91a0c283 	lslls	ip, r3, #5
     a38:	83a0c0e0 	movhi	ip, #224	; 0xe0
     a3c:	924cc080 	subls	ip, ip, #128	; 0x80
     a40:	96efc07c 	uxtbls	ip, ip
     a44:	eaffffb7 	b	928 <axp2585_charger_probe+0x104>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:366
	case 4:
		val &= ~(3 << 5);
		val |= 2 << 5;
		break;
	case 8:
		val |= 3 << 5;
     a48:	e3822060 	orr	r2, r2, #96	; 0x60
     a4c:	e5cd2017 	strb	r2, [sp, #23]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:372
		break;
	default:
		break;
	}

	if (axp2585_config.pmu_bat_temp_enable != 0)
     a50:	e5943150 	ldr	r3, [r4, #336]	; 0x150
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:374
		val &= (~(1 << 7));
	axp_regmap_write(map, AXP2585_TS_PIN_CONTROL, val);
     a54:	e3a01081 	mov	r1, #129	; 0x81
     a58:	e1a00005 	mov	r0, r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:372
		break;
	default:
		break;
	}

	if (axp2585_config.pmu_bat_temp_enable != 0)
     a5c:	e3530000 	cmp	r3, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:373
		val &= (~(1 << 7));
     a60:	1202207f 	andne	r2, r2, #127	; 0x7f
     a64:	15cd2017 	strbne	r2, [sp, #23]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:374
	axp_regmap_write(map, AXP2585_TS_PIN_CONTROL, val);
     a68:	ebfffffe 	bl	0 <axp_regmap_write>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:377

	/* bat para */
	axp_regmap_write(map, AXP2585_WARNING_LEVEL,
     a6c:	e594310c 	ldr	r3, [r4, #268]	; 0x10c
     a70:	e3a010e6 	mov	r1, #230	; 0xe6
     a74:	e5942110 	ldr	r2, [r4, #272]	; 0x110
     a78:	e1a00005 	mov	r0, r5
     a7c:	e2433005 	sub	r3, r3, #5
     a80:	e0822203 	add	r2, r2, r3, lsl #4
     a84:	e6ef2072 	uxtb	r2, r2
     a88:	ebfffffe 	bl	0 <axp_regmap_write>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:381
		((axp2585_config.pmu_battery_warning_level1 - 5) << 4)
		+ axp2585_config.pmu_battery_warning_level2);

	if (axp2585_config.pmu_init_chgvol < 3840)
     a8c:	e5943024 	ldr	r3, [r4, #36]	; 0x24
     a90:	e3530c0f 	cmp	r3, #3840	; 0xf00
     a94:	2a000113 	bcs	ee8 <axp2585_charger_probe+0x6c4>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:382
		axp2585_config.pmu_init_chgvol = 3840;
     a98:	e3a0c000 	mov	ip, #0
     a9c:	e3a03c0f 	mov	r3, #3840	; 0xf00
     aa0:	e5843024 	str	r3, [r4, #36]	; 0x24
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:387
	val = (axp2585_config.pmu_init_chgvol - 3840)/16;
	if (val > 0x30)
		val = 0x30;
	val <<= 2;
	axp_regmap_update(map, AXP2585_CHARGE_CONTROL2, val, 0xfc);
     aa4:	e1a0200c 	mov	r2, ip
     aa8:	e3a030fc 	mov	r3, #252	; 0xfc
     aac:	e3a0108c 	mov	r1, #140	; 0x8c
     ab0:	e1a00005 	mov	r0, r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:386
	if (axp2585_config.pmu_init_chgvol < 3840)
		axp2585_config.pmu_init_chgvol = 3840;
	val = (axp2585_config.pmu_init_chgvol - 3840)/16;
	if (val > 0x30)
		val = 0x30;
	val <<= 2;
     ab4:	e5cdc017 	strb	ip, [sp, #23]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:408
	ocv_cap[13] = axp2585_config.pmu_bat_para14;
	ocv_cap[14] = axp2585_config.pmu_bat_para15;
	ocv_cap[15] = axp2585_config.pmu_bat_para16;
	ocv_cap[16] = axp2585_config.pmu_bat_para17;
	ocv_cap[17] = axp2585_config.pmu_bat_para18;
	ocv_cap[18] = axp2585_config.pmu_bat_para19;
     ab8:	e2849090 	add	r9, r4, #144	; 0x90
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:387
		axp2585_config.pmu_init_chgvol = 3840;
	val = (axp2585_config.pmu_init_chgvol - 3840)/16;
	if (val > 0x30)
		val = 0x30;
	val <<= 2;
	axp_regmap_update(map, AXP2585_CHARGE_CONTROL2, val, 0xfc);
     abc:	ebfffffe 	bl	0 <axp_regmap_update>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:388
    printk("==%s==line:%d==file:%s==\n",__func__,__LINE__,__FILE__);
     ac0:	e3003000 	movw	r3, #0
     ac4:	e3000000 	movw	r0, #0
     ac8:	e3403000 	movt	r3, #0
     acc:	e3a02f61 	mov	r2, #388	; 0x184
     ad0:	e59f16b4 	ldr	r1, [pc, #1716]	; 118c <axp2585_charger_probe+0x968>
     ad4:	e3400000 	movt	r0, #0
     ad8:	ebfffffe 	bl	0 <printk>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:390

	ocv_cap[0]  = axp2585_config.pmu_bat_para1;
     adc:	e594e050 	ldr	lr, [r4, #80]	; 0x50
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:422
	ocv_cap[27] = axp2585_config.pmu_bat_para28;
	ocv_cap[28] = axp2585_config.pmu_bat_para29;
	ocv_cap[29] = axp2585_config.pmu_bat_para30;
	ocv_cap[30] = axp2585_config.pmu_bat_para31;
	ocv_cap[31] = axp2585_config.pmu_bat_para32;
	axp_regmap_writes(map, 0xC0, 32, ocv_cap);
     ae0:	e28d3048 	add	r3, sp, #72	; 0x48
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:391
	val <<= 2;
	axp_regmap_update(map, AXP2585_CHARGE_CONTROL2, val, 0xfc);
    printk("==%s==line:%d==file:%s==\n",__func__,__LINE__,__FILE__);

	ocv_cap[0]  = axp2585_config.pmu_bat_para1;
	ocv_cap[1]  = axp2585_config.pmu_bat_para2;
     ae4:	e5941054 	ldr	r1, [r4, #84]	; 0x54
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:422
	ocv_cap[27] = axp2585_config.pmu_bat_para28;
	ocv_cap[28] = axp2585_config.pmu_bat_para29;
	ocv_cap[29] = axp2585_config.pmu_bat_para30;
	ocv_cap[30] = axp2585_config.pmu_bat_para31;
	ocv_cap[31] = axp2585_config.pmu_bat_para32;
	axp_regmap_writes(map, 0xC0, 32, ocv_cap);
     ae8:	e3a02020 	mov	r2, #32
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:392
	axp_regmap_update(map, AXP2585_CHARGE_CONTROL2, val, 0xfc);
    printk("==%s==line:%d==file:%s==\n",__func__,__LINE__,__FILE__);

	ocv_cap[0]  = axp2585_config.pmu_bat_para1;
	ocv_cap[1]  = axp2585_config.pmu_bat_para2;
	ocv_cap[2]  = axp2585_config.pmu_bat_para3;
     aec:	e5940058 	ldr	r0, [r4, #88]	; 0x58
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:393
	ocv_cap[3]  = axp2585_config.pmu_bat_para4;
     af0:	e594c05c 	ldr	ip, [r4, #92]	; 0x5c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:390
		val = 0x30;
	val <<= 2;
	axp_regmap_update(map, AXP2585_CHARGE_CONTROL2, val, 0xfc);
    printk("==%s==line:%d==file:%s==\n",__func__,__LINE__,__FILE__);

	ocv_cap[0]  = axp2585_config.pmu_bat_para1;
     af4:	e5cde048 	strb	lr, [sp, #72]	; 0x48
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:391
	ocv_cap[1]  = axp2585_config.pmu_bat_para2;
     af8:	e5cd1049 	strb	r1, [sp, #73]	; 0x49
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:394
	ocv_cap[2]  = axp2585_config.pmu_bat_para3;
	ocv_cap[3]  = axp2585_config.pmu_bat_para4;
	ocv_cap[4]  = axp2585_config.pmu_bat_para5;
     afc:	e594e060 	ldr	lr, [r4, #96]	; 0x60
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:395
	ocv_cap[5]  = axp2585_config.pmu_bat_para6;
     b00:	e5941064 	ldr	r1, [r4, #100]	; 0x64
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:392
	axp_regmap_update(map, AXP2585_CHARGE_CONTROL2, val, 0xfc);
    printk("==%s==line:%d==file:%s==\n",__func__,__LINE__,__FILE__);

	ocv_cap[0]  = axp2585_config.pmu_bat_para1;
	ocv_cap[1]  = axp2585_config.pmu_bat_para2;
	ocv_cap[2]  = axp2585_config.pmu_bat_para3;
     b04:	e5cd004a 	strb	r0, [sp, #74]	; 0x4a
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:393
	ocv_cap[3]  = axp2585_config.pmu_bat_para4;
     b08:	e5cdc04b 	strb	ip, [sp, #75]	; 0x4b
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:396
	ocv_cap[4]  = axp2585_config.pmu_bat_para5;
	ocv_cap[5]  = axp2585_config.pmu_bat_para6;
	ocv_cap[6]  = axp2585_config.pmu_bat_para7;
     b0c:	e5940068 	ldr	r0, [r4, #104]	; 0x68
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:397
	ocv_cap[7]  = axp2585_config.pmu_bat_para8;
     b10:	e594c06c 	ldr	ip, [r4, #108]	; 0x6c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:394

	ocv_cap[0]  = axp2585_config.pmu_bat_para1;
	ocv_cap[1]  = axp2585_config.pmu_bat_para2;
	ocv_cap[2]  = axp2585_config.pmu_bat_para3;
	ocv_cap[3]  = axp2585_config.pmu_bat_para4;
	ocv_cap[4]  = axp2585_config.pmu_bat_para5;
     b14:	e5cde04c 	strb	lr, [sp, #76]	; 0x4c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:395
	ocv_cap[5]  = axp2585_config.pmu_bat_para6;
     b18:	e5cd104d 	strb	r1, [sp, #77]	; 0x4d
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:398
	ocv_cap[6]  = axp2585_config.pmu_bat_para7;
	ocv_cap[7]  = axp2585_config.pmu_bat_para8;
	ocv_cap[8]  = axp2585_config.pmu_bat_para9;
     b1c:	e594e070 	ldr	lr, [r4, #112]	; 0x70
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:399
	ocv_cap[9]  = axp2585_config.pmu_bat_para10;
     b20:	e5941074 	ldr	r1, [r4, #116]	; 0x74
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:396
	ocv_cap[1]  = axp2585_config.pmu_bat_para2;
	ocv_cap[2]  = axp2585_config.pmu_bat_para3;
	ocv_cap[3]  = axp2585_config.pmu_bat_para4;
	ocv_cap[4]  = axp2585_config.pmu_bat_para5;
	ocv_cap[5]  = axp2585_config.pmu_bat_para6;
	ocv_cap[6]  = axp2585_config.pmu_bat_para7;
     b24:	e5cd004e 	strb	r0, [sp, #78]	; 0x4e
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:397
	ocv_cap[7]  = axp2585_config.pmu_bat_para8;
     b28:	e5cdc04f 	strb	ip, [sp, #79]	; 0x4f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:400
	ocv_cap[8]  = axp2585_config.pmu_bat_para9;
	ocv_cap[9]  = axp2585_config.pmu_bat_para10;
	ocv_cap[10] = axp2585_config.pmu_bat_para11;
     b2c:	e5940078 	ldr	r0, [r4, #120]	; 0x78
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:401
	ocv_cap[11] = axp2585_config.pmu_bat_para12;
     b30:	e594c07c 	ldr	ip, [r4, #124]	; 0x7c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:398
	ocv_cap[3]  = axp2585_config.pmu_bat_para4;
	ocv_cap[4]  = axp2585_config.pmu_bat_para5;
	ocv_cap[5]  = axp2585_config.pmu_bat_para6;
	ocv_cap[6]  = axp2585_config.pmu_bat_para7;
	ocv_cap[7]  = axp2585_config.pmu_bat_para8;
	ocv_cap[8]  = axp2585_config.pmu_bat_para9;
     b34:	e5cde050 	strb	lr, [sp, #80]	; 0x50
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:399
	ocv_cap[9]  = axp2585_config.pmu_bat_para10;
     b38:	e5cd1051 	strb	r1, [sp, #81]	; 0x51
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:400
	ocv_cap[10] = axp2585_config.pmu_bat_para11;
     b3c:	e5cd0052 	strb	r0, [sp, #82]	; 0x52
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:403
	ocv_cap[11] = axp2585_config.pmu_bat_para12;
	ocv_cap[12] = axp2585_config.pmu_bat_para13;
	ocv_cap[13] = axp2585_config.pmu_bat_para14;
     b40:	e5941084 	ldr	r1, [r4, #132]	; 0x84
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:404
	ocv_cap[14] = axp2585_config.pmu_bat_para15;
     b44:	e5940088 	ldr	r0, [r4, #136]	; 0x88
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:401
	ocv_cap[6]  = axp2585_config.pmu_bat_para7;
	ocv_cap[7]  = axp2585_config.pmu_bat_para8;
	ocv_cap[8]  = axp2585_config.pmu_bat_para9;
	ocv_cap[9]  = axp2585_config.pmu_bat_para10;
	ocv_cap[10] = axp2585_config.pmu_bat_para11;
	ocv_cap[11] = axp2585_config.pmu_bat_para12;
     b48:	e5cdc053 	strb	ip, [sp, #83]	; 0x53
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:402
	ocv_cap[12] = axp2585_config.pmu_bat_para13;
     b4c:	e594e080 	ldr	lr, [r4, #128]	; 0x80
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:405
	ocv_cap[13] = axp2585_config.pmu_bat_para14;
	ocv_cap[14] = axp2585_config.pmu_bat_para15;
	ocv_cap[15] = axp2585_config.pmu_bat_para16;
     b50:	e594c08c 	ldr	ip, [r4, #140]	; 0x8c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:403
	ocv_cap[8]  = axp2585_config.pmu_bat_para9;
	ocv_cap[9]  = axp2585_config.pmu_bat_para10;
	ocv_cap[10] = axp2585_config.pmu_bat_para11;
	ocv_cap[11] = axp2585_config.pmu_bat_para12;
	ocv_cap[12] = axp2585_config.pmu_bat_para13;
	ocv_cap[13] = axp2585_config.pmu_bat_para14;
     b54:	e5cd1055 	strb	r1, [sp, #85]	; 0x55
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:422
	ocv_cap[27] = axp2585_config.pmu_bat_para28;
	ocv_cap[28] = axp2585_config.pmu_bat_para29;
	ocv_cap[29] = axp2585_config.pmu_bat_para30;
	ocv_cap[30] = axp2585_config.pmu_bat_para31;
	ocv_cap[31] = axp2585_config.pmu_bat_para32;
	axp_regmap_writes(map, 0xC0, 32, ocv_cap);
     b58:	e3a010c0 	mov	r1, #192	; 0xc0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:404
	ocv_cap[9]  = axp2585_config.pmu_bat_para10;
	ocv_cap[10] = axp2585_config.pmu_bat_para11;
	ocv_cap[11] = axp2585_config.pmu_bat_para12;
	ocv_cap[12] = axp2585_config.pmu_bat_para13;
	ocv_cap[13] = axp2585_config.pmu_bat_para14;
	ocv_cap[14] = axp2585_config.pmu_bat_para15;
     b5c:	e5cd0056 	strb	r0, [sp, #86]	; 0x56
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:422
	ocv_cap[27] = axp2585_config.pmu_bat_para28;
	ocv_cap[28] = axp2585_config.pmu_bat_para29;
	ocv_cap[29] = axp2585_config.pmu_bat_para30;
	ocv_cap[30] = axp2585_config.pmu_bat_para31;
	ocv_cap[31] = axp2585_config.pmu_bat_para32;
	axp_regmap_writes(map, 0xC0, 32, ocv_cap);
     b60:	e1a00005 	mov	r0, r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:402
	ocv_cap[7]  = axp2585_config.pmu_bat_para8;
	ocv_cap[8]  = axp2585_config.pmu_bat_para9;
	ocv_cap[9]  = axp2585_config.pmu_bat_para10;
	ocv_cap[10] = axp2585_config.pmu_bat_para11;
	ocv_cap[11] = axp2585_config.pmu_bat_para12;
	ocv_cap[12] = axp2585_config.pmu_bat_para13;
     b64:	e5cde054 	strb	lr, [sp, #84]	; 0x54
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:405
	ocv_cap[13] = axp2585_config.pmu_bat_para14;
	ocv_cap[14] = axp2585_config.pmu_bat_para15;
	ocv_cap[15] = axp2585_config.pmu_bat_para16;
     b68:	e5cdc057 	strb	ip, [sp, #87]	; 0x57
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:408
	ocv_cap[16] = axp2585_config.pmu_bat_para17;
	ocv_cap[17] = axp2585_config.pmu_bat_para18;
	ocv_cap[18] = axp2585_config.pmu_bat_para19;
     b6c:	e8995200 	ldm	r9, {r9, ip, lr}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:407
	ocv_cap[12] = axp2585_config.pmu_bat_para13;
	ocv_cap[13] = axp2585_config.pmu_bat_para14;
	ocv_cap[14] = axp2585_config.pmu_bat_para15;
	ocv_cap[15] = axp2585_config.pmu_bat_para16;
	ocv_cap[16] = axp2585_config.pmu_bat_para17;
	ocv_cap[17] = axp2585_config.pmu_bat_para18;
     b70:	e5cdc059 	strb	ip, [sp, #89]	; 0x59
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:409
	ocv_cap[18] = axp2585_config.pmu_bat_para19;
	ocv_cap[19] = axp2585_config.pmu_bat_para20;
     b74:	e594c09c 	ldr	ip, [r4, #156]	; 0x9c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:408
	ocv_cap[13] = axp2585_config.pmu_bat_para14;
	ocv_cap[14] = axp2585_config.pmu_bat_para15;
	ocv_cap[15] = axp2585_config.pmu_bat_para16;
	ocv_cap[16] = axp2585_config.pmu_bat_para17;
	ocv_cap[17] = axp2585_config.pmu_bat_para18;
	ocv_cap[18] = axp2585_config.pmu_bat_para19;
     b78:	e5cde05a 	strb	lr, [sp, #90]	; 0x5a
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:410
	ocv_cap[19] = axp2585_config.pmu_bat_para20;
	ocv_cap[20] = axp2585_config.pmu_bat_para21;
     b7c:	e594e0a0 	ldr	lr, [r4, #160]	; 0xa0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:409
	ocv_cap[14] = axp2585_config.pmu_bat_para15;
	ocv_cap[15] = axp2585_config.pmu_bat_para16;
	ocv_cap[16] = axp2585_config.pmu_bat_para17;
	ocv_cap[17] = axp2585_config.pmu_bat_para18;
	ocv_cap[18] = axp2585_config.pmu_bat_para19;
	ocv_cap[19] = axp2585_config.pmu_bat_para20;
     b80:	e5cdc05b 	strb	ip, [sp, #91]	; 0x5b
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:411
	ocv_cap[20] = axp2585_config.pmu_bat_para21;
	ocv_cap[21] = axp2585_config.pmu_bat_para22;
     b84:	e594c0a4 	ldr	ip, [r4, #164]	; 0xa4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:410
	ocv_cap[15] = axp2585_config.pmu_bat_para16;
	ocv_cap[16] = axp2585_config.pmu_bat_para17;
	ocv_cap[17] = axp2585_config.pmu_bat_para18;
	ocv_cap[18] = axp2585_config.pmu_bat_para19;
	ocv_cap[19] = axp2585_config.pmu_bat_para20;
	ocv_cap[20] = axp2585_config.pmu_bat_para21;
     b88:	e5cde05c 	strb	lr, [sp, #92]	; 0x5c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:412
	ocv_cap[21] = axp2585_config.pmu_bat_para22;
	ocv_cap[22] = axp2585_config.pmu_bat_para23;
     b8c:	e594e0a8 	ldr	lr, [r4, #168]	; 0xa8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:411
	ocv_cap[16] = axp2585_config.pmu_bat_para17;
	ocv_cap[17] = axp2585_config.pmu_bat_para18;
	ocv_cap[18] = axp2585_config.pmu_bat_para19;
	ocv_cap[19] = axp2585_config.pmu_bat_para20;
	ocv_cap[20] = axp2585_config.pmu_bat_para21;
	ocv_cap[21] = axp2585_config.pmu_bat_para22;
     b90:	e5cdc05d 	strb	ip, [sp, #93]	; 0x5d
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:413
	ocv_cap[22] = axp2585_config.pmu_bat_para23;
	ocv_cap[23] = axp2585_config.pmu_bat_para24;
     b94:	e594c0ac 	ldr	ip, [r4, #172]	; 0xac
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:412
	ocv_cap[17] = axp2585_config.pmu_bat_para18;
	ocv_cap[18] = axp2585_config.pmu_bat_para19;
	ocv_cap[19] = axp2585_config.pmu_bat_para20;
	ocv_cap[20] = axp2585_config.pmu_bat_para21;
	ocv_cap[21] = axp2585_config.pmu_bat_para22;
	ocv_cap[22] = axp2585_config.pmu_bat_para23;
     b98:	e5cde05e 	strb	lr, [sp, #94]	; 0x5e
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:414
	ocv_cap[23] = axp2585_config.pmu_bat_para24;
	ocv_cap[24] = axp2585_config.pmu_bat_para25;
     b9c:	e594e0b0 	ldr	lr, [r4, #176]	; 0xb0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:413
	ocv_cap[18] = axp2585_config.pmu_bat_para19;
	ocv_cap[19] = axp2585_config.pmu_bat_para20;
	ocv_cap[20] = axp2585_config.pmu_bat_para21;
	ocv_cap[21] = axp2585_config.pmu_bat_para22;
	ocv_cap[22] = axp2585_config.pmu_bat_para23;
	ocv_cap[23] = axp2585_config.pmu_bat_para24;
     ba0:	e5cdc05f 	strb	ip, [sp, #95]	; 0x5f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:415
	ocv_cap[24] = axp2585_config.pmu_bat_para25;
	ocv_cap[25] = axp2585_config.pmu_bat_para26;
     ba4:	e594c0b4 	ldr	ip, [r4, #180]	; 0xb4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:414
	ocv_cap[19] = axp2585_config.pmu_bat_para20;
	ocv_cap[20] = axp2585_config.pmu_bat_para21;
	ocv_cap[21] = axp2585_config.pmu_bat_para22;
	ocv_cap[22] = axp2585_config.pmu_bat_para23;
	ocv_cap[23] = axp2585_config.pmu_bat_para24;
	ocv_cap[24] = axp2585_config.pmu_bat_para25;
     ba8:	e5cde060 	strb	lr, [sp, #96]	; 0x60
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:416
	ocv_cap[25] = axp2585_config.pmu_bat_para26;
	ocv_cap[26] = axp2585_config.pmu_bat_para27;
     bac:	e594e0b8 	ldr	lr, [r4, #184]	; 0xb8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:415
	ocv_cap[20] = axp2585_config.pmu_bat_para21;
	ocv_cap[21] = axp2585_config.pmu_bat_para22;
	ocv_cap[22] = axp2585_config.pmu_bat_para23;
	ocv_cap[23] = axp2585_config.pmu_bat_para24;
	ocv_cap[24] = axp2585_config.pmu_bat_para25;
	ocv_cap[25] = axp2585_config.pmu_bat_para26;
     bb0:	e5cdc061 	strb	ip, [sp, #97]	; 0x61
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:417
	ocv_cap[26] = axp2585_config.pmu_bat_para27;
	ocv_cap[27] = axp2585_config.pmu_bat_para28;
     bb4:	e594c0bc 	ldr	ip, [r4, #188]	; 0xbc
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:416
	ocv_cap[21] = axp2585_config.pmu_bat_para22;
	ocv_cap[22] = axp2585_config.pmu_bat_para23;
	ocv_cap[23] = axp2585_config.pmu_bat_para24;
	ocv_cap[24] = axp2585_config.pmu_bat_para25;
	ocv_cap[25] = axp2585_config.pmu_bat_para26;
	ocv_cap[26] = axp2585_config.pmu_bat_para27;
     bb8:	e5cde062 	strb	lr, [sp, #98]	; 0x62
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:418
	ocv_cap[27] = axp2585_config.pmu_bat_para28;
	ocv_cap[28] = axp2585_config.pmu_bat_para29;
     bbc:	e594e0c0 	ldr	lr, [r4, #192]	; 0xc0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:417
	ocv_cap[22] = axp2585_config.pmu_bat_para23;
	ocv_cap[23] = axp2585_config.pmu_bat_para24;
	ocv_cap[24] = axp2585_config.pmu_bat_para25;
	ocv_cap[25] = axp2585_config.pmu_bat_para26;
	ocv_cap[26] = axp2585_config.pmu_bat_para27;
	ocv_cap[27] = axp2585_config.pmu_bat_para28;
     bc0:	e5cdc063 	strb	ip, [sp, #99]	; 0x63
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:419
	ocv_cap[28] = axp2585_config.pmu_bat_para29;
	ocv_cap[29] = axp2585_config.pmu_bat_para30;
     bc4:	e594c0c4 	ldr	ip, [r4, #196]	; 0xc4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:418
	ocv_cap[23] = axp2585_config.pmu_bat_para24;
	ocv_cap[24] = axp2585_config.pmu_bat_para25;
	ocv_cap[25] = axp2585_config.pmu_bat_para26;
	ocv_cap[26] = axp2585_config.pmu_bat_para27;
	ocv_cap[27] = axp2585_config.pmu_bat_para28;
	ocv_cap[28] = axp2585_config.pmu_bat_para29;
     bc8:	e5cde064 	strb	lr, [sp, #100]	; 0x64
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:420
	ocv_cap[29] = axp2585_config.pmu_bat_para30;
	ocv_cap[30] = axp2585_config.pmu_bat_para31;
     bcc:	e594e0c8 	ldr	lr, [r4, #200]	; 0xc8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:419
	ocv_cap[24] = axp2585_config.pmu_bat_para25;
	ocv_cap[25] = axp2585_config.pmu_bat_para26;
	ocv_cap[26] = axp2585_config.pmu_bat_para27;
	ocv_cap[27] = axp2585_config.pmu_bat_para28;
	ocv_cap[28] = axp2585_config.pmu_bat_para29;
	ocv_cap[29] = axp2585_config.pmu_bat_para30;
     bd0:	e5cdc065 	strb	ip, [sp, #101]	; 0x65
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:421
	ocv_cap[30] = axp2585_config.pmu_bat_para31;
	ocv_cap[31] = axp2585_config.pmu_bat_para32;
     bd4:	e594c0cc 	ldr	ip, [r4, #204]	; 0xcc
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:406
	ocv_cap[11] = axp2585_config.pmu_bat_para12;
	ocv_cap[12] = axp2585_config.pmu_bat_para13;
	ocv_cap[13] = axp2585_config.pmu_bat_para14;
	ocv_cap[14] = axp2585_config.pmu_bat_para15;
	ocv_cap[15] = axp2585_config.pmu_bat_para16;
	ocv_cap[16] = axp2585_config.pmu_bat_para17;
     bd8:	e5cd9058 	strb	r9, [sp, #88]	; 0x58
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:420
	ocv_cap[25] = axp2585_config.pmu_bat_para26;
	ocv_cap[26] = axp2585_config.pmu_bat_para27;
	ocv_cap[27] = axp2585_config.pmu_bat_para28;
	ocv_cap[28] = axp2585_config.pmu_bat_para29;
	ocv_cap[29] = axp2585_config.pmu_bat_para30;
	ocv_cap[30] = axp2585_config.pmu_bat_para31;
     bdc:	e5cde066 	strb	lr, [sp, #102]	; 0x66
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:421
	ocv_cap[31] = axp2585_config.pmu_bat_para32;
     be0:	e5cdc067 	strb	ip, [sp, #103]	; 0x67
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:422
	axp_regmap_writes(map, 0xC0, 32, ocv_cap);
     be4:	ebfffffe 	bl	0 <axp_regmap_writes>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:425

	/*Init CHGLED function*/
	if (axp2585_config.pmu_chgled_func)
     be8:	e594311c 	ldr	r3, [r4, #284]	; 0x11c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:426
		axp_regmap_set_bits(map, 0x90, 0x80); /* control by charger */
     bec:	e3a02080 	mov	r2, #128	; 0x80
     bf0:	e3a01090 	mov	r1, #144	; 0x90
     bf4:	e1a00005 	mov	r0, r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:425
	ocv_cap[30] = axp2585_config.pmu_bat_para31;
	ocv_cap[31] = axp2585_config.pmu_bat_para32;
	axp_regmap_writes(map, 0xC0, 32, ocv_cap);

	/*Init CHGLED function*/
	if (axp2585_config.pmu_chgled_func)
     bf8:	e3530000 	cmp	r3, #0
     bfc:	0a0000b3 	beq	ed0 <axp2585_charger_probe+0x6ac>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:426
		axp_regmap_set_bits(map, 0x90, 0x80); /* control by charger */
     c00:	ebfffffe 	bl	0 <axp_regmap_set_bits>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:436
	if (axp2585_config.pmu_chgled_type)
		axp_regmap_set_bits(map, 0x90, 0x01); /* Type B */
	else
		axp_regmap_clr_bits(map, 0x90, 0x07); /* Type A */
#else
	axp_regmap_set_bits(map, 0x90, axp2585_config.pmu_chgled_type & 0x07);
     c04:	e5942120 	ldr	r2, [r4, #288]	; 0x120
     c08:	e3a01090 	mov	r1, #144	; 0x90
     c0c:	e1a00005 	mov	r0, r5
     c10:	e2022007 	and	r2, r2, #7
     c14:	ebfffffe 	bl	0 <axp_regmap_set_bits>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:439
#endif
	/*Init battery capacity correct function*/
	if (axp2585_config.pmu_batt_cap_correct)
     c18:	e5943044 	ldr	r3, [r4, #68]	; 0x44
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:440
		axp_regmap_set_bits(map, 0xb8, 0x20); /* enable */
     c1c:	e3a02020 	mov	r2, #32
     c20:	e3a010b8 	mov	r1, #184	; 0xb8
     c24:	e1a00005 	mov	r0, r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:439
		axp_regmap_clr_bits(map, 0x90, 0x07); /* Type A */
#else
	axp_regmap_set_bits(map, 0x90, axp2585_config.pmu_chgled_type & 0x07);
#endif
	/*Init battery capacity correct function*/
	if (axp2585_config.pmu_batt_cap_correct)
     c28:	e3530000 	cmp	r3, #0
     c2c:	0a0000ab 	beq	ee0 <axp2585_charger_probe+0x6bc>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:440
		axp_regmap_set_bits(map, 0xb8, 0x20); /* enable */
     c30:	ebfffffe 	bl	0 <axp_regmap_set_bits>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:445
	else
		axp_regmap_clr_bits(map, 0xb8, 0x20); /* disable */

	/*battery detect enable*/
	if (axp2585_config.pmu_batdeten)
     c34:	e5943010 	ldr	r3, [r4, #16]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:446
		axp_regmap_set_bits(map, 0x8e, 0x08);
     c38:	e3a02008 	mov	r2, #8
     c3c:	e3a0108e 	mov	r1, #142	; 0x8e
     c40:	e1a00005 	mov	r0, r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:445
		axp_regmap_set_bits(map, 0xb8, 0x20); /* enable */
	else
		axp_regmap_clr_bits(map, 0xb8, 0x20); /* disable */

	/*battery detect enable*/
	if (axp2585_config.pmu_batdeten)
     c44:	e3530000 	cmp	r3, #0
     c48:	0a0000a2 	beq	ed8 <axp2585_charger_probe+0x6b4>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:446
		axp_regmap_set_bits(map, 0x8e, 0x08);
     c4c:	ebfffffe 	bl	0 <axp_regmap_set_bits>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:451
	else
		axp_regmap_clr_bits(map, 0x8e, 0x08);

	/* RDC initial */
	axp_regmap_read(map, AXP2585_RDC0, &val);
     c50:	e28d2017 	add	r2, sp, #23
     c54:	e3a010ba 	mov	r1, #186	; 0xba
     c58:	e1a00005 	mov	r0, r5
     c5c:	ebfffffe 	bl	0 <axp_regmap_read>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:452
	if ((axp2585_config.pmu_battery_rdc) && (!(val & 0x40))) {
     c60:	e5943008 	ldr	r3, [r4, #8]
     c64:	e3530000 	cmp	r3, #0
     c68:	0a000002 	beq	c78 <axp2585_charger_probe+0x454>
     c6c:	e5dd2017 	ldrb	r2, [sp, #23]
     c70:	e3120040 	tst	r2, #64	; 0x40
     c74:	0a000115 	beq	10d0 <axp2585_charger_probe+0x8ac>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:458
		rdc = (axp2585_config.pmu_battery_rdc * 10000 + 5371) / 10742;
		axp_regmap_write(map, AXP2585_RDC0, ((rdc >> 8) & 0x1F)|0x80);
		axp_regmap_write(map, AXP2585_RDC1, rdc & 0x00FF);
	}

	axp_regmap_read(map, AXP2585_BATCAP0, &val);
     c78:	e28d2017 	add	r2, sp, #23
     c7c:	e3a010e0 	mov	r1, #224	; 0xe0
     c80:	e1a00005 	mov	r0, r5
     c84:	ebfffffe 	bl	0 <axp_regmap_read>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:459
	if ((axp2585_config.pmu_battery_cap) && (!(val & 0x80))) {
     c88:	e594900c 	ldr	r9, [r4, #12]
     c8c:	e3590000 	cmp	r9, #0
     c90:	1a00007a 	bne	e80 <axp2585_charger_probe+0x65c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:467
		axp_regmap_write(map, AXP2585_BATCAP0,
					((cur_coulomb_counter >> 8) | 0x80));
		axp_regmap_write(map, AXP2585_BATCAP1,
					cur_coulomb_counter & 0x00FF);
	} else if (!axp2585_config.pmu_battery_cap) {
		axp_regmap_write(map, AXP2585_BATCAP0, 0x00);
     c94:	e1a02009 	mov	r2, r9
     c98:	e3a010e0 	mov	r1, #224	; 0xe0
     c9c:	e1a00005 	mov	r0, r5
     ca0:	ebfffffe 	bl	0 <axp_regmap_write>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:468
		axp_regmap_write(map, AXP2585_BATCAP1, 0x00);
     ca4:	e1a02009 	mov	r2, r9
     ca8:	e3a010e1 	mov	r1, #225	; 0xe1
     cac:	e1a00005 	mov	r0, r5
     cb0:	ebfffffe 	bl	0 <axp_regmap_write>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:471
	}

	if (axp2585_config.pmu_bat_unused == 1)
     cb4:	e5943140 	ldr	r3, [r4, #320]	; 0x140
     cb8:	e3530001 	cmp	r3, #1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:474
		axp2585_spy_info.batt->det_unused = 1;
	else
		axp2585_spy_info.batt->det_unused = 0;
     cbc:	1597316c 	ldrne	r3, [r7, #364]	; 0x16c
     cc0:	13a02000 	movne	r2, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:472
		axp_regmap_write(map, AXP2585_BATCAP0, 0x00);
		axp_regmap_write(map, AXP2585_BATCAP1, 0x00);
	}

	if (axp2585_config.pmu_bat_unused == 1)
		axp2585_spy_info.batt->det_unused = 1;
     cc4:	0597216c 	ldreq	r2, [r7, #364]	; 0x16c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:474
	else
		axp2585_spy_info.batt->det_unused = 0;
     cc8:	15832028 	strne	r2, [r3, #40]	; 0x28
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:472
		axp_regmap_write(map, AXP2585_BATCAP0, 0x00);
		axp_regmap_write(map, AXP2585_BATCAP1, 0x00);
	}

	if (axp2585_config.pmu_bat_unused == 1)
		axp2585_spy_info.batt->det_unused = 1;
     ccc:	05823028 	streq	r3, [r2, #40]	; 0x28
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:476
	else
		axp2585_spy_info.batt->det_unused = 0;

	if (axp2585_config.pmu_bat_temp_enable != 0) {
     cd0:	e5943150 	ldr	r3, [r4, #336]	; 0x150
     cd4:	e3530000 	cmp	r3, #0
     cd8:	1a000089 	bne	f04 <axp2585_charger_probe+0x6e0>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:487
				axp2585_config.pmu_bat_shutdown_ltf * 10 / 128);
		axp_regmap_write(map, AXP2585_VHTF_WORK,
				axp2585_config.pmu_bat_shutdown_htf * 10 / 128);
	}
	/*enable fast charge */
	axp_regmap_update(map, 0x31, 0x04, 0x04);
     cdc:	e3a03004 	mov	r3, #4
     ce0:	e3a01031 	mov	r1, #49	; 0x31
     ce4:	e1a02003 	mov	r2, r3
     ce8:	e1a00005 	mov	r0, r5
     cec:	ebfffffe 	bl	0 <axp_regmap_update>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:489
	/*set POR time as 16s*/
	axp_regmap_update(map, AXP2585_POK_SET, 0x30, 0x30);
     cf0:	e3a03030 	mov	r3, #48	; 0x30
     cf4:	e3a01015 	mov	r1, #21
     cf8:	e1a02003 	mov	r2, r3
     cfc:	e1a00005 	mov	r0, r5
     d00:	ebfffffe 	bl	0 <axp_regmap_update>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:491
	for (i = 0; i < ARRAY_SIZE(update_min_times); i++) {
		if (update_min_times[i] == axp2585_config.pmu_update_min_time)
     d04:	e594014c 	ldr	r0, [r4, #332]	; 0x14c
     d08:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
     d0c:	e1500003 	cmp	r0, r3
     d10:	128d3028 	addne	r3, sp, #40	; 0x28
     d14:	13a02001 	movne	r2, #1
     d18:	0a000101 	beq	1124 <axp2585_charger_probe+0x900>
     d1c:	e5b31004 	ldr	r1, [r3, #4]!
     d20:	e1510000 	cmp	r1, r0
     d24:	0a0000dc 	beq	109c <axp2585_charger_probe+0x878>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:490
	}
	/*enable fast charge */
	axp_regmap_update(map, 0x31, 0x04, 0x04);
	/*set POR time as 16s*/
	axp_regmap_update(map, AXP2585_POK_SET, 0x30, 0x30);
	for (i = 0; i < ARRAY_SIZE(update_min_times); i++) {
     d28:	e2822001 	add	r2, r2, #1
     d2c:	e3520008 	cmp	r2, #8
     d30:	1afffff9 	bne	d1c <axp2585_charger_probe+0x4f8>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:494
		if (update_min_times[i] == axp2585_config.pmu_update_min_time)
			break;
	}
	axp_regmap_update(map, AXP2585_ADJUST_PARA, i, 0x7);
     d34:	e3a03007 	mov	r3, #7
     d38:	e3a010e8 	mov	r1, #232	; 0xe8
     d3c:	e1a00005 	mov	r0, r5
     d40:	ebfffffe 	bl	0 <axp_regmap_update>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:497
	/*initial the ocv_cou_adjust_time*/
	for (i = 0; i < ARRAY_SIZE(ocv_cou_adjust_time); i++) {
		if (ocv_cou_adjust_time[i] == axp2585_config.pmu_ocv_cou_adjust_time)
     d44:	e5943118 	ldr	r3, [r4, #280]	; 0x118
     d48:	e59d2018 	ldr	r2, [sp, #24]
     d4c:	e1520003 	cmp	r2, r3
     d50:	0a000009 	beq	d7c <axp2585_charger_probe+0x558>
     d54:	e59d201c 	ldr	r2, [sp, #28]
     d58:	e1520003 	cmp	r2, r3
     d5c:	0a0000f8 	beq	1144 <axp2585_charger_probe+0x920>
     d60:	e59d2020 	ldr	r2, [sp, #32]
     d64:	e1520003 	cmp	r2, r3
     d68:	0a0000ea 	beq	1118 <axp2585_charger_probe+0x8f4>
     d6c:	e59d2024 	ldr	r2, [sp, #36]	; 0x24
     d70:	e1520003 	cmp	r2, r3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:496
		if (update_min_times[i] == axp2585_config.pmu_update_min_time)
			break;
	}
	axp_regmap_update(map, AXP2585_ADJUST_PARA, i, 0x7);
	/*initial the ocv_cou_adjust_time*/
	for (i = 0; i < ARRAY_SIZE(ocv_cou_adjust_time); i++) {
     d74:	03a02003 	moveq	r2, #3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:497
		if (ocv_cou_adjust_time[i] == axp2585_config.pmu_ocv_cou_adjust_time)
     d78:	0a0000e7 	beq	111c <axp2585_charger_probe+0x8f8>
     d7c:	e3a02000 	mov	r2, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:501
			break;
	}
	i <<= 6;
	axp_regmap_update(map, AXP2585_ADJUST_PARA1, i, 0xC0);
     d80:	e3a030c0 	mov	r3, #192	; 0xc0
     d84:	e3a010e9 	mov	r1, #233	; 0xe9
     d88:	e1a00005 	mov	r0, r5
     d8c:	ebfffffe 	bl	0 <axp_regmap_update>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:502
	printk("==%s==line:%d==file:%s==\n",__func__,__LINE__,__FILE__);
     d90:	e3003000 	movw	r3, #0
     d94:	e3000000 	movw	r0, #0
     d98:	e3403000 	movt	r3, #0
     d9c:	e30021f6 	movw	r2, #502	; 0x1f6
     da0:	e59f13e4 	ldr	r1, [pc, #996]	; 118c <axp2585_charger_probe+0x968>
     da4:	e3400000 	movt	r0, #0
     da8:	ebfffffe 	bl	0 <printk>
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:662
	battery_data.voltage_min_design = axp2585_config.pmu_pwroff_vol
								* 1000;
	battery_data.energy_full_design = axp2585_config.pmu_battery_cap;

	axp2585_charger_init(axp_dev);
    printk("==%s==line:%d==file:%s==\n",__func__,__LINE__,__FILE__);
     dac:	e3003000 	movw	r3, #0
     db0:	e3000000 	movw	r0, #0
     db4:	e3403000 	movt	r3, #0
     db8:	e3002296 	movw	r2, #662	; 0x296
     dbc:	e59f13cc 	ldr	r1, [pc, #972]	; 1190 <axp2585_charger_probe+0x96c>
     dc0:	e3400000 	movt	r0, #0
     dc4:	ebfffffe 	bl	0 <printk>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:664

	chg_dev = axp_power_supply_register(&pdev->dev, axp_dev,
     dc8:	e59f33c4 	ldr	r3, [pc, #964]	; 1194 <axp2585_charger_probe+0x970>
     dcc:	e2862010 	add	r2, r6, #16
     dd0:	e58d2008 	str	r2, [sp, #8]
     dd4:	e1a00002 	mov	r0, r2
     dd8:	e1a0100b 	mov	r1, fp
     ddc:	e2432024 	sub	r2, r3, #36	; 0x24
     de0:	ebfffffe 	bl	0 <axp_power_supply_register>
IS_ERR_OR_NULL():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/err.h:40
	return IS_ERR_VALUE((unsigned long)ptr);
}

static inline bool __must_check IS_ERR_OR_NULL(__force const void *ptr)
{
	return !ptr || IS_ERR_VALUE((unsigned long)ptr);
     de4:	e2509000 	subs	r9, r0, #0
     de8:	0a0000a8 	beq	1090 <axp2585_charger_probe+0x86c>
     dec:	e3790a01 	cmn	r9, #4096	; 0x1000
     df0:	8a0000a6 	bhi	1090 <axp2585_charger_probe+0x86c>
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:670
					&battery_data, &axp2585_spy_info);
	if (IS_ERR_OR_NULL(chg_dev))
		goto fail;
	chg_dev->private_debug = axp2585_private_debug;
	chg_dev->pmic_temp_offset = 0x56;
	chg_dev->spy_info->batt->bat_temp_offset = 0x58;
     df4:	e5990010 	ldr	r0, [r9, #16]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:668

	chg_dev = axp_power_supply_register(&pdev->dev, axp_dev,
					&battery_data, &axp2585_spy_info);
	if (IS_ERR_OR_NULL(chg_dev))
		goto fail;
	chg_dev->private_debug = axp2585_private_debug;
     df8:	e3003000 	movw	r3, #0
     dfc:	e3403000 	movt	r3, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:669
	chg_dev->pmic_temp_offset = 0x56;
     e00:	e3a01056 	mov	r1, #86	; 0x56
     e04:	e58910e0 	str	r1, [r9, #224]	; 0xe0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:670
	chg_dev->spy_info->batt->bat_temp_offset = 0x58;
     e08:	e3a02058 	mov	r2, #88	; 0x58
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:668

	chg_dev = axp_power_supply_register(&pdev->dev, axp_dev,
					&battery_data, &axp2585_spy_info);
	if (IS_ERR_OR_NULL(chg_dev))
		goto fail;
	chg_dev->private_debug = axp2585_private_debug;
     e0c:	e58930f0 	str	r3, [r9, #240]	; 0xf0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:670
	chg_dev->pmic_temp_offset = 0x56;
	chg_dev->spy_info->batt->bat_temp_offset = 0x58;
     e10:	e3001000 	movw	r1, #0
     e14:	e5903008 	ldr	r3, [r0, #8]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:676

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
		if (irq < 0)
			continue;
       printk("[axp2585]i=%d ,irq=%d in line:%d of %s\n",i,irq,__LINE__,__func__);
     e18:	e3000000 	movw	r0, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:699
           {
            printk("[axp2585]axp_dev->int irq in line:%d of %d is %s NOT NULL\n",__LINE__,axp_dev->irq,__func__ );
           }
           else
             {
               printk("[axp2585]axp_dev->irq in line:%d of %s is  NULL\n",__LINE__,__func__ );
     e1c:	e300a000 	movw	sl, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:676

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
		if (irq < 0)
			continue;
       printk("[axp2585]i=%d ,irq=%d in line:%d of %s\n",i,irq,__LINE__,__func__);
     e20:	e3400000 	movt	r0, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:670
					&battery_data, &axp2585_spy_info);
	if (IS_ERR_OR_NULL(chg_dev))
		goto fail;
	chg_dev->private_debug = axp2585_private_debug;
	chg_dev->pmic_temp_offset = 0x56;
	chg_dev->spy_info->batt->bat_temp_offset = 0x58;
     e24:	e3401000 	movt	r1, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:676

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
		if (irq < 0)
			continue;
       printk("[axp2585]i=%d ,irq=%d in line:%d of %s\n",i,irq,__LINE__,__func__);
     e28:	e58d000c 	str	r0, [sp, #12]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:670
					&battery_data, &axp2585_spy_info);
	if (IS_ERR_OR_NULL(chg_dev))
		goto fail;
	chg_dev->private_debug = axp2585_private_debug;
	chg_dev->pmic_temp_offset = 0x56;
	chg_dev->spy_info->batt->bat_temp_offset = 0x58;
     e2c:	e5832014 	str	r2, [r3, #20]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:699
           {
            printk("[axp2585]axp_dev->int irq in line:%d of %d is %s NOT NULL\n",__LINE__,axp_dev->irq,__func__ );
           }
           else
             {
               printk("[axp2585]axp_dev->irq in line:%d of %s is  NULL\n",__LINE__,__func__ );
     e30:	e340a000 	movt	sl, #0
     e34:	e59f535c 	ldr	r5, [pc, #860]	; 1198 <axp2585_charger_probe+0x974>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:670
					&battery_data, &axp2585_spy_info);
	if (IS_ERR_OR_NULL(chg_dev))
		goto fail;
	chg_dev->private_debug = axp2585_private_debug;
	chg_dev->pmic_temp_offset = 0x56;
	chg_dev->spy_info->batt->bat_temp_offset = 0x58;
     e38:	e3a04000 	mov	r4, #0
     e3c:	ea000000 	b	e44 <axp2585_charger_probe+0x620>
     e40:	e5b51008 	ldr	r1, [r5, #8]!
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:673

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
     e44:	e1a00006 	mov	r0, r6
     e48:	ebfffffe 	bl	0 <platform_get_irq_byname>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:674
		if (irq < 0)
     e4c:	e2507000 	subs	r7, r0, #0
     e50:	aa00004b 	bge	f84 <axp2585_charger_probe+0x760>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:672
		goto fail;
	chg_dev->private_debug = axp2585_private_debug;
	chg_dev->pmic_temp_offset = 0x56;
	chg_dev->spy_info->batt->bat_temp_offset = 0x58;

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
     e54:	e2844001 	add	r4, r4, #1
     e58:	e3540008 	cmp	r4, #8
     e5c:	1afffff7 	bne	e40 <axp2585_charger_probe+0x61c>
dev_set_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:903
}

static inline void dev_set_drvdata(struct device *dev, void *data)
{
	dev->driver_data = data;
     e60:	e586905c 	str	r9, [r6, #92]	; 0x5c
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:716
			axp2585_charger_irq[i].name, irq, ret);
	}
	}

	platform_set_drvdata(pdev, chg_dev);
	ret = sysfs_create_group(&pdev->dev.kobj, &bmu_control_attr_group);
     e64:	e2860018 	add	r0, r6, #24
     e68:	e59f132c 	ldr	r1, [pc, #812]	; 119c <axp2585_charger_probe+0x978>
     e6c:	ebfffffe 	bl	0 <sysfs_create_group>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:717
	if (ret)
     e70:	e3500000 	cmp	r0, #0
     e74:	1a00003b 	bne	f68 <axp2585_charger_probe+0x744>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:731
			continue;
		axp_free_irq(axp_dev, irq);
	}
fail:
	return -1;
}
     e78:	e28dd06c 	add	sp, sp, #108	; 0x6c
     e7c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
axp2585_charger_init():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:459
		axp_regmap_write(map, AXP2585_RDC0, ((rdc >> 8) & 0x1F)|0x80);
		axp_regmap_write(map, AXP2585_RDC1, rdc & 0x00FF);
	}

	axp_regmap_read(map, AXP2585_BATCAP0, &val);
	if ((axp2585_config.pmu_battery_cap) && (!(val & 0x80))) {
     e80:	e1dd31d7 	ldrsb	r3, [sp, #23]
     e84:	e3530000 	cmp	r3, #0
     e88:	baffff89 	blt	cb4 <axp2585_charger_probe+0x490>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:461
		cur_coulomb_counter = axp2585_config.pmu_battery_cap
					* 1000 / 1456;
     e8c:	e3a02ffa 	mov	r2, #1000	; 0x3e8
     e90:	e3063817 	movw	r3, #26647	; 0x6817
     e94:	e0020992 	mul	r2, r2, r9
     e98:	e3413681 	movt	r3, #5761	; 0x1681
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:462
		axp_regmap_write(map, AXP2585_BATCAP0,
     e9c:	e3a010e0 	mov	r1, #224	; 0xe0
     ea0:	e1a00005 	mov	r0, r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:461
	}

	axp_regmap_read(map, AXP2585_BATCAP0, &val);
	if ((axp2585_config.pmu_battery_cap) && (!(val & 0x80))) {
		cur_coulomb_counter = axp2585_config.pmu_battery_cap
					* 1000 / 1456;
     ea4:	e1a02222 	lsr	r2, r2, #4
     ea8:	e0832392 	umull	r2, r3, r2, r3
     eac:	e1a091a3 	lsr	r9, r3, #3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:462
		axp_regmap_write(map, AXP2585_BATCAP0,
     eb0:	e7e62459 	ubfx	r2, r9, #8, #7
     eb4:	e3822080 	orr	r2, r2, #128	; 0x80
     eb8:	ebfffffe 	bl	0 <axp_regmap_write>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:464
					((cur_coulomb_counter >> 8) | 0x80));
		axp_regmap_write(map, AXP2585_BATCAP1,
     ebc:	e6ef2079 	uxtb	r2, r9
     ec0:	e3a010e1 	mov	r1, #225	; 0xe1
     ec4:	e1a00005 	mov	r0, r5
     ec8:	ebfffffe 	bl	0 <axp_regmap_write>
     ecc:	eaffff78 	b	cb4 <axp2585_charger_probe+0x490>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:428

	/*Init CHGLED function*/
	if (axp2585_config.pmu_chgled_func)
		axp_regmap_set_bits(map, 0x90, 0x80); /* control by charger */
	else
		axp_regmap_clr_bits(map, 0x90, 0x80); /* drive MOTO */
     ed0:	ebfffffe 	bl	0 <axp_regmap_clr_bits>
     ed4:	eaffff4a 	b	c04 <axp2585_charger_probe+0x3e0>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:448

	/*battery detect enable*/
	if (axp2585_config.pmu_batdeten)
		axp_regmap_set_bits(map, 0x8e, 0x08);
	else
		axp_regmap_clr_bits(map, 0x8e, 0x08);
     ed8:	ebfffffe 	bl	0 <axp_regmap_clr_bits>
     edc:	eaffff5b 	b	c50 <axp2585_charger_probe+0x42c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:442
#endif
	/*Init battery capacity correct function*/
	if (axp2585_config.pmu_batt_cap_correct)
		axp_regmap_set_bits(map, 0xb8, 0x20); /* enable */
	else
		axp_regmap_clr_bits(map, 0xb8, 0x20); /* disable */
     ee0:	ebfffffe 	bl	0 <axp_regmap_clr_bits>
     ee4:	eaffff52 	b	c34 <axp2585_charger_probe+0x410>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:383
		((axp2585_config.pmu_battery_warning_level1 - 5) << 4)
		+ axp2585_config.pmu_battery_warning_level2);

	if (axp2585_config.pmu_init_chgvol < 3840)
		axp2585_config.pmu_init_chgvol = 3840;
	val = (axp2585_config.pmu_init_chgvol - 3840)/16;
     ee8:	e2433c0f 	sub	r3, r3, #3840	; 0xf00
     eec:	e7e73253 	ubfx	r3, r3, #4, #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:384
	if (val > 0x30)
     ef0:	e3530030 	cmp	r3, #48	; 0x30
     ef4:	91a03103 	lslls	r3, r3, #2
     ef8:	83a0c0c0 	movhi	ip, #192	; 0xc0
     efc:	96efc073 	uxtbls	ip, r3
     f00:	eafffee7 	b	aa4 <axp2585_charger_probe+0x280>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:477
		axp2585_spy_info.batt->det_unused = 1;
	else
		axp2585_spy_info.batt->det_unused = 0;

	if (axp2585_config.pmu_bat_temp_enable != 0) {
		axp_regmap_write(map, AXP2585_VLTF_CHARGE,
     f04:	e5942154 	ldr	r2, [r4, #340]	; 0x154
     f08:	e3a01084 	mov	r1, #132	; 0x84
     f0c:	e1a00005 	mov	r0, r5
     f10:	e0822102 	add	r2, r2, r2, lsl #2
     f14:	e7e72352 	ubfx	r2, r2, #6, #8
     f18:	ebfffffe 	bl	0 <axp_regmap_write>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:479
				axp2585_config.pmu_bat_charge_ltf * 10 / 128);
		axp_regmap_write(map, AXP2585_VHTF_CHARGE,
     f1c:	e5942158 	ldr	r2, [r4, #344]	; 0x158
     f20:	e3a01085 	mov	r1, #133	; 0x85
     f24:	e1a00005 	mov	r0, r5
     f28:	e0822102 	add	r2, r2, r2, lsl #2
     f2c:	e7e72352 	ubfx	r2, r2, #6, #8
     f30:	ebfffffe 	bl	0 <axp_regmap_write>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:481
				axp2585_config.pmu_bat_charge_htf * 10 / 128);
		axp_regmap_write(map, AXP2585_VLTF_WORK,
     f34:	e594215c 	ldr	r2, [r4, #348]	; 0x15c
     f38:	e3a01086 	mov	r1, #134	; 0x86
     f3c:	e1a00005 	mov	r0, r5
     f40:	e0822102 	add	r2, r2, r2, lsl #2
     f44:	e7e72352 	ubfx	r2, r2, #6, #8
     f48:	ebfffffe 	bl	0 <axp_regmap_write>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:483
				axp2585_config.pmu_bat_shutdown_ltf * 10 / 128);
		axp_regmap_write(map, AXP2585_VHTF_WORK,
     f4c:	e5942160 	ldr	r2, [r4, #352]	; 0x160
     f50:	e3a01087 	mov	r1, #135	; 0x87
     f54:	e1a00005 	mov	r0, r5
     f58:	e0822102 	add	r2, r2, r2, lsl #2
     f5c:	e7e72352 	ubfx	r2, r2, #6, #8
     f60:	ebfffffe 	bl	0 <axp_regmap_write>
     f64:	eaffff5c 	b	cdc <axp2585_charger_probe+0x4b8>
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:718
	}

	platform_set_drvdata(pdev, chg_dev);
	ret = sysfs_create_group(&pdev->dev.kobj, &bmu_control_attr_group);
	if (ret)
		dev_warn(&pdev->dev, "failed to create attr group\n");
     f68:	e3001000 	movw	r1, #0
     f6c:	e59d0008 	ldr	r0, [sp, #8]
     f70:	e3401000 	movt	r1, #0
     f74:	ebfffffe 	bl	0 <dev_warn>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:720

	return 0;
     f78:	e3a00000 	mov	r0, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:731
			continue;
		axp_free_irq(axp_dev, irq);
	}
fail:
	return -1;
}
     f7c:	e28dd06c 	add	sp, sp, #108	; 0x6c
     f80:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:676

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
		if (irq < 0)
			continue;
       printk("[axp2585]i=%d ,irq=%d in line:%d of %s\n",i,irq,__LINE__,__func__);
     f84:	e59f3204 	ldr	r3, [pc, #516]	; 1190 <axp2585_charger_probe+0x96c>
     f88:	e1a02007 	mov	r2, r7
     f8c:	e1a01004 	mov	r1, r4
     f90:	e59d000c 	ldr	r0, [sp, #12]
     f94:	e58d3000 	str	r3, [sp]
     f98:	e3a03fa9 	mov	r3, #676	; 0x2a4
     f9c:	ebfffffe 	bl	0 <printk>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:679


      if(axp_dev->irq_data!=NULL)
     fa0:	e59b3010 	ldr	r3, [fp, #16]
     fa4:	e3530000 	cmp	r3, #0
     fa8:	0a00006c 	beq	1160 <axp2585_charger_probe+0x93c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:681
      {
       printk("[axp2585]axp_dev->irq_data in line:%d of %s is NOT NULL\n",__LINE__,__func__ );
     fac:	e3000000 	movw	r0, #0
     fb0:	e59f21d8 	ldr	r2, [pc, #472]	; 1190 <axp2585_charger_probe+0x96c>
     fb4:	e30012a9 	movw	r1, #681	; 0x2a9
     fb8:	e3400000 	movt	r0, #0
     fbc:	ebfffffe 	bl	0 <printk>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:682
         if(axp_dev->irq_data->irqs!=NULL)
     fc0:	e59b3010 	ldr	r3, [fp, #16]
     fc4:	e5933014 	ldr	r3, [r3, #20]
     fc8:	e3530000 	cmp	r3, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:684
           {
             printk("[axp2585]axp_dev->irq_data->irqs in line:%d of %s is NOT NULL\n",__LINE__,__func__ );
     fcc:	13000000 	movwne	r0, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:687
           }
             else{
             printk("[axp2585]axp_dev->irq_data->irqs in line:%d of %s is  NULL\n",__LINE__,__func__ );
     fd0:	03000000 	movweq	r0, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:684
      if(axp_dev->irq_data!=NULL)
      {
       printk("[axp2585]axp_dev->irq_data in line:%d of %s is NOT NULL\n",__LINE__,__func__ );
         if(axp_dev->irq_data->irqs!=NULL)
           {
             printk("[axp2585]axp_dev->irq_data->irqs in line:%d of %s is NOT NULL\n",__LINE__,__func__ );
     fd4:	159f21b4 	ldrne	r2, [pc, #436]	; 1190 <axp2585_charger_probe+0x96c>
     fd8:	13400000 	movtne	r0, #0
     fdc:	13a01fab 	movne	r1, #684	; 0x2ac
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:687
           }
             else{
             printk("[axp2585]axp_dev->irq_data->irqs in line:%d of %s is  NULL\n",__LINE__,__func__ );
     fe0:	059f21a8 	ldreq	r2, [pc, #424]	; 1190 <axp2585_charger_probe+0x96c>
     fe4:	03400000 	movteq	r0, #0
     fe8:	030012af 	movweq	r1, #687	; 0x2af
     fec:	ebfffffe 	bl	0 <printk>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:693
            }
      }
      else
          printk("[axp2585]axp_dev->irq_data in line:%d of %s is  NULL\n",__LINE__,__func__ );

      if(axp_dev->irq!=NULL)
     ff0:	e59b2014 	ldr	r2, [fp, #20]
     ff4:	e3520000 	cmp	r2, #0
     ff8:	0a000053 	beq	114c <axp2585_charger_probe+0x928>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:695
           {
            printk("[axp2585]axp_dev->int irq in line:%d of %d is %s NOT NULL\n",__LINE__,axp_dev->irq,__func__ );
     ffc:	e3000000 	movw	r0, #0
    1000:	e59f3188 	ldr	r3, [pc, #392]	; 1190 <axp2585_charger_probe+0x96c>
    1004:	e3400000 	movt	r0, #0
    1008:	e30012b7 	movw	r1, #695	; 0x2b7
    100c:	ebfffffe 	bl	0 <printk>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:701
           }
           else
             {
               printk("[axp2585]axp_dev->irq in line:%d of %s is  NULL\n",__LINE__,__func__ );
             }
      if(axp_dev->irq_data!=NULL){
    1010:	e59b3010 	ldr	r3, [fp, #16]
    1014:	e3530000 	cmp	r3, #0
    1018:	0affff8d 	beq	e54 <axp2585_charger_probe+0x630>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:702
		ret = axp_request_irq(axp_dev, irq,
    101c:	e1a03009 	mov	r3, r9
    1020:	e5952004 	ldr	r2, [r5, #4]
    1024:	e1a01007 	mov	r1, r7
    1028:	e1a0000b 	mov	r0, fp
    102c:	ebfffffe 	bl	0 <axp_request_irq>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:704
				axp2585_charger_irq[i].isr, chg_dev);
		if (ret != 0) {
    1030:	e3500000 	cmp	r0, #0
    1034:	0affff86 	beq	e54 <axp2585_charger_probe+0x630>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:705
			dev_err(&pdev->dev, "failed to request %s IRQ %d: %d\n",
    1038:	e0888184 	add	r8, r8, r4, lsl #3
    103c:	e3001000 	movw	r1, #0
    1040:	e58d0000 	str	r0, [sp]
    1044:	e1a03007 	mov	r3, r7
    1048:	e598201c 	ldr	r2, [r8, #28]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:723
		dev_warn(&pdev->dev, "failed to create attr group\n");

	return 0;
    printk("[axp2585]Quit %s\n",__func__);
out_irq:
	for (i = i - 1; i >= 0; i--) {
    104c:	e2444001 	sub	r4, r4, #1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:705
             }
      if(axp_dev->irq_data!=NULL){
		ret = axp_request_irq(axp_dev, irq,
				axp2585_charger_irq[i].isr, chg_dev);
		if (ret != 0) {
			dev_err(&pdev->dev, "failed to request %s IRQ %d: %d\n",
    1050:	e59d0008 	ldr	r0, [sp, #8]
    1054:	e3401000 	movt	r1, #0
    1058:	ebfffffe 	bl	0 <dev_err>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:723
		dev_warn(&pdev->dev, "failed to create attr group\n");

	return 0;
    printk("[axp2585]Quit %s\n",__func__);
out_irq:
	for (i = i - 1; i >= 0; i--) {
    105c:	e3740001 	cmn	r4, #1
    1060:	0a00000a 	beq	1090 <axp2585_charger_probe+0x86c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:724
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
    1064:	e59f312c 	ldr	r3, [pc, #300]	; 1198 <axp2585_charger_probe+0x974>
    1068:	e1a00006 	mov	r0, r6
    106c:	e7931184 	ldr	r1, [r3, r4, lsl #3]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:723
		dev_warn(&pdev->dev, "failed to create attr group\n");

	return 0;
    printk("[axp2585]Quit %s\n",__func__);
out_irq:
	for (i = i - 1; i >= 0; i--) {
    1070:	e2444001 	sub	r4, r4, #1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:724
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
    1074:	ebfffffe 	bl	0 <platform_get_irq_byname>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:725
		if (irq < 0)
    1078:	e2501000 	subs	r1, r0, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:727
			continue;
		axp_free_irq(axp_dev, irq);
    107c:	e1a0000b 	mov	r0, fp
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:725
	return 0;
    printk("[axp2585]Quit %s\n",__func__);
out_irq:
	for (i = i - 1; i >= 0; i--) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
		if (irq < 0)
    1080:	ba000000 	blt	1088 <axp2585_charger_probe+0x864>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:727
			continue;
		axp_free_irq(axp_dev, irq);
    1084:	ebfffffe 	bl	0 <axp_free_irq>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:723 (discriminator 2)
		dev_warn(&pdev->dev, "failed to create attr group\n");

	return 0;
    printk("[axp2585]Quit %s\n",__func__);
out_irq:
	for (i = i - 1; i >= 0; i--) {
    1088:	e3740001 	cmn	r4, #1
    108c:	1afffff4 	bne	1064 <axp2585_charger_probe+0x840>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:730
		if (irq < 0)
			continue;
		axp_free_irq(axp_dev, irq);
	}
fail:
	return -1;
    1090:	e3e00000 	mvn	r0, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:731
}
    1094:	e28dd06c 	add	sp, sp, #108	; 0x6c
    1098:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    109c:	e6ef2072 	uxtb	r2, r2
    10a0:	eaffff23 	b	d34 <axp2585_charger_probe+0x510>
axp2585_charger_init():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:363
		val &= ~(3 << 5);
		val |= 1 << 5;
		break;
	case 4:
		val &= ~(3 << 5);
		val |= 2 << 5;
    10a4:	e3c22060 	bic	r2, r2, #96	; 0x60
    10a8:	e3822040 	orr	r2, r2, #64	; 0x40
    10ac:	e5cd2017 	strb	r2, [sp, #23]
    10b0:	eafffe66 	b	a50 <axp2585_charger_probe+0x22c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:359
	case 1:
		val &= ~(3 << 5);
		break;
	case 2:
		val &= ~(3 << 5);
		val |= 1 << 5;
    10b4:	e3c22060 	bic	r2, r2, #96	; 0x60
    10b8:	e3822020 	orr	r2, r2, #32
    10bc:	e5cd2017 	strb	r2, [sp, #23]
    10c0:	eafffe62 	b	a50 <axp2585_charger_probe+0x22c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:355
						| AXP2585_ADC_TSVOL_ENABLE);

	axp_regmap_read(map, AXP2585_TS_PIN_CONTROL, &val);
	switch (axp2585_config.pmu_init_adc_freq / 100) {
	case 1:
		val &= ~(3 << 5);
    10c4:	e202209f 	and	r2, r2, #159	; 0x9f
    10c8:	e5cd2017 	strb	r2, [sp, #23]
    10cc:	eafffe5f 	b	a50 <axp2585_charger_probe+0x22c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:453
		axp_regmap_clr_bits(map, 0x8e, 0x08);

	/* RDC initial */
	axp_regmap_read(map, AXP2585_RDC0, &val);
	if ((axp2585_config.pmu_battery_rdc) && (!(val & 0x40))) {
		rdc = (axp2585_config.pmu_battery_rdc * 10000 + 5371) / 10742;
    10d0:	e3021710 	movw	r1, #10000	; 0x2710
    10d4:	e30124fb 	movw	r2, #5371	; 0x14fb
    10d8:	e0222391 	mla	r2, r1, r3, r2
    10dc:	e30a3c73 	movw	r3, #44147	; 0xac73
    10e0:	e34c333a 	movt	r3, #49978	; 0xc33a
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:454
		axp_regmap_write(map, AXP2585_RDC0, ((rdc >> 8) & 0x1F)|0x80);
    10e4:	e3a010ba 	mov	r1, #186	; 0xba
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:453
		axp_regmap_clr_bits(map, 0x8e, 0x08);

	/* RDC initial */
	axp_regmap_read(map, AXP2585_RDC0, &val);
	if ((axp2585_config.pmu_battery_rdc) && (!(val & 0x40))) {
		rdc = (axp2585_config.pmu_battery_rdc * 10000 + 5371) / 10742;
    10e8:	e1a020a2 	lsr	r2, r2, #1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:454
		axp_regmap_write(map, AXP2585_RDC0, ((rdc >> 8) & 0x1F)|0x80);
    10ec:	e1a00005 	mov	r0, r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:453
		axp_regmap_clr_bits(map, 0x8e, 0x08);

	/* RDC initial */
	axp_regmap_read(map, AXP2585_RDC0, &val);
	if ((axp2585_config.pmu_battery_rdc) && (!(val & 0x40))) {
		rdc = (axp2585_config.pmu_battery_rdc * 10000 + 5371) / 10742;
    10f0:	e0832392 	umull	r2, r3, r2, r3
    10f4:	e1a09623 	lsr	r9, r3, #12
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:454
		axp_regmap_write(map, AXP2585_RDC0, ((rdc >> 8) & 0x1F)|0x80);
    10f8:	e7e42459 	ubfx	r2, r9, #8, #5
    10fc:	e3822080 	orr	r2, r2, #128	; 0x80
    1100:	ebfffffe 	bl	0 <axp_regmap_write>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:455
		axp_regmap_write(map, AXP2585_RDC1, rdc & 0x00FF);
    1104:	e6ef2079 	uxtb	r2, r9
    1108:	e3a010bb 	mov	r1, #187	; 0xbb
    110c:	e1a00005 	mov	r0, r5
    1110:	ebfffffe 	bl	0 <axp_regmap_write>
    1114:	eafffed7 	b	c78 <axp2585_charger_probe+0x454>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:496
		if (update_min_times[i] == axp2585_config.pmu_update_min_time)
			break;
	}
	axp_regmap_update(map, AXP2585_ADJUST_PARA, i, 0x7);
	/*initial the ocv_cou_adjust_time*/
	for (i = 0; i < ARRAY_SIZE(ocv_cou_adjust_time); i++) {
    1118:	e3a02002 	mov	r2, #2
    111c:	e1a02302 	lsl	r2, r2, #6
    1120:	eaffff16 	b	d80 <axp2585_charger_probe+0x55c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:491
	/*enable fast charge */
	axp_regmap_update(map, 0x31, 0x04, 0x04);
	/*set POR time as 16s*/
	axp_regmap_update(map, AXP2585_POK_SET, 0x30, 0x30);
	for (i = 0; i < ARRAY_SIZE(update_min_times); i++) {
		if (update_min_times[i] == axp2585_config.pmu_update_min_time)
    1124:	e3a02000 	mov	r2, #0
    1128:	eaffff01 	b	d34 <axp2585_charger_probe+0x510>
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:638

	if (pdev->dev.of_node) {
		/* get dt and sysconfig */
		ret = axp_charger_dt_parse(pdev->dev.of_node, &axp2585_config);
		if (ret) {
			pr_err("%s parse device tree err\n", __func__);
    112c:	e3000000 	movw	r0, #0
    1130:	e288105c 	add	r1, r8, #92	; 0x5c
    1134:	e3400000 	movt	r0, #0
    1138:	ebfffffe 	bl	0 <printk>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:639
			return -EINVAL;
    113c:	e3e00015 	mvn	r0, #21
    1140:	eaffff4c 	b	e78 <axp2585_charger_probe+0x654>
axp2585_charger_init():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:497
			break;
	}
	axp_regmap_update(map, AXP2585_ADJUST_PARA, i, 0x7);
	/*initial the ocv_cou_adjust_time*/
	for (i = 0; i < ARRAY_SIZE(ocv_cou_adjust_time); i++) {
		if (ocv_cou_adjust_time[i] == axp2585_config.pmu_ocv_cou_adjust_time)
    1144:	e3a02001 	mov	r2, #1
    1148:	eafffff3 	b	111c <axp2585_charger_probe+0x8f8>
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:699
           {
            printk("[axp2585]axp_dev->int irq in line:%d of %d is %s NOT NULL\n",__LINE__,axp_dev->irq,__func__ );
           }
           else
             {
               printk("[axp2585]axp_dev->irq in line:%d of %s is  NULL\n",__LINE__,__func__ );
    114c:	e59f203c 	ldr	r2, [pc, #60]	; 1190 <axp2585_charger_probe+0x96c>
    1150:	e30012bb 	movw	r1, #699	; 0x2bb
    1154:	e1a0000a 	mov	r0, sl
    1158:	ebfffffe 	bl	0 <printk>
    115c:	eaffffab 	b	1010 <axp2585_charger_probe+0x7ec>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:691
             else{
             printk("[axp2585]axp_dev->irq_data->irqs in line:%d of %s is  NULL\n",__LINE__,__func__ );
            }
      }
      else
          printk("[axp2585]axp_dev->irq_data in line:%d of %s is  NULL\n",__LINE__,__func__ );
    1160:	e3000000 	movw	r0, #0
    1164:	e59f2024 	ldr	r2, [pc, #36]	; 1190 <axp2585_charger_probe+0x96c>
    1168:	e30012b3 	movw	r1, #691	; 0x2b3
    116c:	e3400000 	movt	r0, #0
    1170:	ebfffffe 	bl	0 <printk>
    1174:	eaffff9d 	b	ff0 <axp2585_charger_probe+0x7cc>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:642
		if (ret) {
			pr_err("%s parse device tree err\n", __func__);
			return -EINVAL;
		}
	} else {
		pr_err("axp2585 charger device tree err!\n");
    1178:	e3000000 	movw	r0, #0
    117c:	e3400000 	movt	r0, #0
    1180:	ebfffffe 	bl	0 <printk>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:643
		return -EBUSY;
    1184:	e3e0000f 	mvn	r0, #15
    1188:	eaffff3a 	b	e78 <axp2585_charger_probe+0x654>
    118c:	000000a4 	andeq	r0, r0, r4, lsr #1
    1190:	0000005c 	andeq	r0, r0, ip, asr r0
    1194:	00000164 	andeq	r0, r0, r4, ror #2
    1198:	0000001c 	andeq	r0, r0, ip, lsl r0
    119c:	00000170 	andeq	r0, r0, r0, ror r1

000011a0 <axp2585_set_usb_ihold>:
axp2585_set_usb_ihold():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:104
static int axp2585_set_usb_ihold(struct axp_charger_dev *cdev, int cur)
{
	u8 tmp;
	struct axp_regmap *map = cdev->chip->regmap;

	if (cur) {
    11a0:	e3510000 	cmp	r1, #0
    11a4:	0a000011 	beq	11f0 <axp2585_set_usb_ihold+0x50>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:100
	axp_regmap_read(map, 0x11, &tmp);
	return (tmp*80 + 3880);
}

static int axp2585_set_usb_ihold(struct axp_charger_dev *cdev, int cur)
{
    11a8:	e92d4070 	push	{r4, r5, r6, lr}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:106
	u8 tmp;
	struct axp_regmap *map = cdev->chip->regmap;

	if (cur) {
		/*axp_regmap_set_bits(map, 0xff,0x60);*/
		if (cur >= 100 && cur <= 3250) {
    11ac:	e3003c4e 	movw	r3, #3150	; 0xc4e
    11b0:	e2414064 	sub	r4, r1, #100	; 0x64
    11b4:	e1540003 	cmp	r4, r3
    11b8:	8a00000e 	bhi	11f8 <axp2585_set_usb_ihold+0x58>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:108
			tmp = (cur - 100)/50;
			axp_regmap_update(map, 0x10, tmp, 0x3f);
    11bc:	e308151f 	movw	r1, #34079	; 0x851f
    11c0:	e1a02fc4 	asr	r2, r4, #31
    11c4:	e34511eb 	movt	r1, #20971	; 0x51eb
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:102
}

static int axp2585_set_usb_ihold(struct axp_charger_dev *cdev, int cur)
{
	u8 tmp;
	struct axp_regmap *map = cdev->chip->regmap;
    11c8:	e5900018 	ldr	r0, [r0, #24]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:108

	if (cur) {
		/*axp_regmap_set_bits(map, 0xff,0x60);*/
		if (cur >= 100 && cur <= 3250) {
			tmp = (cur - 100)/50;
			axp_regmap_update(map, 0x10, tmp, 0x3f);
    11cc:	e0c54194 	smull	r4, r5, r4, r1
    11d0:	e3a0303f 	mov	r3, #63	; 0x3f
    11d4:	e3a01010 	mov	r1, #16
    11d8:	e5900004 	ldr	r0, [r0, #4]
    11dc:	e0622245 	rsb	r2, r2, r5, asr #4
    11e0:	e6ef2072 	uxtb	r2, r2
    11e4:	ebfffffe 	bl	0 <axp_regmap_update>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:117
		}
	} else {
		/*axp_regmap_clr_bits(map, 0xff,0x60);*/
	}
	return 0;
}
    11e8:	e3a00000 	mov	r0, #0
    11ec:	e8bd8070 	pop	{r4, r5, r6, pc}
    11f0:	e3a00000 	mov	r0, #0
    11f4:	e12fff1e 	bx	lr
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:81
		/*axp_regmap_set_bits(map, 0xff,0x60);*/
		if (vol >= 3880 && vol <= 5080) {
			tmp = (vol - 3880)/80;
			axp_regmap_update(map, 0x11, tmp, 0x0f);
		} else {
			pr_err("set usb limit voltage error, %d mV\n",
    11f8:	e3003000 	movw	r3, #0
    11fc:	e3000000 	movw	r0, #0
    1200:	e3403000 	movt	r3, #0
    1204:	e3400000 	movt	r0, #0
    1208:	e59310d8 	ldr	r1, [r3, #216]	; 0xd8
    120c:	ebfffffe 	bl	0 <printk>
    1210:	eafffff4 	b	11e8 <axp2585_set_usb_ihold+0x48>

00001214 <axp2585_set_ac_vhold>:
axp2585_set_ac_vhold():
    1214:	e3a00000 	mov	r0, #0
    1218:	e12fff1e 	bx	lr

0000121c <axp2585_get_ac_vhold>:
axp2585_get_ac_vhold():
    121c:	e3a00000 	mov	r0, #0
    1220:	e12fff1e 	bx	lr

00001224 <axp2585_get_ac_ihold>:
axp2585_get_ac_ihold():
    1224:	e3a00000 	mov	r0, #0
    1228:	e12fff1e 	bx	lr

0000122c <axp2585_get_usb_voltage>:
axp2585_get_usb_voltage():
    122c:	e3a00000 	mov	r0, #0
    1230:	e12fff1e 	bx	lr

00001234 <axp2585_get_ac_voltage>:
axp2585_get_ac_voltage():
    1234:	e3a00000 	mov	r0, #0
    1238:	e12fff1e 	bx	lr

0000123c <axp2585_get_ac_current>:
axp2585_get_ac_current():
    123c:	e3a00000 	mov	r0, #0
    1240:	e12fff1e 	bx	lr

00001244 <axp2585_set_usb_vhold>:
axp2585_set_usb_vhold():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:75
static int axp2585_set_usb_vhold(struct axp_charger_dev *cdev, int vol)
{
	u8 tmp;
	struct axp_regmap *map = cdev->chip->regmap;

	if (vol) {
    1244:	e3510000 	cmp	r1, #0
    1248:	0a000011 	beq	1294 <axp2585_set_usb_vhold+0x50>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:71
{
	return 0;
}

static int axp2585_set_usb_vhold(struct axp_charger_dev *cdev, int vol)
{
    124c:	e92d4070 	push	{r4, r5, r6, lr}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:77
	u8 tmp;
	struct axp_regmap *map = cdev->chip->regmap;

	if (vol) {
		/*axp_regmap_set_bits(map, 0xff,0x60);*/
		if (vol >= 3880 && vol <= 5080) {
    1250:	e2414ef2 	sub	r4, r1, #3872	; 0xf20
    1254:	e2444008 	sub	r4, r4, #8
    1258:	e3540e4b 	cmp	r4, #1200	; 0x4b0
    125c:	8a00000e 	bhi	129c <axp2585_set_usb_vhold+0x58>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:79
			tmp = (vol - 3880)/80;
			axp_regmap_update(map, 0x11, tmp, 0x0f);
    1260:	e3061667 	movw	r1, #26215	; 0x6667
    1264:	e1a02fc4 	asr	r2, r4, #31
    1268:	e3461666 	movt	r1, #26214	; 0x6666
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:73
}

static int axp2585_set_usb_vhold(struct axp_charger_dev *cdev, int vol)
{
	u8 tmp;
	struct axp_regmap *map = cdev->chip->regmap;
    126c:	e5900018 	ldr	r0, [r0, #24]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:79

	if (vol) {
		/*axp_regmap_set_bits(map, 0xff,0x60);*/
		if (vol >= 3880 && vol <= 5080) {
			tmp = (vol - 3880)/80;
			axp_regmap_update(map, 0x11, tmp, 0x0f);
    1270:	e0c54194 	smull	r4, r5, r4, r1
    1274:	e3a0300f 	mov	r3, #15
    1278:	e3a01011 	mov	r1, #17
    127c:	e5900004 	ldr	r0, [r0, #4]
    1280:	e06222c5 	rsb	r2, r2, r5, asr #5
    1284:	e6ef2072 	uxtb	r2, r2
    1288:	ebfffffe 	bl	0 <axp_regmap_update>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:88
		}
	} else {
		/*axp_regmap_clr_bits(map, 0xff,0x60);*/
	}
	return 0;
}
    128c:	e3a00000 	mov	r0, #0
    1290:	e8bd8070 	pop	{r4, r5, r6, pc}
    1294:	e3a00000 	mov	r0, #0
    1298:	e12fff1e 	bx	lr
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:81
		/*axp_regmap_set_bits(map, 0xff,0x60);*/
		if (vol >= 3880 && vol <= 5080) {
			tmp = (vol - 3880)/80;
			axp_regmap_update(map, 0x11, tmp, 0x0f);
		} else {
			pr_err("set usb limit voltage error, %d mV\n",
    129c:	e3003000 	movw	r3, #0
    12a0:	e3000000 	movw	r0, #0
    12a4:	e3403000 	movt	r3, #0
    12a8:	e3400000 	movt	r0, #0
    12ac:	e59310d8 	ldr	r1, [r3, #216]	; 0xd8
    12b0:	ebfffffe 	bl	0 <printk>
    12b4:	eafffff4 	b	128c <axp2585_set_usb_vhold+0x48>

Disassembly of section .data:

00000000 <axp2585_charger_driver>:
axp2585_set_ac_ihold():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:40
}

static int axp2585_set_ac_ihold(struct axp_charger_dev *cdev, int cur)
{
	return 0;
}
   0:	00000000 	andeq	r0, r0, r0
   4:	00000000 	andeq	r0, r0, r0
axp2585_get_usb_current():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:68
}

static int axp2585_get_usb_current(struct axp_charger_dev *cdev)
{
	return 0;
}
   8:	00000000 	andeq	r0, r0, r0
   c:	00000000 	andeq	r0, r0, r0
axp2585_get_bat_health():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:189
}

static int axp2585_get_bat_health(struct axp_charger_dev *cdev)
{
	return POWER_SUPPLY_HEALTH_GOOD;
}
  10:	00000000 	andeq	r0, r0, r0
  14:	000003e0 	andeq	r0, r0, r0, ror #7
axp2585_charger_resume():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:763

	return 0;
}

static int axp2585_charger_resume(struct platform_device *dev)
{
  18:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:768
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);
	int pre_rest_vol;

	if (axp_suspend_flag == AXP_SUSPEND_WITH_IRQ) {
		axp_suspend_flag = AXP_NOT_SUSPEND;
  1c:	00000000 	andeq	r0, r0, r0
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
#endif
}

static inline void *dev_get_drvdata(const struct device *dev)
{
	return dev->driver_data;
  20:	00000000 	andeq	r0, r0, r0
axp2585_charger_resume():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:768
  24:	00000000 	andeq	r0, r0, r0
  28:	00000000 	andeq	r0, r0, r0
  2c:	000000bc 	strheq	r0, [r0], -ip
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:774
	//	sunxi_nmi_enable();
	} else {
		axp_suspend_flag = AXP_NOT_SUSPEND;
	}
	pre_rest_vol = chg_dev->rest_vol;
	axp_charger_resume(chg_dev);
  30:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:773
		axp_suspend_flag = AXP_NOT_SUSPEND;
	//	sunxi_nmi_enable();
	} else {
		axp_suspend_flag = AXP_NOT_SUSPEND;
	}
	pre_rest_vol = chg_dev->rest_vol;
  34:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:774
	axp_charger_resume(chg_dev);
  38:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:776

	if (chg_dev->rest_vol - pre_rest_vol) {
  3c:	00000000 	andeq	r0, r0, r0
  40:	00000000 	andeq	r0, r0, r0
  44:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:783
				pre_rest_vol, chg_dev->rest_vol);
		/*axp_regmap_write(map, 0x05, chg_dev->rest_vol | 0x80);*/
	}

	return 0;
}
  48:	00000000 	andeq	r0, r0, r0
  4c:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:777
	}
	pre_rest_vol = chg_dev->rest_vol;
	axp_charger_resume(chg_dev);

	if (chg_dev->rest_vol - pre_rest_vol) {
		pr_info("battery vol change: %d->%d\n",
  50:	00000000 	andeq	r0, r0, r0
  54:	00000000 	andeq	r0, r0, r0
  58:	00000000 	andeq	r0, r0, r0

0000005c <boost_mode>:
  5c:	00000001 	andeq	r0, r0, r1

00000060 <tc_mode>:
  60:	00000001 	andeq	r0, r0, r1

00000064 <axp2585_ac_info>:
axp2585_charger_suspend():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
static int axp2585_charger_suspend(struct platform_device *dev,
				pm_message_t state)
{
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_suspend_flag = AXP_WAS_SUSPEND;
  64:	00000001 	andeq	r0, r0, r1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:753
	return 0;
}

static int axp2585_charger_suspend(struct platform_device *dev,
				pm_message_t state)
{
  68:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_suspend_flag = AXP_WAS_SUSPEND;
  6c:	00000001 	andeq	r0, r0, r1
  70:	00000000 	andeq	r0, r0, r0
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  74:	00000000 	andeq	r0, r0, r0
axp2585_charger_suspend():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
  78:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:757
	axp_charger_suspend(chg_dev);
  7c:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:760

	return 0;
}
  80:	00000000 	andeq	r0, r0, r0
  84:	00000000 	andeq	r0, r0, r0
axp2585_charger_shutdown():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:789

static void axp2585_charger_shutdown(struct platform_device *dev)
{
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_charger_shutdown(chg_dev);
  88:	00000000 	andeq	r0, r0, r0
  8c:	00000000 	andeq	r0, r0, r0
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:734
fail:
	return -1;
}

static int axp2585_charger_remove(struct platform_device *pdev)
{
  90:	00000000 	andeq	r0, r0, r0
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  94:	00000000 	andeq	r0, r0, r0
  98:	00000000 	andeq	r0, r0, r0

0000009c <axp2585_usb_info>:
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:734
  9c:	00000001 	andeq	r0, r0, r1
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  a0:	00000000 	andeq	r0, r0, r0
  a4:	00000001 	andeq	r0, r0, r1
  a8:	00000000 	andeq	r0, r0, r0
  ac:	00000000 	andeq	r0, r0, r0
  b0:	00000000 	andeq	r0, r0, r0
  b4:	00000000 	andeq	r0, r0, r0
  b8:	00000000 	andeq	r0, r0, r0
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:740
	int i, irq;
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
  bc:	00000000 	andeq	r0, r0, r0
  c0:	00000000 	andeq	r0, r0, r0
  c4:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:741
		if (irq < 0)
  c8:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:743
			continue;
		axp_free_irq(axp_dev, irq);
  cc:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:741
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
		if (irq < 0)
  d0:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:743
			continue;
		axp_free_irq(axp_dev, irq);
  d4:	00000000 	andeq	r0, r0, r0

000000d8 <axp2585_batt_info>:
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:739 (discriminator 2)
{
	int i, irq;
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
  d8:	00000000 	andeq	r0, r0, r0
  dc:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:746
		if (irq < 0)
			continue;
		axp_free_irq(axp_dev, irq);
	}

	axp_power_supply_unregister(chg_dev);
  e0:	00000000 	andeq	r0, r0, r0
  e4:	00000002 	andeq	r0, r0, r2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:749

	return 0;
}
  e8:	00000000 	andeq	r0, r0, r0
  ec:	00000000 	andeq	r0, r0, r0
  f0:	00000004 	andeq	r0, r0, r4
show_boost_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:554
	return count;
}

static ssize_t show_boost_mode(struct device *dev,
			struct device_attribute *attr, char *buf)
{
  f4:	00000002 	andeq	r0, r0, r2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:558
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "1: open  0: close");
  f8:	00000003 	andeq	r0, r0, r3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:554
	return count;
}

static ssize_t show_boost_mode(struct device *dev,
			struct device_attribute *attr, char *buf)
{
  fc:	00000001 	andeq	r0, r0, r1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:558
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "1: open  0: close");
 100:	00000000 	andeq	r0, r0, r0
 104:	00000000 	andeq	r0, r0, r0
 108:	00000002 	andeq	r0, r0, r2
 10c:	00000000 	andeq	r0, r0, r0
 110:	00000000 	andeq	r0, r0, r0
 114:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:559
	s += scnprintf(s, end - s, "boost_mode=%d\n", boost_mode);
 118:	00000000 	andeq	r0, r0, r0
 11c:	00000000 	andeq	r0, r0, r0
 120:	00000000 	andeq	r0, r0, r0
 124:	00000000 	andeq	r0, r0, r0
 128:	00000000 	andeq	r0, r0, r0
 12c:	00000000 	andeq	r0, r0, r0
 130:	00000000 	andeq	r0, r0, r0
 134:	00000000 	andeq	r0, r0, r0
 138:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:560
	return s - buf;
 13c:	00000000 	andeq	r0, r0, r0

00000140 <battery_data>:
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:561
}
 140:	00000468 	andeq	r0, r0, r8, ror #8
 144:	00000004 	andeq	r0, r0, r4
show_tc_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:526
static int tc_mode = 1;
static int boost_mode = 1;
static int power = 1;
static ssize_t show_tc_mode(struct device *dev,
			    struct device_attribute *attr, char *buf)
{
 148:	00401640 	subeq	r1, r0, r0, asr #12
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:530
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "0: close 1: sink 2: source 3: drp");
 14c:	003567e0 	eorseq	r6, r5, r0, ror #15
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:526
static int tc_mode = 1;
static int boost_mode = 1;
static int power = 1;
static ssize_t show_tc_mode(struct device *dev,
			    struct device_attribute *attr, char *buf)
{
 150:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:530
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "0: close 1: sink 2: source 3: drp");
 154:	00000000 	andeq	r0, r0, r0
 158:	00000000 	andeq	r0, r0, r0
 15c:	00000000 	andeq	r0, r0, r0
 160:	00000001 	andeq	r0, r0, r1

00000164 <axp2585_spy_info>:
 164:	00000064 	andeq	r0, r0, r4, rrx
 168:	0000009c 	muleq	r0, ip, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:531
	s += scnprintf(s, end - s, "tc_mode=%d\n", tc_mode);
 16c:	000000d8 	ldrdeq	r0, [r0], -r8

00000170 <bmu_control_attr_group>:
 170:	000003f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 174:	00000000 	andeq	r0, r0, r0
 178:	00000000 	andeq	r0, r0, r0
 17c:	00000184 	andeq	r0, r0, r4, lsl #3
 180:	00000000 	andeq	r0, r0, r0

00000184 <bmu_control_attrs>:
 184:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 188:	000001a4 	andeq	r0, r0, r4, lsr #3
 18c:	00000194 	muleq	r0, r4, r1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:532
	return s - buf;
 190:	00000000 	andeq	r0, r0, r0

00000194 <dev_attr_power>:
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:533
}
 194:	000003fc 	strdeq	r0, [r0], -ip
 198:	000001a4 	andeq	r0, r0, r4, lsr #3
axp2585_get_vbat():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:197
{
	return ((int)(((reg >> 8) << 4) | (reg & 0x000F))) * 1200 / 1000;
}

static int axp2585_get_vbat(struct axp_charger_dev *cdev)
{
 19c:	00000000 	andeq	r0, r0, r0
 1a0:	00000000 	andeq	r0, r0, r0

000001a4 <dev_attr_boost_mode>:
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:200
	u8 tmp[2];
	u32 res;
	struct axp_regmap *map = cdev->chip->regmap;
 1a4:	00000404 	andeq	r0, r0, r4, lsl #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:202

	axp_regmap_reads(map, AXP2585_VBATH_RES, 2, tmp);
 1a8:	000001a4 	andeq	r0, r0, r4, lsr #3
 1ac:	00000000 	andeq	r0, r0, r0
 1b0:	00000000 	andeq	r0, r0, r0

000001b4 <dev_attr_tc_mode>:
 1b4:	00000410 	andeq	r0, r0, r0, lsl r4
 1b8:	000001a4 	andeq	r0, r0, r4, lsr #3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:203
	res = (tmp[0] << 8) | tmp[1];
 1bc:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:205

	return axp2585_vbat_to_mV(res);
 1c0:	00000000 	andeq	r0, r0, r0

Disassembly of section .ARM.exidx:

00000000 <.ARM.exidx>:
axp2585_set_ac_ihold():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:40
}

static int axp2585_set_ac_ihold(struct axp_charger_dev *cdev, int cur)
{
	return 0;
}
   0:	00000000 	andeq	r0, r0, r0
   4:	80b0b0b0 	ldrhthi	fp, [r0], r0
axp2585_get_usb_current():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:68
}

static int axp2585_get_usb_current(struct axp_charger_dev *cdev)
{
	return 0;
}
   8:	00000008 	andeq	r0, r0, r8
   c:	80b0b0b0 	ldrhthi	fp, [r0], r0
axp2585_get_bat_health():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:189
}

static int axp2585_get_bat_health(struct axp_charger_dev *cdev)
{
	return POWER_SUPPLY_HEALTH_GOOD;
}
  10:	00000010 	andeq	r0, r0, r0, lsl r0
  14:	80b0b0b0 	ldrhthi	fp, [r0], r0
axp2585_charger_resume():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:763

	return 0;
}

static int axp2585_charger_resume(struct platform_device *dev)
{
  18:	00000018 	andeq	r0, r0, r8, lsl r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:768
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);
	int pre_rest_vol;

	if (axp_suspend_flag == AXP_SUSPEND_WITH_IRQ) {
		axp_suspend_flag = AXP_NOT_SUSPEND;
  1c:	80aab0b0 	strhthi	fp, [sl], r0
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  20:	00000064 	andeq	r0, r0, r4, rrx
axp2585_charger_resume():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:768
  24:	80a8b0b0 	strhthi	fp, [r8], r0
  28:	00000088 	andeq	r0, r0, r8, lsl #1
  2c:	80b0b0b0 	ldrhthi	fp, [r0], r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:774
	//	sunxi_nmi_enable();
	} else {
		axp_suspend_flag = AXP_NOT_SUSPEND;
	}
	pre_rest_vol = chg_dev->rest_vol;
	axp_charger_resume(chg_dev);
  30:	00000090 	muleq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:773
		axp_suspend_flag = AXP_NOT_SUSPEND;
	//	sunxi_nmi_enable();
	} else {
		axp_suspend_flag = AXP_NOT_SUSPEND;
	}
	pre_rest_vol = chg_dev->rest_vol;
  34:	80acb0b0 	strhthi	fp, [ip], r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:774
	axp_charger_resume(chg_dev);
  38:	000000f4 	strdeq	r0, [r0], -r4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:776

	if (chg_dev->rest_vol - pre_rest_vol) {
  3c:	80aab0b0 	strhthi	fp, [sl], r0
  40:	00000148 	andeq	r0, r0, r8, asr #2
  44:	80aab0b0 	strhthi	fp, [sl], r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:783
				pre_rest_vol, chg_dev->rest_vol);
		/*axp_regmap_write(map, 0x05, chg_dev->rest_vol | 0x80);*/
	}

	return 0;
}
  48:	0000019c 	muleq	r0, ip, r1
  4c:	80028400 	andhi	r8, r2, r0, lsl #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:777
	}
	pre_rest_vol = chg_dev->rest_vol;
	axp_charger_resume(chg_dev);

	if (chg_dev->rest_vol - pre_rest_vol) {
		pr_info("battery vol change: %d->%d\n",
  50:	000001f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
  54:	80028400 	andhi	r8, r2, r0, lsl #8
  58:	0000022c 	andeq	r0, r0, ip, lsr #4
  5c:	80aab0b0 	strhthi	fp, [sl], r0
  60:	0000027c 	andeq	r0, r0, ip, ror r2
axp2585_charger_suspend():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
static int axp2585_charger_suspend(struct platform_device *dev,
				pm_message_t state)
{
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_suspend_flag = AXP_WAS_SUSPEND;
  64:	80028400 	andhi	r8, r2, r0, lsl #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:753
	return 0;
}

static int axp2585_charger_suspend(struct platform_device *dev,
				pm_message_t state)
{
  68:	000002b8 			; <UNDEFINED> instruction: 0x000002b8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_suspend_flag = AXP_WAS_SUSPEND;
  6c:	8002a9b0 			; <UNDEFINED> instruction: 0x8002a9b0
  70:	00000344 	andeq	r0, r0, r4, asr #6
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  74:	8002a9b0 			; <UNDEFINED> instruction: 0x8002a9b0
axp2585_charger_suspend():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
  78:	000003b8 			; <UNDEFINED> instruction: 0x000003b8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:757
	axp_charger_suspend(chg_dev);
  7c:	80a8b0b0 	strhthi	fp, [r8], r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:760

	return 0;
}
  80:	00000414 	andeq	r0, r0, r4, lsl r4
  84:	80a8b0b0 	strhthi	fp, [r8], r0
axp2585_charger_shutdown():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:789

static void axp2585_charger_shutdown(struct platform_device *dev)
{
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_charger_shutdown(chg_dev);
  88:	0000044c 	andeq	r0, r0, ip, asr #8
  8c:	8001aab0 			; <UNDEFINED> instruction: 0x8001aab0
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:734
fail:
	return -1;
}

static int axp2585_charger_remove(struct platform_device *pdev)
{
  90:	0000054c 	andeq	r0, r0, ip, asr #10
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  94:	8001aeb0 			; <UNDEFINED> instruction: 0x8001aeb0
  98:	000007bc 			; <UNDEFINED> instruction: 0x000007bc
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:734
  9c:	80028400 	andhi	r8, r2, r0, lsl #8
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  a0:	000007f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
  a4:	80028400 	andhi	r8, r2, r0, lsl #8
  a8:	00000824 	andeq	r0, r0, r4, lsr #16
  ac:	801aafb0 			; <UNDEFINED> instruction: 0x801aafb0
  b0:	000011a0 	andeq	r1, r0, r0, lsr #3
  b4:	80aab0b0 	strhthi	fp, [sl], r0
  b8:	00001214 	andeq	r1, r0, r4, lsl r2
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:740
	int i, irq;
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
  bc:	80b0b0b0 	ldrhthi	fp, [r0], r0
  c0:	0000121c 	andeq	r1, r0, ip, lsl r2
  c4:	80b0b0b0 	ldrhthi	fp, [r0], r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:741
		if (irq < 0)
  c8:	00001224 	andeq	r1, r0, r4, lsr #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:743
			continue;
		axp_free_irq(axp_dev, irq);
  cc:	80b0b0b0 	ldrhthi	fp, [r0], r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:741
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
		if (irq < 0)
  d0:	0000122c 	andeq	r1, r0, ip, lsr #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:743
			continue;
		axp_free_irq(axp_dev, irq);
  d4:	80b0b0b0 	ldrhthi	fp, [r0], r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:739 (discriminator 2)
{
	int i, irq;
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
  d8:	00001234 	andeq	r1, r0, r4, lsr r2
  dc:	80b0b0b0 	ldrhthi	fp, [r0], r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:746
		if (irq < 0)
			continue;
		axp_free_irq(axp_dev, irq);
	}

	axp_power_supply_unregister(chg_dev);
  e0:	0000123c 	andeq	r1, r0, ip, lsr r2
  e4:	80b0b0b0 	ldrhthi	fp, [r0], r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:749

	return 0;
}
  e8:	00001244 	andeq	r1, r0, r4, asr #4
  ec:	80aab0b0 	strhthi	fp, [sl], r0

Disassembly of section .init.text:

00000000 <axp2585_charger_initcall>:
axp2585_set_ac_ihold():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:40
}

static int axp2585_set_ac_ihold(struct axp_charger_dev *cdev, int cur)
{
	return 0;
}
   0:	e3000000 	movw	r0, #0
   4:	e92d4010 	push	{r4, lr}
axp2585_get_usb_current():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:68
}

static int axp2585_get_usb_current(struct axp_charger_dev *cdev)
{
	return 0;
}
   8:	e3a01000 	mov	r1, #0
   c:	e3400000 	movt	r0, #0
axp2585_get_bat_health():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:189
}

static int axp2585_get_bat_health(struct axp_charger_dev *cdev)
{
	return POWER_SUPPLY_HEALTH_GOOD;
}
  10:	ebfffffe 	bl	0 <__platform_driver_register>
  14:	e3700a01 	cmn	r0, #4096	; 0x1000
axp2585_charger_resume():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:763

	return 0;
}

static int axp2585_charger_resume(struct platform_device *dev)
{
  18:	9a000007 	bls	3c <axp2585_charger_initcall+0x3c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:768
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);
	int pre_rest_vol;

	if (axp_suspend_flag == AXP_SUSPEND_WITH_IRQ) {
		axp_suspend_flag = AXP_NOT_SUSPEND;
  1c:	e1a02000 	mov	r2, r0
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  20:	e3001000 	movw	r1, #0
axp2585_charger_resume():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:768
  24:	e3000000 	movw	r0, #0
  28:	e3401000 	movt	r1, #0
  2c:	e3400000 	movt	r0, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:774
	//	sunxi_nmi_enable();
	} else {
		axp_suspend_flag = AXP_NOT_SUSPEND;
	}
	pre_rest_vol = chg_dev->rest_vol;
	axp_charger_resume(chg_dev);
  30:	ebfffffe 	bl	0 <printk>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:773
		axp_suspend_flag = AXP_NOT_SUSPEND;
	//	sunxi_nmi_enable();
	} else {
		axp_suspend_flag = AXP_NOT_SUSPEND;
	}
	pre_rest_vol = chg_dev->rest_vol;
  34:	e3e00015 	mvn	r0, #21
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:774
	axp_charger_resume(chg_dev);
  38:	e8bd8010 	pop	{r4, pc}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:776

	if (chg_dev->rest_vol - pre_rest_vol) {
  3c:	e3a00000 	mov	r0, #0
  40:	e8bd8010 	pop	{r4, pc}

Disassembly of section .ARM.exidx.init.text:

00000000 <.ARM.exidx.init.text>:
axp2585_set_ac_ihold():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:40
}

static int axp2585_set_ac_ihold(struct axp_charger_dev *cdev, int cur)
{
	return 0;
}
   0:	00000000 	andeq	r0, r0, r0
   4:	80a8b0b0 	strhthi	fp, [r8], r0

Disassembly of section .rodata:

00000000 <__func__.18067>:
   0:	32707861 	rsbscc	r7, r0, #6356992	; 0x610000
   4:	5f353835 	svcpl	0x00353835
axp2585_get_usb_current():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:68
}

static int axp2585_get_usb_current(struct axp_charger_dev *cdev)
{
	return 0;
}
   8:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
   c:	5f726567 	svcpl	0x00726567
axp2585_get_bat_health():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:189
}

static int axp2585_get_bat_health(struct axp_charger_dev *cdev)
{
	return POWER_SUPPLY_HEALTH_GOOD;
}
  10:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
  14:	6c6c6163 	stfvse	f6, [ip], #-396	; 0xfffffe74
axp2585_charger_resume():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:763

	return 0;
}

static int axp2585_charger_resume(struct platform_device *dev)
{
  18:	00000000 	andeq	r0, r0, r0

0000001c <axp2585_charger_irq>:
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:768
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);
	int pre_rest_vol;

	if (axp_suspend_flag == AXP_SUSPEND_WITH_IRQ) {
		axp_suspend_flag = AXP_NOT_SUSPEND;
  1c:	00000038 	andeq	r0, r0, r8, lsr r0
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  20:	00000000 	andeq	r0, r0, r0
axp2585_charger_resume():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:768
  24:	00000418 	andeq	r0, r0, r8, lsl r4
  28:	00000000 	andeq	r0, r0, r0
  2c:	00000420 	andeq	r0, r0, r0, lsr #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:774
	//	sunxi_nmi_enable();
	} else {
		axp_suspend_flag = AXP_NOT_SUSPEND;
	}
	pre_rest_vol = chg_dev->rest_vol;
	axp_charger_resume(chg_dev);
  30:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:773
		axp_suspend_flag = AXP_NOT_SUSPEND;
	//	sunxi_nmi_enable();
	} else {
		axp_suspend_flag = AXP_NOT_SUSPEND;
	}
	pre_rest_vol = chg_dev->rest_vol;
  34:	00000428 	andeq	r0, r0, r8, lsr #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:774
	axp_charger_resume(chg_dev);
  38:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:776

	if (chg_dev->rest_vol - pre_rest_vol) {
  3c:	00000430 	andeq	r0, r0, r0, lsr r4
  40:	00000000 	andeq	r0, r0, r0
  44:	0000043c 	andeq	r0, r0, ip, lsr r4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:783
				pre_rest_vol, chg_dev->rest_vol);
		/*axp_regmap_write(map, 0x05, chg_dev->rest_vol | 0x80);*/
	}

	return 0;
}
  48:	00000000 	andeq	r0, r0, r0
  4c:	00000448 	andeq	r0, r0, r8, asr #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:777
	}
	pre_rest_vol = chg_dev->rest_vol;
	axp_charger_resume(chg_dev);

	if (chg_dev->rest_vol - pre_rest_vol) {
		pr_info("battery vol change: %d->%d\n",
  50:	00000000 	andeq	r0, r0, r0
  54:	00000458 	andeq	r0, r0, r8, asr r4
  58:	00000000 	andeq	r0, r0, r0

0000005c <__func__.18014>:
  5c:	32707861 	rsbscc	r7, r0, #6356992	; 0x610000
  60:	5f353835 	svcpl	0x00353835
axp2585_charger_suspend():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
static int axp2585_charger_suspend(struct platform_device *dev,
				pm_message_t state)
{
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_suspend_flag = AXP_WAS_SUSPEND;
  64:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:753
	return 0;
}

static int axp2585_charger_suspend(struct platform_device *dev,
				pm_message_t state)
{
  68:	5f726567 	svcpl	0x00726567
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_suspend_flag = AXP_WAS_SUSPEND;
  6c:	626f7270 	rsbvs	r7, pc, #112, 4
  70:	00000065 	andeq	r0, r0, r5, rrx
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  74:	0000003c 	andeq	r0, r0, ip, lsr r0
axp2585_charger_suspend():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
  78:	00000078 	andeq	r0, r0, r8, ror r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:757
	axp_charger_suspend(chg_dev);
  7c:	0000000f 	andeq	r0, r0, pc
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:760

	return 0;
}
  80:	0000001e 	andeq	r0, r0, lr, lsl r0
  84:	0000001e 	andeq	r0, r0, lr, lsl r0
axp2585_charger_shutdown():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:789

static void axp2585_charger_shutdown(struct platform_device *dev)
{
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_charger_shutdown(chg_dev);
  88:	0000003c 	andeq	r0, r0, ip, lsr r0
  8c:	00000078 	andeq	r0, r0, r8, ror r0
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:734
fail:
	return -1;
}

static int axp2585_charger_remove(struct platform_device *pdev)
{
  90:	000000a4 	andeq	r0, r0, r4, lsr #1
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  94:	00000000 	andeq	r0, r0, r0
  98:	00000005 	andeq	r0, r0, r5
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:734
  9c:	0000000a 	andeq	r0, r0, sl
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  a0:	00000014 	andeq	r0, r0, r4, lsl r0

000000a4 <__func__.17880>:
  a4:	32707861 	rsbscc	r7, r0, #6356992	; 0x610000
  a8:	5f353835 	svcpl	0x00353835
  ac:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
  b0:	5f726567 	svcpl	0x00726567
  b4:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
  b8:	00000000 	andeq	r0, r0, r0

000000bc <axp2585_charger_dt_ids>:
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:740
	int i, irq;
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
  bc:	00000000 	andeq	r0, r0, r0
  c0:	00000000 	andeq	r0, r0, r0
  c4:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:741
		if (irq < 0)
  c8:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:743
			continue;
		axp_free_irq(axp_dev, irq);
  cc:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:741
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
		if (irq < 0)
  d0:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:743
			continue;
		axp_free_irq(axp_dev, irq);
  d4:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:739 (discriminator 2)
{
	int i, irq;
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
  d8:	00000000 	andeq	r0, r0, r0
  dc:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:746
		if (irq < 0)
			continue;
		axp_free_irq(axp_dev, irq);
	}

	axp_power_supply_unregister(chg_dev);
  e0:	00000000 	andeq	r0, r0, r0
  e4:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:749

	return 0;
}
  e8:	00000000 	andeq	r0, r0, r0
  ec:	00000000 	andeq	r0, r0, r0
  f0:	00000000 	andeq	r0, r0, r0
show_boost_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:554
	return count;
}

static ssize_t show_boost_mode(struct device *dev,
			struct device_attribute *attr, char *buf)
{
  f4:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:558
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "1: open  0: close");
  f8:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:554
	return count;
}

static ssize_t show_boost_mode(struct device *dev,
			struct device_attribute *attr, char *buf)
{
  fc:	32707861 	rsbscc	r7, r0, #6356992	; 0x610000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:558
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "1: open  0: close");
 100:	2d353835 	ldccs	8, cr3, [r5, #-212]!	; 0xffffff2c
 104:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
 108:	00726567 	rsbseq	r6, r2, r7, ror #10
 10c:	00000000 	andeq	r0, r0, r0
 110:	00000000 	andeq	r0, r0, r0
 114:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:559
	s += scnprintf(s, end - s, "boost_mode=%d\n", boost_mode);
 118:	00000000 	andeq	r0, r0, r0
 11c:	00000000 	andeq	r0, r0, r0
 120:	00000000 	andeq	r0, r0, r0
 124:	00000000 	andeq	r0, r0, r0
 128:	00000000 	andeq	r0, r0, r0
 12c:	00000000 	andeq	r0, r0, r0
 130:	00000000 	andeq	r0, r0, r0
 134:	00000000 	andeq	r0, r0, r0
 138:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:560
	return s - buf;
 13c:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:561
}
 140:	00000000 	andeq	r0, r0, r0
 144:	00000000 	andeq	r0, r0, r0
show_tc_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:526
static int tc_mode = 1;
static int boost_mode = 1;
static int power = 1;
static ssize_t show_tc_mode(struct device *dev,
			    struct device_attribute *attr, char *buf)
{
 148:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:530
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "0: close 1: sink 2: source 3: drp");
 14c:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:526
static int tc_mode = 1;
static int boost_mode = 1;
static int power = 1;
static ssize_t show_tc_mode(struct device *dev,
			    struct device_attribute *attr, char *buf)
{
 150:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:530
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "0: close 1: sink 2: source 3: drp");
 154:	00000000 	andeq	r0, r0, r0
 158:	00000000 	andeq	r0, r0, r0
 15c:	00000000 	andeq	r0, r0, r0
 160:	00000000 	andeq	r0, r0, r0
 164:	00000000 	andeq	r0, r0, r0
 168:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:531
	s += scnprintf(s, end - s, "tc_mode=%d\n", tc_mode);
 16c:	00000000 	andeq	r0, r0, r0
 170:	00000000 	andeq	r0, r0, r0
 174:	00000000 	andeq	r0, r0, r0
 178:	00000000 	andeq	r0, r0, r0
 17c:	00000000 	andeq	r0, r0, r0
 180:	00000000 	andeq	r0, r0, r0
 184:	00000000 	andeq	r0, r0, r0
 188:	00000000 	andeq	r0, r0, r0
 18c:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:532
	return s - buf;
 190:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:533
}
 194:	00000000 	andeq	r0, r0, r0
 198:	00000000 	andeq	r0, r0, r0
axp2585_get_vbat():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:197
{
	return ((int)(((reg >> 8) << 4) | (reg & 0x000F))) * 1200 / 1000;
}

static int axp2585_get_vbat(struct axp_charger_dev *cdev)
{
 19c:	00000000 	andeq	r0, r0, r0
 1a0:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:200
	u8 tmp[2];
	u32 res;
	struct axp_regmap *map = cdev->chip->regmap;
 1a4:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:202

	axp_regmap_reads(map, AXP2585_VBATH_RES, 2, tmp);
 1a8:	00000000 	andeq	r0, r0, r0
 1ac:	00000000 	andeq	r0, r0, r0
 1b0:	00000000 	andeq	r0, r0, r0
 1b4:	00000000 	andeq	r0, r0, r0
 1b8:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:203
	res = (tmp[0] << 8) | tmp[1];
 1bc:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:205

	return axp2585_vbat_to_mV(res);
 1c0:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:203
	u8 tmp[2];
	u32 res;
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, AXP2585_VBATH_RES, 2, tmp);
	res = (tmp[0] << 8) | tmp[1];
 1c4:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:205

	return axp2585_vbat_to_mV(res);
 1c8:	00000000 	andeq	r0, r0, r0
 1cc:	00000000 	andeq	r0, r0, r0
 1d0:	00000000 	andeq	r0, r0, r0
 1d4:	00000000 	andeq	r0, r0, r0
 1d8:	00000000 	andeq	r0, r0, r0
 1dc:	00000000 	andeq	r0, r0, r0
 1e0:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:206
}
 1e4:	00000000 	andeq	r0, r0, r0
 1e8:	00000000 	andeq	r0, r0, r0
 1ec:	00000000 	andeq	r0, r0, r0
axp2585_get_disibat():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:231

	return axp2585_icharge_to_mA(res);
}

static int axp2585_get_disibat(struct axp_charger_dev *cdev)
{
 1f0:	00000000 	andeq	r0, r0, r0
 1f4:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:234
	u8 tmp[2];
	u32 dis_res;
	struct axp_regmap *map = cdev->chip->regmap;
 1f8:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:236

	axp_regmap_reads(map, AXP2585_DISIBATH_REG, 2, tmp);
 1fc:	00000000 	andeq	r0, r0, r0
 200:	00000000 	andeq	r0, r0, r0
 204:	00000000 	andeq	r0, r0, r0
 208:	00000000 	andeq	r0, r0, r0
 20c:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:237
	dis_res = (tmp[0] << 8) | tmp[1];
 210:	00000000 	andeq	r0, r0, r0
 214:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:239

	return axp2585_ibat_to_mA(dis_res);
 218:	00000000 	andeq	r0, r0, r0
 21c:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:240
}
 220:	00000000 	andeq	r0, r0, r0
 224:	00000000 	andeq	r0, r0, r0
 228:	00000000 	andeq	r0, r0, r0
axp2585_power_show():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:585
	return count;
}

static ssize_t axp2585_power_show(struct device *dev,
			    struct device_attribute *attr, char *buf)
{
 22c:	00000000 	andeq	r0, r0, r0
 230:	00000000 	andeq	r0, r0, r0
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
 234:	00000000 	andeq	r0, r0, r0
axp2585_power_show():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:590
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);
	int vbat, ibat;
	vbat = axp2585_get_vbat(chg_dev);
 238:	00000000 	andeq	r0, r0, r0
 23c:	00000000 	andeq	r0, r0, r0
 240:	00000000 	andeq	r0, r0, r0

Disassembly of section .initcall7.init:

00000000 <__initcall_axp2585_charger_initcall7>:
axp2585_set_ac_ihold():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:40
}

static int axp2585_set_ac_ihold(struct axp_charger_dev *cdev, int cur)
{
	return 0;
}
   0:	00000000 	andeq	r0, r0, r0

Disassembly of section .rodata.str1.4:

00000000 <.LC2>:
   0:	73253301 	teqvc	r5, #67108864	; 0x4000000
   4:	6166203a 	cmnvs	r6, sl, lsr r0
axp2585_get_usb_current():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:68
}

static int axp2585_get_usb_current(struct axp_charger_dev *cdev)
{
	return 0;
}
   8:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
   c:	7265202c 	rsbvc	r2, r5, #44	; 0x2c
axp2585_get_bat_health():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:189
}

static int axp2585_get_bat_health(struct axp_charger_dev *cdev)
{
	return POWER_SUPPLY_HEALTH_GOOD;
}
  10:	206f6e72 	rsbcs	r6, pc, r2, ror lr	; <UNPREDICTABLE>
  14:	000a6425 	andeq	r6, sl, r5, lsr #8

00000018 <.LC3>:
axp2585_charger_resume():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:763

	return 0;
}

static int axp2585_charger_resume(struct platform_device *dev)
{
  18:	61623601 	cmnvs	r2, r1, lsl #12
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:768
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);
	int pre_rest_vol;

	if (axp_suspend_flag == AXP_SUSPEND_WITH_IRQ) {
		axp_suspend_flag = AXP_NOT_SUSPEND;
  1c:	72657474 	rsbvc	r7, r5, #116, 8	; 0x74000000
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  20:	6f762079 	svcvs	0x00762079
axp2585_charger_resume():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:768
  24:	6863206c 	stmdavs	r3!, {r2, r3, r5, r6, sp}^
  28:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
  2c:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:774
	//	sunxi_nmi_enable();
	} else {
		axp_suspend_flag = AXP_NOT_SUSPEND;
	}
	pre_rest_vol = chg_dev->rest_vol;
	axp_charger_resume(chg_dev);
  30:	64253e2d 	strtvs	r3, [r5], #-3629	; 0xfffff1d3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:773
		axp_suspend_flag = AXP_NOT_SUSPEND;
	//	sunxi_nmi_enable();
	} else {
		axp_suspend_flag = AXP_NOT_SUSPEND;
	}
	pre_rest_vol = chg_dev->rest_vol;
  34:	0000000a 	andeq	r0, r0, sl

00000038 <.LC4>:
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:774
	axp_charger_resume(chg_dev);
  38:	69206361 	stmdbvs	r0!, {r0, r5, r6, r8, r9, sp, lr}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:776

	if (chg_dev->rest_vol - pre_rest_vol) {
  3c:	0000006e 	andeq	r0, r0, lr, rrx

00000040 <.LC5>:
  40:	6f203a31 	svcvs	0x00203a31
  44:	206e6570 	rsbcs	r6, lr, r0, ror r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:783
				pre_rest_vol, chg_dev->rest_vol);
		/*axp_regmap_write(map, 0x05, chg_dev->rest_vol | 0x80);*/
	}

	return 0;
}
  48:	203a3020 	eorscs	r3, sl, r0, lsr #32
  4c:	736f6c63 	cmnvc	pc, #25344	; 0x6300
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:777
	}
	pre_rest_vol = chg_dev->rest_vol;
	axp_charger_resume(chg_dev);

	if (chg_dev->rest_vol - pre_rest_vol) {
		pr_info("battery vol change: %d->%d\n",
  50:	00000065 	andeq	r0, r0, r5, rrx

00000054 <.LC6>:
  54:	000a7325 	andeq	r7, sl, r5, lsr #6

00000058 <.LC7>:
  58:	736f6f62 	cmnvc	pc, #392	; 0x188
  5c:	6f6d5f74 	svcvs	0x006d5f74
  60:	253d6564 	ldrcs	r6, [sp, #-1380]!	; 0xfffffa9c
axp2585_charger_suspend():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
static int axp2585_charger_suspend(struct platform_device *dev,
				pm_message_t state)
{
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_suspend_flag = AXP_WAS_SUSPEND;
  64:	00000a64 	andeq	r0, r0, r4, ror #20

00000068 <.LC8>:
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:753
	return 0;
}

static int axp2585_charger_suspend(struct platform_device *dev,
				pm_message_t state)
{
  68:	63203a30 	teqvs	r0, #48, 20	; 0x30000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_suspend_flag = AXP_WAS_SUSPEND;
  6c:	65736f6c 	ldrbvs	r6, [r3, #-3948]!	; 0xfffff094
  70:	203a3120 	eorscs	r3, sl, r0, lsr #2
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  74:	6b6e6973 	blvs	1b9a648 <axp2585_set_usb_vhold+0x1b99404>
axp2585_charger_suspend():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
  78:	203a3220 	eorscs	r3, sl, r0, lsr #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:757
	axp_charger_suspend(chg_dev);
  7c:	72756f73 	rsbsvc	r6, r5, #460	; 0x1cc
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:760

	return 0;
}
  80:	33206563 	teqcc	r0, #415236096	; 0x18c00000
  84:	7264203a 	rsbvc	r2, r4, #58	; 0x3a
axp2585_charger_shutdown():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:789

static void axp2585_charger_shutdown(struct platform_device *dev)
{
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_charger_shutdown(chg_dev);
  88:	00000070 	andeq	r0, r0, r0, ror r0

0000008c <.LC9>:
  8c:	6d5f6374 	ldclvs	3, cr6, [pc, #-464]	; fffffec4 <axp2585_set_usb_vhold+0xffffec80>
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:734
fail:
	return -1;
}

static int axp2585_charger_remove(struct platform_device *pdev)
{
  90:	3d65646f 	cfstrdcc	mvd6, [r5, #-444]!	; 0xfffffe44
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  94:	000a6425 	andeq	r6, sl, r5, lsr #8

00000098 <.LC10>:
  98:	566d6425 	strbtpl	r6, [sp], -r5, lsr #8
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:734
  9c:	0000000a 	andeq	r0, r0, sl

000000a0 <.LC11>:
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  a0:	6e753401 	cdpvs	4, 7, cr3, cr5, cr1, {0}
  a4:	70707573 	rsbsvc	r7, r0, r3, ror r5
  a8:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
  ac:	6f762064 	svcvs	0x00762064
  b0:	6761746c 	strbvs	r7, [r1, -ip, ror #8]!
  b4:	25203a65 	strcs	r3, [r0, #-2661]!	; 0xfffff59b
  b8:	2c766d64 	ldclcs	13, cr6, [r6], #-400	; 0xfffffe70
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:740
	int i, irq;
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
  bc:	65737520 	ldrbvs	r7, [r3, #-1312]!	; 0xfffffae0
  c0:	66656420 	strbtvs	r6, [r5], -r0, lsr #8
  c4:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:741
		if (irq < 0)
  c8:	30323420 	eorscc	r3, r2, r0, lsr #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:743
			continue;
		axp_free_irq(axp_dev, irq);
  cc:	0a766d30 	beq	1d9b594 <axp2585_set_usb_vhold+0x1d9a350>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:741
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
		if (irq < 0)
  d0:	00000000 	andeq	r0, r0, r0

000000d4 <.LC12>:
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:743
			continue;
		axp_free_irq(axp_dev, irq);
  d4:	5d73255b 	cfldr64pl	mvdx2, [r3, #-364]!	; 0xfffffe94
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:739 (discriminator 2)
{
	int i, irq;
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
  d8:	00000020 	andeq	r0, r0, r0, lsr #32

000000dc <.LC13>:
  dc:	6e696361 	cdpvs	3, 6, cr6, cr9, cr1, {3}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:746
		if (irq < 0)
			continue;
		axp_free_irq(axp_dev, irq);
	}

	axp_power_supply_unregister(chg_dev);
  e0:	6c6f765f 	stclvs	6, cr7, [pc], #-380	; ffffff6c <axp2585_set_usb_vhold+0xffffed28>
  e4:	25203d20 	strcs	r3, [r0, #-3360]!	; 0xfffff2e0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:749

	return 0;
}
  e8:	00000a64 	andeq	r0, r0, r4, ror #20

000000ec <.LC14>:
  ec:	5f76636f 	svcpl	0x0076636f
  f0:	206c6f76 	rsbcs	r6, ip, r6, ror pc
show_boost_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:554
	return count;
}

static ssize_t show_boost_mode(struct device *dev,
			struct device_attribute *attr, char *buf)
{
  f4:	6425203d 	strtvs	r2, [r5], #-61	; 0xffffffc3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:558
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "1: open  0: close");
  f8:	0000000a 	andeq	r0, r0, sl

000000fc <.LC15>:
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:554
	return count;
}

static ssize_t show_boost_mode(struct device *dev,
			struct device_attribute *attr, char *buf)
{
  fc:	5f76636f 	svcpl	0x0076636f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:558
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "1: open  0: close");
 100:	63726570 	cmnvs	r2, #112, 10	; 0x1c000000
 104:	20746e65 	rsbscs	r6, r4, r5, ror #28
 108:	6425203d 	strtvs	r2, [r5], #-61	; 0xffffffc3
 10c:	0000000a 	andeq	r0, r0, sl

00000110 <.LC16>:
 110:	6c756f63 	ldclvs	15, cr6, [r5], #-396	; 0xfffffe74
 114:	5f626d6f 	svcpl	0x00626d6f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:559
	s += scnprintf(s, end - s, "boost_mode=%d\n", boost_mode);
 118:	63726570 	cmnvs	r2, #112, 10	; 0x1c000000
 11c:	20746e65 	rsbscs	r6, r4, r5, ror #28
 120:	6425203d 	strtvs	r2, [r5], #-61	; 0xffffffc3
 124:	0000000a 	andeq	r0, r0, sl

00000128 <.LC17>:
 128:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0xfffffaae
 12c:	6f632074 	svcvs	0x00632074
 130:	6d756c75 	ldclvs	12, cr6, [r5, #-468]!	; 0xfffffe2c
 134:	00000a62 	andeq	r0, r0, r2, ror #20

00000138 <.LC18>:
 138:	74746162 	ldrbtvc	r6, [r4], #-354	; 0xfffffe9e
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:560
	return s - buf;
 13c:	78616d5f 	stmdavc	r1!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, sp, lr}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:561
}
 140:	7061635f 	rsbvc	r6, r1, pc, asr r3
 144:	25203d20 	strcs	r3, [r0, #-3360]!	; 0xfffff2e0
show_tc_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:526
static int tc_mode = 1;
static int boost_mode = 1;
static int power = 1;
static ssize_t show_tc_mode(struct device *dev,
			    struct device_attribute *attr, char *buf)
{
 148:	00000a64 	andeq	r0, r0, r4, ror #20

0000014c <.LC19>:
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:530
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "0: close 1: sink 2: source 3: drp");
 14c:	7078615b 	rsbsvc	r6, r8, fp, asr r1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:526
static int tc_mode = 1;
static int boost_mode = 1;
static int power = 1;
static ssize_t show_tc_mode(struct device *dev,
			    struct device_attribute *attr, char *buf)
{
 150:	35383532 	ldrcc	r3, [r8, #-1330]!	; 0xffffface
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:530
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "0: close 1: sink 2: source 3: drp");
 154:	746e455d 	strbtvc	r4, [lr], #-1373	; 0xfffffaa3
 158:	6e697265 	cdpvs	2, 6, cr7, cr9, cr5, {3}
 15c:	73252067 	teqvc	r5, #103	; 0x67
 160:	0000000a 	andeq	r0, r0, sl

00000164 <.LC20>:
 164:	73253301 	teqvc	r5, #67108864	; 0x4000000
 168:	72617020 	rsbvc	r7, r1, #32
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:531
	s += scnprintf(s, end - s, "tc_mode=%d\n", tc_mode);
 16c:	64206573 	strtvs	r6, [r0], #-1395	; 0xfffffa8d
 170:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 174:	72742065 	rsbsvc	r2, r4, #101	; 0x65
 178:	65206565 	strvs	r6, [r0, #-1381]!	; 0xfffffa9b
 17c:	000a7272 	andeq	r7, sl, r2, ror r2

00000180 <.LC21>:
 180:	78613301 	stmdavc	r1!, {r0, r8, r9, ip, sp}^
 184:	38353270 	ldmdacc	r5!, {r4, r5, r6, r9, ip, sp}
 188:	68632035 	stmdavs	r3!, {r0, r2, r4, r5, sp}^
 18c:	65677261 	strbvs	r7, [r7, #-609]!	; 0xfffffd9f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:532
	return s - buf;
 190:	65642072 	strbvs	r2, [r4, #-114]!	; 0xffffff8e
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:533
}
 194:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 198:	65727420 	ldrbvs	r7, [r2, #-1056]!	; 0xfffffbe0
axp2585_get_vbat():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:197
{
	return ((int)(((reg >> 8) << 4) | (reg & 0x000F))) * 1200 / 1000;
}

static int axp2585_get_vbat(struct axp_charger_dev *cdev)
{
 19c:	72652065 	rsbvc	r2, r5, #101	; 0x65
 1a0:	000a2172 	andeq	r2, sl, r2, ror r1

000001a4 <.LC22>:
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:200
	u8 tmp[2];
	u32 res;
	struct axp_regmap *map = cdev->chip->regmap;
 1a4:	76697264 	strbtvc	r7, [r9], -r4, ror #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:202

	axp_regmap_reads(map, AXP2585_VBATH_RES, 2, tmp);
 1a8:	2f737265 	svccs	0x00737265
 1ac:	65776f70 	ldrbvs	r6, [r7, #-3952]!	; 0xfffff090
 1b0:	78612f72 	stmdavc	r1!, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
 1b4:	78612f70 	stmdavc	r1!, {r4, r5, r6, r8, r9, sl, fp, sp}^
 1b8:	38353270 	ldmdacc	r5!, {r4, r5, r6, r9, ip, sp}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:203
	res = (tmp[0] << 8) | tmp[1];
 1bc:	78612f35 	stmdavc	r1!, {r0, r2, r4, r5, r8, r9, sl, fp, sp}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:205

	return axp2585_vbat_to_mV(res);
 1c0:	38353270 	ldmdacc	r5!, {r4, r5, r6, r9, ip, sp}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:203
	u8 tmp[2];
	u32 res;
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, AXP2585_VBATH_RES, 2, tmp);
	res = (tmp[0] << 8) | tmp[1];
 1c4:	68632d35 	stmdavs	r3!, {r0, r2, r4, r5, r8, sl, fp, sp}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:205

	return axp2585_vbat_to_mV(res);
 1c8:	65677261 	strbvs	r7, [r7, #-609]!	; 0xfffffd9f
 1cc:	00632e72 	rsbeq	r2, r3, r2, ror lr

000001d0 <.LC23>:
 1d0:	73253d3d 	teqvc	r5, #3904	; 0xf40
 1d4:	696c3d3d 	stmdbvs	ip!, {r0, r2, r3, r4, r5, r8, sl, fp, ip, sp}^
 1d8:	253a656e 	ldrcs	r6, [sl, #-1390]!	; 0xfffffa92
 1dc:	663d3d64 	ldrtvs	r3, [sp], -r4, ror #26
 1e0:	3a656c69 	bcc	195b38c <axp2585_set_usb_vhold+0x195a148>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:206
}
 1e4:	3d3d7325 	ldccc	3, cr7, [sp, #-148]!	; 0xffffff6c
 1e8:	0000000a 	andeq	r0, r0, sl

000001ec <.LC24>:
 1ec:	7078615b 	rsbsvc	r6, r8, fp, asr r1
axp2585_get_disibat():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:231

	return axp2585_icharge_to_mA(res);
}

static int axp2585_get_disibat(struct axp_charger_dev *cdev)
{
 1f0:	35383532 	ldrcc	r3, [r8, #-1330]!	; 0xffffface
 1f4:	253d695d 	ldrcs	r6, [sp, #-2397]!	; 0xfffff6a3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:234
	u8 tmp[2];
	u32 dis_res;
	struct axp_regmap *map = cdev->chip->regmap;
 1f8:	692c2064 	stmdbvs	ip!, {r2, r5, r6, sp}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:236

	axp_regmap_reads(map, AXP2585_DISIBATH_REG, 2, tmp);
 1fc:	253d7172 	ldrcs	r7, [sp, #-370]!	; 0xfffffe8e
 200:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
 204:	6e696c20 	cdpvs	12, 6, cr6, cr9, cr0, {1}
 208:	64253a65 	strtvs	r3, [r5], #-2661	; 0xfffff59b
 20c:	20666f20 	rsbcs	r6, r6, r0, lsr #30
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:237
	dis_res = (tmp[0] << 8) | tmp[1];
 210:	000a7325 	andeq	r7, sl, r5, lsr #6

00000214 <.LC25>:
 214:	7078615b 	rsbsvc	r6, r8, fp, asr r1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:239

	return axp2585_ibat_to_mA(dis_res);
 218:	35383532 	ldrcc	r3, [r8, #-1330]!	; 0xffffface
 21c:	7078615d 	rsbsvc	r6, r8, sp, asr r1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:240
}
 220:	7665645f 			; <UNDEFINED> instruction: 0x7665645f
 224:	72693e2d 	rsbvc	r3, r9, #720	; 0x2d0
 228:	61645f71 	smcvs	17905	; 0x45f1
axp2585_power_show():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:585
	return count;
}

static ssize_t axp2585_power_show(struct device *dev,
			    struct device_attribute *attr, char *buf)
{
 22c:	69206174 	stmdbvs	r0!, {r2, r4, r5, r6, r8, sp, lr}
 230:	696c206e 	stmdbvs	ip!, {r1, r2, r3, r5, r6, sp}^
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
 234:	253a656e 	ldrcs	r6, [sl, #-1390]!	; 0xfffffa92
axp2585_power_show():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:590
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);
	int vbat, ibat;
	vbat = axp2585_get_vbat(chg_dev);
 238:	666f2064 	strbtvs	r2, [pc], -r4, rrx
 23c:	20732520 	rsbscs	r2, r3, r0, lsr #10
 240:	4e207369 	cdpmi	3, 2, cr7, cr0, cr9, {3}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:591
	ibat = axp2585_get_disibat(chg_dev);
 244:	4e20544f 	cdpmi	4, 2, cr5, cr0, cr15, {2}
 248:	0a4c4c55 	beq	13133a4 <axp2585_set_usb_vhold+0x1312160>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:593
	power = vbat*ibat/1000;
	s += scnprintf(s, end - s, "%dmV\n", power);
 24c:	00000000 	andeq	r0, r0, r0

00000250 <.LC26>:
 250:	7078615b 	rsbsvc	r6, r8, fp, asr r1
 254:	35383532 	ldrcc	r3, [r8, #-1330]!	; 0xffffface
 258:	7078615d 	rsbsvc	r6, r8, sp, asr r1
 25c:	7665645f 			; <UNDEFINED> instruction: 0x7665645f
 260:	72693e2d 	rsbvc	r3, r9, #720	; 0x2d0
 264:	61645f71 	smcvs	17905	; 0x45f1
 268:	3e2d6174 	mcrcc	1, 1, r6, cr13, cr4, {3}
 26c:	73717269 	cmnvc	r1, #-1879048186	; 0x90000006
 270:	206e6920 	rsbcs	r6, lr, r0, lsr #18
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:595
	return s - buf;
}
 274:	656e696c 	strbvs	r6, [lr, #-2412]!	; 0xfffff694
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:593
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);
	int vbat, ibat;
	vbat = axp2585_get_vbat(chg_dev);
	ibat = axp2585_get_disibat(chg_dev);
	power = vbat*ibat/1000;
	s += scnprintf(s, end - s, "%dmV\n", power);
 278:	2064253a 	rsbcs	r2, r4, sl, lsr r5
axp2585_get_ibat():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:219
{
	return (int)((((reg >> 8) << 4) | (reg & 0x000F)) << 1);
}

static int axp2585_get_ibat(struct axp_charger_dev *cdev)
{
 27c:	2520666f 	strcs	r6, [r0, #-1647]!	; 0xfffff991
 280:	73692073 	cmnvc	r9, #115	; 0x73
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:222
	u8 tmp[2];
	u32 res;
	struct axp_regmap *map = cdev->chip->regmap;
 284:	544f4e20 	strbpl	r4, [pc], #-3616	; 28c <.LC26+0x3c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:224

	axp_regmap_reads(map, AXP2585_IBATH_REG, 2, tmp);
 288:	4c554e20 	mrrcmi	14, 2, r4, r5, cr0
 28c:	00000a4c 	andeq	r0, r0, ip, asr #20

00000290 <.LC27>:
 290:	7078615b 	rsbsvc	r6, r8, fp, asr r1
 294:	35383532 	ldrcc	r3, [r8, #-1330]!	; 0xffffface
 298:	7078615d 	rsbsvc	r6, r8, sp, asr r1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:225
	res = (tmp[0] << 8) | tmp[1];
 29c:	7665645f 			; <UNDEFINED> instruction: 0x7665645f
 2a0:	72693e2d 	rsbvc	r3, r9, #720	; 0x2d0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:227

	return axp2585_icharge_to_mA(res);
 2a4:	61645f71 	smcvs	17905	; 0x45f1
 2a8:	3e2d6174 	mcrcc	1, 1, r6, cr13, cr4, {3}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:228
}
 2ac:	73717269 	cmnvc	r1, #-1879048186	; 0x90000006
 2b0:	206e6920 	rsbcs	r6, lr, r0, lsr #18
 2b4:	656e696c 	strbvs	r6, [lr, #-2412]!	; 0xfffff694
store_boost_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:565
	return s - buf;
}

static ssize_t store_boost_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
 2b8:	2064253a 	rsbcs	r2, r4, sl, lsr r5
 2bc:	2520666f 	strcs	r6, [r0, #-1647]!	; 0xfffff991
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:568
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;
 2c0:	73692073 	cmnvc	r9, #115	; 0x73
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:565
	return s - buf;
}

static ssize_t store_boost_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
 2c4:	554e2020 	strbpl	r2, [lr, #-32]	; 0xffffffe0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:570
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;

	err = kstrtoint(buf, 16, &val);
 2c8:	000a4c4c 	andeq	r4, sl, ip, asr #24

000002cc <.LC28>:
 2cc:	7078615b 	rsbsvc	r6, r8, fp, asr r1
 2d0:	35383532 	ldrcc	r3, [r8, #-1330]!	; 0xffffface
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:568
static ssize_t store_boost_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;
 2d4:	7078615d 	rsbsvc	r6, r8, sp, asr r1
 2d8:	7665645f 			; <UNDEFINED> instruction: 0x7665645f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:570

	err = kstrtoint(buf, 16, &val);
 2dc:	72693e2d 	rsbvc	r3, r9, #720	; 0x2d0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:571
	if (err)
 2e0:	61645f71 	smcvs	17905	; 0x45f1
 2e4:	69206174 	stmdbvs	r0!, {r2, r4, r5, r6, r8, sp, lr}
 2e8:	696c206e 	stmdbvs	ip!, {r1, r2, r3, r5, r6, sp}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:573
		return err;
	if (val != 1)
 2ec:	253a656e 	ldrcs	r6, [sl, #-1390]!	; 0xfffffa92
 2f0:	666f2064 	strbtvs	r2, [pc], -r4, rrx
 2f4:	20732520 	rsbscs	r2, r3, r0, lsr #10
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
		val = 0;
	boost_mode = val;
 2f8:	20207369 	eorcs	r7, r0, r9, ror #6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:579
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
	else
		axp_regmap_clr_bits(map, 0x12, 0x80);
 2fc:	4c4c554e 	cfstr64mi	mvdx5, [ip], {78}	; 0x4e
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
	boost_mode = val;
 300:	0000000a 	andeq	r0, r0, sl

00000304 <.LC29>:
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:579
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
	else
		axp_regmap_clr_bits(map, 0x12, 0x80);
 304:	7078615b 	rsbsvc	r6, r8, fp, asr r1
 308:	35383532 	ldrcc	r3, [r8, #-1330]!	; 0xffffface
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:574

	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
 30c:	7078615d 	rsbsvc	r6, r8, sp, asr r1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	boost_mode = val;
 310:	7665645f 			; <UNDEFINED> instruction: 0x7665645f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:579
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
	else
		axp_regmap_clr_bits(map, 0x12, 0x80);
 314:	6e693e2d 	cdpvs	14, 6, cr3, cr9, cr13, {1}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:580
	return count;
 318:	72692074 	rsbvc	r2, r9, #116	; 0x74
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:581
}
 31c:	6e692071 	mcrvs	0, 3, r2, cr9, cr1, {3}
 320:	6e696c20 	cdpvs	12, 6, cr6, cr9, cr0, {1}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
	boost_mode = val;
 324:	64253a65 	strtvs	r3, [r5], #-2661	; 0xfffff59b
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:577
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
 328:	20666f20 	rsbcs	r6, r6, r0, lsr #30
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
	boost_mode = val;
 32c:	69206425 	stmdbvs	r0!, {r0, r2, r5, sl, sp, lr}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:577
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
 330:	73252073 	teqvc	r5, #115	; 0x73
 334:	544f4e20 	strbpl	r4, [pc], #-3616	; 33c <.LC29+0x38>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
	boost_mode = val;
 338:	4c554e20 	mrrcmi	14, 2, r4, r5, cr0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:577
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
 33c:	00000a4c 	andeq	r0, r0, ip, asr #20

00000340 <.LC30>:
 340:	7078615b 	rsbsvc	r6, r8, fp, asr r1
store_tc_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:537
	return s - buf;
}

static ssize_t store_tc_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
 344:	35383532 	ldrcc	r3, [r8, #-1330]!	; 0xffffface
 348:	7078615d 	rsbsvc	r6, r8, sp, asr r1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:540
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;
 34c:	7665645f 			; <UNDEFINED> instruction: 0x7665645f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:537
	return s - buf;
}

static ssize_t store_tc_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
 350:	72693e2d 	rsbvc	r3, r9, #720	; 0x2d0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:542
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;

	err = kstrtoint(buf, 16, &val);
 354:	6e692071 	mcrvs	0, 3, r2, cr9, cr1, {3}
 358:	6e696c20 	cdpvs	12, 6, cr6, cr9, cr0, {1}
 35c:	64253a65 	strtvs	r3, [r5], #-2661	; 0xfffff59b
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:540
static ssize_t store_tc_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;
 360:	20666f20 	rsbcs	r6, r6, r0, lsr #30
 364:	69207325 	stmdbvs	r0!, {r0, r2, r5, r8, r9, ip, sp, lr}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:542

	err = kstrtoint(buf, 16, &val);
 368:	4e202073 	mcrmi	0, 1, r2, cr0, cr3, {3}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:543
	if (err)
 36c:	0a4c4c55 	beq	13134c8 <axp2585_set_usb_vhold+0x1312284>
 370:	00000000 	andeq	r0, r0, r0

00000374 <.LC31>:
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:545
		return err;
	if (val > 3)
 374:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:547
		val = 1;
	tc_mode = val;
 378:	74206465 	strtvc	r6, [r0], #-1125	; 0xfffffb9b
 37c:	6572206f 	ldrbvs	r2, [r2, #-111]!	; 0xffffff91
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:548
		axp_regmap_update(map, 0x33, tc_mode, 0x03);
 380:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
 384:	73252074 	teqvc	r5, #116	; 0x74
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:545
	struct axp_regmap *map = chg_dev->chip->regmap;

	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val > 3)
 388:	51524920 	cmppl	r2, r0, lsr #18
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:546
		val = 1;
 38c:	3a642520 	bcc	1909814 <axp2585_set_usb_vhold+0x19085d0>
 390:	0a642520 	beq	1909818 <axp2585_set_usb_vhold+0x19085d4>
 394:	00000000 	andeq	r0, r0, r0

00000398 <.LC32>:
 398:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 39c:	74206465 	strtvc	r6, [r0], #-1125	; 0xfffffb9b
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:548
	tc_mode = val;
		axp_regmap_update(map, 0x33, tc_mode, 0x03);
 3a0:	7263206f 	rsbvc	r2, r3, #111	; 0x6f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:547
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val > 3)
		val = 1;
	tc_mode = val;
 3a4:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:548
		axp_regmap_update(map, 0x33, tc_mode, 0x03);
 3a8:	74746120 	ldrbtvc	r6, [r4], #-288	; 0xfffffee0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:549
	return count;
 3ac:	72672072 	rsbvc	r2, r7, #114	; 0x72
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:550
}
 3b0:	0a70756f 	beq	1c1d974 <axp2585_set_usb_vhold+0x1c1c730>
 3b4:	00000000 	andeq	r0, r0, r0

000003b8 <.LC33>:
axp2585_set_chg_vol():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:264
static int axp2585_set_chg_vol(struct axp_charger_dev *cdev, int vol)
{
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;

	if (vol > 3840 && vol < 4608)
 3b8:	65733301 	ldrbvs	r3, [r3, #-769]!	; 0xfffffcff
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:260
	axp_regmap_update(map, 0x8b, tmp, 0x3F);
	return 0;
}

static int axp2585_set_chg_vol(struct axp_charger_dev *cdev, int vol)
{
 3bc:	73752074 	cmnvc	r5, #116	; 0x74
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:264
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;

	if (vol > 3840 && vol < 4608)
 3c0:	696c2062 	stmdbvs	ip!, {r1, r5, r6, sp}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:262
}

static int axp2585_set_chg_vol(struct axp_charger_dev *cdev, int vol)
{
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;
 3c4:	2074696d 	rsbscs	r6, r4, sp, ror #18
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:264

	if (vol > 3840 && vol < 4608)
 3c8:	746c6f76 	strbtvc	r6, [ip], #-3958	; 0xfffff08a
 3cc:	20656761 	rsbcs	r6, r5, r1, ror #14
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:262
}

static int axp2585_set_chg_vol(struct axp_charger_dev *cdev, int vol)
{
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;
 3d0:	6f727265 	svcvs	0x00727265
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:264

	if (vol > 3840 && vol < 4608)
 3d4:	25202c72 	strcs	r2, [r0, #-3186]!	; 0xfffff38e
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:265
		tmp = (vol - 3840)/16;
 3d8:	566d2064 	strbtpl	r2, [sp], -r4, rrx
 3dc:	0000000a 	andeq	r0, r0, sl
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:270
	else {
		pr_warn("unsupported voltage: %dmv, use default 4200mv\n", vol);
		tmp = (4200 - 3840)/16;
	}
	axp_regmap_update(map, 0x8c, tmp << 2, 0xfc);
 3e0:	32707861 	rsbscc	r7, r0, #6356992	; 0x610000
 3e4:	2d353835 	ldccs	8, cr3, [r5, #-212]!	; 0xffffff2c
 3e8:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
 3ec:	00726567 	rsbseq	r6, r2, r7, ror #10
 3f0:	5f756d62 	svcpl	0x00756d62
 3f4:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:272
	return 0;
}
 3f8:	006c6f72 	rsbeq	r6, ip, r2, ror pc
 3fc:	65776f70 	ldrbvs	r6, [r7, #-3952]!	; 0xfffff090
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:267
	struct axp_regmap *map = cdev->chip->regmap;

	if (vol > 3840 && vol < 4608)
		tmp = (vol - 3840)/16;
	else {
		pr_warn("unsupported voltage: %dmv, use default 4200mv\n", vol);
 400:	00000072 	andeq	r0, r0, r2, ror r0
 404:	736f6f62 	cmnvc	pc, #392	; 0x188
 408:	6f6d5f74 	svcvs	0x006d5f74
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:268
		tmp = (4200 - 3840)/16;
 40c:	00006564 	andeq	r6, r0, r4, ror #10
 410:	6d5f6374 	ldclvs	3, cr6, [pc, #-464]	; 248 <.LC25+0x34>
axp2585_set_chg_cur():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:252
	if (cur == 0)
		axp_regmap_clr_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
	else
		axp_regmap_set_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
*/
	tmp = (cur) / 64;
 414:	0065646f 	rsbeq	r6, r5, pc, ror #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:243

	return axp2585_ibat_to_mA(dis_res);
}

static int axp2585_set_chg_cur(struct axp_charger_dev *cdev, int cur)
{
 418:	6f206361 	svcvs	0x00206361
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:252
	if (cur == 0)
		axp_regmap_clr_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
	else
		axp_regmap_set_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
*/
	tmp = (cur) / 64;
 41c:	00007475 	andeq	r7, r0, r5, ror r4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:245
}

static int axp2585_set_chg_cur(struct axp_charger_dev *cdev, int cur)
{
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;
 420:	20746162 	rsbscs	r6, r4, r2, ror #2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:252
	if (cur == 0)
		axp_regmap_clr_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
	else
		axp_regmap_set_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
*/
	tmp = (cur) / 64;
 424:	00006e69 	andeq	r6, r0, r9, ror #28
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:255
	if (tmp > 0x3f)
		tmp = 0x3f;
	axp_regmap_update(map, 0x8b, tmp, 0x3F);
 428:	20746162 	rsbscs	r6, r4, r2, ror #2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:252
	if (cur == 0)
		axp_regmap_clr_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
	else
		axp_regmap_set_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
*/
	tmp = (cur) / 64;
 42c:	0074756f 	rsbseq	r7, r4, pc, ror #10
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:255
	if (tmp > 0x3f)
		tmp = 0x3f;
	axp_regmap_update(map, 0x8b, tmp, 0x3F);
 430:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
 434:	676e6967 	strbvs	r6, [lr, -r7, ror #18]!
 438:	00000000 	andeq	r0, r0, r0
 43c:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
 440:	6f206567 	svcvs	0x00206567
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:257
	return 0;
}
 444:	00726576 	rsbseq	r6, r2, r6, ror r5
 448:	20776f6c 	rsbscs	r6, r7, ip, ror #30
axp2585_private_debug():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:612
	.name = "bmu_control",
	.attrs = bmu_control_attrs,
};

static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
 44c:	6e726177 	mrcvs	1, 3, r6, cr2, cr7, {3}
 450:	31676e69 	cmncc	r7, r9, ror #28
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:614
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;
 454:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:612
	.name = "bmu_control",
	.attrs = bmu_control_attrs,
};

static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
 458:	20776f6c 	rsbscs	r6, r7, ip, ror #30
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:617
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, 0x5a, 2, tmp);
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 45c:	6e726177 	mrcvs	1, 3, r6, cr2, cr7, {3}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:616
static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, 0x5a, 2, tmp);
 460:	32676e69 	rsbcc	r6, r7, #1680	; 0x690
 464:	00000000 	andeq	r0, r0, r0
 468:	20495450 	subcs	r5, r9, r0, asr r4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:614
};

static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;
 46c:	33334c50 	teqcc	r3, #80, 24	; 0x5000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:617

	axp_regmap_reads(map, 0x5a, 2, tmp);
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 470:	38373036 	ldmdacc	r7!, {r1, r2, r4, r5, ip, sp}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:616
static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, 0x5a, 2, tmp);
 474:	00000000 	andeq	r0, r0, r0

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
axp2585_set_ac_ihold():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:40
}

static int axp2585_set_ac_ihold(struct axp_charger_dev *cdev, int cur)
{
	return 0;
}
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
axp2585_get_usb_current():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:68
}

static int axp2585_get_usb_current(struct axp_charger_dev *cdev)
{
	return 0;
}
   8:	7c010003 	stcvc	0, cr0, [r1], {3}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
axp2585_get_bat_health():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:189
}

static int axp2585_get_bat_health(struct axp_charger_dev *cdev)
{
	return POWER_SUPPLY_HEALTH_GOOD;
}
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
axp2585_charger_resume():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:763

	return 0;
}

static int axp2585_charger_resume(struct platform_device *dev)
{
  18:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:768
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);
	int pre_rest_vol;

	if (axp_suspend_flag == AXP_SUSPEND_WITH_IRQ) {
		axp_suspend_flag = AXP_NOT_SUSPEND;
  1c:	00000008 	andeq	r0, r0, r8
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  20:	0000000c 	andeq	r0, r0, ip
axp2585_charger_resume():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:768
  24:	00000000 	andeq	r0, r0, r0
  28:	00000008 	andeq	r0, r0, r8
  2c:	00000008 	andeq	r0, r0, r8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:774
	//	sunxi_nmi_enable();
	} else {
		axp_suspend_flag = AXP_NOT_SUSPEND;
	}
	pre_rest_vol = chg_dev->rest_vol;
	axp_charger_resume(chg_dev);
  30:	0000000c 	andeq	r0, r0, ip
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:773
		axp_suspend_flag = AXP_NOT_SUSPEND;
	//	sunxi_nmi_enable();
	} else {
		axp_suspend_flag = AXP_NOT_SUSPEND;
	}
	pre_rest_vol = chg_dev->rest_vol;
  34:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:774
	axp_charger_resume(chg_dev);
  38:	00000010 	andeq	r0, r0, r0, lsl r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:776

	if (chg_dev->rest_vol - pre_rest_vol) {
  3c:	00000008 	andeq	r0, r0, r8
  40:	00000018 	andeq	r0, r0, r8, lsl r0
  44:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:783
				pre_rest_vol, chg_dev->rest_vol);
		/*axp_regmap_write(map, 0x05, chg_dev->rest_vol | 0x80);*/
	}

	return 0;
}
  48:	00000000 	andeq	r0, r0, r0
  4c:	00000044 	andeq	r0, r0, r4, asr #32
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:777
	}
	pre_rest_vol = chg_dev->rest_vol;
	axp_charger_resume(chg_dev);

	if (chg_dev->rest_vol - pre_rest_vol) {
		pr_info("battery vol change: %d->%d\n",
  50:	00000804 	andeq	r0, r0, r4, lsl #16
  54:	84080e00 	strhi	r0, [r8], #-3584	; 0xfffff200
  58:	00018e02 	andeq	r8, r1, r2, lsl #28
  5c:	0000001c 	andeq	r0, r0, ip, lsl r0
  60:	00000000 	andeq	r0, r0, r0
axp2585_charger_suspend():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
static int axp2585_charger_suspend(struct platform_device *dev,
				pm_message_t state)
{
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_suspend_flag = AXP_WAS_SUSPEND;
  64:	00000018 	andeq	r0, r0, r8, lsl r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:753
	return 0;
}

static int axp2585_charger_suspend(struct platform_device *dev,
				pm_message_t state)
{
  68:	0000004c 	andeq	r0, r0, ip, asr #32
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_suspend_flag = AXP_WAS_SUSPEND;
  6c:	00000404 	andeq	r0, r0, r4, lsl #8
  70:	84100e00 	ldrhi	r0, [r0], #-3584	; 0xfffff200
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  74:	86038504 	strhi	r8, [r3], -r4, lsl #10
axp2585_charger_suspend():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
  78:	00018e02 	andeq	r8, r1, r2, lsl #28
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:757
	axp_charger_suspend(chg_dev);
  7c:	00000018 	andeq	r0, r0, r8, lsl r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:760

	return 0;
}
  80:	00000000 	andeq	r0, r0, r0
  84:	00000064 	andeq	r0, r0, r4, rrx
axp2585_charger_shutdown():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:789

static void axp2585_charger_shutdown(struct platform_device *dev)
{
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_charger_shutdown(chg_dev);
  88:	00000024 	andeq	r0, r0, r4, lsr #32
  8c:	00000804 	andeq	r0, r0, r4, lsl #16
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:734
fail:
	return -1;
}

static int axp2585_charger_remove(struct platform_device *pdev)
{
  90:	84080e00 	strhi	r0, [r8], #-3584	; 0xfffff200
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  94:	00018e02 	andeq	r8, r1, r2, lsl #28
  98:	0000000c 	andeq	r0, r0, ip
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:734
  9c:	00000000 	andeq	r0, r0, r0
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  a0:	00000088 	andeq	r0, r0, r8, lsl #1
  a4:	00000008 	andeq	r0, r0, r8
  a8:	00000020 	andeq	r0, r0, r0, lsr #32
  ac:	00000000 	andeq	r0, r0, r0
  b0:	00000090 	muleq	r0, r0, r0
  b4:	00000064 	andeq	r0, r0, r4, rrx
  b8:	00000404 	andeq	r0, r0, r4, lsl #8
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:740
	int i, irq;
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
  bc:	84180e00 	ldrhi	r0, [r8], #-3584	; 0xfffff200
  c0:	86058506 	strhi	r8, [r5], -r6, lsl #10
  c4:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:741
		if (irq < 0)
  c8:	00018e02 	andeq	r8, r1, r2, lsl #28
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:743
			continue;
		axp_free_irq(axp_dev, irq);
  cc:	0000001c 	andeq	r0, r0, ip, lsl r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:741
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
		if (irq < 0)
  d0:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:743
			continue;
		axp_free_irq(axp_dev, irq);
  d4:	000000f4 	strdeq	r0, [r0], -r4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:739 (discriminator 2)
{
	int i, irq;
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
  d8:	00000054 	andeq	r0, r0, r4, asr r0
  dc:	00000404 	andeq	r0, r0, r4, lsl #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:746
		if (irq < 0)
			continue;
		axp_free_irq(axp_dev, irq);
	}

	axp_power_supply_unregister(chg_dev);
  e0:	84100e00 	ldrhi	r0, [r0], #-3584	; 0xfffff200
  e4:	86038504 	strhi	r8, [r3], -r4, lsl #10
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:749

	return 0;
}
  e8:	00018e02 	andeq	r8, r1, r2, lsl #28
  ec:	0000001c 	andeq	r0, r0, ip, lsl r0
  f0:	00000000 	andeq	r0, r0, r0
show_boost_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:554
	return count;
}

static ssize_t show_boost_mode(struct device *dev,
			struct device_attribute *attr, char *buf)
{
  f4:	00000148 	andeq	r0, r0, r8, asr #2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:558
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "1: open  0: close");
  f8:	00000054 	andeq	r0, r0, r4, asr r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:554
	return count;
}

static ssize_t show_boost_mode(struct device *dev,
			struct device_attribute *attr, char *buf)
{
  fc:	00000404 	andeq	r0, r0, r4, lsl #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:558
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "1: open  0: close");
 100:	84100e00 	ldrhi	r0, [r0], #-3584	; 0xfffff200
 104:	86038504 	strhi	r8, [r3], -r4, lsl #10
 108:	00018e02 	andeq	r8, r1, r2, lsl #28
 10c:	00000024 	andeq	r0, r0, r4, lsr #32
 110:	00000000 	andeq	r0, r0, r0
 114:	0000019c 	muleq	r0, ip, r1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:559
	s += scnprintf(s, end - s, "boost_mode=%d\n", boost_mode);
 118:	00000054 	andeq	r0, r0, r4, asr r0
 11c:	00000404 	andeq	r0, r0, r4, lsl #8
 120:	8e040e00 	cdphi	14, 0, cr0, cr4, cr0, {0}
 124:	00040401 	andeq	r0, r4, r1, lsl #8
 128:	100e0000 	andne	r0, lr, r0
 12c:	00004804 	andeq	r4, r0, r4, lsl #16
 130:	00040e00 	andeq	r0, r4, r0, lsl #28
 134:	00000024 	andeq	r0, r0, r4, lsr #32
 138:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:560
	return s - buf;
 13c:	000001f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:561
}
 140:	0000003c 	andeq	r0, r0, ip, lsr r0
 144:	00000404 	andeq	r0, r0, r4, lsl #8
show_tc_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:526
static int tc_mode = 1;
static int boost_mode = 1;
static int power = 1;
static ssize_t show_tc_mode(struct device *dev,
			    struct device_attribute *attr, char *buf)
{
 148:	8e040e00 	cdphi	14, 0, cr0, cr4, cr0, {0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:530
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "0: close 1: sink 2: source 3: drp");
 14c:	00040401 	andeq	r0, r4, r1, lsl #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:526
static int tc_mode = 1;
static int boost_mode = 1;
static int power = 1;
static ssize_t show_tc_mode(struct device *dev,
			    struct device_attribute *attr, char *buf)
{
 150:	100e0000 	andne	r0, lr, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:530
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "0: close 1: sink 2: source 3: drp");
 154:	00003004 	andeq	r3, r0, r4
 158:	00040e00 	andeq	r0, r4, r0, lsl #28
 15c:	00000028 	andeq	r0, r0, r8, lsr #32
 160:	00000000 	andeq	r0, r0, r0
 164:	0000022c 	andeq	r0, r0, ip, lsr #4
 168:	00000050 	andeq	r0, r0, r0, asr r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:531
	s += scnprintf(s, end - s, "tc_mode=%d\n", tc_mode);
 16c:	00000404 	andeq	r0, r0, r4, lsl #8
 170:	84100e00 	ldrhi	r0, [r0], #-3584	; 0xfffff200
 174:	86038504 	strhi	r8, [r3], -r4, lsl #10
 178:	04018e02 	streq	r8, [r1], #-3586	; 0xfffff1fe
 17c:	00000048 	andeq	r0, r0, r8, asr #32
 180:	c4c5c6ce 	strbgt	ip, [r5], #1742	; 0x6ce
 184:	0000000e 	andeq	r0, r0, lr
 188:	00000024 	andeq	r0, r0, r4, lsr #32
 18c:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:532
	return s - buf;
 190:	0000027c 	andeq	r0, r0, ip, ror r2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:533
}
 194:	0000003c 	andeq	r0, r0, ip, lsr r0
 198:	00000404 	andeq	r0, r0, r4, lsl #8
axp2585_get_vbat():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:197
{
	return ((int)(((reg >> 8) << 4) | (reg & 0x000F))) * 1200 / 1000;
}

static int axp2585_get_vbat(struct axp_charger_dev *cdev)
{
 19c:	8e040e00 	cdphi	14, 0, cr0, cr4, cr0, {0}
 1a0:	00040401 	andeq	r0, r4, r1, lsl #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:200
	u8 tmp[2];
	u32 res;
	struct axp_regmap *map = cdev->chip->regmap;
 1a4:	100e0000 	andne	r0, lr, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:202

	axp_regmap_reads(map, AXP2585_VBATH_RES, 2, tmp);
 1a8:	00003004 	andeq	r3, r0, r4
 1ac:	00040e00 	andeq	r0, r4, r0, lsl #28
 1b0:	00000030 	andeq	r0, r0, r0, lsr r0
 1b4:	00000000 	andeq	r0, r0, r0
 1b8:	000002b8 			; <UNDEFINED> instruction: 0x000002b8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:203
	res = (tmp[0] << 8) | tmp[1];
 1bc:	0000008c 	andeq	r0, r0, ip, lsl #1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:205

	return axp2585_vbat_to_mV(res);
 1c0:	00000404 	andeq	r0, r0, r4, lsl #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:203
	u8 tmp[2];
	u32 res;
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, AXP2585_VBATH_RES, 2, tmp);
	res = (tmp[0] << 8) | tmp[1];
 1c4:	840c0e00 	strhi	r0, [ip], #-3584	; 0xfffff200
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:205

	return axp2585_vbat_to_mV(res);
 1c8:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
 1cc:	000c0401 	andeq	r0, ip, r1, lsl #8
 1d0:	180e0000 	stmdane	lr, {}	; <UNPREDICTABLE>
 1d4:	00005804 	andeq	r5, r0, r4, lsl #16
 1d8:	0c0e0a00 	stceq	10, cr0, [lr], {-0}
 1dc:	00000404 	andeq	r0, r0, r4, lsl #8
 1e0:	00000b00 	andeq	r0, r0, r0, lsl #22
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:206
}
 1e4:	00000028 	andeq	r0, r0, r8, lsr #32
 1e8:	00000000 	andeq	r0, r0, r0
 1ec:	00000344 	andeq	r0, r0, r4, asr #6
axp2585_get_disibat():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:231

	return axp2585_icharge_to_mA(res);
}

static int axp2585_get_disibat(struct axp_charger_dev *cdev)
{
 1f0:	00000074 	andeq	r0, r0, r4, ror r0
 1f4:	00000404 	andeq	r0, r0, r4, lsl #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:234
	u8 tmp[2];
	u32 dis_res;
	struct axp_regmap *map = cdev->chip->regmap;
 1f8:	840c0e00 	strhi	r0, [ip], #-3584	; 0xfffff200
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:236

	axp_regmap_reads(map, AXP2585_DISIBATH_REG, 2, tmp);
 1fc:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
 200:	000c0401 	andeq	r0, ip, r1, lsl #8
 204:	180e0000 	stmdane	lr, {}	; <UNPREDICTABLE>
 208:	00006004 	andeq	r6, r0, r4
 20c:	000c0e00 	andeq	r0, ip, r0, lsl #28
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:237
	dis_res = (tmp[0] << 8) | tmp[1];
 210:	00000018 	andeq	r0, r0, r8, lsl r0
 214:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:239

	return axp2585_ibat_to_mA(dis_res);
 218:	000003b8 			; <UNDEFINED> instruction: 0x000003b8
 21c:	0000005c 	andeq	r0, r0, ip, asr r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:240
}
 220:	00000804 	andeq	r0, r0, r4, lsl #16
 224:	84080e00 	strhi	r0, [r8], #-3584	; 0xfffff200
 228:	00018e02 	andeq	r8, r1, r2, lsl #28
axp2585_power_show():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:585
	return count;
}

static ssize_t axp2585_power_show(struct device *dev,
			    struct device_attribute *attr, char *buf)
{
 22c:	00000018 	andeq	r0, r0, r8, lsl r0
 230:	00000000 	andeq	r0, r0, r0
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
 234:	00000414 	andeq	r0, r0, r4, lsl r4
axp2585_power_show():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:590
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);
	int vbat, ibat;
	vbat = axp2585_get_vbat(chg_dev);
 238:	00000038 	andeq	r0, r0, r8, lsr r0
 23c:	00000804 	andeq	r0, r0, r4, lsl #16
 240:	84080e00 	strhi	r0, [r8], #-3584	; 0xfffff200
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:591
	ibat = axp2585_get_disibat(chg_dev);
 244:	00018e02 	andeq	r8, r1, r2, lsl #28
 248:	00000038 	andeq	r0, r0, r8, lsr r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:593
	power = vbat*ibat/1000;
	s += scnprintf(s, end - s, "%dmV\n", power);
 24c:	00000000 	andeq	r0, r0, r0
 250:	0000044c 	andeq	r0, r0, ip, asr #8
 254:	00000100 	andeq	r0, r0, r0, lsl #2
 258:	00000404 	andeq	r0, r0, r4, lsl #8
 25c:	84100e00 	ldrhi	r0, [r0], #-3584	; 0xfffff200
 260:	86038504 	strhi	r8, [r3], -r4, lsl #10
 264:	04018e02 	streq	r8, [r1], #-3586	; 0xfffff1fe
 268:	0000000c 	andeq	r0, r0, ip
 26c:	5004180e 	andpl	r1, r4, lr, lsl #16
 270:	0a000000 	beq	278 <.debug_frame+0x278>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:595
	return s - buf;
}
 274:	0404100e 	streq	r1, [r4], #-14
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:593
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);
	int vbat, ibat;
	vbat = axp2585_get_vbat(chg_dev);
	ibat = axp2585_get_disibat(chg_dev);
	power = vbat*ibat/1000;
	s += scnprintf(s, end - s, "%dmV\n", power);
 278:	0b000000 	bleq	280 <.debug_frame+0x280>
axp2585_get_ibat():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:219
{
	return (int)((((reg >> 8) << 4) | (reg & 0x000F)) << 1);
}

static int axp2585_get_ibat(struct axp_charger_dev *cdev)
{
 27c:	00009804 	andeq	r9, r0, r4, lsl #16
 280:	00100e00 	andseq	r0, r0, r0, lsl #28
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:222
	u8 tmp[2];
	u32 res;
	struct axp_regmap *map = cdev->chip->regmap;
 284:	00000038 	andeq	r0, r0, r8, lsr r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:224

	axp_regmap_reads(map, AXP2585_IBATH_REG, 2, tmp);
 288:	00000000 	andeq	r0, r0, r0
 28c:	0000054c 	andeq	r0, r0, ip, asr #10
 290:	00000270 	andeq	r0, r0, r0, ror r2
 294:	00000404 	andeq	r0, r0, r4, lsl #8
 298:	84200e00 	strthi	r0, [r0], #-3584	; 0xfffff200
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:225
	res = (tmp[0] << 8) | tmp[1];
 29c:	86078508 	strhi	r8, [r7], -r8, lsl #10
 2a0:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:227

	return axp2585_icharge_to_mA(res);
 2a4:	8a038904 	bhi	e26bc <axp2585_set_usb_vhold+0xe1478>
 2a8:	04018e02 	streq	r8, [r1], #-3586	; 0xfffff1fe
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:228
}
 2ac:	00000004 	andeq	r0, r0, r4
 2b0:	3004280e 	andcc	r2, r4, lr, lsl #16
 2b4:	0a000000 	beq	2bc <.debug_frame+0x2bc>
store_boost_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:565
	return s - buf;
}

static ssize_t store_boost_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
 2b8:	0404200e 	streq	r2, [r4], #-14
 2bc:	0b000000 	bleq	2c4 <.debug_frame+0x2c4>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:568
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;
 2c0:	00000024 	andeq	r0, r0, r4, lsr #32
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:565
	return s - buf;
}

static ssize_t store_boost_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
 2c4:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:570
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;

	err = kstrtoint(buf, 16, &val);
 2c8:	000007bc 			; <UNDEFINED> instruction: 0x000007bc
 2cc:	00000034 	andeq	r0, r0, r4, lsr r0
 2d0:	00000404 	andeq	r0, r0, r4, lsl #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:568
static ssize_t store_boost_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;
 2d4:	8e040e00 	cdphi	14, 0, cr0, cr4, cr0, {0}
 2d8:	00040401 	andeq	r0, r4, r1, lsl #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:570

	err = kstrtoint(buf, 16, &val);
 2dc:	100e0000 	andne	r0, lr, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:571
	if (err)
 2e0:	00002804 	andeq	r2, r0, r4, lsl #16
 2e4:	00040e00 	andeq	r0, r4, r0, lsl #28
 2e8:	00000024 	andeq	r0, r0, r4, lsr #32
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:573
		return err;
	if (val != 1)
 2ec:	00000000 	andeq	r0, r0, r0
 2f0:	000007f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 2f4:	00000034 	andeq	r0, r0, r4, lsr r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
		val = 0;
	boost_mode = val;
 2f8:	00000404 	andeq	r0, r0, r4, lsl #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:579
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
	else
		axp_regmap_clr_bits(map, 0x12, 0x80);
 2fc:	8e040e00 	cdphi	14, 0, cr0, cr4, cr0, {0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
	boost_mode = val;
 300:	00040401 	andeq	r0, r4, r1, lsl #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:579
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
	else
		axp_regmap_clr_bits(map, 0x12, 0x80);
 304:	100e0000 	andne	r0, lr, r0
 308:	00002804 	andeq	r2, r0, r4, lsl #16
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:574

	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
 30c:	00040e00 	andeq	r0, r4, r0, lsl #28
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	boost_mode = val;
 310:	00000058 	andeq	r0, r0, r8, asr r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:579
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
	else
		axp_regmap_clr_bits(map, 0x12, 0x80);
 314:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:580
	return count;
 318:	00000824 	andeq	r0, r0, r4, lsr #16
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:581
}
 31c:	0000097c 	andeq	r0, r0, ip, ror r9
 320:	00000404 	andeq	r0, r0, r4, lsl #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
	boost_mode = val;
 324:	84240e00 	strthi	r0, [r4], #-3584	; 0xfffff200
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:577
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
 328:	86088509 	strhi	r8, [r8], -r9, lsl #10
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
	boost_mode = val;
 32c:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:577
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
 330:	8a048905 	bhi	12274c <axp2585_set_usb_vhold+0x121508>
 334:	8e028b03 	vmlahi.f64	d8, d2, d3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
	boost_mode = val;
 338:	00140401 	andseq	r0, r4, r1, lsl #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:577
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
 33c:	900e0000 	andls	r0, lr, r0
 340:	06400401 	strbeq	r0, [r0], -r1, lsl #8
store_tc_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:537
	return s - buf;
}

static ssize_t store_tc_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
 344:	0e0a0000 	cdpeq	0, 0, cr0, cr10, cr0, {0}
 348:	00040424 	andeq	r0, r4, r4, lsr #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:540
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;
 34c:	040b0000 	streq	r0, [fp], #-0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:537
	return s - buf;
}

static ssize_t store_tc_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
 350:	00000100 	andeq	r0, r0, r0, lsl #2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:542
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;

	err = kstrtoint(buf, 16, &val);
 354:	04240e0a 	strteq	r0, [r4], #-3594	; 0xfffff1f6
 358:	00000004 	andeq	r0, r0, r4
 35c:	0114040b 	tsteq	r4, fp, lsl #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:540
static ssize_t store_tc_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;
 360:	0e0a0000 	cdpeq	0, 0, cr0, cr10, cr0, {0}
 364:	00040424 	andeq	r0, r4, r4, lsr #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:542

	err = kstrtoint(buf, 16, &val);
 368:	000b0000 	andeq	r0, fp, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:543
	if (err)
 36c:	00000038 	andeq	r0, r0, r8, lsr r0
 370:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:545
		return err;
	if (val > 3)
 374:	000011a0 	andeq	r1, r0, r0, lsr #3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:547
		val = 1;
	tc_mode = val;
 378:	00000074 	andeq	r0, r0, r4, ror r0
 37c:	00000c04 	andeq	r0, r0, r4, lsl #24
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:548
		axp_regmap_update(map, 0x33, tc_mode, 0x03);
 380:	84100e00 	ldrhi	r0, [r0], #-3584	; 0xfffff200
 384:	86038504 	strhi	r8, [r3], -r4, lsl #10
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:545
	struct axp_regmap *map = chg_dev->chip->regmap;

	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val > 3)
 388:	04018e02 	streq	r8, [r1], #-3586	; 0xfffff1fe
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:546
		val = 1;
 38c:	00000044 	andeq	r0, r0, r4, asr #32
 390:	c5c4000e 	strbgt	r0, [r4, #14]
 394:	0804cec6 	stmdaeq	r4, {r1, r2, r6, r7, r9, sl, fp, lr, pc}
 398:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
 39c:	85048410 	strhi	r8, [r4, #-1040]	; 0xfffffbf0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:548
	tc_mode = val;
		axp_regmap_update(map, 0x33, tc_mode, 0x03);
 3a0:	8e028603 	cfmadd32hi	mvax0, mvfx8, mvfx2, mvfx3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:547
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val > 3)
		val = 1;
	tc_mode = val;
 3a4:	00000001 	andeq	r0, r0, r1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:548
		axp_regmap_update(map, 0x33, tc_mode, 0x03);
 3a8:	0000000c 	andeq	r0, r0, ip
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:549
	return count;
 3ac:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:550
}
 3b0:	00001214 	andeq	r1, r0, r4, lsl r2
 3b4:	00000008 	andeq	r0, r0, r8
axp2585_set_chg_vol():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:264
static int axp2585_set_chg_vol(struct axp_charger_dev *cdev, int vol)
{
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;

	if (vol > 3840 && vol < 4608)
 3b8:	0000000c 	andeq	r0, r0, ip
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:260
	axp_regmap_update(map, 0x8b, tmp, 0x3F);
	return 0;
}

static int axp2585_set_chg_vol(struct axp_charger_dev *cdev, int vol)
{
 3bc:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:264
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;

	if (vol > 3840 && vol < 4608)
 3c0:	0000121c 	andeq	r1, r0, ip, lsl r2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:262
}

static int axp2585_set_chg_vol(struct axp_charger_dev *cdev, int vol)
{
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;
 3c4:	00000008 	andeq	r0, r0, r8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:264

	if (vol > 3840 && vol < 4608)
 3c8:	0000000c 	andeq	r0, r0, ip
 3cc:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:262
}

static int axp2585_set_chg_vol(struct axp_charger_dev *cdev, int vol)
{
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;
 3d0:	00001224 	andeq	r1, r0, r4, lsr #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:264

	if (vol > 3840 && vol < 4608)
 3d4:	00000008 	andeq	r0, r0, r8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:265
		tmp = (vol - 3840)/16;
 3d8:	0000000c 	andeq	r0, r0, ip
 3dc:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:270
	else {
		pr_warn("unsupported voltage: %dmv, use default 4200mv\n", vol);
		tmp = (4200 - 3840)/16;
	}
	axp_regmap_update(map, 0x8c, tmp << 2, 0xfc);
 3e0:	0000122c 	andeq	r1, r0, ip, lsr #4
 3e4:	00000008 	andeq	r0, r0, r8
 3e8:	0000000c 	andeq	r0, r0, ip
 3ec:	00000000 	andeq	r0, r0, r0
 3f0:	00001234 	andeq	r1, r0, r4, lsr r2
 3f4:	00000008 	andeq	r0, r0, r8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:272
	return 0;
}
 3f8:	0000000c 	andeq	r0, r0, ip
 3fc:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:267
	struct axp_regmap *map = cdev->chip->regmap;

	if (vol > 3840 && vol < 4608)
		tmp = (vol - 3840)/16;
	else {
		pr_warn("unsupported voltage: %dmv, use default 4200mv\n", vol);
 400:	0000123c 	andeq	r1, r0, ip, lsr r2
 404:	00000008 	andeq	r0, r0, r8
 408:	00000038 	andeq	r0, r0, r8, lsr r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:268
		tmp = (4200 - 3840)/16;
 40c:	00000000 	andeq	r0, r0, r0
 410:	00001244 	andeq	r1, r0, r4, asr #4
axp2585_set_chg_cur():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:252
	if (cur == 0)
		axp_regmap_clr_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
	else
		axp_regmap_set_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
*/
	tmp = (cur) / 64;
 414:	00000074 	andeq	r0, r0, r4, ror r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:243

	return axp2585_ibat_to_mA(dis_res);
}

static int axp2585_set_chg_cur(struct axp_charger_dev *cdev, int cur)
{
 418:	00000c04 	andeq	r0, r0, r4, lsl #24
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:252
	if (cur == 0)
		axp_regmap_clr_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
	else
		axp_regmap_set_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
*/
	tmp = (cur) / 64;
 41c:	84100e00 	ldrhi	r0, [r0], #-3584	; 0xfffff200
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:245
}

static int axp2585_set_chg_cur(struct axp_charger_dev *cdev, int cur)
{
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;
 420:	86038504 	strhi	r8, [r3], -r4, lsl #10
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:252
	if (cur == 0)
		axp_regmap_clr_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
	else
		axp_regmap_set_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
*/
	tmp = (cur) / 64;
 424:	04018e02 	streq	r8, [r1], #-3586	; 0xfffff1fe
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:255
	if (tmp > 0x3f)
		tmp = 0x3f;
	axp_regmap_update(map, 0x8b, tmp, 0x3F);
 428:	00000044 	andeq	r0, r0, r4, asr #32
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:252
	if (cur == 0)
		axp_regmap_clr_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
	else
		axp_regmap_set_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
*/
	tmp = (cur) / 64;
 42c:	c5c4000e 	strbgt	r0, [r4, #14]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:255
	if (tmp > 0x3f)
		tmp = 0x3f;
	axp_regmap_update(map, 0x8b, tmp, 0x3F);
 430:	0804cec6 	stmdaeq	r4, {r1, r2, r6, r7, r9, sl, fp, lr, pc}
 434:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
 438:	85048410 	strhi	r8, [r4, #-1040]	; 0xfffffbf0
 43c:	8e028603 	cfmadd32hi	mvax0, mvfx8, mvfx2, mvfx3
 440:	00000001 	andeq	r0, r0, r1

Disassembly of section .debug_info:

00000000 <.debug_info>:
axp2585_set_ac_ihold():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:40
}

static int axp2585_set_ac_ihold(struct axp_charger_dev *cdev, int cur)
{
	return 0;
}
       0:	00005db6 			; <UNDEFINED> instruction: 0x00005db6
       4:	00000004 	andeq	r0, r0, r4
axp2585_get_usb_current():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:68
}

static int axp2585_get_usb_current(struct axp_charger_dev *cdev)
{
	return 0;
}
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	000019c6 	andeq	r1, r0, r6, asr #19
axp2585_get_bat_health():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:189
}

static int axp2585_get_bat_health(struct axp_charger_dev *cdev)
{
	return POWER_SUPPLY_HEALTH_GOOD;
}
      10:	000c6e01 	andeq	r6, ip, r1, lsl #28
      14:	001cfe00 	andseq	pc, ip, r0, lsl #28
axp2585_charger_resume():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:763

	return 0;
}

static int axp2585_charger_resume(struct platform_device *dev)
{
      18:	00008000 	andeq	r8, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:768
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);
	int pre_rest_vol;

	if (axp_suspend_flag == AXP_SUSPEND_WITH_IRQ) {
		axp_suspend_flag = AXP_NOT_SUSPEND;
      1c:	00000000 	andeq	r0, r0, r0
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
      20:	00000000 	andeq	r0, r0, r0
axp2585_charger_resume():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:768
      24:	03040200 	movweq	r0, #16896	; 0x4200
      28:	00d80704 	sbcseq	r0, r8, r4, lsl #14
      2c:	27040000 	strcs	r0, [r4, -r0]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:774
	//	sunxi_nmi_enable();
	} else {
		axp_suspend_flag = AXP_NOT_SUSPEND;
	}
	pre_rest_vol = chg_dev->rest_vol;
	axp_charger_resume(chg_dev);
      30:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:773
		axp_suspend_flag = AXP_NOT_SUSPEND;
	//	sunxi_nmi_enable();
	} else {
		axp_suspend_flag = AXP_NOT_SUSPEND;
	}
	pre_rest_vol = chg_dev->rest_vol;
      34:	05000000 	streq	r0, [r0, #-0]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:774
	axp_charger_resume(chg_dev);
      38:	0000003e 	andeq	r0, r0, lr, lsr r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:776

	if (chg_dev->rest_vol - pre_rest_vol) {
      3c:	04030001 	streq	r0, [r3], #-1
      40:	00361907 	eorseq	r1, r6, r7, lsl #18
      44:	52040600 	andpl	r0, r4, #0, 12
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:783
				pre_rest_vol, chg_dev->rest_vol);
		/*axp_regmap_write(map, 0x05, chg_dev->rest_vol | 0x80);*/
	}

	return 0;
}
      48:	03000000 	movweq	r0, #0
      4c:	40150801 	andsmi	r0, r5, r1, lsl #16
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:777
	}
	pre_rest_vol = chg_dev->rest_vol;
	axp_charger_resume(chg_dev);

	if (chg_dev->rest_vol - pre_rest_vol) {
		pr_info("battery vol change: %d->%d\n",
      50:	4b070000 	blmi	1c0058 <axp2585_set_usb_vhold+0x1bee14>
      54:	03000000 	movweq	r0, #0
      58:	478b0704 	strmi	r0, [fp, r4, lsl #14]
      5c:	01030000 	mrseq	r0, (UNDEF: 3)
      60:	003a0c06 	eorseq	r0, sl, r6, lsl #24
axp2585_charger_suspend():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
static int axp2585_charger_suspend(struct platform_device *dev,
				pm_message_t state)
{
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_suspend_flag = AXP_WAS_SUSPEND;
      64:	0f6e0800 	svceq	0x006e0800
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:753
	return 0;
}

static int axp2585_charger_suspend(struct platform_device *dev,
				pm_message_t state)
{
      68:	14040000 	strne	r0, [r4], #-0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_suspend_flag = AXP_WAS_SUSPEND;
      6c:	00000070 	andeq	r0, r0, r0, ror r0
      70:	4a080103 	bmi	200414 <axp2585_set_usb_vhold+0x1ff1d0>
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
      74:	03000025 	movweq	r0, #37	; 0x25
axp2585_charger_suspend():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
      78:	30770502 	rsbscc	r0, r7, r2, lsl #10
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:757
	axp_charger_suspend(chg_dev);
      7c:	10080000 	andne	r0, r8, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:760

	return 0;
}
      80:	04000045 	streq	r0, [r0], #-69	; 0xffffffbb
      84:	00008917 	andeq	r8, r0, r7, lsl r9
axp2585_charger_shutdown():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:789

static void axp2585_charger_shutdown(struct platform_device *dev)
{
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_charger_shutdown(chg_dev);
      88:	07020300 	streq	r0, [r2, -r0, lsl #6]
      8c:	0000220a 	andeq	r2, r0, sl, lsl #4
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:734
fail:
	return -1;
}

static int axp2585_charger_remove(struct platform_device *pdev)
{
      90:	69050409 	stmdbvs	r5, {r0, r3, sl}
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
      94:	0800746e 	stmdaeq	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
      98:	00004653 	andeq	r4, r0, r3, asr r6
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:734
      9c:	00571a04 	subseq	r1, r7, r4, lsl #20
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
      a0:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
      a4:	00000005 	andeq	r0, r0, r5
      a8:	07080300 	streq	r0, [r8, -r0, lsl #6]
      ac:	00003cb0 			; <UNDEFINED> instruction: 0x00003cb0
      b0:	0038730a 	eorseq	r7, r8, sl, lsl #6
      b4:	005e0f05 	subseq	r0, lr, r5, lsl #30
      b8:	750a0000 	strvc	r0, [sl, #-0]
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:740
	int i, irq;
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
      bc:	10050038 	andne	r0, r5, r8, lsr r0
      c0:	00000070 	andeq	r0, r0, r0, ror r0
      c4:	3631750a 	ldrtcc	r7, [r1], -sl, lsl #10
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:741
		if (irq < 0)
      c8:	89130500 	ldmdbhi	r3, {r8, sl}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:743
			continue;
		axp_free_irq(axp_dev, irq);
      cc:	0a000000 	beq	d4 <.debug_info+0xd4>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:741
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
		if (irq < 0)
      d0:	00323373 	eorseq	r3, r2, r3, ror r3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:743
			continue;
		axp_free_irq(axp_dev, irq);
      d4:	00901505 	addseq	r1, r0, r5, lsl #10
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:739 (discriminator 2)
{
	int i, irq;
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
      d8:	750a0000 	strvc	r0, [sl, #-0]
      dc:	05003233 	streq	r3, [r0, #-563]	; 0xfffffdcd
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:746
		if (irq < 0)
			continue;
		axp_free_irq(axp_dev, irq);
	}

	axp_power_supply_unregister(chg_dev);
      e0:	00005716 	andeq	r5, r0, r6, lsl r7
      e4:	36730a00 	ldrbtcc	r0, [r3], -r0, lsl #20
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:749

	return 0;
}
      e8:	18050034 	stmdane	r5, {r2, r4, r5}
      ec:	000000a2 	andeq	r0, r0, r2, lsr #1
      f0:	3436750a 	ldrtcc	r7, [r6], #-1290	; 0xfffffaf6
show_boost_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:554
	return count;
}

static ssize_t show_boost_mode(struct device *dev,
			struct device_attribute *attr, char *buf)
{
      f4:	a9190500 	ldmdbge	r9, {r8, sl}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:558
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "1: open  0: close");
      f8:	03000000 	movweq	r0, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:554
	return count;
}

static ssize_t show_boost_mode(struct device *dev,
			struct device_attribute *attr, char *buf)
{
      fc:	33700504 	cmncc	r0, #4, 10	; 0x1000000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:558
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "1: open  0: close");
     100:	d2080000 	andle	r0, r8, #0
     104:	0600003c 			; <UNDEFINED> instruction: 0x0600003c
     108:	00005730 	andeq	r5, r0, r0, lsr r7
     10c:	02540800 	subseq	r0, r4, #0, 16
     110:	31060000 	mrscc	r0, (UNDEF: 6)
     114:	00000057 	andeq	r0, r0, r7, asr r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:559
	s += scnprintf(s, end - s, "boost_mode=%d\n", boost_mode);
     118:	00301e08 	eorseq	r1, r0, r8, lsl #28
     11c:	57430600 	strbpl	r0, [r3, -r0, lsl #12]
     120:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     124:	00003fa7 	andeq	r3, r0, r7, lsr #31
     128:	00904406 	addseq	r4, r0, r6, lsl #8
     12c:	08080000 	stmdaeq	r8, {}	; <UNPREDICTABLE>
     130:	06000032 			; <UNDEFINED> instruction: 0x06000032
     134:	00009045 	andeq	r9, r0, r5, asr #32
     138:	2a5a0800 	bcs	1682008 <axp2585_set_usb_vhold+0x1680dc4>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:560
	return s - buf;
     13c:	57060000 	strpl	r0, [r6, -r0]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:561
}
     140:	000000a2 	andeq	r0, r0, r2, lsr #1
     144:	004b0406 	subeq	r0, fp, r6, lsl #8
show_tc_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:526
static int tc_mode = 1;
static int boost_mode = 1;
static int power = 1;
static ssize_t show_tc_mode(struct device *dev,
			    struct device_attribute *attr, char *buf)
{
     148:	7d0b0000 	stcvc	0, cr0, [fp, #-0]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:530
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "0: close 1: sink 2: source 3: drp");
     14c:	08000013 	stmdaeq	r0, {r0, r1, r4}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:526
static int tc_mode = 1;
static int boost_mode = 1;
static int power = 1;
static ssize_t show_tc_mode(struct device *dev,
			    struct device_attribute *attr, char *buf)
{
     150:	016f1a07 	cmneq	pc, r7, lsl #20
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:530
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "0: close 1: sink 2: source 3: drp");
     154:	0e0c0000 	cdpeq	0, 0, cr0, cr12, cr0, {0}
     158:	07000029 	streq	r0, [r0, -r9, lsr #32]
     15c:	0000271c 	andeq	r2, r0, ip, lsl r7
     160:	030c0000 	movweq	r0, #49152	; 0xc000
     164:	07000003 	streq	r0, [r0, -r3]
     168:	0000451d 	andeq	r4, r0, sp, lsl r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:531
	s += scnprintf(s, end - s, "tc_mode=%d\n", tc_mode);
     16c:	08000400 	stmdaeq	r0, {sl}
     170:	00003081 	andeq	r3, r0, r1, lsl #1
     174:	00970c08 	addseq	r0, r7, r8, lsl #24
     178:	3c080000 	stccc	0, cr0, [r8], {-0}
     17c:	08000046 	stmdaeq	r0, {r1, r2, r6}
     180:	00016f0f 	andeq	r6, r1, pc, lsl #30
     184:	02be0800 	adcseq	r0, lr, #0, 16
     188:	12080000 	andne	r0, r8, #0
     18c:	00000089 	andeq	r0, r0, r9, lsl #1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:532
	return s - buf;
     190:	00077a08 	andeq	r7, r7, r8, lsl #20
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:533
}
     194:	9b1d0800 	blls	74219c <axp2585_set_usb_vhold+0x740f58>
     198:	03000001 	movweq	r0, #1
axp2585_get_vbat():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:197
{
	return ((int)(((reg >> 8) << 4) | (reg & 0x000F))) * 1200 / 1000;
}

static int axp2585_get_vbat(struct axp_charger_dev *cdev)
{
     19c:	18300201 	ldmdane	r0!, {r0, r9}
     1a0:	7c080000 	stcvc	0, cr0, [r8], {-0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:200
	u8 tmp[2];
	u32 res;
	struct axp_regmap *map = cdev->chip->regmap;
     1a4:	0800002b 	stmdaeq	r0, {r0, r1, r3, r5}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:202

	axp_regmap_reads(map, AXP2585_VBATH_RES, 2, tmp);
     1a8:	0001021f 	andeq	r0, r1, pc, lsl r2
     1ac:	21ec0800 	mvncs	r0, r0, lsl #16
     1b0:	20080000 	andcs	r0, r8, r0
     1b4:	0000010d 	andeq	r0, r0, sp, lsl #2
     1b8:	00037c08 	andeq	r7, r3, r8, lsl #24
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:203
	res = (tmp[0] << 8) | tmp[1];
     1bc:	392d0800 	stmfdcc	sp!, {fp}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:205

	return axp2585_vbat_to_mV(res);
     1c0:	08000001 	stmdaeq	r0, {r0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:203
	u8 tmp[2];
	u32 res;
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, AXP2585_VBATH_RES, 2, tmp);
	res = (tmp[0] << 8) | tmp[1];
     1c4:	000009a6 	andeq	r0, r0, r6, lsr #19
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:205

	return axp2585_vbat_to_mV(res);
     1c8:	01183608 	tsteq	r8, r8, lsl #12
     1cc:	e3080000 	movw	r0, #32768	; 0x8000
     1d0:	08000045 	stmdaeq	r0, {r0, r2, r6}
     1d4:	0001233b 	andeq	r2, r1, fp, lsr r3
     1d8:	45240800 	strmi	r0, [r4, #-2048]!	; 0xfffff800
     1dc:	40080000 	andmi	r0, r8, r0
     1e0:	0000012e 	andeq	r0, r0, lr, lsr #2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:206
}
     1e4:	0023a808 	eoreq	sl, r3, r8, lsl #16
     1e8:	656a0800 	strbvs	r0, [sl, #-2048]!	; 0xfffff800
     1ec:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
axp2585_get_disibat():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:231

	return axp2585_icharge_to_mA(res);
}

static int axp2585_get_disibat(struct axp_charger_dev *cdev)
{
     1f0:	00003bed 	andeq	r3, r0, sp, ror #23
     1f4:	007e6b08 	rsbseq	r6, lr, r8, lsl #22
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:234
	u8 tmp[2];
	u32 dis_res;
	struct axp_regmap *map = cdev->chip->regmap;
     1f8:	1d080000 	stcne	0, cr0, [r8, #-0]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:236

	axp_regmap_reads(map, AXP2585_DISIBATH_REG, 2, tmp);
     1fc:	08000026 	stmdaeq	r0, {r1, r2, r5}
     200:	0000daa4 	andeq	sp, r0, r4, lsr #21
     204:	27970800 	ldrcs	r0, [r7, r0, lsl #16]
     208:	a7080000 	strge	r0, [r8, -r0]
     20c:	000001fa 	strdeq	r0, [r0], -sl
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:237
	dis_res = (tmp[0] << 8) | tmp[1];
     210:	af08040d 	svcge	0x0008040d
     214:	00000225 	andeq	r0, r0, r5, lsr #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:239

	return axp2585_ibat_to_mA(dis_res);
     218:	002aae0c 	eoreq	sl, sl, ip, lsl #28
     21c:	90b00800 	adcsls	r0, r0, r0, lsl #16
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:240
}
     220:	00000000 	andeq	r0, r0, r0
     224:	28050800 	stmdacs	r5, {fp}
     228:	b1080000 	mrslt	r0, (UNDEF: 8)
axp2585_power_show():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:585
	return count;
}

static ssize_t axp2585_power_show(struct device *dev,
			    struct device_attribute *attr, char *buf)
{
     22c:	00000210 	andeq	r0, r0, r0, lsl r2
     230:	002ad80b 	eoreq	sp, sl, fp, lsl #16
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
     234:	b9080800 	stmdblt	r8, {fp}
axp2585_power_show():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:590
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);
	int vbat, ibat;
	vbat = axp2585_get_vbat(chg_dev);
     238:	00000255 	andeq	r0, r0, r5, asr r2
     23c:	0016e40c 	andseq	lr, r6, ip, lsl #8
     240:	55ba0800 	ldrpl	r0, [sl, #2048]!	; 0x800
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:591
	ibat = axp2585_get_disibat(chg_dev);
     244:	00000002 	andeq	r0, r0, r2
     248:	0036b90c 	eorseq	fp, r6, ip, lsl #18
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:593
	power = vbat*ibat/1000;
	s += scnprintf(s, end - s, "%dmV\n", power);
     24c:	55ba0800 	ldrpl	r0, [sl, #2048]!	; 0x800
     250:	04000002 	streq	r0, [r0], #-2
     254:	30040600 	andcc	r0, r4, r0, lsl #12
     258:	0b000002 	bleq	268 <.debug_info+0x268>
     25c:	00003afd 	strdeq	r3, [r0], -sp
     260:	80c10808 	sbchi	r0, r1, r8, lsl #16
     264:	0c000002 	stceq	0, cr0, [r0], {2}
     268:	000016e4 	andeq	r1, r0, r4, ror #13
     26c:	0280c208 	addeq	ip, r0, #8, 4	; 0x80000000
     270:	0c000000 	stceq	0, cr0, [r0], {-0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:595
	return s - buf;
}
     274:	00002af6 	strdeq	r2, [r0], -r6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:593
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);
	int vbat, ibat;
	vbat = axp2585_get_vbat(chg_dev);
	ibat = axp2585_get_disibat(chg_dev);
	power = vbat*ibat/1000;
	s += scnprintf(s, end - s, "%dmV\n", power);
     278:	0286c208 	addeq	ip, r6, #8, 4	; 0x80000000
axp2585_get_ibat():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:219
{
	return (int)((((reg >> 8) << 4) | (reg & 0x000F)) << 1);
}

static int axp2585_get_ibat(struct axp_charger_dev *cdev)
{
     27c:	00040000 	andeq	r0, r4, r0
     280:	025b0406 	subseq	r0, fp, #100663296	; 0x6000000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:222
	u8 tmp[2];
	u32 res;
	struct axp_regmap *map = cdev->chip->regmap;
     284:	04060000 	streq	r0, [r6], #-0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:224

	axp_regmap_reads(map, AXP2585_IBATH_REG, 2, tmp);
     288:	00000280 	andeq	r0, r0, r0, lsl #5
     28c:	000ade0b 	andeq	sp, sl, fp, lsl #28
     290:	df080800 	svcle	0x00080800
     294:	000002b1 			; <UNDEFINED> instruction: 0x000002b1
     298:	0016e40c 	andseq	lr, r6, ip, lsl #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:225
	res = (tmp[0] << 8) | tmp[1];
     29c:	b1e00800 	mvnlt	r0, r0, lsl #16
     2a0:	00000002 	andeq	r0, r0, r2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:227

	return axp2585_icharge_to_mA(res);
     2a4:	00121a0c 	andseq	r1, r2, ip, lsl #20
     2a8:	c2e10800 	rscgt	r0, r1, #0, 16
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:228
}
     2ac:	04000002 	streq	r0, [r0], #-2
     2b0:	8c040600 	stchi	6, cr0, [r4], {-0}
     2b4:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
store_boost_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:565
	return s - buf;
}

static ssize_t store_boost_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
     2b8:	000002c2 	andeq	r0, r0, r2, asr #5
     2bc:	0002b10f 	andeq	fp, r2, pc, lsl #2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:568
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;
     2c0:	04060000 	streq	r0, [r6], #-0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:565
	return s - buf;
}

static ssize_t store_boost_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
     2c4:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:570
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;

	err = kstrtoint(buf, 16, &val);
     2c8:	00344908 	eorseq	r4, r4, r8, lsl #18
     2cc:	d37c0900 	cmnle	ip, #0, 18
     2d0:	06000002 	streq	r0, [r0], -r2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:568
static ssize_t store_boost_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;
     2d4:	0002d904 	andeq	sp, r2, r4, lsl #18
     2d8:	00901000 	addseq	r1, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:570

	err = kstrtoint(buf, 16, &val);
     2dc:	04060000 	streq	r0, [r6], #-0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:571
	if (err)
     2e0:	000002e4 	andeq	r0, r0, r4, ror #5
     2e4:	3f720b11 	svccc	0x00720b11
     2e8:	0a080000 	beq	2002f0 <axp2585_set_usb_vhold+0x1ff0ac>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:573
		return err;
	if (val != 1)
     2ec:	00030a12 	andeq	r0, r3, r2, lsl sl
     2f0:	42010c00 	andmi	r0, r1, #0, 24
     2f4:	140a0000 	strne	r0, [sl], #-0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
		val = 0;
	boost_mode = val;
     2f8:	00000027 	andeq	r0, r0, r7, lsr #32
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:579
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
	else
		axp_regmap_clr_bits(map, 0x12, 0x80);
     2fc:	3f420c00 	svccc	0x00420c00
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
	boost_mode = val;
     300:	200a0000 	andcs	r0, sl, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:579
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
	else
		axp_regmap_clr_bits(map, 0x12, 0x80);
     304:	00000089 	andeq	r0, r0, r9, lsl #1
     308:	b10b0004 	tstlt	fp, r4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:574

	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
     30c:	10000003 	andne	r0, r0, r3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	boost_mode = val;
     310:	0347170b 	movteq	r1, #30475	; 0x770b
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:579
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
	else
		axp_regmap_clr_bits(map, 0x12, 0x80);
     314:	310c0000 	mrscc	r0, (UNDEF: 12)
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:580
	return count;
     318:	0b000026 	bleq	3b8 <.debug_info+0x3b8>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:581
}
     31c:	00035218 	andeq	r5, r3, r8, lsl r2
     320:	3a0c0000 	bcc	300008 <axp2585_set_usb_vhold+0x2fedc4>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
	boost_mode = val;
     324:	0b00003e 	bleq	424 <.debug_info+0x424>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:577
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
     328:	00035219 	andeq	r5, r3, r9, lsl r2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
	boost_mode = val;
     32c:	f40c0400 	vst3.8	{d0-d2}, [ip], r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:577
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
     330:	0b000037 	bleq	414 <.debug_info+0x414>
     334:	0003521a 	andeq	r5, r3, sl, lsl r2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
	boost_mode = val;
     338:	970c0800 	strls	r0, [ip, -r0, lsl #16]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:577
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
     33c:	0b000029 	bleq	3e8 <.debug_info+0x3e8>
     340:	0000271b 	andeq	r2, r0, fp, lsl r7
store_tc_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:537
	return s - buf;
}

static ssize_t store_tc_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
     344:	0e000c00 	cdpeq	12, 0, cr0, cr0, cr0, {0}
     348:	00000352 	andeq	r0, r0, r2, asr r3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:540
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;
     34c:	0000270f 	andeq	r2, r0, pc, lsl #14
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:537
	return s - buf;
}

static ssize_t store_tc_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
     350:	04060000 	streq	r0, [r6], #-0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:542
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;

	err = kstrtoint(buf, 16, &val);
     354:	00000347 	andeq	r0, r0, r7, asr #6
     358:	00423a0b 	subeq	r3, r2, fp, lsl #20
     35c:	120c1c00 	andne	r1, ip, #0, 24
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:540
static ssize_t store_tc_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;
     360:	000003b9 			; <UNDEFINED> instruction: 0x000003b9
     364:	0033ec0c 	eorseq	lr, r3, ip, lsl #24
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:542

	err = kstrtoint(buf, 16, &val);
     368:	05130c00 	ldreq	r0, [r3, #-3072]	; 0xfffff400
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:543
	if (err)
     36c:	00000002 	andeq	r0, r0, r2
     370:	646e6512 	strbtvs	r6, [lr], #-1298	; 0xfffffaee
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:545
		return err;
	if (val > 3)
     374:	05140c00 	ldreq	r0, [r4, #-3072]	; 0xfffff400
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:547
		val = 1;
	tc_mode = val;
     378:	04000002 	streq	r0, [r0], #-2
     37c:	0003030c 	andeq	r0, r3, ip, lsl #6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:548
		axp_regmap_update(map, 0x33, tc_mode, 0x03);
     380:	45150c00 	ldrmi	r0, [r5, #-3072]	; 0xfffff400
     384:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:545
	struct axp_regmap *map = chg_dev->chip->regmap;

	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val > 3)
     388:	003f420c 	eorseq	r4, pc, ip, lsl #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:546
		val = 1;
     38c:	27160c00 	ldrcs	r0, [r6, -r0, lsl #24]
     390:	0c000000 	stceq	0, cr0, [r0], {-0}
     394:	00186c0c 	andseq	r6, r8, ip, lsl #24
     398:	b9170c00 	ldmdblt	r7, {sl, fp}
     39c:	10000003 	andne	r0, r0, r3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:548
	tc_mode = val;
		axp_regmap_update(map, 0x33, tc_mode, 0x03);
     3a0:	0001fd0c 	andeq	pc, r1, ip, lsl #26
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:547
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val > 3)
		val = 1;
	tc_mode = val;
     3a4:	b9170c00 	ldmdblt	r7, {sl, fp}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:548
		axp_regmap_update(map, 0x33, tc_mode, 0x03);
     3a8:	14000003 	strne	r0, [r0], #-3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:549
	return count;
     3ac:	00448e0c 	subeq	r8, r4, ip, lsl #28
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:550
}
     3b0:	b9170c00 	ldmdblt	r7, {sl, fp}
     3b4:	18000003 	stmdane	r0, {r0, r1}
axp2585_set_chg_vol():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:264
static int axp2585_set_chg_vol(struct axp_charger_dev *cdev, int vol)
{
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;

	if (vol > 3840 && vol < 4608)
     3b8:	58040600 	stmdapl	r4, {r9, sl}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:260
	axp_regmap_update(map, 0x8b, tmp, 0x3F);
	return 0;
}

static int axp2585_set_chg_vol(struct axp_charger_dev *cdev, int vol)
{
     3bc:	06000003 	streq	r0, [r0], -r3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:264
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;

	if (vol > 3840 && vol < 4608)
     3c0:	0003c504 	andeq	ip, r3, r4, lsl #10
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:262
}

static int axp2585_set_chg_vol(struct axp_charger_dev *cdev, int vol)
{
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;
     3c4:	20c31300 	sbccs	r1, r3, r0, lsl #6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:264

	if (vol > 3840 && vol < 4608)
     3c8:	04060000 	streq	r0, [r6], #-0
     3cc:	000003d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:262
}

static int axp2585_set_chg_vol(struct axp_charger_dev *cdev, int vol)
{
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;
     3d0:	00249e13 	eoreq	r9, r4, r3, lsl lr
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:264

	if (vol > 3840 && vol < 4608)
     3d4:	41111300 	tstmi	r1, r0, lsl #6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:265
		tmp = (vol - 3840)/16;
     3d8:	04060000 	streq	r0, [r6], #-0
     3dc:	000003d5 	ldrdeq	r0, [r0], -r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:270
	else {
		pr_warn("unsupported voltage: %dmv, use default 4200mv\n", vol);
		tmp = (4200 - 3840)/16;
	}
	axp_regmap_update(map, 0x8c, tmp << 2, 0xfc);
     3e0:	190d0014 	stmdbne	sp, {r2, r4}
     3e4:	001c7b08 	andseq	r7, ip, r8, lsl #22
     3e8:	e0190d00 	ands	r0, r9, r0, lsl #26
     3ec:	14000003 	strne	r0, [r0], #-3
     3f0:	081f0d00 	ldmdaeq	pc, {r8, sl, fp}	; <UNPREDICTABLE>
     3f4:	00002c0f 	andeq	r2, r0, pc, lsl #24
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:272
	return 0;
}
     3f8:	03ef210d 	mvneq	r2, #1073741827	; 0x40000003
     3fc:	a1150000 	tstge	r5, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:267
	struct axp_regmap *map = cdev->chip->regmap;

	if (vol > 3840 && vol < 4608)
		tmp = (vol - 3840)/16;
	else {
		pr_warn("unsupported voltage: %dmv, use default 4200mv\n", vol);
     400:	00000020 	andeq	r0, r0, r0, lsr #32
     404:	0b01a543 	bleq	69918 <axp2585_set_usb_vhold+0x686d4>
     408:	0000457a 	andeq	r4, r0, sl, ror r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:268
		tmp = (4200 - 3840)/16;
     40c:	20140e00 	andscs	r0, r4, r0, lsl #28
     410:	0c000004 	stceq	0, cr0, [r0], {4}
axp2585_set_chg_cur():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:252
	if (cur == 0)
		axp_regmap_clr_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
	else
		axp_regmap_set_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
*/
	tmp = (cur) / 64;
     414:	00004372 	andeq	r4, r0, r2, ror r3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:243

	return axp2585_ibat_to_mA(dis_res);
}

static int axp2585_set_chg_cur(struct axp_charger_dev *cdev, int cur)
{
     418:	03e4150e 	mvneq	r1, #58720256	; 0x3800000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:252
	if (cur == 0)
		axp_regmap_clr_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
	else
		axp_regmap_set_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
*/
	tmp = (cur) / 64;
     41c:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:245
}

static int axp2585_set_chg_cur(struct axp_charger_dev *cdev, int cur)
{
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;
     420:	0043a408 	subeq	sl, r3, r8, lsl #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:252
	if (cur == 0)
		axp_regmap_clr_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
	else
		axp_regmap_set_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
*/
	tmp = (cur) / 64;
     424:	07200e00 	streq	r0, [r0, -r0, lsl #28]!
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:255
	if (tmp > 0x3f)
		tmp = 0x3f;
	axp_regmap_update(map, 0x8b, tmp, 0x3F);
     428:	16000004 	strne	r0, [r0], -r4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:252
	if (cur == 0)
		axp_regmap_clr_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
	else
		axp_regmap_set_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
*/
	tmp = (cur) / 64;
     42c:	3f410e00 	svccc	0x00410e00
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:255
	if (tmp > 0x3f)
		tmp = 0x3f;
	axp_regmap_update(map, 0x8b, tmp, 0x3F);
     430:	17000004 	strne	r0, [r0, -r4]
     434:	0000188a 	andeq	r1, r0, sl, lsl #17
     438:	0407420e 	streq	r4, [r7], #-526	; 0xfffffdf2
     43c:	0b000000 	bleq	444 <.debug_info+0x444>
     440:	00003f69 	andeq	r3, r0, r9, ror #30
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:257
	return 0;
}
     444:	52400e00 	subpl	r0, r0, #0, 28
     448:	18000004 	stmdane	r0, {r2}
axp2585_private_debug():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:612
	.name = "bmu_control",
	.attrs = bmu_control_attrs,
};

static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
     44c:	0000042b 	andeq	r0, r0, fp, lsr #8
     450:	51080000 	mrspl	r0, (UNDEF: 8)
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:614
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;
     454:	0e00003e 	mcreq	0, 0, r0, cr0, cr14, {1}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:612
	.name = "bmu_control",
	.attrs = bmu_control_attrs,
};

static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
     458:	00043f4c 	andeq	r3, r4, ip, asr #30
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:617
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, 0x5a, 2, tmp);
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     45c:	0f000d00 	svceq	0x00000d00
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:616
static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, 0x5a, 2, tmp);
     460:	0004720b 	andeq	r7, r4, fp, lsl #4
     464:	43720c00 	cmnmi	r2, #0, 24
     468:	0c0f0000 	stceq	0, cr0, [pc], {-0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:614
};

static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;
     46c:	000003f3 	strdeq	r0, [r0], -r3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:617

	axp_regmap_reads(map, 0x5a, 2, tmp);
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     470:	22080000 	andcs	r0, r8, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:616
static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, 0x5a, 2, tmp);
     474:	0f00001e 	svceq	0x0000001e
     478:	00045d17 	andeq	r5, r4, r7, lsl sp
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:617
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     47c:	31b00800 	lslscc	r0, r0, #16
     480:	1e100000 	cdpne	0, 1, cr0, cr0, cr0, {0}
     484:	00000225 	andeq	r0, r0, r5, lsr #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:620
			"acin_vol = %d\n", ((tmp[0] << 4) | (tmp[1] & 0xF))
			* 8);
	axp_regmap_reads(map, 0xbc, 2, tmp);
     488:	003b080b 	eorseq	r0, fp, fp, lsl #16
     48c:	32110c00 	andscc	r0, r1, #0, 24
     490:	000004b9 			; <UNDEFINED> instruction: 0x000004b9
     494:	002ad20c 	eoreq	sp, sl, ip, lsl #4
     498:	25341100 	ldrcs	r1, [r4, #-256]!	; 0xffffff00
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:621
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     49c:	00000002 	andeq	r0, r0, r2
     4a0:	00068b0c 	andeq	r8, r6, ip, lsl #22
     4a4:	52351100 	eorspl	r1, r5, #0, 2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:625
			"ocv_vol = %d\n", ((tmp[0] << 4) | (tmp[1] & 0xF))
			* 1200 / 1000);

}
     4a8:	04000004 	streq	r0, [r0], #-4
     4ac:	0043250c 	subeq	r2, r3, ip, lsl #10
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:617 (discriminator 1)
{
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, 0x5a, 2, tmp);
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     4b0:	30361100 	eorscc	r1, r6, r0, lsl #2
     4b4:	04000002 	streq	r0, [r0], #-2
     4b8:	3f9f0b00 	svccc	0x009f0b00
     4bc:	12040000 	andne	r0, r4, #0
     4c0:	0004d20f 	andeq	sp, r4, pc, lsl #4
     4c4:	3f1b0c00 	svccc	0x001b0c00
     4c8:	0f120000 	svceq	0x00120000
     4cc:	000004d2 	ldrdeq	r0, [r0], -r2
     4d0:	27040000 	strcs	r0, [r4, -r0]
     4d4:	e2000000 	and	r0, r0, #0
     4d8:	05000004 	streq	r0, [r0, #-4]
     4dc:	0000003e 	andeq	r0, r0, lr, lsr r0
     4e0:	780b0000 	stmdavc	fp, {}	; <UNPREDICTABLE>
     4e4:	0800003d 	stmdaeq	r0, {r0, r2, r3, r4, r5}
     4e8:	05072713 	streq	r2, [r7, #-1811]	; 0xfffff8ed
     4ec:	410c0000 	mrsmi	r0, (UNDEF: 12)
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:621 (discriminator 1)
			"acin_vol = %d\n", ((tmp[0] << 4) | (tmp[1] & 0xF))
			* 8);
	axp_regmap_reads(map, 0xbc, 2, tmp);
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     4f0:	1300000e 	movwne	r0, #14
     4f4:	00045228 	andeq	r5, r4, r8, lsr #4
     4f8:	600c0000 	andvs	r0, ip, r0
     4fc:	13000003 	movwne	r0, #3
     500:	00023029 	andeq	r3, r2, r9, lsr #32
     504:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     508:	00001611 	andeq	r1, r0, r1, lsl r6
     50c:	04e22b13 	strbteq	r2, [r2], #2835	; 0xb13
     510:	930b0000 	movwls	r0, #45056	; 0xb000
     514:	0c000024 	stceq	0, cr0, [r0], {36}	; 0x24
     518:	05371914 	ldreq	r1, [r7, #-2324]!	; 0xfffff6ec
     51c:	000c0000 	andeq	r0, ip, r0
     520:	14000028 	strne	r0, [r0], #-40	; 0xffffffd8
     524:	0000571a 	andeq	r5, r0, sl, lsl r7
     528:	d50c0000 	strle	r0, [ip, #-0]
     52c:	14000023 	strne	r0, [r0], #-35	; 0xffffffdd
     530:	0005071b 	andeq	r0, r5, fp, lsl r7
     534:	19000400 	stmdbne	r0, {sl}
     538:	00003b78 	andeq	r3, r0, r8, ror fp
     53c:	4f251508 	svcmi	0x00251508
     540:	17000005 	strne	r0, [r0, -r5]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:625 (discriminator 1)
			"ocv_vol = %d\n", ((tmp[0] << 4) | (tmp[1] & 0xF))
			* 1200 / 1000);

}
     544:	00001e42 	andeq	r1, r0, r2, asr #28
     548:	00e52615 	rsceq	r2, r5, r5, lsl r6
axp2585_get_rest_cap():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:142
	.set_usb_ihold   = axp2585_set_usb_ihold,
	.get_usb_ihold   = axp2585_get_usb_ihold,
};

static int axp2585_get_rest_cap(struct axp_charger_dev *cdev)
{
     54c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     550:	00002dfc 	strdeq	r2, [r0], -ip
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:148
	u8 val, temp_val[2], tmp[2];
	u8 ocv_percent = 0;
	u8 coulomb_percent = 0;
	int batt_max_cap, coulumb_counter;
	int rest_vol;
	struct axp_regmap *map = cdev->chip->regmap;
     554:	05372915 	ldreq	r2, [r7, #-2325]!	; 0xfffff6eb
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:142
	.set_usb_ihold   = axp2585_set_usb_ihold,
	.get_usb_ihold   = axp2585_get_usb_ihold,
};

static int axp2585_get_rest_cap(struct axp_charger_dev *cdev)
{
     558:	20160000 	andscs	r0, r6, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:150
	u8 coulomb_percent = 0;
	int batt_max_cap, coulumb_counter;
	int rest_vol;
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_read(map, AXP2585_CAP, &val);
     55c:	05792316 	ldrbeq	r2, [r9, #-790]!	; 0xfffffcea
     560:	27170000 	ldrcs	r0, [r7, -r0]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:148
	u8 val, temp_val[2], tmp[2];
	u8 ocv_percent = 0;
	u8 coulomb_percent = 0;
	int batt_max_cap, coulumb_counter;
	int rest_vol;
	struct axp_regmap *map = cdev->chip->regmap;
     564:	16000042 	strne	r0, [r0], -r2, asr #32
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:150

	axp_regmap_read(map, AXP2585_CAP, &val);
     568:	00057925 	andeq	r7, r5, r5, lsr #18
     56c:	0ade1700 	beq	ff785c08 <axp2585_set_usb_vhold+0xff7849c4>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:151
	if (!(val & 0x80))
     570:	26160000 	ldrcs	r0, [r6], -r0
     574:	0000028c 	andeq	r0, r0, ip, lsl #5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:152
		return 0;
     578:	00270400 	eoreq	r0, r7, r0, lsl #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:151
	int batt_max_cap, coulumb_counter;
	int rest_vol;
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_read(map, AXP2585_CAP, &val);
	if (!(val & 0x80))
     57c:	05890000 	streq	r0, [r9]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:184
						* 1456 / 1000;

	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
			"batt_max_cap = %d\n", batt_max_cap);
	return rest_vol;
}
     580:	3e050000 	cdpcc	0, 0, cr0, cr5, cr0, {0}
     584:	07000000 	streq	r0, [r0, -r0]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:154

	axp_regmap_read(map, AXP2585_CAP, &val);
	if (!(val & 0x80))
		return 0;
	rest_vol = (int) (val & 0x7F);
	axp_regmap_read(map, 0xe4, &tmp[0]);
     588:	24e71a00 	strbtcs	r1, [r7], #2560	; 0xa00
     58c:	042c0000 	strteq	r0, [ip], #-0
     590:	05cf1e16 	strbeq	r1, [pc, #3606]	; 13ae <.debug_info+0x13ae>
     594:	a20c0000 	andge	r0, ip, #0
     598:	16000008 	strne	r0, [r0], -r8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:155
	if (tmp[0] & 0x80) {
     59c:	0000901f 	andeq	r9, r0, pc, lsl r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:153
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_read(map, AXP2585_CAP, &val);
	if (!(val & 0x80))
		return 0;
	rest_vol = (int) (val & 0x7F);
     5a0:	050c0000 	streq	r0, [ip, #-0]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:155
	axp_regmap_read(map, 0xe4, &tmp[0]);
	if (tmp[0] & 0x80) {
     5a4:	16000002 	strne	r0, [r0], -r2
     5a8:	00009020 	andeq	r9, r0, r0, lsr #32
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:160
		ocv_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
     5ac:	61120400 	tstvs	r2, r0, lsl #8
     5b0:	16007972 			; <UNDEFINED> instruction: 0x16007972
     5b4:	0005cf21 	andeq	ip, r5, r1, lsr #30
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:163
	if (tmp[0] & 0x80) {
		coulomb_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     5b8:	d21b0800 	andsle	r0, fp, #0, 16
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:160
	if (tmp[0] & 0x80) {
		ocv_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
     5bc:	1600002a 	strne	r0, [r0], -sl, lsr #32
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:161
	if (tmp[0] & 0x80) {
     5c0:	00009022 	andeq	r9, r0, r2, lsr #32
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:163
		coulomb_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     5c4:	1c040800 	stcne	8, cr0, [r4], {-0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:161
		ocv_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
	if (tmp[0] & 0x80) {
     5c8:	0000055a 	andeq	r0, r0, sl, asr r5
     5cc:	0400040c 	streq	r0, [r0], #-1036	; 0xfffffbf4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:173
		axp_regmap_clr_bits(map, AXP2585_COULOMB_CTL, 0x80);
		axp_regmap_set_bits(map, AXP2585_COULOMB_CTL, 0x80);
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num, "Reset coulumb\n");
		rest_vol = 100;
	}
	axp_regmap_reads(map, 0xe2, 2, temp_val);
     5d0:	000005df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     5d4:	000005df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     5d8:	00003e05 	andeq	r3, r0, r5, lsl #28
     5dc:	0600ff00 	streq	pc, [r0], -r0, lsl #30
     5e0:	00058904 	andeq	r8, r5, r4, lsl #18
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:177
	coulumb_counter = (((temp_val[0] & 0x7f) << 8) + temp_val[1])
						* 1456 / 1000;

	axp_regmap_reads(map, 0xe0, 2, temp_val);
     5e4:	64691d00 	strbtvs	r1, [r9], #-3328	; 0xfffff300
     5e8:	16180072 			; <UNDEFINED> instruction: 0x16180072
     5ec:	0006462a 	andeq	r4, r6, sl, lsr #12
     5f0:	08c10c00 	stmiaeq	r1, {sl, fp}^
     5f4:	2b160000 	blcs	5805fc <axp2585_set_usb_vhold+0x57f3b8>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:181
	batt_max_cap = (((temp_val[0] & 0x7f) << 8) + temp_val[1])
						* 1456 / 1000;

	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     5f8:	000005df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     5fc:	6f741200 	svcvs	0x00741200
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:183
			"batt_max_cap = %d\n", batt_max_cap);
	return rest_vol;
     600:	2c160070 	ldccs	0, cr0, [r6], {112}	; 0x70
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:181

	axp_regmap_reads(map, 0xe0, 2, temp_val);
	batt_max_cap = (((temp_val[0] & 0x7f) << 8) + temp_val[1])
						* 1456 / 1000;

	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     604:	000005df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:181 (discriminator 1)
     608:	0a800c04 	beq	fe003018 <axp2585_set_usb_vhold+0xfe001dd4>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:178 (discriminator 1)
	axp_regmap_reads(map, 0xe2, 2, temp_val);
	coulumb_counter = (((temp_val[0] & 0x7f) << 8) + temp_val[1])
						* 1456 / 1000;

	axp_regmap_reads(map, 0xe0, 2, temp_val);
	batt_max_cap = (((temp_val[0] & 0x7f) << 8) + temp_val[1])
     60c:	2d160000 	ldccs	0, cr0, [r6, #-0]
     610:	00000090 	muleq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:181 (discriminator 1)
						* 1456 / 1000;

	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     614:	75631208 	strbvc	r1, [r3, #-520]!	; 0xfffffdf8
     618:	2e160072 	mrccs	0, 0, r0, cr6, cr2, {3}
     61c:	00000090 	muleq	r0, r0, r0
     620:	0e410c0c 	cdpeq	12, 4, cr0, cr1, cr12, {0}
     624:	2f160000 	svccs	0x00160000
     628:	00000452 	andeq	r0, r0, r2, asr r4
     62c:	08d80c10 	ldmeq	r8, {r4, sl, fp}^
     630:	30160000 	andscc	r0, r6, r0
     634:	00000090 	muleq	r0, r0, r0
     638:	1e020c10 	mcrne	12, 0, r0, cr2, cr0, {0}
     63c:	31160000 	tstcc	r6, r0
     640:	000005df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     644:	550b0014 	strpl	r0, [fp, #-20]	; 0xffffffec
     648:	80000023 	andhi	r0, r0, r3, lsr #32
     64c:	066b9516 			; <UNDEFINED> instruction: 0x066b9516
     650:	5b0c0000 	blpl	300008 <axp2585_set_usb_vhold+0x2fedc4>
     654:	1600000f 	strne	r0, [r0], -pc
     658:	0000fb96 	muleq	r0, r6, fp
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:183 (discriminator 1)
			"batt_max_cap = %d\n", batt_max_cap);
	return rest_vol;
     65c:	270c0000 	strcs	r0, [ip, -r0]
     660:	16000042 	strne	r0, [r0], -r2, asr #32
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:157
		return 0;
	rest_vol = (int) (val & 0x7F);
	axp_regmap_read(map, 0xe4, &tmp[0]);
	if (tmp[0] & 0x80) {
		ocv_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     664:	00066b97 	muleq	r6, r7, fp
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:156
	if (!(val & 0x80))
		return 0;
	rest_vol = (int) (val & 0x7F);
	axp_regmap_read(map, 0xe4, &tmp[0]);
	if (tmp[0] & 0x80) {
		ocv_percent = tmp[0] & 0x7f;
     668:	04000400 	streq	r0, [r0], #-1024	; 0xfffffc00
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:157
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     66c:	00000027 	andeq	r0, r0, r7, lsr #32
     670:	0000067b 	andeq	r0, r0, fp, ror r6
     674:	00003e05 	andeq	r3, r0, r5, lsl #28
     678:	1d001e00 	stcne	14, cr1, [r0, #-0]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:160
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
     67c:	00616469 	rsbeq	r6, r1, r9, ror #8
     680:	a09a161c 	addsge	r1, sl, ip, lsl r6
     684:	12000006 	andne	r0, r0, #6
     688:	00726469 	rsbseq	r6, r2, r9, ror #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:161
	if (tmp[0] & 0x80) {
     68c:	05e59b16 	strbeq	r9, [r5, #2838]!	; 0xb16
     690:	0c000000 	stceq	0, cr0, [r0], {-0}
     694:	00000bc7 	andeq	r0, r0, r7, asr #23
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:166
		coulomb_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
			"coulomb_percent = %d\n", coulomb_percent);
	}
	if (ocv_percent == 100 && cdev->charging == 0 && rest_vol == 99
     698:	06a09c16 	ssateq	r9, #1, r6, lsl #24
     69c:	00180000 	andseq	r0, r8, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:166 (discriminator 1)
     6a0:	06460406 	strbeq	r0, [r6], -r6, lsl #8
     6a4:	ca0b0000 	bgt	2c0008 <axp2585_set_usb_vhold+0x2bedc4>
     6a8:	0c000006 	stceq	0, cr0, [r0], {6}
     6ac:	06d72417 			; <UNDEFINED> instruction: 0x06d72417
     6b0:	c00c0000 	andgt	r0, ip, r0
     6b4:	17000025 	strne	r0, [r0, -r5, lsr #32]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:167
		&& (cdev->ac_valid == 1 || cdev->usb_valid == 1)) {
     6b8:	00002725 	andeq	r2, r0, r5, lsr #14
     6bc:	030c0000 	movweq	r0, #49152	; 0xc000
     6c0:	1700003a 	smladxne	r0, sl, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:167 (discriminator 1)
     6c4:	0006d726 	andeq	sp, r6, r6, lsr #14
     6c8:	4e0c0400 	cfcpysmi	mvf0, mvf12
     6cc:	1700000e 	strne	r0, [r0, -lr]
     6d0:	0006d727 	andeq	sp, r6, r7, lsr #14
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:168
		axp_regmap_clr_bits(map, AXP2585_COULOMB_CTL, 0x80);
     6d4:	06000800 	streq	r0, [r0], -r0, lsl #16
     6d8:	0006a604 	andeq	sl, r6, r4, lsl #12
     6dc:	04f00b00 	ldrbteq	r0, [r0], #2816	; 0xb00
     6e0:	17040000 	strne	r0, [r4, -r0]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:169
		axp_regmap_set_bits(map, AXP2585_COULOMB_CTL, 0x80);
     6e4:	0006f62b 	andeq	pc, r6, fp, lsr #12
     6e8:	06ca0c00 	strbeq	r0, [sl], r0, lsl #24
     6ec:	2c170000 	ldccs	0, cr0, [r7], {-0}
     6f0:	000006d7 	ldrdeq	r0, [r0], -r7
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:170
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num, "Reset coulumb\n");
     6f4:	af0b0000 	svcge	0x000b0000
     6f8:	0c000021 	stceq	0, cr0, [r0], {33}	; 0x21
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:171
		rest_vol = 100;
     6fc:	07274a18 			; <UNDEFINED> instruction: 0x07274a18
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:170
	}
	if (ocv_percent == 100 && cdev->charging == 0 && rest_vol == 99
		&& (cdev->ac_valid == 1 || cdev->usb_valid == 1)) {
		axp_regmap_clr_bits(map, AXP2585_COULOMB_CTL, 0x80);
		axp_regmap_set_bits(map, AXP2585_COULOMB_CTL, 0x80);
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num, "Reset coulumb\n");
     700:	580c0000 	stmdapl	ip, {}	; <UNPREDICTABLE>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:170 (discriminator 1)
     704:	18000003 	stmdane	r0, {r0, r1}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:171 (discriminator 1)
		rest_vol = 100;
     708:	0000274b 	andeq	r2, r0, fp, asr #14
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:170 (discriminator 1)
	}
	if (ocv_percent == 100 && cdev->charging == 0 && rest_vol == 99
		&& (cdev->ac_valid == 1 || cdev->usb_valid == 1)) {
		axp_regmap_clr_bits(map, AXP2585_COULOMB_CTL, 0x80);
		axp_regmap_set_bits(map, AXP2585_COULOMB_CTL, 0x80);
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num, "Reset coulumb\n");
     70c:	4b0c0000 	blmi	300008 <axp2585_set_usb_vhold+0x2fedc4>
     710:	18000038 	stmdane	r0, {r3, r4, r5}
     714:	0006dd4d 	andeq	sp, r6, sp, asr #26
     718:	3f0c0400 	svccc	0x000c0400
     71c:	1800002c 	stmdane	r0, {r2, r3, r5}
     720:	00077b53 	andeq	r7, r7, r3, asr fp
     724:	0b000800 	bleq	272c <.debug_info+0x272c>
     728:	00003238 	andeq	r3, r0, r8, lsr r2
     72c:	7b9d1838 	blvc	fe746814 <axp2585_set_usb_vhold+0xfe7455d0>
     730:	12000007 	andne	r0, r0, #7
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:163
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
	if (tmp[0] & 0x80) {
		coulomb_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     734:	18006e6b 	stmdane	r0, {r0, r1, r3, r5, r6, r9, sl, fp, sp, lr}
     738:	00083b9f 	muleq	r8, pc, fp	; <UNPREDICTABLE>
     73c:	420c0000 	andmi	r0, ip, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:162
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
	if (tmp[0] & 0x80) {
		coulomb_percent = tmp[0] & 0x7f;
     740:	1800003f 	stmdane	r0, {r0, r1, r2, r3, r4, r5}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:163 (discriminator 1)
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     744:	000057a0 	andeq	r5, r0, r0, lsr #15
     748:	ea0c0400 	b	301008 <axp2585_set_usb_vhold+0x2ffdc4>
     74c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     750:	00067ba3 	andeq	r7, r6, r3, lsr #23
     754:	b00c0800 	andlt	r0, ip, r0, lsl #16
     758:	18000040 	stmdane	r0, {r6}
     75c:	000ac6a4 	andeq	ip, sl, r4, lsr #13
     760:	b20c2400 	andlt	r2, ip, #0, 8
     764:	18000044 	stmdane	r0, {r2, r6}
     768:	000230a7 	andeq	r3, r2, r7, lsr #1
     76c:	a00c2800 	andge	r2, ip, r0, lsl #16
     770:	18000018 	stmdane	r0, {r3, r4}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:157 (discriminator 1)
		return 0;
	rest_vol = (int) (val & 0x7F);
	axp_regmap_read(map, 0xe4, &tmp[0]);
	if (tmp[0] & 0x80) {
		ocv_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     774:	000507a9 	andeq	r0, r5, r9, lsr #15
     778:	06003000 	streq	r3, [r0], -r0
     77c:	00072704 	andeq	r2, r7, r4, lsl #14
     780:	02750b00 	rsbseq	r0, r5, #0, 22
     784:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
     788:	00079a56 	andeq	r9, r7, r6, asr sl
     78c:	01d00c00 	bicseq	r0, r0, r0, lsl #24
     790:	57180000 	ldrpl	r0, [r8, -r0]
     794:	0000083b 	andeq	r0, r0, fp, lsr r8
     798:	140b0000 	strne	r0, [fp], #-0
     79c:	50000035 	andpl	r0, r0, r5, lsr r0
     7a0:	083b6a18 	ldmdaeq	fp!, {r3, r4, r9, fp, sp, lr}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:163
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
	if (tmp[0] & 0x80) {
		coulomb_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     7a4:	d20c0000 	andle	r0, ip, #0
     7a8:	1800002a 	stmdane	r0, {r1, r3, r5}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:162
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
	if (tmp[0] & 0x80) {
		coulomb_percent = tmp[0] & 0x7f;
     7ac:	0002256b 	andeq	r2, r2, fp, ror #10
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:144
};

static int axp2585_get_rest_cap(struct axp_charger_dev *cdev)
{
	u8 val, temp_val[2], tmp[2];
	u8 ocv_percent = 0;
     7b0:	f30c0000 	vhadd.u8	d0, d12, d0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:163
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
	if (tmp[0] & 0x80) {
		coulomb_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     7b4:	18000030 	stmdane	r0, {r4, r5}
     7b8:	0002256c 	andeq	r2, r2, ip, ror #10
axp2585_get_usb_ihold():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:120
	}
	return 0;
}

static int axp2585_get_usb_ihold(struct axp_charger_dev *cdev)
{
     7bc:	6c0c0400 	cfstrsvs	mvf0, [ip], {-0}
     7c0:	18000018 	stmdane	r0, {r3, r4}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:122
	u8 tmp;
	struct axp_regmap *map = cdev->chip->regmap;
     7c4:	00083b76 	andeq	r3, r8, r6, ror fp
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:124

	axp_regmap_read(map, 0x10, &tmp);
     7c8:	030c0800 	movweq	r0, #51200	; 0xc800
     7cc:	18000003 	stmdane	r0, {r0, r1}
     7d0:	00004577 	andeq	r4, r0, r7, ror r5
     7d4:	72120c00 	andsvc	r0, r2, #0, 24
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:125
	return (tmp*50 + 100);
     7d8:	79180062 	ldmdbvc	r8, {r1, r5, r6}
     7dc:	000006a6 	andeq	r0, r0, r6, lsr #13
     7e0:	736e1210 	cmnvc	lr, #16, 4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:126
}
     7e4:	377b1800 	ldrbcc	r1, [fp, -r0, lsl #16]!
     7e8:	1c000009 	stcne	0, cr0, [r0], {9}
     7ec:	0039960c 	eorseq	r9, r9, ip, lsl #12
axp2585_get_usb_vhold():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:91
	}
	return 0;
}

static int axp2585_get_usb_vhold(struct axp_charger_dev *cdev)
{
     7f0:	577c1800 	ldrbpl	r1, [ip, -r0, lsl #16]!
     7f4:	20000000 	andcs	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:93
	u8 tmp;
	struct axp_regmap *map = cdev->chip->regmap;
     7f8:	00090d18 	andeq	r0, r9, r8, lsl sp
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:95

	axp_regmap_read(map, 0x11, &tmp);
     7fc:	e10c2800 	tst	ip, r0, lsl #16
     800:	18000038 	stmdane	r0, {r3, r4, r5}
     804:	00002583 	andeq	r2, r0, r3, lsl #11
     808:	420c4000 	andmi	r4, ip, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:96
	return (tmp*80 + 3880);
     80c:	1800003f 	stmdane	r0, {r0, r1, r2, r3, r4, r5}
     810:	00008985 	andeq	r8, r0, r5, lsl #19
     814:	7e0c4400 	cfcpysvc	mvf4, mvf12
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:97
}
     818:	18000042 	stmdane	r0, {r1, r6}
     81c:	00018586 	andeq	r8, r1, r6, lsl #11
     820:	69124600 	ldmdbvs	r2, {r9, sl, lr}
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:628
			* 1200 / 1000);

}

static int axp2585_charger_probe(struct platform_device *pdev)
{
     824:	18006f6e 	stmdane	r0, {r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:629
    printk("[axp2585]Entering %s\n",__func__);
     828:	00005787 	andeq	r5, r0, r7, lsl #15
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:628
			* 1200 / 1000);

}

static int axp2585_charger_probe(struct platform_device *pdev)
{
     82c:	5d0c4800 	stcpl	8, cr4, [ip, #-0]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:629
    printk("[axp2585]Entering %s\n",__func__);
     830:	18000043 	stmdane	r0, {r0, r1, r6}
     834:	00094388 	andeq	r4, r9, r8, lsl #7
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:628
			* 1200 / 1000);

}

static int axp2585_charger_probe(struct platform_device *pdev)
{
     838:	06004c00 	streq	r4, [r0], -r0, lsl #24
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:629
    printk("[axp2585]Entering %s\n",__func__);
     83c:	00079a04 	andeq	r9, r7, r4, lsl #20
     840:	14c30b00 	strbne	r0, [r3], #2816	; 0xb00
     844:	18180000 	ldmdane	r8, {}	; <UNPREDICTABLE>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:634
	int ret, i, irq;
	struct axp_charger_dev *chg_dev;
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	if (pdev->dev.of_node) {
     848:	00087e5a 	andeq	r7, r8, sl, asr lr
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
     84c:	706f1200 	rsbvc	r1, pc, r0, lsl #4
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:634
     850:	5b180073 	blpl	600a24 <axp2585_set_usb_vhold+0x5ff7e0>
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
     854:	000008f7 	strdeq	r0, [r0], -r7
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:634
     858:	42430c00 	submi	r0, r3, #0, 24
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:636
		/* get dt and sysconfig */
		ret = axp_charger_dt_parse(pdev->dev.of_node, &axp2585_config);
     85c:	5c180000 	ldcpl	0, cr0, [r8], {-0}
     860:	00000907 	andeq	r0, r0, r7, lsl #18
     864:	08490c04 	stmdaeq	r9, {r2, sl, fp}^
     868:	5d180000 	ldcpl	0, cr0, [r8, #-0]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:637
		if (ret) {
     86c:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
     870:	268d0c08 	strcs	r0, [sp], r8, lsl #24
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:657
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
	battery_data.voltage_max_design = axp2585_config.pmu_init_chgvol
								* 1000;
	battery_data.voltage_min_design = axp2585_config.pmu_pwroff_vol
     874:	5e180000 	cdppl	0, 1, cr0, cr8, cr0, {0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:646
	} else {
		pr_err("axp2585 charger device tree err!\n");
		return -EBUSY;
	}

	axp2585_ac_info.ac_vol = axp2585_config.pmu_ac_vol;
     878:	0000083b 	andeq	r0, r0, fp, lsr r8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:655
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
	battery_data.voltage_max_design = axp2585_config.pmu_init_chgvol
     87c:	490b0010 	stmdbmi	fp, {r4}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:646
	} else {
		pr_err("axp2585 charger device tree err!\n");
		return -EBUSY;
	}

	axp2585_ac_info.ac_vol = axp2585_config.pmu_ac_vol;
     880:	24000037 	strcs	r0, [r0], #-55	; 0xffffffc9
axp2585_charger_init():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:316
};

static int axp2585_charger_init(struct axp_dev *axp_dev)
{
	u8 ocv_cap[32];
	u8 val = 0;
     884:	08f7bd18 	ldmeq	r7!, {r3, r4, r8, sl, fp, ip, sp, pc}^
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:655
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
	battery_data.voltage_max_design = axp2585_config.pmu_init_chgvol
     888:	290c0000 	stmdbcs	ip, {}	; <UNPREDICTABLE>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:648
		return -EBUSY;
	}

	axp2585_ac_info.ac_vol = axp2585_config.pmu_ac_vol;
	axp2585_ac_info.ac_cur = axp2585_config.pmu_ac_cur;
	axp2585_usb_info.usb_pc_vol = axp2585_config.pmu_usbpc_vol;
     88c:	18000014 	stmdane	r0, {r2, r4}
axp2585_charger_init():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:319
{
	u8 ocv_cap[32];
	u8 val = 0;
	int cur_coulomb_counter, rdc;
	struct axp_regmap *map = axp_dev->regmap;
	int i, ocv_cou_adjust_time[4] = {60, 120, 15, 30};
     890:	000b7fc9 	andeq	r7, fp, r9, asr #31
     894:	c70c0000 	strgt	r0, [ip, -r0]
     898:	1800002c 	stmdane	r0, {r2, r3, r5}
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:655
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
	battery_data.voltage_max_design = axp2585_config.pmu_init_chgvol
     89c:	000b9fcb 	andeq	r9, fp, fp, asr #31
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:648
		return -EBUSY;
	}

	axp2585_ac_info.ac_vol = axp2585_config.pmu_ac_vol;
	axp2585_ac_info.ac_cur = axp2585_config.pmu_ac_cur;
	axp2585_usb_info.usb_pc_vol = axp2585_config.pmu_usbpc_vol;
     8a0:	1c0c0400 	cfstrsne	mvf0, [ip], {-0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:657
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
	battery_data.voltage_max_design = axp2585_config.pmu_init_chgvol
								* 1000;
	battery_data.voltage_min_design = axp2585_config.pmu_pwroff_vol
     8a4:	18000009 	stmdane	r0, {r0, r3}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:653
	axp2585_usb_info.usb_pc_vol = axp2585_config.pmu_usbpc_vol;
	axp2585_usb_info.usb_pc_cur = axp2585_config.pmu_usbpc_cur;
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
     8a8:	000bbecc 	andeq	fp, fp, ip, asr #29
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:649
	}

	axp2585_ac_info.ac_vol = axp2585_config.pmu_ac_vol;
	axp2585_ac_info.ac_cur = axp2585_config.pmu_ac_cur;
	axp2585_usb_info.usb_pc_vol = axp2585_config.pmu_usbpc_vol;
	axp2585_usb_info.usb_pc_cur = axp2585_config.pmu_usbpc_cur;
     8ac:	530c0800 	movwpl	r0, #51200	; 0xc800
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:655
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
	battery_data.voltage_max_design = axp2585_config.pmu_init_chgvol
     8b0:	1800003f 	stmdane	r0, {r0, r1, r2, r3, r4, r5}
axp2585_charger_init():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:320
	u8 ocv_cap[32];
	u8 val = 0;
	int cur_coulomb_counter, rdc;
	struct axp_regmap *map = axp_dev->regmap;
	int i, ocv_cou_adjust_time[4] = {60, 120, 15, 30};
	int update_min_times[8] = {30, 60, 120, 164, 0, 5, 10, 20};
     8b4:	000bd4cd 	andeq	sp, fp, sp, asr #9
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:653
	axp2585_usb_info.usb_pc_vol = axp2585_config.pmu_usbpc_vol;
	axp2585_usb_info.usb_pc_cur = axp2585_config.pmu_usbpc_cur;
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
     8b8:	a00c0c00 	andge	r0, ip, r0, lsl #24
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:649
	}

	axp2585_ac_info.ac_vol = axp2585_config.pmu_ac_vol;
	axp2585_ac_info.ac_cur = axp2585_config.pmu_ac_cur;
	axp2585_usb_info.usb_pc_vol = axp2585_config.pmu_usbpc_vol;
	axp2585_usb_info.usb_pc_cur = axp2585_config.pmu_usbpc_cur;
     8bc:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:654
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
     8c0:	000bfecf 	andeq	pc, fp, pc, asr #29
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:652
	axp2585_ac_info.ac_cur = axp2585_config.pmu_ac_cur;
	axp2585_usb_info.usb_pc_vol = axp2585_config.pmu_usbpc_vol;
	axp2585_usb_info.usb_pc_cur = axp2585_config.pmu_usbpc_cur;
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
     8c4:	440c1000 	strmi	r1, [ip], #-0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:657
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
	battery_data.voltage_max_design = axp2585_config.pmu_init_chgvol
								* 1000;
	battery_data.voltage_min_design = axp2585_config.pmu_pwroff_vol
     8c8:	18000023 	stmdane	r0, {r0, r1, r5}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:654
	axp2585_usb_info.usb_pc_cur = axp2585_config.pmu_usbpc_cur;
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
     8cc:	0001c3d9 	ldrdeq	ip, [r1], -r9
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:652
	axp2585_ac_info.ac_cur = axp2585_config.pmu_ac_cur;
	axp2585_usb_info.usb_pc_vol = axp2585_config.pmu_usbpc_vol;
	axp2585_usb_info.usb_pc_cur = axp2585_config.pmu_usbpc_cur;
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
     8d0:	820c1400 	andhi	r1, ip, #0, 8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:647
		pr_err("axp2585 charger device tree err!\n");
		return -EBUSY;
	}

	axp2585_ac_info.ac_vol = axp2585_config.pmu_ac_vol;
	axp2585_ac_info.ac_cur = axp2585_config.pmu_ac_cur;
     8d4:	18000005 	stmdane	r0, {r0, r2}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:646
	} else {
		pr_err("axp2585 charger device tree err!\n");
		return -EBUSY;
	}

	axp2585_ac_info.ac_vol = axp2585_config.pmu_ac_vol;
     8d8:	000190e0 	andeq	r9, r1, r0, ror #1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:659
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
	battery_data.voltage_max_design = axp2585_config.pmu_init_chgvol
								* 1000;
	battery_data.voltage_min_design = axp2585_config.pmu_pwroff_vol
								* 1000;
	battery_data.energy_full_design = axp2585_config.pmu_battery_cap;
     8dc:	ec0c1800 	stc	8, cr1, [ip], {-0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:647
		pr_err("axp2585 charger device tree err!\n");
		return -EBUSY;
	}

	axp2585_ac_info.ac_vol = axp2585_config.pmu_ac_vol;
	axp2585_ac_info.ac_cur = axp2585_config.pmu_ac_cur;
     8e0:	18000012 	stmdane	r0, {r1, r4}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:651
	axp2585_usb_info.usb_pc_vol = axp2585_config.pmu_usbpc_vol;
	axp2585_usb_info.usb_pc_cur = axp2585_config.pmu_usbpc_cur;
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
     8e4:	000bfee1 	andeq	pc, fp, r1, ror #29
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:659
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
	battery_data.voltage_max_design = axp2585_config.pmu_init_chgvol
								* 1000;
	battery_data.voltage_min_design = axp2585_config.pmu_pwroff_vol
								* 1000;
	battery_data.energy_full_design = axp2585_config.pmu_battery_cap;
     8e8:	df0c1c00 	svcle	0x000c1c00
axp2585_charger_init():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:320
	u8 ocv_cap[32];
	u8 val = 0;
	int cur_coulomb_counter, rdc;
	struct axp_regmap *map = axp_dev->regmap;
	int i, ocv_cou_adjust_time[4] = {60, 120, 15, 30};
	int update_min_times[8] = {30, 60, 120, 164, 0, 5, 10, 20};
     8ec:	1800003a 	stmdane	r0, {r1, r3, r4, r5}
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:646
	} else {
		pr_err("axp2585 charger device tree err!\n");
		return -EBUSY;
	}

	axp2585_ac_info.ac_vol = axp2585_config.pmu_ac_vol;
     8f0:	000c18e4 	andeq	r1, ip, r4, ror #17
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:650
	axp2585_ac_info.ac_cur = axp2585_config.pmu_ac_cur;
	axp2585_usb_info.usb_pc_vol = axp2585_config.pmu_usbpc_vol;
	axp2585_usb_info.usb_pc_cur = axp2585_config.pmu_usbpc_cur;
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
     8f4:	06002000 	streq	r2, [r0], -r0
axp2585_charger_init():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:319
{
	u8 ocv_cap[32];
	u8 val = 0;
	int cur_coulomb_counter, rdc;
	struct axp_regmap *map = axp_dev->regmap;
	int i, ocv_cou_adjust_time[4] = {60, 120, 15, 30};
     8f8:	0008fd04 	andeq	pc, r8, r4, lsl #26
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:318
static int axp2585_charger_init(struct axp_dev *axp_dev)
{
	u8 ocv_cap[32];
	u8 val = 0;
	int cur_coulomb_counter, rdc;
	struct axp_regmap *map = axp_dev->regmap;
     8fc:	087e0700 	ldmdaeq	lr!, {r8, r9, sl}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:320
	int i, ocv_cou_adjust_time[4] = {60, 120, 15, 30};
	int update_min_times[8] = {30, 60, 120, 164, 0, 5, 10, 20};
     900:	85130000 	ldrhi	r0, [r3, #-0]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:322
	/*set chg time */
	if (axp2585_config.pmu_init_chg_pretime < 40)
     904:	06000011 			; <UNDEFINED> instruction: 0x06000011
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:320
	u8 ocv_cap[32];
	u8 val = 0;
	int cur_coulomb_counter, rdc;
	struct axp_regmap *map = axp_dev->regmap;
	int i, ocv_cou_adjust_time[4] = {60, 120, 15, 30};
	int update_min_times[8] = {30, 60, 120, 164, 0, 5, 10, 20};
     908:	00090204 	andeq	r0, r9, r4, lsl #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:322
	/*set chg time */
	if (axp2585_config.pmu_init_chg_pretime < 40)
     90c:	18181600 	ldmdane	r8, {r9, sl, ip}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:320
	u8 ocv_cap[32];
	u8 val = 0;
	int cur_coulomb_counter, rdc;
	struct axp_regmap *map = axp_dev->regmap;
	int i, ocv_cou_adjust_time[4] = {60, 120, 15, 30};
	int update_min_times[8] = {30, 60, 120, 164, 0, 5, 10, 20};
     910:	0009377d 	andeq	r3, r9, sp, ror r7
     914:	69641e00 	stmdbvs	r4!, {r9, sl, fp, ip}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:322
	/*set chg time */
	if (axp2585_config.pmu_init_chg_pretime < 40)
     918:	7e180072 	mrcvc	0, 0, r0, cr8, cr2, {3}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:323
		axp2585_config.pmu_init_chg_pretime = 40;
     91c:	000006f6 	strdeq	r0, [r0], -r6
     920:	00349717 	eorseq	r9, r4, r7, lsl r7
     924:	817f1800 	cmnhi	pc, r0, lsl #16
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:328
	val = (axp2585_config.pmu_init_chg_pretime - 40)/10;
	if (val >= 3)
		val = 3;
	val = 0x80 + (val<<5);
	axp_regmap_update(map, 0x8e, val, 0xe0);
     928:	17000007 	strne	r0, [r0, -r7]
     92c:	00000bb3 			; <UNDEFINED> instruction: 0x00000bb3
     930:	08418018 	stmdaeq	r1, {r3, r4, pc}^
     934:	06000000 	streq	r0, [r0], -r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:327
	if (axp2585_config.pmu_init_chg_pretime < 40)
		axp2585_config.pmu_init_chg_pretime = 40;
	val = (axp2585_config.pmu_init_chg_pretime - 40)/10;
	if (val >= 3)
		val = 3;
	val = 0x80 + (val<<5);
     938:	00093d04 	andeq	r3, r9, r4, lsl #26
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:328
	axp_regmap_update(map, 0x8e, val, 0xe0);
     93c:	26131f00 	ldrcs	r1, [r3], -r0, lsl #30
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:329
    printk("==%s==line:%d==file:%s==\n",__func__,__LINE__,__FILE__);
     940:	06000035 			; <UNDEFINED> instruction: 0x06000035
     944:	00093e04 	andeq	r3, r9, r4, lsl #28
     948:	09de0b00 	ldmibeq	lr, {r8, r9, fp}^
     94c:	18140000 	ldmdane	r4, {}	; <UNPREDICTABLE>
     950:	00099292 	muleq	r9, r2, r2
     954:	22fd0c00 	rscscs	r0, sp, #0, 24
     958:	93180000 	tstls	r8, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:331

	if (axp2585_config.pmu_init_chg_csttime <= 60 * 5)
     95c:	000009b1 			; <UNDEFINED> instruction: 0x000009b1
     960:	3c5d0c00 	mrrccc	12, 0, r0, sp, cr0
     964:	94180000 	ldrls	r0, [r8], #-0
     968:	00000a6d 	andeq	r0, r0, sp, ror #20
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:333
		val = 0;
	else if (axp2585_config.pmu_init_chg_csttime <= 60 * 8)
     96c:	40aa0c04 	adcmi	r0, sl, r4, lsl #24
     970:	96180000 	ldrls	r0, [r8], -r0
     974:	00000a8c 	andeq	r0, r0, ip, lsl #21
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:335
		val = 1;
	else if (axp2585_config.pmu_init_chg_csttime <= 60 * 12)
     978:	062e0c08 	strteq	r0, [lr], -r8, lsl #24
     97c:	98180000 	ldmdals	r8, {}	; <UNPREDICTABLE>
     980:	00000aa1 	andeq	r0, r0, r1, lsr #21
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:342
	else if (axp2585_config.pmu_init_chg_csttime <= 60 * 20)
		val = 3;
	else
		val = 3;
	val = (val << 1) + 0x01;
	axp_regmap_update(map, 0x8d, val, 0x07);
     984:	25fd0c0c 	ldrbcs	r0, [sp, #3084]!	; 0xc0c
     988:	99180000 	ldmdbls	r8, {}	; <UNPREDICTABLE>
     98c:	00000ac0 	andeq	r0, r0, r0, asr #21
     990:	90200010 	eorls	r0, r0, r0, lsl r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:341
		val = 2;
	else if (axp2585_config.pmu_init_chg_csttime <= 60 * 20)
		val = 3;
	else
		val = 3;
	val = (val << 1) + 0x01;
     994:	ab000000 	blge	99c <.debug_info+0x99c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:342
	axp_regmap_update(map, 0x8d, val, 0x07);
     998:	0f000009 	svceq	0x00000009
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:345
	/* adc set */
	val = AXP2585_ADC_BATVOL_ENABLE | AXP2585_ADC_BATCUR_ENABLE;
	if (axp2585_config.pmu_bat_temp_enable != 0)
     99c:	0000077b 	andeq	r0, r0, fp, ror r7
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:344
	else
		val = 3;
	val = (val << 1) + 0x01;
	axp_regmap_update(map, 0x8d, val, 0x07);
	/* adc set */
	val = AXP2585_ADC_BATVOL_ENABLE | AXP2585_ADC_BATCUR_ENABLE;
     9a0:	0009ab0f 	andeq	sl, r9, pc, lsl #22
     9a4:	01440f00 	cmpeq	r4, r0, lsl #30
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:347
	if (axp2585_config.pmu_bat_temp_enable != 0)
		val = val | AXP2585_ADC_TSVOL_ENABLE;
	axp_regmap_update(map, AXP2585_ADC_CONTROL, val,
     9a8:	06000000 	streq	r0, [r0], -r0
     9ac:	00009004 	andeq	r9, r0, r4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:345
		val = 3;
	val = (val << 1) + 0x01;
	axp_regmap_update(map, 0x8d, val, 0x07);
	/* adc set */
	val = AXP2585_ADC_BATVOL_ENABLE | AXP2585_ADC_BATCUR_ENABLE;
	if (axp2585_config.pmu_bat_temp_enable != 0)
     9b0:	92040600 	andls	r0, r4, #0, 12
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:347
		val = val | AXP2585_ADC_TSVOL_ENABLE;
	axp_regmap_update(map, AXP2585_ADC_CONTROL, val,
     9b4:	20000009 	andcs	r0, r0, r9
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:346
	val = (val << 1) + 0x01;
	axp_regmap_update(map, 0x8d, val, 0x07);
	/* adc set */
	val = AXP2585_ADC_BATVOL_ENABLE | AXP2585_ADC_BATCUR_ENABLE;
	if (axp2585_config.pmu_bat_temp_enable != 0)
		val = val | AXP2585_ADC_TSVOL_ENABLE;
     9b8:	00000090 	muleq	r0, r0, r0
     9bc:	000009cb 	andeq	r0, r0, fp, asr #19
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:347
	axp_regmap_update(map, AXP2585_ADC_CONTROL, val,
     9c0:	0009cb0f 	andeq	ip, r9, pc, lsl #22
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:352
						AXP2585_ADC_BATVOL_ENABLE
						| AXP2585_ADC_BATCUR_ENABLE
						| AXP2585_ADC_TSVOL_ENABLE);

	axp_regmap_read(map, AXP2585_TS_PIN_CONTROL, &val);
     9c4:	077b0f00 	ldrbeq	r0, [fp, -r0, lsl #30]!
     9c8:	06000000 	streq	r0, [r0], -r0
     9cc:	0009d104 	andeq	sp, r9, r4, lsl #2
     9d0:	239f0b00 	orrscs	r0, pc, #0, 22
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:353
	switch (axp2585_config.pmu_init_adc_freq / 100) {
     9d4:	19480000 	stmdbne	r8, {}^	; <UNPREDICTABLE>
     9d8:	000a6d12 	andeq	r6, sl, r2, lsl sp
     9dc:	75621200 	strbvc	r1, [r2, #-512]!	; 0xfffffe00
     9e0:	13190066 	tstne	r9, #102	; 0x66
     9e4:	00000144 	andeq	r0, r0, r4, asr #2
     9e8:	08490c00 	stmdaeq	r9, {sl, fp}^
     9ec:	14190000 	ldrne	r0, [r9], #-0
     9f0:	000001c3 	andeq	r0, r0, r3, asr #3
     9f4:	2ea00c04 	cdpcs	12, 10, cr0, cr0, cr4, {0}
     9f8:	15190000 	ldrne	r0, [r9, #-0]
     9fc:	000001c3 	andeq	r0, r0, r3, asr #3
     a00:	2ad20c08 	bcs	ff483028 <axp2585_set_usb_vhold+0xff481de4>
     a04:	16190000 	ldrne	r0, [r9], -r0
     a08:	000001c3 	andeq	r0, r0, r3, asr #3
     a0c:	36220c0c 	strtcc	r0, [r2], -ip, lsl #24
     a10:	17190000 	ldrne	r0, [r9, -r0]
     a14:	000001c3 	andeq	r0, r0, r3, asr #3
     a18:	1da80c10 	stcne	12, cr0, [r8, #64]!	; 0x40
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:324
	int i, ocv_cou_adjust_time[4] = {60, 120, 15, 30};
	int update_min_times[8] = {30, 60, 120, 164, 0, 5, 10, 20};
	/*set chg time */
	if (axp2585_config.pmu_init_chg_pretime < 40)
		axp2585_config.pmu_init_chg_pretime = 40;
	val = (axp2585_config.pmu_init_chg_pretime - 40)/10;
     a1c:	18190000 	ldmdane	r9, {}	; <UNPREDICTABLE>
     a20:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
     a24:	3a900c18 	bcc	fe403068 <axp2585_set_usb_vhold+0xfe401e24>
     a28:	19190000 	ldmdbne	r9, {}	; <UNPREDICTABLE>
     a2c:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:325
	if (val >= 3)
     a30:	01c80c20 	biceq	r0, r8, r0, lsr #24
     a34:	1a190000 	bne	640a3c <axp2585_set_usb_vhold+0x63f7f8>
     a38:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     a3c:	0e410c28 	cdpeq	12, 4, cr0, cr1, cr8, {1}
     a40:	1b190000 	blne	640a48 <axp2585_set_usb_vhold+0x63f804>
     a44:	00000488 	andeq	r0, r0, r8, lsl #9
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:366
	case 4:
		val &= ~(3 << 5);
		val |= 2 << 5;
		break;
	case 8:
		val |= 3 << 5;
     a48:	706f1230 	rsbvc	r1, pc, r0, lsr r2	; <UNPREDICTABLE>
     a4c:	611c1900 	tstvs	ip, r0, lsl #18
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:372
		break;
	default:
		break;
	}

	if (axp2585_config.pmu_bat_temp_enable != 0)
     a50:	3c000013 	stccc	0, cr0, [r0], {19}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:374
		val &= (~(1 << 7));
	axp_regmap_write(map, AXP2585_TS_PIN_CONTROL, val);
     a54:	0024310c 	eoreq	r3, r4, ip, lsl #2
     a58:	901d1900 	andsls	r1, sp, r0, lsl #18
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:372
		break;
	default:
		break;
	}

	if (axp2585_config.pmu_bat_temp_enable != 0)
     a5c:	40000000 	andmi	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:373
		val &= (~(1 << 7));
     a60:	0001570c 	andeq	r5, r1, ip, lsl #14
     a64:	25211900 	strcs	r1, [r1, #-2304]!	; 0xfffff700
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:374
	axp_regmap_write(map, AXP2585_TS_PIN_CONTROL, val);
     a68:	44000000 	strmi	r0, [r0], #-0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:377

	/* bat para */
	axp_regmap_write(map, AXP2585_WARNING_LEVEL,
     a6c:	b7040600 	strlt	r0, [r4, -r0, lsl #12]
     a70:	20000009 	andcs	r0, r0, r9
     a74:	00000090 	muleq	r0, r0, r0
     a78:	00000a8c 	andeq	r0, r0, ip, lsl #21
     a7c:	00083b0f 	andeq	r3, r8, pc, lsl #22
     a80:	00450f00 	subeq	r0, r5, r0, lsl #30
     a84:	850f0000 	strhi	r0, [pc, #-0]	; a8c <.debug_info+0xa8c>
     a88:	00000001 	andeq	r0, r0, r1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:381
		((axp2585_config.pmu_battery_warning_level1 - 5) << 4)
		+ axp2585_config.pmu_battery_warning_level2);

	if (axp2585_config.pmu_init_chgvol < 3840)
     a8c:	0a730406 	beq	1cc1aac <axp2585_set_usb_vhold+0x1cc0868>
     a90:	90200000 	eorls	r0, r0, r0
     a94:	a1000000 	mrsge	r0, (UNDEF: 0)
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:382
		axp2585_config.pmu_init_chgvol = 3840;
     a98:	0f00000a 	svceq	0x0000000a
     a9c:	0000083b 	andeq	r0, r0, fp, lsr r8
     aa0:	92040600 	andls	r0, r4, #0, 12
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:387
	val = (axp2585_config.pmu_init_chgvol - 3840)/16;
	if (val > 0x30)
		val = 0x30;
	val <<= 2;
	axp_regmap_update(map, AXP2585_CHARGE_CONTROL2, val, 0xfc);
     aa4:	2000000a 	andcs	r0, r0, sl
     aa8:	00000090 	muleq	r0, r0, r0
     aac:	00000ac0 	andeq	r0, r0, r0, asr #21
     ab0:	00083b0f 	andeq	r3, r8, pc, lsl #22
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:386
	if (axp2585_config.pmu_init_chgvol < 3840)
		axp2585_config.pmu_init_chgvol = 3840;
	val = (axp2585_config.pmu_init_chgvol - 3840)/16;
	if (val > 0x30)
		val = 0x30;
	val <<= 2;
     ab4:	083b0f00 	ldmdaeq	fp!, {r8, r9, sl, fp}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:408
	ocv_cap[13] = axp2585_config.pmu_bat_para14;
	ocv_cap[14] = axp2585_config.pmu_bat_para15;
	ocv_cap[15] = axp2585_config.pmu_bat_para16;
	ocv_cap[16] = axp2585_config.pmu_bat_para17;
	ocv_cap[17] = axp2585_config.pmu_bat_para18;
	ocv_cap[18] = axp2585_config.pmu_bat_para19;
     ab8:	450f0000 	strmi	r0, [pc, #-0]	; ac0 <.debug_info+0xac0>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:387
		axp2585_config.pmu_init_chgvol = 3840;
	val = (axp2585_config.pmu_init_chgvol - 3840)/16;
	if (val > 0x30)
		val = 0x30;
	val <<= 2;
	axp_regmap_update(map, AXP2585_CHARGE_CONTROL2, val, 0xfc);
     abc:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:388
    printk("==%s==line:%d==file:%s==\n",__func__,__LINE__,__FILE__);
     ac0:	0aa70406 	beq	fe9c1ae0 <axp2585_set_usb_vhold+0xfe9c089c>
     ac4:	04060000 	streq	r0, [r6], #-0
     ac8:	00000949 	andeq	r0, r0, r9, asr #18
     acc:	00139d0b 	andseq	r9, r3, fp, lsl #26
     ad0:	ac183400 	cfldrsge	mvf3, [r8], {-0}
     ad4:	00000b50 	andeq	r0, r0, r0, asr fp
     ad8:	006e6b12 	rsbeq	r6, lr, r2, lsl fp
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:390

	ocv_cap[0]  = axp2585_config.pmu_bat_para1;
     adc:	083bae18 	ldmdaeq	fp!, {r3, r4, r9, sl, fp, sp, pc}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:422
	ocv_cap[27] = axp2585_config.pmu_bat_para28;
	ocv_cap[28] = axp2585_config.pmu_bat_para29;
	ocv_cap[29] = axp2585_config.pmu_bat_para30;
	ocv_cap[30] = axp2585_config.pmu_bat_para31;
	ocv_cap[31] = axp2585_config.pmu_bat_para32;
	axp_regmap_writes(map, 0xC0, 32, ocv_cap);
     ae0:	0c000000 	stceq	0, cr0, [r0], {-0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:391
	val <<= 2;
	axp_regmap_update(map, AXP2585_CHARGE_CONTROL2, val, 0xfc);
    printk("==%s==line:%d==file:%s==\n",__func__,__LINE__,__FILE__);

	ocv_cap[0]  = axp2585_config.pmu_bat_para1;
	ocv_cap[1]  = axp2585_config.pmu_bat_para2;
     ae4:	00003182 	andeq	r3, r0, r2, lsl #3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:422
	ocv_cap[27] = axp2585_config.pmu_bat_para28;
	ocv_cap[28] = axp2585_config.pmu_bat_para29;
	ocv_cap[29] = axp2585_config.pmu_bat_para30;
	ocv_cap[30] = axp2585_config.pmu_bat_para31;
	ocv_cap[31] = axp2585_config.pmu_bat_para32;
	axp_regmap_writes(map, 0xC0, 32, ocv_cap);
     ae8:	0b55af18 	bleq	156c750 <axp2585_set_usb_vhold+0x156b50c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:392
	axp_regmap_update(map, AXP2585_CHARGE_CONTROL2, val, 0xfc);
    printk("==%s==line:%d==file:%s==\n",__func__,__LINE__,__FILE__);

	ocv_cap[0]  = axp2585_config.pmu_bat_para1;
	ocv_cap[1]  = axp2585_config.pmu_bat_para2;
	ocv_cap[2]  = axp2585_config.pmu_bat_para3;
     aec:	0c040000 	stceq	0, cr0, [r4], {-0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:393
	ocv_cap[3]  = axp2585_config.pmu_bat_para4;
     af0:	000038e1 	andeq	r3, r0, r1, ror #17
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:390
		val = 0x30;
	val <<= 2;
	axp_regmap_update(map, AXP2585_CHARGE_CONTROL2, val, 0xfc);
    printk("==%s==line:%d==file:%s==\n",__func__,__LINE__,__FILE__);

	ocv_cap[0]  = axp2585_config.pmu_bat_para1;
     af4:	0025b018 	eoreq	fp, r5, r8, lsl r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:391
	ocv_cap[1]  = axp2585_config.pmu_bat_para2;
     af8:	0c080000 	stceq	0, cr0, [r8], {-0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:394
	ocv_cap[2]  = axp2585_config.pmu_bat_para3;
	ocv_cap[3]  = axp2585_config.pmu_bat_para4;
	ocv_cap[4]  = axp2585_config.pmu_bat_para5;
     afc:	00003b08 	andeq	r3, r0, r8, lsl #22
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:395
	ocv_cap[5]  = axp2585_config.pmu_bat_para6;
     b00:	0488b318 	streq	fp, [r8], #792	; 0x318
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:392
	axp_regmap_update(map, AXP2585_CHARGE_CONTROL2, val, 0xfc);
    printk("==%s==line:%d==file:%s==\n",__func__,__LINE__,__FILE__);

	ocv_cap[0]  = axp2585_config.pmu_bat_para1;
	ocv_cap[1]  = axp2585_config.pmu_bat_para2;
	ocv_cap[2]  = axp2585_config.pmu_bat_para3;
     b04:	0c0c0000 	stceq	0, cr0, [ip], {-0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:393
	ocv_cap[3]  = axp2585_config.pmu_bat_para4;
     b08:	00000a2e 	andeq	r0, r0, lr, lsr #20
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:396
	ocv_cap[4]  = axp2585_config.pmu_bat_para5;
	ocv_cap[5]  = axp2585_config.pmu_bat_para6;
	ocv_cap[6]  = axp2585_config.pmu_bat_para7;
     b0c:	0090b418 	addseq	fp, r0, r8, lsl r4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:397
	ocv_cap[7]  = axp2585_config.pmu_bat_para8;
     b10:	0c180000 	ldceq	0, cr0, [r8], {-0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:394

	ocv_cap[0]  = axp2585_config.pmu_bat_para1;
	ocv_cap[1]  = axp2585_config.pmu_bat_para2;
	ocv_cap[2]  = axp2585_config.pmu_bat_para3;
	ocv_cap[3]  = axp2585_config.pmu_bat_para4;
	ocv_cap[4]  = axp2585_config.pmu_bat_para5;
     b14:	000002fe 	strdeq	r0, [r0], -lr
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:395
	ocv_cap[5]  = axp2585_config.pmu_bat_para6;
     b18:	0230b518 	eorseq	fp, r0, #24, 10	; 0x6000000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:398
	ocv_cap[6]  = axp2585_config.pmu_bat_para7;
	ocv_cap[7]  = axp2585_config.pmu_bat_para8;
	ocv_cap[8]  = axp2585_config.pmu_bat_para9;
     b1c:	0c1c0000 	ldceq	0, cr0, [ip], {-0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:399
	ocv_cap[9]  = axp2585_config.pmu_bat_para10;
     b20:	00003f5c 	andeq	r3, r0, ip, asr pc
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:396
	ocv_cap[1]  = axp2585_config.pmu_bat_para2;
	ocv_cap[2]  = axp2585_config.pmu_bat_para3;
	ocv_cap[3]  = axp2585_config.pmu_bat_para4;
	ocv_cap[4]  = axp2585_config.pmu_bat_para5;
	ocv_cap[5]  = axp2585_config.pmu_bat_para6;
	ocv_cap[6]  = axp2585_config.pmu_bat_para7;
     b24:	0144b618 	cmpeq	r4, r8, lsl r6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:397
	ocv_cap[7]  = axp2585_config.pmu_bat_para8;
     b28:	0c240000 	stceq	0, cr0, [r4], #-0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:400
	ocv_cap[8]  = axp2585_config.pmu_bat_para9;
	ocv_cap[9]  = axp2585_config.pmu_bat_para10;
	ocv_cap[10] = axp2585_config.pmu_bat_para11;
     b2c:	00002344 	andeq	r2, r0, r4, asr #6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:401
	ocv_cap[11] = axp2585_config.pmu_bat_para12;
     b30:	01c3b818 	biceq	fp, r3, r8, lsl r8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:398
	ocv_cap[3]  = axp2585_config.pmu_bat_para4;
	ocv_cap[4]  = axp2585_config.pmu_bat_para5;
	ocv_cap[5]  = axp2585_config.pmu_bat_para6;
	ocv_cap[6]  = axp2585_config.pmu_bat_para7;
	ocv_cap[7]  = axp2585_config.pmu_bat_para8;
	ocv_cap[8]  = axp2585_config.pmu_bat_para9;
     b34:	0c280000 	stceq	0, cr0, [r8], #-0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:399
	ocv_cap[9]  = axp2585_config.pmu_bat_para10;
     b38:	00001209 	andeq	r1, r0, r9, lsl #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:400
	ocv_cap[10] = axp2585_config.pmu_bat_para11;
     b3c:	0190b918 	orrseq	fp, r0, r8, lsl r9
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:403
	ocv_cap[11] = axp2585_config.pmu_bat_para12;
	ocv_cap[12] = axp2585_config.pmu_bat_para13;
	ocv_cap[13] = axp2585_config.pmu_bat_para14;
     b40:	0c2c0000 	stceq	0, cr0, [ip], #-0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:404
	ocv_cap[14] = axp2585_config.pmu_bat_para15;
     b44:	0000418d 	andeq	r4, r0, sp, lsl #3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:401
	ocv_cap[6]  = axp2585_config.pmu_bat_para7;
	ocv_cap[7]  = axp2585_config.pmu_bat_para8;
	ocv_cap[8]  = axp2585_config.pmu_bat_para9;
	ocv_cap[9]  = axp2585_config.pmu_bat_para10;
	ocv_cap[10] = axp2585_config.pmu_bat_para11;
	ocv_cap[11] = axp2585_config.pmu_bat_para12;
     b48:	0b60ba18 	bleq	182f3b0 <axp2585_set_usb_vhold+0x182e16c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:402
	ocv_cap[12] = axp2585_config.pmu_bat_para13;
     b4c:	00300000 	eorseq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:405
	ocv_cap[13] = axp2585_config.pmu_bat_para14;
	ocv_cap[14] = axp2585_config.pmu_bat_para15;
	ocv_cap[15] = axp2585_config.pmu_bat_para16;
     b50:	00318213 	eorseq	r8, r1, r3, lsl r2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:403
	ocv_cap[8]  = axp2585_config.pmu_bat_para9;
	ocv_cap[9]  = axp2585_config.pmu_bat_para10;
	ocv_cap[10] = axp2585_config.pmu_bat_para11;
	ocv_cap[11] = axp2585_config.pmu_bat_para12;
	ocv_cap[12] = axp2585_config.pmu_bat_para13;
	ocv_cap[13] = axp2585_config.pmu_bat_para14;
     b54:	50040600 	andpl	r0, r4, r0, lsl #12
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:422
	ocv_cap[27] = axp2585_config.pmu_bat_para28;
	ocv_cap[28] = axp2585_config.pmu_bat_para29;
	ocv_cap[29] = axp2585_config.pmu_bat_para30;
	ocv_cap[30] = axp2585_config.pmu_bat_para31;
	ocv_cap[31] = axp2585_config.pmu_bat_para32;
	axp_regmap_writes(map, 0xC0, 32, ocv_cap);
     b58:	1300000b 	movwne	r0, #11
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:404
	ocv_cap[9]  = axp2585_config.pmu_bat_para10;
	ocv_cap[10] = axp2585_config.pmu_bat_para11;
	ocv_cap[11] = axp2585_config.pmu_bat_para12;
	ocv_cap[12] = axp2585_config.pmu_bat_para13;
	ocv_cap[13] = axp2585_config.pmu_bat_para14;
	ocv_cap[14] = axp2585_config.pmu_bat_para15;
     b5c:	000040da 	ldrdeq	r4, [r0], -sl
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:422
	ocv_cap[27] = axp2585_config.pmu_bat_para28;
	ocv_cap[28] = axp2585_config.pmu_bat_para29;
	ocv_cap[29] = axp2585_config.pmu_bat_para30;
	ocv_cap[30] = axp2585_config.pmu_bat_para31;
	ocv_cap[31] = axp2585_config.pmu_bat_para32;
	axp_regmap_writes(map, 0xC0, 32, ocv_cap);
     b60:	0b660406 	bleq	1981b80 <axp2585_set_usb_vhold+0x198093c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:402
	ocv_cap[7]  = axp2585_config.pmu_bat_para8;
	ocv_cap[8]  = axp2585_config.pmu_bat_para9;
	ocv_cap[9]  = axp2585_config.pmu_bat_para10;
	ocv_cap[10] = axp2585_config.pmu_bat_para11;
	ocv_cap[11] = axp2585_config.pmu_bat_para12;
	ocv_cap[12] = axp2585_config.pmu_bat_para13;
     b64:	5b070000 	blpl	1c0b6c <axp2585_set_usb_vhold+0x1bf928>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:405
	ocv_cap[13] = axp2585_config.pmu_bat_para14;
	ocv_cap[14] = axp2585_config.pmu_bat_para15;
	ocv_cap[15] = axp2585_config.pmu_bat_para16;
     b68:	2000000b 	andcs	r0, r0, fp
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:408
	ocv_cap[16] = axp2585_config.pmu_bat_para17;
	ocv_cap[17] = axp2585_config.pmu_bat_para18;
	ocv_cap[18] = axp2585_config.pmu_bat_para19;
     b6c:	00000090 	muleq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:407
	ocv_cap[12] = axp2585_config.pmu_bat_para13;
	ocv_cap[13] = axp2585_config.pmu_bat_para14;
	ocv_cap[14] = axp2585_config.pmu_bat_para15;
	ocv_cap[15] = axp2585_config.pmu_bat_para16;
	ocv_cap[16] = axp2585_config.pmu_bat_para17;
	ocv_cap[17] = axp2585_config.pmu_bat_para18;
     b70:	00000b7f 	andeq	r0, r0, pc, ror fp
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:409
	ocv_cap[18] = axp2585_config.pmu_bat_para19;
	ocv_cap[19] = axp2585_config.pmu_bat_para20;
     b74:	0009cb0f 	andeq	ip, r9, pc, lsl #22
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:408
	ocv_cap[13] = axp2585_config.pmu_bat_para14;
	ocv_cap[14] = axp2585_config.pmu_bat_para15;
	ocv_cap[15] = axp2585_config.pmu_bat_para16;
	ocv_cap[16] = axp2585_config.pmu_bat_para17;
	ocv_cap[17] = axp2585_config.pmu_bat_para18;
	ocv_cap[18] = axp2585_config.pmu_bat_para19;
     b78:	00250f00 	eoreq	r0, r5, r0, lsl #30
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:410
	ocv_cap[19] = axp2585_config.pmu_bat_para20;
	ocv_cap[20] = axp2585_config.pmu_bat_para21;
     b7c:	06000000 	streq	r0, [r0], -r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:409
	ocv_cap[14] = axp2585_config.pmu_bat_para15;
	ocv_cap[15] = axp2585_config.pmu_bat_para16;
	ocv_cap[16] = axp2585_config.pmu_bat_para17;
	ocv_cap[17] = axp2585_config.pmu_bat_para18;
	ocv_cap[18] = axp2585_config.pmu_bat_para19;
	ocv_cap[19] = axp2585_config.pmu_bat_para20;
     b80:	000b6b04 	andeq	r6, fp, r4, lsl #22
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:411
	ocv_cap[20] = axp2585_config.pmu_bat_para21;
	ocv_cap[21] = axp2585_config.pmu_bat_para22;
     b84:	00252000 	eoreq	r2, r5, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:410
	ocv_cap[15] = axp2585_config.pmu_bat_para16;
	ocv_cap[16] = axp2585_config.pmu_bat_para17;
	ocv_cap[17] = axp2585_config.pmu_bat_para18;
	ocv_cap[18] = axp2585_config.pmu_bat_para19;
	ocv_cap[19] = axp2585_config.pmu_bat_para20;
	ocv_cap[20] = axp2585_config.pmu_bat_para21;
     b88:	0b990000 	bleq	fe640b90 <axp2585_set_usb_vhold+0xfe63f94c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:412
	ocv_cap[21] = axp2585_config.pmu_bat_para22;
	ocv_cap[22] = axp2585_config.pmu_bat_para23;
     b8c:	cb0f0000 	blgt	3c0b94 <axp2585_set_usb_vhold+0x3bf950>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:411
	ocv_cap[16] = axp2585_config.pmu_bat_para17;
	ocv_cap[17] = axp2585_config.pmu_bat_para18;
	ocv_cap[18] = axp2585_config.pmu_bat_para19;
	ocv_cap[19] = axp2585_config.pmu_bat_para20;
	ocv_cap[20] = axp2585_config.pmu_bat_para21;
	ocv_cap[21] = axp2585_config.pmu_bat_para22;
     b90:	0f000009 	svceq	0x00000009
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:413
	ocv_cap[22] = axp2585_config.pmu_bat_para23;
	ocv_cap[23] = axp2585_config.pmu_bat_para24;
     b94:	00000b99 	muleq	r0, r9, fp
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:412
	ocv_cap[17] = axp2585_config.pmu_bat_para18;
	ocv_cap[18] = axp2585_config.pmu_bat_para19;
	ocv_cap[19] = axp2585_config.pmu_bat_para20;
	ocv_cap[20] = axp2585_config.pmu_bat_para21;
	ocv_cap[21] = axp2585_config.pmu_bat_para22;
	ocv_cap[22] = axp2585_config.pmu_bat_para23;
     b98:	b8040600 	stmdalt	r4, {r9, sl}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:414
	ocv_cap[23] = axp2585_config.pmu_bat_para24;
	ocv_cap[24] = axp2585_config.pmu_bat_para25;
     b9c:	06000001 	streq	r0, [r0], -r1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:413
	ocv_cap[18] = axp2585_config.pmu_bat_para19;
	ocv_cap[19] = axp2585_config.pmu_bat_para20;
	ocv_cap[20] = axp2585_config.pmu_bat_para21;
	ocv_cap[21] = axp2585_config.pmu_bat_para22;
	ocv_cap[22] = axp2585_config.pmu_bat_para23;
	ocv_cap[23] = axp2585_config.pmu_bat_para24;
     ba0:	000b8504 	andeq	r8, fp, r4, lsl #10
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:415
	ocv_cap[24] = axp2585_config.pmu_bat_para25;
	ocv_cap[25] = axp2585_config.pmu_bat_para26;
     ba4:	00252000 	eoreq	r2, r5, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:414
	ocv_cap[19] = axp2585_config.pmu_bat_para20;
	ocv_cap[20] = axp2585_config.pmu_bat_para21;
	ocv_cap[21] = axp2585_config.pmu_bat_para22;
	ocv_cap[22] = axp2585_config.pmu_bat_para23;
	ocv_cap[23] = axp2585_config.pmu_bat_para24;
	ocv_cap[24] = axp2585_config.pmu_bat_para25;
     ba8:	0bbe0000 	bleq	fef80bb0 <axp2585_set_usb_vhold+0xfef7f96c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:416
	ocv_cap[25] = axp2585_config.pmu_bat_para26;
	ocv_cap[26] = axp2585_config.pmu_bat_para27;
     bac:	cb0f0000 	blgt	3c0bb4 <axp2585_set_usb_vhold+0x3bf970>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:415
	ocv_cap[20] = axp2585_config.pmu_bat_para21;
	ocv_cap[21] = axp2585_config.pmu_bat_para22;
	ocv_cap[22] = axp2585_config.pmu_bat_para23;
	ocv_cap[23] = axp2585_config.pmu_bat_para24;
	ocv_cap[24] = axp2585_config.pmu_bat_para25;
	ocv_cap[25] = axp2585_config.pmu_bat_para26;
     bb0:	0f000009 	svceq	0x00000009
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:417
	ocv_cap[26] = axp2585_config.pmu_bat_para27;
	ocv_cap[27] = axp2585_config.pmu_bat_para28;
     bb4:	00000025 	andeq	r0, r0, r5, lsr #32
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:416
	ocv_cap[21] = axp2585_config.pmu_bat_para22;
	ocv_cap[22] = axp2585_config.pmu_bat_para23;
	ocv_cap[23] = axp2585_config.pmu_bat_para24;
	ocv_cap[24] = axp2585_config.pmu_bat_para25;
	ocv_cap[25] = axp2585_config.pmu_bat_para26;
	ocv_cap[26] = axp2585_config.pmu_bat_para27;
     bb8:	000b990f 	andeq	r9, fp, pc, lsl #18
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:418
	ocv_cap[27] = axp2585_config.pmu_bat_para28;
	ocv_cap[28] = axp2585_config.pmu_bat_para29;
     bbc:	04060000 	streq	r0, [r6], #-0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:417
	ocv_cap[22] = axp2585_config.pmu_bat_para23;
	ocv_cap[23] = axp2585_config.pmu_bat_para24;
	ocv_cap[24] = axp2585_config.pmu_bat_para25;
	ocv_cap[25] = axp2585_config.pmu_bat_para26;
	ocv_cap[26] = axp2585_config.pmu_bat_para27;
	ocv_cap[27] = axp2585_config.pmu_bat_para28;
     bc0:	00000ba5 	andeq	r0, r0, r5, lsr #23
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:419
	ocv_cap[28] = axp2585_config.pmu_bat_para29;
	ocv_cap[29] = axp2585_config.pmu_bat_para30;
     bc4:	000bd40e 	andeq	sp, fp, lr, lsl #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:418
	ocv_cap[23] = axp2585_config.pmu_bat_para24;
	ocv_cap[24] = axp2585_config.pmu_bat_para25;
	ocv_cap[25] = axp2585_config.pmu_bat_para26;
	ocv_cap[26] = axp2585_config.pmu_bat_para27;
	ocv_cap[27] = axp2585_config.pmu_bat_para28;
	ocv_cap[28] = axp2585_config.pmu_bat_para29;
     bc8:	09cb0f00 	stmibeq	fp, {r8, r9, sl, fp}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:420
	ocv_cap[29] = axp2585_config.pmu_bat_para30;
	ocv_cap[30] = axp2585_config.pmu_bat_para31;
     bcc:	250f0000 	strcs	r0, [pc, #-0]	; bd4 <.debug_info+0xbd4>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:419
	ocv_cap[24] = axp2585_config.pmu_bat_para25;
	ocv_cap[25] = axp2585_config.pmu_bat_para26;
	ocv_cap[26] = axp2585_config.pmu_bat_para27;
	ocv_cap[27] = axp2585_config.pmu_bat_para28;
	ocv_cap[28] = axp2585_config.pmu_bat_para29;
	ocv_cap[29] = axp2585_config.pmu_bat_para30;
     bd0:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:421
	ocv_cap[30] = axp2585_config.pmu_bat_para31;
	ocv_cap[31] = axp2585_config.pmu_bat_para32;
     bd4:	0bc40406 	bleq	ff101bf4 <axp2585_set_usb_vhold+0xff1009b0>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:406
	ocv_cap[11] = axp2585_config.pmu_bat_para12;
	ocv_cap[12] = axp2585_config.pmu_bat_para13;
	ocv_cap[13] = axp2585_config.pmu_bat_para14;
	ocv_cap[14] = axp2585_config.pmu_bat_para15;
	ocv_cap[15] = axp2585_config.pmu_bat_para16;
	ocv_cap[16] = axp2585_config.pmu_bat_para17;
     bd8:	ce200000 	cdpgt	0, 2, cr0, cr0, cr0, {0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:420
	ocv_cap[25] = axp2585_config.pmu_bat_para26;
	ocv_cap[26] = axp2585_config.pmu_bat_para27;
	ocv_cap[27] = axp2585_config.pmu_bat_para28;
	ocv_cap[28] = axp2585_config.pmu_bat_para29;
	ocv_cap[29] = axp2585_config.pmu_bat_para30;
	ocv_cap[30] = axp2585_config.pmu_bat_para31;
     bdc:	f8000001 			; <UNDEFINED> instruction: 0xf8000001
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:421
	ocv_cap[31] = axp2585_config.pmu_bat_para32;
     be0:	0f00000b 	svceq	0x0000000b
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:422
	axp_regmap_writes(map, 0xC0, 32, ocv_cap);
     be4:	00000bf8 	strdeq	r0, [r0], -r8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:425

	/*Init CHGLED function*/
	if (axp2585_config.pmu_chgled_func)
     be8:	0001440f 	andeq	r4, r1, pc, lsl #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:426
		axp_regmap_set_bits(map, 0x90, 0x80); /* control by charger */
     bec:	01c30f00 	biceq	r0, r3, r0, lsl #30
     bf0:	b80f0000 	stmdalt	pc, {}	; <UNPREDICTABLE>
     bf4:	00000001 	andeq	r0, r0, r1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:425
	ocv_cap[30] = axp2585_config.pmu_bat_para31;
	ocv_cap[31] = axp2585_config.pmu_bat_para32;
	axp_regmap_writes(map, 0xC0, 32, ocv_cap);

	/*Init CHGLED function*/
	if (axp2585_config.pmu_chgled_func)
     bf8:	0acc0406 	beq	ff301c18 <axp2585_set_usb_vhold+0xff3009d4>
     bfc:	04060000 	streq	r0, [r6], #-0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:426
		axp_regmap_set_bits(map, 0x90, 0x80); /* control by charger */
     c00:	00000bda 	ldrdeq	r0, [r0], -sl
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:436
	if (axp2585_config.pmu_chgled_type)
		axp_regmap_set_bits(map, 0x90, 0x01); /* Type B */
	else
		axp_regmap_clr_bits(map, 0x90, 0x07); /* Type A */
#else
	axp_regmap_set_bits(map, 0x90, axp2585_config.pmu_chgled_type & 0x07);
     c04:	00009020 	andeq	r9, r0, r0, lsr #32
     c08:	000c1800 	andeq	r1, ip, r0, lsl #16
     c0c:	0bf80f00 	bleq	ffe04814 <axp2585_set_usb_vhold+0xffe035d0>
     c10:	ca0f0000 	bgt	3c0c18 <axp2585_set_usb_vhold+0x3bf9d4>
     c14:	00000003 	andeq	r0, r0, r3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:439
#endif
	/*Init battery capacity correct function*/
	if (axp2585_config.pmu_batt_cap_correct)
     c18:	0c040406 	cfstrseq	mvf0, [r4], {6}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:440
		axp_regmap_set_bits(map, 0xb8, 0x20); /* enable */
     c1c:	36210000 	strtcc	r0, [r1], -r0
     c20:	0400000f 	streq	r0, [r0], #-15
     c24:	00000057 	andeq	r0, r0, r7, asr r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:439
		axp_regmap_clr_bits(map, 0x90, 0x07); /* Type A */
#else
	axp_regmap_set_bits(map, 0x90, axp2585_config.pmu_chgled_type & 0x07);
#endif
	/*Init battery capacity correct function*/
	if (axp2585_config.pmu_batt_cap_correct)
     c28:	0c411b1a 	vmoveq	d10, r1, r1
     c2c:	3f220000 	svccc	0x00220000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:440
		axp_regmap_set_bits(map, 0xb8, 0x20); /* enable */
     c30:	0000002f 	andeq	r0, r0, pc, lsr #32
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:445
	else
		axp_regmap_clr_bits(map, 0xb8, 0x20); /* disable */

	/*battery detect enable*/
	if (axp2585_config.pmu_batdeten)
     c34:	0015e222 	andseq	lr, r5, r2, lsr #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:446
		axp_regmap_set_bits(map, 0x8e, 0x08);
     c38:	7d220100 	stfvcs	f0, [r2, #-0]
     c3c:	02000006 	andeq	r0, r0, #6
     c40:	43450b00 	movtmi	r0, #23296	; 0x5b00
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:445
		axp_regmap_set_bits(map, 0xb8, 0x20); /* enable */
	else
		axp_regmap_clr_bits(map, 0xb8, 0x20); /* disable */

	/*battery detect enable*/
	if (axp2585_config.pmu_batdeten)
     c44:	1a180000 	bne	600c4c <axp2585_set_usb_vhold+0x5ffa08>
     c48:	000c9628 	andeq	r9, ip, r8, lsr #12
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:446
		axp_regmap_set_bits(map, 0x8e, 0x08);
     c4c:	27750c00 	ldrbcs	r0, [r5, -r0, lsl #24]!
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:451
	else
		axp_regmap_clr_bits(map, 0x8e, 0x08);

	/* RDC initial */
	axp_regmap_read(map, AXP2585_RDC0, &val);
     c50:	291a0000 	ldmdbcs	sl, {}	; <UNPREDICTABLE>
     c54:	00000c1e 	andeq	r0, r0, lr, lsl ip
     c58:	09fa0c00 	ldmibeq	sl!, {sl, fp}^
     c5c:	2a1a0000 	bcs	680c64 <axp2585_set_usb_vhold+0x67fa20>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:452
	if ((axp2585_config.pmu_battery_rdc) && (!(val & 0x40))) {
     c60:	00000c9b 	muleq	r0, fp, ip
     c64:	1ce40c04 	stclne	12, cr0, [r4], #16
     c68:	2b1a0000 	blcs	680c70 <axp2585_set_usb_vhold+0x67fa2c>
     c6c:	00000ca6 	andeq	r0, r0, r6, lsr #25
     c70:	18360c08 	ldmdane	r6!, {r3, sl, fp}
     c74:	2c1a0000 	ldccs	0, cr0, [sl], {-0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:458
		rdc = (axp2585_config.pmu_battery_rdc * 10000 + 5371) / 10742;
		axp_regmap_write(map, AXP2585_RDC0, ((rdc >> 8) & 0x1F)|0x80);
		axp_regmap_write(map, AXP2585_RDC1, rdc & 0x00FF);
	}

	axp_regmap_read(map, AXP2585_BATCAP0, &val);
     c78:	00000cc6 	andeq	r0, r0, r6, asr #25
     c7c:	2a6a0c0c 	bcs	1a83038 <axp2585_set_usb_vhold+0x1a81df4>
     c80:	2d1a0000 	ldccs	0, cr0, [sl, #-0]
     c84:	00000cd1 	ldrdeq	r0, [r0], -r1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:459
	if ((axp2585_config.pmu_battery_cap) && (!(val & 0x80))) {
     c88:	26290c10 			; <UNDEFINED> instruction: 0x26290c10
     c8c:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
     c90:	00000ce2 	andeq	r0, r0, r2, ror #25
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:467
		axp_regmap_write(map, AXP2585_BATCAP0,
					((cur_coulomb_counter >> 8) | 0x80));
		axp_regmap_write(map, AXP2585_BATCAP1,
					cur_coulomb_counter & 0x00FF);
	} else if (!axp2585_config.pmu_battery_cap) {
		axp_regmap_write(map, AXP2585_BATCAP0, 0x00);
     c94:	90100014 	andsls	r0, r0, r4, lsl r0
     c98:	06000001 	streq	r0, [r0], -r1
     c9c:	000c9604 	andeq	r9, ip, r4, lsl #12
     ca0:	00251000 	eoreq	r1, r5, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:468
		axp_regmap_write(map, AXP2585_BATCAP1, 0x00);
     ca4:	04060000 	streq	r0, [r6], #-0
     ca8:	00000ca1 	andeq	r0, r0, r1, lsr #25
     cac:	00093720 	andeq	r3, r9, r0, lsr #14
     cb0:	000cbb00 	andeq	fp, ip, r0, lsl #22
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:471
	}

	if (axp2585_config.pmu_bat_unused == 1)
     cb4:	0cbb0f00 	ldceq	15, cr0, [fp]
     cb8:	06000000 	streq	r0, [r0], -r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:474
		axp2585_spy_info.batt->det_unused = 1;
	else
		axp2585_spy_info.batt->det_unused = 0;
     cbc:	000cc104 	andeq	ip, ip, r4, lsl #2
     cc0:	0f561300 	svceq	0x00561300
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:472
		axp_regmap_write(map, AXP2585_BATCAP0, 0x00);
		axp_regmap_write(map, AXP2585_BATCAP1, 0x00);
	}

	if (axp2585_config.pmu_bat_unused == 1)
		axp2585_spy_info.batt->det_unused = 1;
     cc4:	04060000 	streq	r0, [r6], #-0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:474
	else
		axp2585_spy_info.batt->det_unused = 0;
     cc8:	00000cac 	andeq	r0, r0, ip, lsr #25
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:472
		axp_regmap_write(map, AXP2585_BATCAP0, 0x00);
		axp_regmap_write(map, AXP2585_BATCAP1, 0x00);
	}

	if (axp2585_config.pmu_bat_unused == 1)
		axp2585_spy_info.batt->det_unused = 1;
     ccc:	00093710 	andeq	r3, r9, r0, lsl r7
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:476
	else
		axp2585_spy_info.batt->det_unused = 0;

	if (axp2585_config.pmu_bat_temp_enable != 0) {
     cd0:	cc040600 	stcgt	6, cr0, [r4], {-0}
     cd4:	0e00000c 	cdpeq	0, 0, cr0, cr0, cr12, {0}
     cd8:	00000ce2 	andeq	r0, r0, r2, ror #25
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:487
				axp2585_config.pmu_bat_shutdown_ltf * 10 / 128);
		axp_regmap_write(map, AXP2585_VHTF_WORK,
				axp2585_config.pmu_bat_shutdown_htf * 10 / 128);
	}
	/*enable fast charge */
	axp_regmap_update(map, 0x31, 0x04, 0x04);
     cdc:	0000250f 	andeq	r2, r0, pc, lsl #10
     ce0:	04060000 	streq	r0, [r6], #-0
     ce4:	00000cd7 	ldrdeq	r0, [r0], -r7
     ce8:	141b040d 	ldrne	r0, [fp], #-1037	; 0xfffffbf3
     cec:	00000cfd 	strdeq	r0, [r0], -sp
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:489
	/*set POR time as 16s*/
	axp_regmap_update(map, AXP2585_POK_SET, 0x30, 0x30);
     cf0:	6c617612 	stclvs	6, cr7, [r1], #-72	; 0xffffffb8
     cf4:	a2151b00 	andsge	r1, r5, #0, 22
     cf8:	00000001 	andeq	r0, r0, r1
     cfc:	359b0800 	ldrcc	r0, [fp, #2048]	; 0x800
     d00:	161b0000 	ldrne	r0, [fp], -r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:491
	for (i = 0; i < ARRAY_SIZE(update_min_times); i++) {
		if (update_min_times[i] == axp2585_config.pmu_update_min_time)
     d04:	00000ce8 	andeq	r0, r0, r8, ror #25
     d08:	191b040d 	ldmdbne	fp, {r0, r2, r3, sl}
     d0c:	00000d1d 	andeq	r0, r0, sp, lsl sp
     d10:	6c617612 	stclvs	6, cr7, [r1], #-72	; 0xffffffb8
     d14:	ad1a1b00 	vldrge	d1, [sl, #-0]
     d18:	00000001 	andeq	r0, r0, r1
     d1c:	29b50800 	ldmibcs	r5!, {fp}
     d20:	1b1b0000 	blne	6c0d28 <axp2585_set_usb_vhold+0x6bfae4>
     d24:	00000d08 	andeq	r0, r0, r8, lsl #26
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:490
	}
	/*enable fast charge */
	axp_regmap_update(map, 0x31, 0x04, 0x04);
	/*set POR time as 16s*/
	axp_regmap_update(map, AXP2585_POK_SET, 0x30, 0x30);
	for (i = 0; i < ARRAY_SIZE(update_min_times); i++) {
     d28:	002a2e0b 	eoreq	r2, sl, fp, lsl #28
     d2c:	1d1c0800 	ldcne	8, cr0, [ip, #-0]
     d30:	00000d4d 	andeq	r0, r0, sp, asr #26
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:494
		if (update_min_times[i] == axp2585_config.pmu_update_min_time)
			break;
	}
	axp_regmap_update(map, AXP2585_ADJUST_PARA, i, 0x7);
     d34:	0003030c 	andeq	r0, r3, ip, lsl #6
     d38:	451e1c00 	ldrmi	r1, [lr, #-3072]	; 0xfffff400
     d3c:	00000000 	andeq	r0, r0, r0
     d40:	00427e0c 	subeq	r7, r2, ip, lsl #28
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:497
	/*initial the ocv_cou_adjust_time*/
	for (i = 0; i < ARRAY_SIZE(ocv_cou_adjust_time); i++) {
		if (ocv_cou_adjust_time[i] == axp2585_config.pmu_ocv_cou_adjust_time)
     d44:	851f1c00 	ldrhi	r1, [pc, #-3072]	; 14c <.debug_info+0x14c>
     d48:	04000001 	streq	r0, [r0], #-1
     d4c:	42ca0b00 	sbcmi	r0, sl, #0, 22
     d50:	1c140000 	ldcne	0, cr0, [r4], {-0}
     d54:	000d9653 	andeq	r9, sp, r3, asr r6
     d58:	03030c00 	movweq	r0, #15360	; 0x3c00
     d5c:	541c0000 	ldrpl	r0, [ip], #-0
     d60:	00000045 	andeq	r0, r0, r5, asr #32
     d64:	43120c00 	tstmi	r2, #0, 24
     d68:	551c0000 	ldrpl	r0, [ip, #-0]
     d6c:	00000e66 	andeq	r0, r0, r6, ror #28
     d70:	2b610c04 	blcs	1843018 <axp2585_set_usb_vhold+0x1841dd4>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:496
		if (update_min_times[i] == axp2585_config.pmu_update_min_time)
			break;
	}
	axp_regmap_update(map, AXP2585_ADJUST_PARA, i, 0x7);
	/*initial the ocv_cou_adjust_time*/
	for (i = 0; i < ARRAY_SIZE(ocv_cou_adjust_time); i++) {
     d74:	571c0000 	ldrpl	r0, [ip, -r0]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:497
		if (ocv_cou_adjust_time[i] == axp2585_config.pmu_ocv_cou_adjust_time)
     d78:	00000ee0 	andeq	r0, r0, r0, ror #29
     d7c:	19050c08 	stmdbne	r5, {r3, sl, fp}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:501
			break;
	}
	i <<= 6;
	axp_regmap_update(map, AXP2585_ADJUST_PARA1, i, 0xC0);
     d80:	591c0000 	ldmdbpl	ip, {}	; <UNPREDICTABLE>
     d84:	00000ee6 	andeq	r0, r0, r6, ror #29
     d88:	31920c0c 	orrscc	r0, r2, ip, lsl #24
     d8c:	5a1c0000 	bpl	700d94 <axp2585_set_usb_vhold+0x6ffb50>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:502
	printk("==%s==line:%d==file:%s==\n",__func__,__LINE__,__FILE__);
     d90:	00000eec 	andeq	r0, r0, ip, ror #29
     d94:	85200010 	strhi	r0, [r0, #-16]!
     d98:	af000001 	svcge	0x00000001
     d9c:	0f00000d 	svceq	0x0000000d
     da0:	00000daf 	andeq	r0, r0, pc, lsr #27
     da4:	000e600f 	andeq	r6, lr, pc
     da8:	00900f00 	addseq	r0, r0, r0, lsl #30
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:662
	battery_data.voltage_min_design = axp2585_config.pmu_pwroff_vol
								* 1000;
	battery_data.energy_full_design = axp2585_config.pmu_battery_cap;

	axp2585_charger_init(axp_dev);
    printk("==%s==line:%d==file:%s==\n",__func__,__LINE__,__FILE__);
     dac:	06000000 	streq	r0, [r0], -r0
     db0:	000db504 	andeq	fp, sp, r4, lsl #10
     db4:	3e7c0b00 	vaddcc.f64	d16, d12, d0
     db8:	1d240000 	stcne	0, cr0, [r4, #-0]
     dbc:	000e603f 	andeq	r6, lr, pc, lsr r0
     dc0:	03030c00 	movweq	r0, #15360	; 0x3c00
     dc4:	401d0000 	andsmi	r0, sp, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:664

	chg_dev = axp_power_supply_register(&pdev->dev, axp_dev,
     dc8:	00000045 	andeq	r0, r0, r5, asr #32
     dcc:	30120c00 	andscc	r0, r2, r0, lsl #24
     dd0:	411d0000 	tstmi	sp, r0
     dd4:	00000230 	andeq	r0, r0, r0, lsr r2
     dd8:	186c0c04 	stmdane	ip!, {r2, sl, fp}^
     ddc:	421d0000 	andsmi	r0, sp, #0
     de0:	00000daf 	andeq	r0, r0, pc, lsr #27
IS_ERR_OR_NULL():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/err.h:40
     de4:	32f20c0c 	rscscc	r0, r2, #12, 24	; 0xc00
     de8:	431d0000 	tstmi	sp, #0
     dec:	000010f1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
     df0:	2d520c10 	ldclcs	12, cr0, [r2, #-64]	; 0xffffffc0
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:670
					&battery_data, &axp2585_spy_info);
	if (IS_ERR_OR_NULL(chg_dev))
		goto fail;
	chg_dev->private_debug = axp2585_private_debug;
	chg_dev->pmic_temp_offset = 0x56;
	chg_dev->spy_info->batt->bat_temp_offset = 0x58;
     df4:	441d0000 	ldrmi	r0, [sp], #-0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:668

	chg_dev = axp_power_supply_register(&pdev->dev, axp_dev,
					&battery_data, &axp2585_spy_info);
	if (IS_ERR_OR_NULL(chg_dev))
		goto fail;
	chg_dev->private_debug = axp2585_private_debug;
     df8:	00001140 	andeq	r1, r0, r0, asr #2
     dfc:	64731214 	ldrbtvs	r1, [r3], #-532	; 0xfffffdec
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:669
	chg_dev->pmic_temp_offset = 0x56;
     e00:	3b451d00 	blcc	1148208 <axp2585_set_usb_vhold+0x1146fc4>
     e04:	18000008 	stmdane	r0, {r3}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:670
	chg_dev->spy_info->batt->bat_temp_offset = 0x58;
     e08:	0009c40c 	andeq	ip, r9, ip, lsl #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:668

	chg_dev = axp_power_supply_register(&pdev->dev, axp_dev,
					&battery_data, &axp2585_spy_info);
	if (IS_ERR_OR_NULL(chg_dev))
		goto fail;
	chg_dev->private_debug = axp2585_private_debug;
     e0c:	ac461d00 	mcrrge	13, 0, r1, r6, cr0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:670
	chg_dev->pmic_temp_offset = 0x56;
	chg_dev->spy_info->batt->bat_temp_offset = 0x58;
     e10:	1c00000f 	stcne	0, cr0, [r0], {15}
     e14:	00158e23 	andseq	r8, r5, r3, lsr #28
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:676

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
		if (irq < 0)
			continue;
       printk("[axp2585]i=%d ,irq=%d in line:%d of %s\n",i,irq,__LINE__,__func__);
     e18:	574a1d00 	strbpl	r1, [sl, -r0, lsl #26]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:699
           {
            printk("[axp2585]axp_dev->int irq in line:%d of %d is %s NOT NULL\n",__LINE__,axp_dev->irq,__func__ );
           }
           else
             {
               printk("[axp2585]axp_dev->irq in line:%d of %s is  NULL\n",__LINE__,__func__ );
     e1c:	04000000 	streq	r0, [r0], #-0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:676

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
		if (irq < 0)
			continue;
       printk("[axp2585]i=%d ,irq=%d in line:%d of %s\n",i,irq,__LINE__,__func__);
     e20:	23201f01 	teqcs	r0, #1, 30
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:670
					&battery_data, &axp2585_spy_info);
	if (IS_ERR_OR_NULL(chg_dev))
		goto fail;
	chg_dev->private_debug = axp2585_private_debug;
	chg_dev->pmic_temp_offset = 0x56;
	chg_dev->spy_info->batt->bat_temp_offset = 0x58;
     e24:	00002258 	andeq	r2, r0, r8, asr r2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:676

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
		if (irq < 0)
			continue;
       printk("[axp2585]i=%d ,irq=%d in line:%d of %s\n",i,irq,__LINE__,__func__);
     e28:	00574b1d 	subseq	r4, r7, sp, lsl fp
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:670
					&battery_data, &axp2585_spy_info);
	if (IS_ERR_OR_NULL(chg_dev))
		goto fail;
	chg_dev->private_debug = axp2585_private_debug;
	chg_dev->pmic_temp_offset = 0x56;
	chg_dev->spy_info->batt->bat_temp_offset = 0x58;
     e2c:	01040000 	mrseq	r0, (UNDEF: 4)
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:699
           {
            printk("[axp2585]axp_dev->int irq in line:%d of %d is %s NOT NULL\n",__LINE__,axp_dev->irq,__func__ );
           }
           else
             {
               printk("[axp2585]axp_dev->irq in line:%d of %s is  NULL\n",__LINE__,__func__ );
     e30:	5623201e 			; <UNDEFINED> instruction: 0x5623201e
     e34:	1d000011 	stcne	0, cr0, [r0, #-68]	; 0xffffffbc
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:670
					&battery_data, &axp2585_spy_info);
	if (IS_ERR_OR_NULL(chg_dev))
		goto fail;
	chg_dev->private_debug = axp2585_private_debug;
	chg_dev->pmic_temp_offset = 0x56;
	chg_dev->spy_info->batt->bat_temp_offset = 0x58;
     e38:	0000574c 	andeq	r5, r0, ip, asr #14
     e3c:	1d010400 	cfstrsne	mvf0, [r1, #-0]
     e40:	016e2320 	cmneq	lr, r0, lsr #6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:673

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
     e44:	4d1d0000 	ldcmi	0, cr0, [sp, #-0]
     e48:	00000057 	andeq	r0, r0, r7, asr r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:674
		if (irq < 0)
     e4c:	201c0104 	andscs	r0, ip, r4, lsl #2
     e50:	00073b23 	andeq	r3, r7, r3, lsr #22
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:672
		goto fail;
	chg_dev->private_debug = axp2585_private_debug;
	chg_dev->pmic_temp_offset = 0x56;
	chg_dev->spy_info->batt->bat_temp_offset = 0x58;

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
     e54:	574e1d00 	strbpl	r1, [lr, -r0, lsl #26]
     e58:	04000000 	streq	r0, [r0], #-0
     e5c:	00201b01 	eoreq	r1, r0, r1, lsl #22
dev_set_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:903
}

static inline void dev_set_drvdata(struct device *dev, void *data)
{
	dev->driver_data = data;
     e60:	0d280406 	cfstrseq	mvf0, [r8, #-24]!	; 0xffffffe8
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:716
			axp2585_charger_irq[i].name, irq, ret);
	}
	}

	platform_set_drvdata(pdev, chg_dev);
	ret = sysfs_create_group(&pdev->dev.kobj, &bmu_control_attr_group);
     e64:	04060000 	streq	r0, [r6], #-0
     e68:	00000d96 	muleq	r0, r6, sp
     e6c:	00018520 	andeq	r8, r1, r0, lsr #10
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:717
	if (ret)
     e70:	000e8500 	andeq	r8, lr, r0, lsl #10
     e74:	0daf0f00 	stceq	15, cr0, [pc]	; e7c <.debug_info+0xe7c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:731
			continue;
		axp_free_irq(axp_dev, irq);
	}
fail:
	return -1;
}
     e78:	850f0000 	strhi	r0, [pc, #-0]	; e80 <.debug_info+0xe80>
     e7c:	0f00000e 	svceq	0x0000000e
axp2585_charger_init():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:459
		axp_regmap_write(map, AXP2585_RDC0, ((rdc >> 8) & 0x1F)|0x80);
		axp_regmap_write(map, AXP2585_RDC1, rdc & 0x00FF);
	}

	axp_regmap_read(map, AXP2585_BATCAP0, &val);
	if ((axp2585_config.pmu_battery_cap) && (!(val & 0x80))) {
     e80:	00000090 	muleq	r0, r0, r0
     e84:	8b040600 	blhi	10268c <axp2585_set_usb_vhold+0x101448>
     e88:	0b00000e 	bleq	ec8 <.debug_info+0xec8>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:461
		cur_coulomb_counter = axp2585_config.pmu_battery_cap
					* 1000 / 1456;
     e8c:	0000260f 	andeq	r2, r0, pc, lsl #12
     e90:	e09b1c1c 	adds	r1, fp, ip, lsl ip
     e94:	0c00000e 	stceq	0, cr0, [r0], {14}
     e98:	00000bb3 			; <UNDEFINED> instruction: 0x00000bb3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:462
		axp_regmap_write(map, AXP2585_BATCAP0,
     e9c:	0d289c1c 	stceq	12, cr9, [r8, #-112]!	; 0xffffff90
     ea0:	0c000000 	stceq	0, cr0, [r0], {-0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:461
	}

	axp_regmap_read(map, AXP2585_BATCAP0, &val);
	if ((axp2585_config.pmu_battery_cap) && (!(val & 0x80))) {
		cur_coulomb_counter = axp2585_config.pmu_battery_cap
					* 1000 / 1456;
     ea4:	00000849 	andeq	r0, r0, r9, asr #16
     ea8:	01c39d1c 	biceq	r9, r3, ip, lsl sp
     eac:	0c080000 	stceq	0, cr0, [r8], {-0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:462
		axp_regmap_write(map, AXP2585_BATCAP0,
     eb0:	00000157 	andeq	r0, r0, r7, asr r1
     eb4:	00259e1c 	eoreq	r9, r5, ip, lsl lr
     eb8:	0c0c0000 	stceq	0, cr0, [ip], {-0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:464
					((cur_coulomb_counter >> 8) | 0x80));
		axp_regmap_write(map, AXP2585_BATCAP1,
     ebc:	000000a0 	andeq	r0, r0, r0, lsr #1
     ec0:	0f1a9f1c 	svceq	0x001a9f1c
     ec4:	0c100000 	ldceq	0, cr0, [r0], {-0}
     ec8:	000012ec 	andeq	r1, r0, ip, ror #5
     ecc:	0f1aa11c 	svceq	0x001aa11c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:428

	/*Init CHGLED function*/
	if (axp2585_config.pmu_chgled_func)
		axp_regmap_set_bits(map, 0x90, 0x80); /* control by charger */
	else
		axp_regmap_clr_bits(map, 0x90, 0x80); /* drive MOTO */
     ed0:	0c140000 	ldceq	0, cr0, [r4], {-0}
     ed4:	00003adf 	ldrdeq	r3, [r0], -pc	; <UNPREDICTABLE>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:448

	/*battery detect enable*/
	if (axp2585_config.pmu_batdeten)
		axp_regmap_set_bits(map, 0x8e, 0x08);
	else
		axp_regmap_clr_bits(map, 0x8e, 0x08);
     ed8:	0f3ea31c 	svceq	0x003ea31c
     edc:	00180000 	andseq	r0, r8, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:442
#endif
	/*Init battery capacity correct function*/
	if (axp2585_config.pmu_batt_cap_correct)
		axp_regmap_set_bits(map, 0xb8, 0x20); /* enable */
	else
		axp_regmap_clr_bits(map, 0xb8, 0x20); /* disable */
     ee0:	0e6c0406 	cdpeq	4, 6, cr0, cr12, cr6, {0}
     ee4:	04060000 	streq	r0, [r6], #-0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:383
		((axp2585_config.pmu_battery_warning_level1 - 5) << 4)
		+ axp2585_config.pmu_battery_warning_level2);

	if (axp2585_config.pmu_init_chgvol < 3840)
		axp2585_config.pmu_init_chgvol = 3840;
	val = (axp2585_config.pmu_init_chgvol - 3840)/16;
     ee8:	00000e60 	andeq	r0, r0, r0, ror #28
     eec:	0e850406 	cdpeq	4, 8, cr0, cr5, cr6, {0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:384
	if (val > 0x30)
     ef0:	ce200000 	cdpgt	0, 2, cr0, cr0, cr0, {0}
     ef4:	1a000001 	bne	f00 <.debug_info+0xf00>
     ef8:	0f00000f 	svceq	0x0000000f
     efc:	00000b55 	andeq	r0, r0, r5, asr fp
     f00:	000daf0f 	andeq	sl, sp, pc, lsl #30
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:477
		axp2585_spy_info.batt->det_unused = 1;
	else
		axp2585_spy_info.batt->det_unused = 0;

	if (axp2585_config.pmu_bat_temp_enable != 0) {
		axp_regmap_write(map, AXP2585_VLTF_CHARGE,
     f04:	0e850f00 	cdpeq	15, 8, cr0, cr5, cr0, {0}
     f08:	440f0000 	strmi	r0, [pc], #-0	; f10 <.debug_info+0xf10>
     f0c:	0f000001 	svceq	0x00000001
     f10:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
     f14:	0001c30f 	andeq	ip, r1, pc, lsl #6
     f18:	04060000 	streq	r0, [r6], #-0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:479
				axp2585_config.pmu_bat_charge_ltf * 10 / 128);
		axp_regmap_write(map, AXP2585_VHTF_CHARGE,
     f1c:	00000ef2 	strdeq	r0, [r0], -r2
     f20:	00009020 	andeq	r9, r0, r0, lsr #32
     f24:	000f3e00 	andeq	r3, pc, r0, lsl #28
     f28:	0b550f00 	bleq	1544b30 <axp2585_set_usb_vhold+0x15438ec>
     f2c:	af0f0000 	svcge	0x000f0000
     f30:	0f00000d 	svceq	0x0000000d
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:481
				axp2585_config.pmu_bat_charge_htf * 10 / 128);
		axp_regmap_write(map, AXP2585_VLTF_WORK,
     f34:	00000e85 	andeq	r0, r0, r5, lsl #29
     f38:	0003ca0f 	andeq	ip, r3, pc, lsl #20
     f3c:	04060000 	streq	r0, [r6], #-0
     f40:	00000f20 	andeq	r0, r0, r0, lsr #30
     f44:	0031c70b 	eorseq	ip, r1, fp, lsl #14
     f48:	d11c0800 	tstle	ip, r0, lsl #16
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:483
				axp2585_config.pmu_bat_shutdown_ltf * 10 / 128);
		axp_regmap_write(map, AXP2585_VHTF_WORK,
     f4c:	00000f69 	andeq	r0, r0, r9, ror #30
     f50:	0024e20c 	eoreq	lr, r4, ip, lsl #4
     f54:	82d21c00 	sbcshi	r1, r2, #0, 24
     f58:	0000000f 	andeq	r0, r0, pc
     f5c:	001ba90c 	andseq	sl, fp, ip, lsl #18
     f60:	a6d31c00 	ldrbge	r1, [r3], r0, lsl #24
     f64:	0400000f 	streq	r0, [r0], #-15
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:718
	}

	platform_set_drvdata(pdev, chg_dev);
	ret = sysfs_create_group(&pdev->dev.kobj, &bmu_control_attr_group);
	if (ret)
		dev_warn(&pdev->dev, "failed to create attr group\n");
     f68:	01ce2000 	biceq	r2, lr, r0
     f6c:	0f820000 	svceq	0x00820000
     f70:	af0f0000 	svcge	0x000f0000
     f74:	0f00000d 	svceq	0x0000000d
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:720

	return 0;
     f78:	00000e60 	andeq	r0, r0, r0, ror #28
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:731
			continue;
		axp_free_irq(axp_dev, irq);
	}
fail:
	return -1;
}
     f7c:	0001440f 	andeq	r4, r1, pc, lsl #8
     f80:	04060000 	streq	r0, [r6], #-0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:676

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
		if (irq < 0)
			continue;
       printk("[axp2585]i=%d ,irq=%d in line:%d of %s\n",i,irq,__LINE__,__func__);
     f84:	00000f69 	andeq	r0, r0, r9, ror #30
     f88:	0001ce20 	andeq	ip, r1, r0, lsr #28
     f8c:	000fa600 	andeq	sl, pc, r0, lsl #12
     f90:	0daf0f00 	stceq	15, cr0, [pc]	; f98 <.debug_info+0xf98>
     f94:	600f0000 	andvs	r0, pc, r0
     f98:	0f00000e 	svceq	0x0000000e
     f9c:	00000045 	andeq	r0, r0, r5, asr #32
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:679


      if(axp_dev->irq_data!=NULL)
     fa0:	0001c30f 	andeq	ip, r1, pc, lsl #6
     fa4:	04060000 	streq	r0, [r6], #-0
     fa8:	00000f88 	andeq	r0, r0, r8, lsl #31
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:681
      {
       printk("[axp2585]axp_dev->irq_data in line:%d of %s is NOT NULL\n",__LINE__,__func__ );
     fac:	0009c40b 	andeq	ip, r9, fp, lsl #8
     fb0:	171e0400 	ldrne	r0, [lr, -r0, lsl #8]
     fb4:	00000fc5 	andeq	r0, r0, r5, asr #31
     fb8:	00221d0c 	eoreq	r1, r2, ip, lsl #26
     fbc:	25181e00 	ldrcs	r1, [r8, #-3584]	; 0xfffff200
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:682
         if(axp_dev->irq_data->irqs!=NULL)
     fc0:	00000002 	andeq	r0, r0, r2
     fc4:	07a90b00 	streq	r0, [r9, r0, lsl #22]!
     fc8:	1f1c0000 	svcne	0x001c0000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:684
           {
             printk("[axp2585]axp_dev->irq_data->irqs in line:%d of %s is NOT NULL\n",__LINE__,__func__ );
     fcc:	00101a0c 	andseq	r1, r0, ip, lsl #20
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:687
           }
             else{
             printk("[axp2585]axp_dev->irq_data->irqs in line:%d of %s is  NULL\n",__LINE__,__func__ );
     fd0:	30120c00 	andscc	r0, r2, r0, lsl #24
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:684
      if(axp_dev->irq_data!=NULL)
      {
       printk("[axp2585]axp_dev->irq_data in line:%d of %s is NOT NULL\n",__LINE__,__func__ );
         if(axp_dev->irq_data->irqs!=NULL)
           {
             printk("[axp2585]axp_dev->irq_data->irqs in line:%d of %s is NOT NULL\n",__LINE__,__func__ );
     fd4:	111f0000 	tstne	pc, r0
     fd8:	0000025b 	andeq	r0, r0, fp, asr r2
     fdc:	38430c00 	stmdacc	r3, {sl, fp}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:687
           }
             else{
             printk("[axp2585]axp_dev->irq_data->irqs in line:%d of %s is  NULL\n",__LINE__,__func__ );
     fe0:	121f0000 	andsne	r0, pc, #0
     fe4:	00000027 	andeq	r0, r0, r7, lsr #32
     fe8:	45710c08 	ldrbmi	r0, [r1, #-3080]!	; 0xfffff3f8
     fec:	131f0000 	tstne	pc, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:693
            }
      }
      else
          printk("[axp2585]axp_dev->irq_data in line:%d of %s is  NULL\n",__LINE__,__func__ );

      if(axp_dev->irq!=NULL)
     ff0:	00000352 	andeq	r0, r0, r2, asr r3
     ff4:	420a0c0c 	andmi	r0, sl, #12, 24	; 0xc00
     ff8:	141f0000 	ldrne	r0, [pc], #-0	; 1000 <.debug_info+0x1000>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:695
           {
            printk("[axp2585]axp_dev->int irq in line:%d of %d is %s NOT NULL\n",__LINE__,axp_dev->irq,__func__ );
     ffc:	00000027 	andeq	r0, r0, r7, lsr #32
    1000:	3f420c10 	svccc	0x00420c10
    1004:	151f0000 	ldrne	r0, [pc, #-0]	; 100c <.debug_info+0x100c>
    1008:	000000da 	ldrdeq	r0, [r0], -sl
    100c:	3c0c0c14 	stccc	12, cr0, [ip], {20}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:701
           }
           else
             {
               printk("[axp2585]axp_dev->irq in line:%d of %s is  NULL\n",__LINE__,__func__ );
             }
      if(axp_dev->irq_data!=NULL){
    1010:	161f0000 	ldrne	r0, [pc], -r0
    1014:	00000090 	muleq	r0, r0, r0
    1018:	48080018 	stmdami	r8, {r3, r4}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:702
		ret = axp_request_irq(axp_dev, irq,
    101c:	20000039 	andcs	r0, r0, r9, lsr r0
    1020:	00102513 	andseq	r2, r0, r3, lsl r5
    1024:	2b040600 	blcs	10282c <axp2585_set_usb_vhold+0x1015e8>
    1028:	0e000010 	mcreq	0, 0, r0, cr0, cr0, {0}
    102c:	00001036 	andeq	r1, r0, r6, lsr r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:704
				axp2585_charger_irq[i].isr, chg_dev);
		if (ret != 0) {
    1030:	0010360f 	andseq	r3, r0, pc, lsl #12
    1034:	04060000 	streq	r0, [r6], #-0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:705
			dev_err(&pdev->dev, "failed to request %s IRQ %d: %d\n",
    1038:	0000103c 	andeq	r1, r0, ip, lsr r0
    103c:	0022a20b 	eoreq	sl, r2, fp, lsl #4
    1040:	64201000 	strtvs	r1, [r0], #-0
    1044:	0000106d 	andeq	r1, r0, sp, rrx
    1048:	00420a0c 	subeq	r0, r2, ip, lsl #20
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:723
		dev_warn(&pdev->dev, "failed to create attr group\n");

	return 0;
    printk("[axp2585]Quit %s\n",__func__);
out_irq:
	for (i = i - 1; i >= 0; i--) {
    104c:	7d652000 	stclvc	0, cr2, [r5, #-0]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:705
             }
      if(axp_dev->irq_data!=NULL){
		ret = axp_request_irq(axp_dev, irq,
				axp2585_charger_irq[i].isr, chg_dev);
		if (ret != 0) {
			dev_err(&pdev->dev, "failed to request %s IRQ %d: %d\n",
    1050:	00000004 	andeq	r0, r0, r4
    1054:	0030120c 	eorseq	r1, r0, ip, lsl #4
    1058:	30662000 	rsbcc	r2, r6, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:723
		dev_warn(&pdev->dev, "failed to create attr group\n");

	return 0;
    printk("[axp2585]Quit %s\n",__func__);
out_irq:
	for (i = i - 1; i >= 0; i--) {
    105c:	04000002 	streq	r0, [r0], #-2
    1060:	00121a0c 	andseq	r1, r2, ip, lsl #20
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:724
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
    1064:	1a672000 	bne	19c906c <axp2585_set_usb_vhold+0x19c7e28>
    1068:	0c000010 	stceq	0, cr0, [r0], {16}
    106c:	47180b00 	ldrmi	r0, [r8, -r0, lsl #22]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:723
		dev_warn(&pdev->dev, "failed to create attr group\n");

	return 0;
    printk("[axp2585]Quit %s\n",__func__);
out_irq:
	for (i = i - 1; i >= 0; i--) {
    1070:	20340000 	eorscs	r0, r4, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:724
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
    1074:	0010a971 	andseq	sl, r0, r1, ror r9
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:725
		if (irq < 0)
    1078:	0f310c00 	svceq	0x00310c00
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:727
			continue;
		axp_free_irq(axp_dev, irq);
    107c:	72200000 	eorvc	r0, r0, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:725
	return 0;
    printk("[axp2585]Quit %s\n",__func__);
out_irq:
	for (i = i - 1; i >= 0; i--) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
		if (irq < 0)
    1080:	0000103c 	andeq	r1, r0, ip, lsr r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:727
			continue;
		axp_free_irq(axp_dev, irq);
    1084:	1f5c0c00 	svcne	0x005c0c00
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:723 (discriminator 2)
		dev_warn(&pdev->dev, "failed to create attr group\n");

	return 0;
    printk("[axp2585]Quit %s\n",__func__);
out_irq:
	for (i = i - 1; i >= 0; i--) {
    1088:	73200000 	teqvc	r0, #0
    108c:	00000fc5 	andeq	r0, r0, r5, asr #31
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:730
		if (irq < 0)
			continue;
		axp_free_irq(axp_dev, irq);
	}
fail:
	return -1;
    1090:	71771210 	cmnvc	r7, r0, lsl r2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:731
}
    1094:	ae762000 	cdpge	0, 7, cr2, cr6, cr0, {0}
    1098:	2c000010 	stccs	0, cr0, [r0], {16}
    109c:	75706312 	ldrbvc	r6, [r0, #-786]!	; 0xfffffcee
    10a0:	90772000 	rsbsls	r2, r7, r0
axp2585_charger_init():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:363
		val &= ~(3 << 5);
		val |= 1 << 5;
		break;
	case 4:
		val &= ~(3 << 5);
		val |= 2 << 5;
    10a4:	30000000 	andcc	r0, r0, r0
    10a8:	272c1300 	strcs	r1, [ip, -r0, lsl #6]!
    10ac:	04060000 	streq	r0, [r6], #-0
    10b0:	000010a9 	andeq	r1, r0, r9, lsr #1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:359
	case 1:
		val &= ~(3 << 5);
		break;
	case 2:
		val &= ~(3 << 5);
		val |= 1 << 5;
    10b4:	0032f20b 	eorseq	pc, r2, fp, lsl #4
    10b8:	a81d3000 	ldmdage	sp, {ip, sp}
    10bc:	000010f1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    10c0:	0002fe0c 	andeq	pc, r2, ip, lsl #28
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:355
						| AXP2585_ADC_TSVOL_ENABLE);

	axp_regmap_read(map, AXP2585_TS_PIN_CONTROL, &val);
	switch (axp2585_config.pmu_init_adc_freq / 100) {
	case 1:
		val &= ~(3 << 5);
    10c4:	30a91d00 	adccc	r1, r9, r0, lsl #26
    10c8:	00000002 	andeq	r0, r0, r2
    10cc:	0044530c 	subeq	r5, r4, ip, lsl #6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:453
		axp_regmap_clr_bits(map, 0x8e, 0x08);

	/* RDC initial */
	axp_regmap_read(map, AXP2585_RDC0, &val);
	if ((axp2585_config.pmu_battery_rdc) && (!(val & 0x40))) {
		rdc = (axp2585_config.pmu_battery_rdc * 10000 + 5371) / 10742;
    10d0:	52aa1d00 	adcpl	r1, sl, #0, 26
    10d4:	08000004 	stmdaeq	r0, {r2}
    10d8:	0023b00c 	eoreq	fp, r3, ip
    10dc:	b5ab1d00 	strlt	r1, [fp, #3328]!	; 0xd00
    10e0:	0800000d 	stmdaeq	r0, {r0, r2, r3}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:454
		axp_regmap_write(map, AXP2585_RDC0, ((rdc >> 8) & 0x1F)|0x80);
    10e4:	000a340c 	andeq	r3, sl, ip, lsl #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:453
		axp_regmap_clr_bits(map, 0x8e, 0x08);

	/* RDC initial */
	axp_regmap_read(map, AXP2585_RDC0, &val);
	if ((axp2585_config.pmu_battery_rdc) && (!(val & 0x40))) {
		rdc = (axp2585_config.pmu_battery_rdc * 10000 + 5371) / 10742;
    10e8:	acac1d00 	stcge	13, cr1, [ip]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:454
		axp_regmap_write(map, AXP2585_RDC0, ((rdc >> 8) & 0x1F)|0x80);
    10ec:	2c000012 	stccs	0, cr0, [r0], {18}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:453
		axp_regmap_clr_bits(map, 0x8e, 0x08);

	/* RDC initial */
	axp_regmap_read(map, AXP2585_RDC0, &val);
	if ((axp2585_config.pmu_battery_rdc) && (!(val & 0x40))) {
		rdc = (axp2585_config.pmu_battery_rdc * 10000 + 5371) / 10742;
    10f0:	b4040600 	strlt	r0, [r4], #-1536	; 0xfffffa00
    10f4:	0b000010 	bleq	113c <.debug_info+0x113c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:454
		axp_regmap_write(map, AXP2585_RDC0, ((rdc >> 8) & 0x1F)|0x80);
    10f8:	00003f20 	andeq	r3, r0, r0, lsr #30
    10fc:	40741d14 	rsbsmi	r1, r4, r4, lsl sp
    1100:	0c000011 	stceq	0, cr0, [r0], {17}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:455
		axp_regmap_write(map, AXP2585_RDC1, rdc & 0x00FF);
    1104:	000001e7 	andeq	r0, r0, r7, ror #3
    1108:	1151751d 	cmpne	r1, sp, lsl r5
    110c:	0c000000 	stceq	0, cr0, [r0], {-0}
    1110:	000031c7 	andeq	r3, r0, r7, asr #3
    1114:	1157761d 	cmpne	r7, sp, lsl r6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:496
		if (update_min_times[i] == axp2585_config.pmu_update_min_time)
			break;
	}
	axp_regmap_update(map, AXP2585_ADJUST_PARA, i, 0x7);
	/*initial the ocv_cou_adjust_time*/
	for (i = 0; i < ARRAY_SIZE(ocv_cou_adjust_time); i++) {
    1118:	0c040000 	stceq	0, cr0, [r4], {-0}
    111c:	00002bd5 	ldrdeq	r2, [r0], -r5
    1120:	0ee6771d 	mcreq	7, 7, r7, cr6, cr13, {0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:491
	/*enable fast charge */
	axp_regmap_update(map, 0x31, 0x04, 0x04);
	/*set POR time as 16s*/
	axp_regmap_update(map, AXP2585_POK_SET, 0x30, 0x30);
	for (i = 0; i < ARRAY_SIZE(update_min_times); i++) {
		if (update_min_times[i] == axp2585_config.pmu_update_min_time)
    1124:	0c080000 	stceq	0, cr0, [r8], {-0}
    1128:	000004e2 	andeq	r0, r0, r2, ror #9
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:638

	if (pdev->dev.of_node) {
		/* get dt and sysconfig */
		ret = axp_charger_dt_parse(pdev->dev.of_node, &axp2585_config);
		if (ret) {
			pr_err("%s parse device tree err\n", __func__);
    112c:	117c781d 	cmnne	ip, sp, lsl r8
    1130:	0c0c0000 	stceq	0, cr0, [ip], {-0}
    1134:	0000321b 	andeq	r3, r0, fp, lsl r2
    1138:	1191791d 	orrsne	r7, r1, sp, lsl r9
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:639
			return -EINVAL;
    113c:	00100000 	andseq	r0, r0, r0
    1140:	10f70406 	rscsne	r0, r7, r6, lsl #8
axp2585_charger_init():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:497
			break;
	}
	axp_regmap_update(map, AXP2585_ADJUST_PARA, i, 0x7);
	/*initial the ocv_cou_adjust_time*/
	for (i = 0; i < ARRAY_SIZE(ocv_cou_adjust_time); i++) {
		if (ocv_cou_adjust_time[i] == axp2585_config.pmu_ocv_cou_adjust_time)
    1144:	510e0000 	mrspl	r0, (UNDEF: 14)
    1148:	0f000011 	svceq	0x00000011
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:699
           {
            printk("[axp2585]axp_dev->int irq in line:%d of %d is %s NOT NULL\n",__LINE__,axp_dev->irq,__func__ );
           }
           else
             {
               printk("[axp2585]axp_dev->irq in line:%d of %s is  NULL\n",__LINE__,__func__ );
    114c:	00000daf 	andeq	r0, r0, pc, lsr #27
    1150:	46040600 	strmi	r0, [r4], -r0, lsl #12
    1154:	06000011 			; <UNDEFINED> instruction: 0x06000011
    1158:	00115d04 	andseq	r5, r1, r4, lsl #26
    115c:	0f440700 	svceq	0x00440700
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:691
             else{
             printk("[axp2585]axp_dev->irq_data->irqs in line:%d of %s is  NULL\n",__LINE__,__func__ );
            }
      }
      else
          printk("[axp2585]axp_dev->irq_data in line:%d of %s is  NULL\n",__LINE__,__func__ );
    1160:	71200000 	teqvc	r0, r0
    1164:	71000011 	tstvc	r0, r1, lsl r0
    1168:	0f000011 	svceq	0x00000011
    116c:	00000daf 	andeq	r0, r0, pc, lsr #27
    1170:	77040600 	strvc	r0, [r4, -r0, lsl #12]
    1174:	07000011 	smladeq	r0, r1, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:642
		if (ret) {
			pr_err("%s parse device tree err\n", __func__);
			return -EINVAL;
		}
	} else {
		pr_err("axp2585 charger device tree err!\n");
    1178:	00000c41 	andeq	r0, r0, r1, asr #24
    117c:	11620406 	cmnne	r2, r6, lsl #8
    1180:	37200000 	strcc	r0, [r0, -r0]!
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:643
		return -EBUSY;
    1184:	91000009 	tstls	r0, r9
    1188:	0f000011 	svceq	0x00000011
    118c:	00000daf 	andeq	r0, r0, pc, lsr #27
    1190:	82040600 	andhi	r0, r4, #0, 12
    1194:	1a000011 	bne	11e0 <.debug_info+0x11e0>
    1198:	0000292f 	andeq	r2, r0, pc, lsr #18
    119c:	7c1d0894 	ldcvc	8, cr0, [sp], {148}	; 0x94
axp2585_set_usb_ihold():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:104
static int axp2585_set_usb_ihold(struct axp_charger_dev *cdev, int cur)
{
	u8 tmp;
	struct axp_regmap *map = cdev->chip->regmap;

	if (cur) {
    11a0:	000011e2 	andeq	r1, r0, r2, ror #3
    11a4:	003f2f0c 	eorseq	r2, pc, ip, lsl #30
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:100
	axp_regmap_read(map, 0x11, &tmp);
	return (tmp*80 + 3880);
}

static int axp2585_set_usb_ihold(struct axp_charger_dev *cdev, int cur)
{
    11a8:	e27d1d00 	rsbs	r1, sp, #0, 26
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:106
	u8 tmp;
	struct axp_regmap *map = cdev->chip->regmap;

	if (cur) {
		/*axp_regmap_set_bits(map, 0xff,0x60);*/
		if (cur >= 100 && cur <= 3250) {
    11ac:	00000011 	andeq	r0, r0, r1, lsl r0
    11b0:	0039540c 	eorseq	r5, r9, ip, lsl #8
    11b4:	f27e1d00 	vsub.f<illegal width 64>	d17, d14, d0
    11b8:	0c000011 	stceq	0, cr0, [r0], {17}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:108
			tmp = (cur - 100)/50;
			axp_regmap_update(map, 0x10, tmp, 0x3f);
    11bc:	00437b0c 	subeq	r7, r3, ip, lsl #22
    11c0:	907f1d00 	rsbsls	r1, pc, r0, lsl #26
    11c4:	8c000000 	stchi	0, cr0, [r0], {-0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:102
}

static int axp2585_set_usb_ihold(struct axp_charger_dev *cdev, int cur)
{
	u8 tmp;
	struct axp_regmap *map = cdev->chip->regmap;
    11c8:	66756212 			; <UNDEFINED> instruction: 0x66756212
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:108

	if (cur) {
		/*axp_regmap_set_bits(map, 0xff,0x60);*/
		if (cur >= 100 && cur <= 3250) {
			tmp = (cur - 100)/50;
			axp_regmap_update(map, 0x10, tmp, 0x3f);
    11cc:	02801d00 	addeq	r1, r0, #0, 26
    11d0:	90000012 	andls	r0, r0, r2, lsl r0
    11d4:	000d101b 	andeq	r1, sp, fp, lsl r0
    11d8:	90811d00 	addls	r1, r1, r0, lsl #26
    11dc:	90000000 	andls	r0, r0, r0
    11e0:	44040008 	strmi	r0, [r4], #-8
    11e4:	f2000001 	vhadd.s8	d0, d0, d1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:117
		}
	} else {
		/*axp_regmap_clr_bits(map, 0xff,0x60);*/
	}
	return 0;
}
    11e8:	05000011 	streq	r0, [r0, #-17]	; 0xffffffef
    11ec:	0000003e 	andeq	r0, r0, lr, lsr r0
    11f0:	44040002 	strmi	r0, [r4], #-2
    11f4:	02000001 	andeq	r0, r0, #1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:81
		/*axp_regmap_set_bits(map, 0xff,0x60);*/
		if (vol >= 3880 && vol <= 5080) {
			tmp = (vol - 3880)/80;
			axp_regmap_update(map, 0x11, tmp, 0x0f);
		} else {
			pr_err("set usb limit voltage error, %d mV\n",
    11f8:	05000012 	streq	r0, [r0, #-18]	; 0xffffffee
    11fc:	0000003e 	andeq	r0, r0, lr, lsr r0
    1200:	4b04001f 	blmi	101284 <axp2585_set_usb_vhold+0x100040>
    1204:	13000000 	movwne	r0, #0
    1208:	24000012 	strcs	r0, [r0], #-18	; 0xffffffee
    120c:	0000003e 	andeq	r0, r0, lr, lsr r0
    1210:	0b0007ff 	bleq	3214 <.debug_info+0x3214>
    1214:	000004a1 	andeq	r0, r0, r1, lsr #9
    1218:	44841d0c 	strmi	r1, [r4], #3340	; 0xd0c
    121c:	0c000012 	stceq	0, cr0, [r0], {18}
    1220:	000013d2 	ldrdeq	r1, [r0], -r2
    1224:	125e851d 	subsne	r8, lr, #121634816	; 0x7400000
    1228:	0c000000 	stceq	0, cr0, [r0], {-0}
    122c:	00000303 	andeq	r0, r0, r3, lsl #6
    1230:	127d861d 	rsbsne	r8, sp, #30408704	; 0x1d00000
    1234:	0c040000 	stceq	0, cr0, [r4], {-0}
    1238:	00001d7e 	andeq	r1, r0, lr, ror sp
    123c:	12a7871d 	adcne	r8, r7, #7602176	; 0x740000
    1240:	00080000 	andeq	r0, r8, r0
axp2585_set_usb_vhold():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:75
static int axp2585_set_usb_vhold(struct axp_charger_dev *cdev, int vol)
{
	u8 tmp;
	struct axp_regmap *map = cdev->chip->regmap;

	if (vol) {
    1244:	00009020 	andeq	r9, r0, r0, lsr #32
    1248:	00125800 	andseq	r5, r2, r0, lsl #16
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:71
{
	return 0;
}

static int axp2585_set_usb_vhold(struct axp_charger_dev *cdev, int vol)
{
    124c:	10f10f00 	rscsne	r0, r1, r0, lsl #30
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:77
	u8 tmp;
	struct axp_regmap *map = cdev->chip->regmap;

	if (vol) {
		/*axp_regmap_set_bits(map, 0xff,0x60);*/
		if (vol >= 3880 && vol <= 5080) {
    1250:	af0f0000 	svcge	0x000f0000
    1254:	0000000d 	andeq	r0, r0, sp
    1258:	12440406 	subne	r0, r4, #100663296	; 0x6000000
    125c:	58070000 	stmdapl	r7, {}	; <UNPREDICTABLE>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:79
			tmp = (vol - 3880)/80;
			axp_regmap_update(map, 0x11, tmp, 0x0f);
    1260:	20000012 	andcs	r0, r0, r2, lsl r0
    1264:	00000045 	andeq	r0, r0, r5, asr #32
    1268:	00001277 	andeq	r1, r0, r7, ror r2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:73
}

static int axp2585_set_usb_vhold(struct axp_charger_dev *cdev, int vol)
{
	u8 tmp;
	struct axp_regmap *map = cdev->chip->regmap;
    126c:	0010f10f 	andseq	pc, r0, pc, lsl #2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:79

	if (vol) {
		/*axp_regmap_set_bits(map, 0xff,0x60);*/
		if (vol >= 3880 && vol <= 5080) {
			tmp = (vol - 3880)/80;
			axp_regmap_update(map, 0x11, tmp, 0x0f);
    1270:	0daf0f00 	stceq	15, cr0, [pc]	; 1278 <.debug_info+0x1278>
    1274:	06000000 	streq	r0, [r0], -r0
    1278:	00126304 	andseq	r6, r2, r4, lsl #6
    127c:	12770700 	rsbsne	r0, r7, #0, 14
    1280:	90200000 	eorls	r0, r0, r0
    1284:	9b000000 	blls	128c <.debug_info+0x128c>
    1288:	0f000012 	svceq	0x00000012
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:88
		}
	} else {
		/*axp_regmap_clr_bits(map, 0xff,0x60);*/
	}
	return 0;
}
    128c:	000010f1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    1290:	000daf0f 	andeq	sl, sp, pc, lsl #30
    1294:	129b0f00 	addsne	r0, fp, #0, 30
    1298:	06000000 	streq	r0, [r0], -r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:81
		/*axp_regmap_set_bits(map, 0xff,0x60);*/
		if (vol >= 3880 && vol <= 5080) {
			tmp = (vol - 3880)/80;
			axp_regmap_update(map, 0x11, tmp, 0x0f);
		} else {
			pr_err("set usb limit voltage error, %d mV\n",
    129c:	00119704 	andseq	r9, r1, r4, lsl #14
    12a0:	82040600 	andhi	r0, r4, #0, 12
    12a4:	07000012 	smladeq	r0, r2, r0, r0
    12a8:	000012a1 	andeq	r1, r0, r1, lsr #5
    12ac:	12b20406 	adcsne	r0, r2, #100663296	; 0x6000000
    12b0:	13070000 	movwne	r0, #28672	; 0x7000
    12b4:	0b000012 	bleq	1304 <.debug_info+0x1304>
    12b8:	00003187 	andeq	r3, r0, r7, lsl #3
    12bc:	e8272110 	stmda	r7!, {r4, r8, sp}
    12c0:	0c000012 	stceq	0, cr0, [r0], {18}
    12c4:	000037dc 	ldrdeq	r3, [r0], -ip
    12c8:	00252821 	eoreq	r2, r5, r1, lsr #16
    12cc:	0c000000 	stceq	0, cr0, [r0], {-0}
    12d0:	0000432f 	andeq	r4, r0, pc, lsr #6
    12d4:	02302921 	eorseq	r2, r0, #540672	; 0x84000
    12d8:	0c040000 	stceq	0, cr0, [r4], {-0}
    12dc:	000003e4 	andeq	r0, r0, r4, ror #7
    12e0:	0fac2a21 	svceq	0x00ac2a21
    12e4:	000c0000 	andeq	r0, ip, r0
    12e8:	002ac625 	eoreq	ip, sl, r5, lsr #12
    12ec:	00570400 	subseq	r0, r7, r0, lsl #8
    12f0:	74220000 	strtvc	r0, [r2], #-0
    12f4:	00132401 	andseq	r2, r3, r1, lsl #8
    12f8:	2e492200 	cdpcs	2, 4, cr2, cr9, cr0, {0}
    12fc:	22000000 	andcs	r0, r0, #0
    1300:	0000081f 	andeq	r0, r0, pc, lsl r8
    1304:	0dad2201 	sfmeq	f2, 4, [sp, #4]!
    1308:	22020000 	andcs	r0, r2, #0
    130c:	00002191 	muleq	r0, r1, r1
    1310:	09f12203 	ldmibeq	r1!, {r0, r1, r9, sp}^
    1314:	22030000 	andcs	r0, r3, #0
    1318:	00000e18 	andeq	r0, r0, r8, lsl lr
    131c:	343a2204 	ldrtcc	r2, [sl], #-516	; 0xfffffdfc
    1320:	00050000 	andeq	r0, r5, r0
    1324:	0013d90b 	andseq	sp, r3, fp, lsl #18
    1328:	24191000 	ldrcs	r1, [r9], #-0
    132c:	00001361 	andeq	r1, r0, r1, ror #6
    1330:	0033ec0c 	eorseq	lr, r3, ip, lsl #24
    1334:	9f251900 	svcls	0x00251900
    1338:	0000000b 	andeq	r0, r0, fp
    133c:	0004830c 	andeq	r8, r4, ip, lsl #6
    1340:	d4261900 	strtle	r1, [r6], #-2304	; 0xfffff700
    1344:	0400000b 	streq	r0, [r0], #-11
    1348:	0016e40c 	andseq	lr, r6, ip, lsl #8
    134c:	be271900 	cdplt	9, 2, cr1, cr7, cr0, {0}
    1350:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    1354:	0024e20c 	eoreq	lr, r4, ip, lsl #4
    1358:	7f281900 	svcvc	0x00281900
    135c:	0c00000b 	stceq	0, cr0, [r0], {11}
    1360:	67040600 	strvs	r0, [r4, -r0, lsl #12]
    1364:	07000013 	smladeq	r0, r3, r0, r0
    1368:	00001324 	andeq	r1, r0, r4, lsr #6
    136c:	00305e0b 	eorseq	r5, r0, fp, lsl #28
    1370:	1f231400 	svcne	0x00231400
    1374:	000013b3 			; <UNDEFINED> instruction: 0x000013b3
    1378:	23007012 	movwcs	r7, #18
    137c:	0013b820 	andseq	fp, r3, r0, lsr #16
    1380:	eb0c0000 	bl	300008 <axp2585_set_usb_vhold+0x2fedc4>
    1384:	23000045 	movwcs	r0, #69	; 0x45
    1388:	0013c321 	andseq	ip, r3, r1, lsr #6
    138c:	ca0c0400 	bgt	301008 <axp2585_set_usb_vhold+0x2ffdc4>
    1390:	23000007 	movwcs	r0, #7
    1394:	0013c322 	andseq	ip, r3, r2, lsr #6
    1398:	310c0800 	tstcc	ip, r0, lsl #16
    139c:	2300000c 	movwcs	r0, #12
    13a0:	0013c324 	andseq	ip, r3, r4, lsr #6
    13a4:	5d0c0c00 	stcpl	12, cr0, [ip, #-0]
    13a8:	2300000a 	movwcs	r0, #10
    13ac:	0013c325 	andseq	ip, r3, r5, lsr #6
    13b0:	13001000 	movwne	r1, #0
    13b4:	00003534 	andeq	r3, r0, r4, lsr r5
    13b8:	13b30406 			; <UNDEFINED> instruction: 0x13b30406
    13bc:	ef130000 	svc	0x00130000
    13c0:	06000001 	streq	r0, [r0], -r1
    13c4:	0013be04 	andseq	fp, r3, r4, lsl #28
    13c8:	2eaf0b00 	vfmacs.f64	d0, d15, d0
    13cc:	24040000 	strcs	r0, [r4], #-0
    13d0:	0013e23e 	andseq	lr, r3, lr, lsr r2
    13d4:	0a2e0c00 	beq	b83008 <axp2585_set_usb_vhold+0xb81dc4>
    13d8:	3f240000 	svccc	0x00240000
    13dc:	00000090 	muleq	r0, r0, r0
    13e0:	90080000 	andls	r0, r8, r0
    13e4:	24000008 	strcs	r0, [r0], #-8
    13e8:	0013c940 	andseq	ip, r3, r0, asr #18
    13ec:	153e2600 	ldrne	r2, [lr, #-1536]!	; 0xfffffa00
    13f0:	245c0000 	ldrbcs	r0, [ip], #-0
    13f4:	15260127 	strne	r0, [r6, #-295]!	; 0xfffffed9
    13f8:	00270000 	eoreq	r0, r7, r0
    13fc:	24000005 	strcs	r0, [r0], #-5
    1400:	17280128 	strne	r0, [r8, -r8, lsr #2]!
    1404:	27000000 	strcs	r0, [r0, -r0]
    1408:	00003968 	andeq	r3, r0, r8, ror #18
    140c:	39012924 	stmdbcc	r1, {r2, r5, r8, fp, sp}
    1410:	04000017 	streq	r0, [r0], #-23	; 0xffffffe9
    1414:	0004da27 	andeq	sp, r4, r7, lsr #20
    1418:	012a2400 	teqeq	sl, r0, lsl #8
    141c:	00001728 	andeq	r1, r0, r8, lsr #14
    1420:	04412708 	strbeq	r2, [r1], #-1800	; 0xfffff8f8
    1424:	2b240000 	blcs	90142c <axp2585_set_usb_vhold+0x9001e8>
    1428:	00172801 	andseq	r2, r7, r1, lsl #16
    142c:	82270c00 	eorhi	r0, r7, #0, 24
    1430:	2400002b 	strcs	r0, [r0], #-43	; 0xffffffd5
    1434:	1728012c 	strne	r0, [r8, -ip, lsr #2]!
    1438:	27100000 	ldrcs	r0, [r0, -r0]
    143c:	00000678 	andeq	r0, r0, r8, ror r6
    1440:	28012d24 	stmdacs	r1, {r2, r5, r8, sl, fp, sp}
    1444:	14000017 	strne	r0, [r0], #-23	; 0xffffffe9
    1448:	0022bc27 	eoreq	fp, r2, r7, lsr #24
    144c:	012e2400 	teqeq	lr, r0, lsl #8
    1450:	00001728 	andeq	r1, r0, r8, lsr #14
    1454:	281f2718 	ldmdacs	pc, {r3, r4, r8, r9, sl, sp}	; <UNPREDICTABLE>
    1458:	2f240000 	svccs	0x00240000
    145c:	00172801 	andseq	r2, r7, r1, lsl #16
    1460:	ba271c00 	blt	9c7008 <axp2585_set_usb_vhold+0x9c5dc4>
    1464:	2400001f 	strcs	r0, [r0], #-31	; 0xffffffe1
    1468:	17280130 			; <UNDEFINED> instruction: 0x17280130
    146c:	27200000 	strcs	r0, [r0, -r0]!
    1470:	00002c02 	andeq	r2, r0, r2, lsl #24
    1474:	28013124 	stmdacs	r1, {r2, r5, r8, ip, sp}
    1478:	24000017 	strcs	r0, [r0], #-23	; 0xffffffe9
    147c:	0006a827 	andeq	sl, r6, r7, lsr #16
    1480:	01322400 	teqeq	r2, r0, lsl #8
    1484:	00001728 	andeq	r1, r0, r8, lsr #14
    1488:	3cc72728 	stclcc	7, cr2, [r7], {40}	; 0x28
    148c:	33240000 	teqcc	r4, #0
    1490:	00172801 	andseq	r2, r7, r1, lsl #16
    1494:	0c272c00 	stceq	12, cr2, [r7], #-0
    1498:	24000013 	strcs	r0, [r0], #-19	; 0xffffffed
    149c:	17280134 			; <UNDEFINED> instruction: 0x17280134
    14a0:	27300000 	ldrcs	r0, [r0, -r0]!
    14a4:	00001327 	andeq	r1, r0, r7, lsr #6
    14a8:	28013524 	stmdacs	r1, {r2, r5, r8, sl, ip, sp}
    14ac:	34000017 	strcc	r0, [r0], #-23	; 0xffffffe9
    14b0:	0029a727 	eoreq	sl, r9, r7, lsr #14
    14b4:	01362400 	teqeq	r6, r0, lsl #8
    14b8:	00001728 	andeq	r1, r0, r8, lsr #14
    14bc:	0a682738 	beq	1a09ce8 <axp2585_set_usb_vhold+0x1a08aa4>
    14c0:	37240000 	strcc	r0, [r4, -r0]!
    14c4:	00172801 	andseq	r2, r7, r1, lsl #16
    14c8:	1e273c00 	cdpne	12, 2, cr3, cr7, cr0, {0}
    14cc:	2400003b 	strcs	r0, [r0], #-59	; 0xffffffc5
    14d0:	17280138 			; <UNDEFINED> instruction: 0x17280138
    14d4:	27400000 	strbcs	r0, [r0, -r0]
    14d8:	00001e0a 	andeq	r1, r0, sl, lsl #28
    14dc:	28013924 	stmdacs	r1, {r2, r5, r8, fp, ip, sp}
    14e0:	44000017 	strmi	r0, [r0], #-23	; 0xffffffe9
    14e4:	00071e27 	andeq	r1, r7, r7, lsr #28
    14e8:	013a2400 	teqeq	sl, r0, lsl #8
    14ec:	00001728 	andeq	r1, r0, r8, lsr #14
    14f0:	3d272748 	stccc	7, cr2, [r7, #-288]!	; 0xfffffee0
    14f4:	3b240000 	blcc	9014fc <axp2585_set_usb_vhold+0x9002b8>
    14f8:	00172801 	andseq	r2, r7, r1, lsl #16
    14fc:	5a274c00 	bpl	9d3008 <axp2585_set_usb_vhold+0x9d1dc4>
    1500:	2400000b 	strcs	r0, [r0], #-11
    1504:	1728013c 			; <UNDEFINED> instruction: 0x1728013c
    1508:	27500000 	ldrbcs	r0, [r0, -r0]
    150c:	0000070f 	andeq	r0, r0, pc, lsl #14
    1510:	28013d24 	stmdacs	r1, {r2, r5, r8, sl, fp, ip, sp}
    1514:	54000017 	strpl	r0, [r0], #-23	; 0xffffffe9
    1518:	0041d727 	subeq	sp, r1, r7, lsr #14
    151c:	013e2400 	teqeq	lr, r0, lsl #8
    1520:	00001728 	andeq	r1, r0, r8, lsr #14
    1524:	90200058 	eorls	r0, r0, r8, asr r0
    1528:	35000000 	strcc	r0, [r0, #-0]
    152c:	0f000015 	svceq	0x00000015
    1530:	00001535 	andeq	r1, r0, r5, lsr r5
    1534:	3b040600 	blcc	102d3c <axp2585_set_usb_vhold+0x101af8>
    1538:	28000015 	stmdacs	r0, {r0, r2, r4}
    153c:	00000da6 	andeq	r0, r0, r6, lsr #27
    1540:	fc020168 	stc2	1, cr0, [r2], {104}	; 0x68
    1544:	00172802 	andseq	r2, r7, r2, lsl #16
    1548:	186c2700 	stmdane	ip!, {r8, r9, sl, sp}^
    154c:	fd020000 	stc2	0, cr0, [r2, #-0]
    1550:	00153502 	andseq	r3, r5, r2, lsl #10
    1554:	70290000 	eorvc	r0, r9, r0
    1558:	02ff0200 	rscseq	r0, pc, #0, 4
    155c:	00002b54 	andeq	r2, r0, r4, asr fp
    1560:	23b02704 	movscs	r2, #4, 14	; 0x100000
    1564:	01020000 	mrseq	r0, (UNDEF: 2)
    1568:	000db503 	andeq	fp, sp, r3, lsl #10
axp2585_charger_initcall():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:814

static int __init axp2585_charger_initcall(void)
{
	int ret;

	ret = platform_driver_register(&axp2585_charger_driver);
    156c:	c1270800 	teqgt	r7, r0, lsl #16
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:811
	.resume   = axp2585_charger_resume,
	.shutdown = axp2585_charger_shutdown,
};

static int __init axp2585_charger_initcall(void)
{
    1570:	0200003a 	andeq	r0, r0, #58	; 0x3a
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:814
	int ret;

	ret = platform_driver_register(&axp2585_charger_driver);
    1574:	00450302 	subeq	r0, r5, r2, lsl #6
    1578:	272c0000 	strcs	r0, [ip, -r0]!
    157c:	00002775 	andeq	r2, r0, r5, ror r7
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:815
	if (IS_ERR_VALUE(ret)) {
    1580:	9c030302 	stcls	3, cr0, [r3], {2}
    1584:	30000025 	andcc	r0, r0, r5, lsr #32
    1588:	003b0827 	eorseq	r0, fp, r7, lsr #16
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:816
		pr_err("%s: failed, errno %d\n", __func__, ret);
    158c:	03050200 	movweq	r0, #20992	; 0x5200
    1590:	00000488 	andeq	r0, r0, r8, lsl #9
    1594:	75622934 	strbvc	r2, [r2, #-2356]!	; 0xfffff6cc
    1598:	09020073 	stmdbeq	r2, {r0, r1, r4, r5, r6}
    159c:	0022a003 	eoreq	sl, r2, r3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:817
		return -EINVAL;
    15a0:	84274000 	strthi	r4, [r7], #-0
    15a4:	02000047 	andeq	r0, r0, #71	; 0x47
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:820
	}

	return 0;
    15a8:	2400030a 	strcs	r0, [r0], #-778	; 0xfffffcf6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:821
}
    15ac:	27440000 	strbcs	r0, [r4, -r0]
    15b0:	000026d2 	ldrdeq	r2, [r0], -r2	; <UNPREDICTABLE>
    15b4:	25030c02 	strcs	r0, [r3, #-3074]	; 0xfffff3fe
    15b8:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    15bc:	00409327 	subeq	r9, r0, r7, lsr #6
    15c0:	030e0200 	movweq	r0, #57856	; 0xe200
    15c4:	00000025 	andeq	r0, r0, r5, lsr #32
    15c8:	3018274c 	andscc	r2, r8, ip, asr #14
    15cc:	10020000 	andne	r0, r2, r0
    15d0:	0017ce03 	andseq	ip, r7, r3, lsl #28
    15d4:	d7275000 	strle	r5, [r7, -r0]!
    15d8:	02000044 	andeq	r0, r0, #68	; 0x44
    15dc:	2b5a0311 	blcs	1682228 <axp2585_set_usb_vhold+0x1680fe4>
    15e0:	27e80000 	strbcs	r0, [r8, r0]!
    15e4:	00003fd3 	ldrdeq	r3, [r0], -r3	; <UNPREDICTABLE>
    15e8:	60031702 	andvs	r1, r3, r2, lsl #14
    15ec:	ec00002b 	stc	0, cr0, [r0], {43}	; 0x2b
    15f0:	0025ab27 	eoreq	sl, r5, r7, lsr #22
    15f4:	031a0200 	tsteq	sl, #0, 4
    15f8:	00000230 	andeq	r0, r0, r0, lsr r2
    15fc:	1bf427f0 	blne	ffd09fc8 <axp2585_set_usb_vhold+0xffd08d84>
    1600:	20020000 	andcs	r0, r2, r0
    1604:	002b6603 	eoreq	r6, fp, r3, lsl #12
    1608:	7a2af800 	bvc	abe008 <axp2585_set_usb_vhold+0xabcdc4>
    160c:	02000034 	andeq	r0, r0, #52	; 0x34
    1610:	00f00321 	rscseq	r0, r0, r1, lsr #6
    1614:	01000000 	mrseq	r0, (UNDEF: 0)
    1618:	0016e92a 	andseq	lr, r6, sl, lsr #18
    161c:	03260200 	teqeq	r6, #0, 4
    1620:	00000027 	andeq	r0, r0, r7, lsr #32
    1624:	432a0108 	teqmi	sl, #8, 2
    1628:	0200000f 	andeq	r0, r0, #15
    162c:	2b6c0328 	blcs	1b022d4 <axp2585_set_usb_vhold+0x1b01090>
    1630:	010c0000 	mrseq	r0, (UNDEF: 12)
    1634:	002ea52a 	eoreq	sl, lr, sl, lsr #10
    1638:	032a0200 	teqeq	sl, #0, 4
    163c:	00000230 	andeq	r0, r0, r0, lsr r2
    1640:	8b2a0110 	blhi	a80448 <axp2585_set_usb_vhold+0xa7f204>
    1644:	0200001c 	andeq	r0, r0, #28
    1648:	2b77032c 	blcs	1dc2300 <axp2585_set_usb_vhold+0x1dc10bc>
    164c:	01180000 	tsteq	r8, r0
    1650:	00325a2a 	eorseq	r5, r2, sl, lsr #20
    1654:	032f0200 	teqeq	pc, #0, 4
    1658:	00002b82 	andeq	r2, r0, r2, lsl #23
    165c:	be2a011c 	mcrlt	1, 1, r0, cr10, cr12, {0}
    1660:	02000031 	andeq	r0, r0, #49	; 0x31
    1664:	22410333 	subcs	r0, r1, #-872415232	; 0xcc000000
    1668:	01200000 	teqeq	r0, r0
    166c:	002c932a 	eoreq	r9, ip, sl, lsr #6
    1670:	03350200 	teqeq	r5, #0, 4
    1674:	00002b8d 	andeq	r2, r0, sp, lsl #23
    1678:	252a012c 	strcs	r0, [sl, #-300]!	; 0xfffffed4
    167c:	02000009 	andeq	r0, r0, #9
    1680:	2b980336 	blcs	fe602360 <axp2585_set_usb_vhold+0xfe60111c>
    1684:	01300000 	teqeq	r0, r0
    1688:	00089d2a 	andeq	r9, r8, sl, lsr #26
    168c:	03380200 	teqeq	r8, #0, 4
    1690:	0000017a 	andeq	r0, r0, sl, ror r1
    1694:	692b0134 	stmdbvs	fp!, {r2, r4, r5, r8}
    1698:	39020064 	stmdbcc	r2, {r2, r5, r6}
    169c:	0000da03 	andeq	sp, r0, r3, lsl #20
    16a0:	2a013800 	bcs	4f6a8 <axp2585_set_usb_vhold+0x4e464>
    16a4:	00004306 	andeq	r4, r0, r6, lsl #6
    16a8:	52033b02 	andpl	r3, r3, #2048	; 0x800
    16ac:	3c000004 	stccc	0, cr0, [r0], {4}
    16b0:	293f2a01 	ldmdbcs	pc!, {r0, r9, fp, sp}	; <UNPREDICTABLE>
    16b4:	3c020000 	stccc	0, cr0, [r2], {-0}
    16b8:	00023003 	andeq	r3, r2, r3
    16bc:	2a013c00 	bcs	506c4 <axp2585_set_usb_vhold+0x4f480>
    16c0:	00003af1 	strdeq	r3, [r0], -r1
    16c4:	b7033e02 	strlt	r3, [r3, -r2, lsl #28]
    16c8:	44000012 	strmi	r0, [r0], #-18	; 0xffffffee
    16cc:	25ea2a01 	strbcs	r2, [sl, #2561]!	; 0xa01
    16d0:	3f020000 	svccc	0x00020000
    16d4:	002a5003 	eoreq	r5, sl, r3
    16d8:	2a015400 	bcs	566e0 <axp2585_set_usb_vhold+0x5549c>
    16dc:	0000398f 	andeq	r3, r0, pc, lsl #19
    16e0:	db034002 	blle	d16f0 <axp2585_set_usb_vhold+0xd04ac>
    16e4:	58000023 	stmdapl	r0, {r0, r1, r5}
    16e8:	01e72a01 	mvneq	r2, r1, lsl #20
    16ec:	42020000 	andmi	r0, r2, #0
    16f0:	00173903 	andseq	r3, r7, r3, lsl #18
    16f4:	2a015c00 	bcs	586fc <axp2585_set_usb_vhold+0x574b8>
    16f8:	00001d72 	andeq	r1, r0, r2, ror sp
    16fc:	a3034302 	movwge	r4, #13058	; 0x3302
    1700:	6000002b 	andvs	r0, r0, fp, lsr #32
    1704:	39182c01 	ldmdbcc	r8, {r0, sl, fp, sp}
    1708:	45020000 	strmi	r0, [r2, #-0]
    170c:	00019003 	andeq	r9, r1, r3
    1710:	07010100 	streq	r0, [r1, -r0, lsl #2]
    1714:	c62c0164 	strtgt	r0, [ip], -r4, ror #2
    1718:	02000002 	andeq	r0, r0, #2
    171c:	01900346 	orrseq	r0, r0, r6, asr #6
    1720:	01010000 	mrseq	r0, (UNDEF: 1)
    1724:	00016406 	andeq	r6, r1, r6, lsl #8
    1728:	15260406 	strne	r0, [r6, #-1030]!	; 0xfffffbfa
    172c:	390e0000 	stmdbcc	lr, {}	; <UNPREDICTABLE>
    1730:	0f000017 	svceq	0x00000017
    1734:	00001535 	andeq	r1, r0, r5, lsr r5
    1738:	2e040600 	cfmadd32cs	mvax0, mvfx0, mvfx4, mvfx0
    173c:	25000017 	strcs	r0, [r0, #-23]	; 0xffffffe9
    1740:	00002b49 	andeq	r2, r0, r9, asr #22
    1744:	00005704 	andeq	r5, r0, r4, lsl #14
    1748:	02012400 	andeq	r2, r1, #0, 8
    174c:	00001769 	andeq	r1, r0, r9, ror #14
    1750:	0039d122 	eorseq	sp, r9, r2, lsr #2
    1754:	54220000 	strtpl	r0, [r2], #-0
    1758:	0100002b 	tsteq	r0, fp, lsr #32
    175c:	0041ba22 	subeq	fp, r1, r2, lsr #20
    1760:	b8220200 	stmdalt	r2!, {r9}
    1764:	0300000b 	movweq	r0, #11
    1768:	42ec2500 	rscmi	r2, ip, #0, 10
    176c:	57040000 	strpl	r0, [r4, -r0]
    1770:	24000000 	strcs	r0, [r0], #-0
    1774:	17990217 			; <UNDEFINED> instruction: 0x17990217
    1778:	80220000 	eorhi	r0, r2, r0
    177c:	00000026 	andeq	r0, r0, r6, lsr #32
    1780:	003f9222 	eorseq	r9, pc, r2, lsr #4
    1784:	1e220100 	sufnes	f0, f2, f0
    1788:	0200002a 	andeq	r0, r0, #42	; 0x2a
    178c:	000dcd22 	andeq	ip, sp, r2, lsr #26
    1790:	20220300 	eorcs	r0, r2, r0, lsl #6
    1794:	04000029 	streq	r0, [r0], #-41	; 0xffffffd7
    1798:	2a912600 	bcs	fe449808 <axp2585_set_usb_vhold+0xfe4485c4>
    179c:	240c0000 	strcs	r0, [ip], #-0
    17a0:	17ce0223 	strbne	r0, [lr, r3, lsr #4]
    17a4:	41270000 	teqmi	r7, r0
    17a8:	2400000e 	strcs	r0, [r0], #-14
    17ac:	04520224 	ldrbeq	r0, [r2], #-548	; 0xfffffddc
    17b0:	27000000 	strcs	r0, [r0, -r0]
    17b4:	0000221d 	andeq	r2, r0, sp, lsl r2
    17b8:	57022524 	strpl	r2, [r2, -r4, lsr #10]
    17bc:	00000000 	andeq	r0, r0, r0
    17c0:	0045d827 	subeq	sp, r5, r7, lsr #16
    17c4:	02272400 	eoreq	r2, r7, #0, 8
    17c8:	00000230 	andeq	r0, r0, r0, lsr r2
    17cc:	ff260004 			; <UNDEFINED> instruction: 0xff260004
    17d0:	9800000e 	stmdals	r0, {r1, r2, r3}
    17d4:	67022e24 	strvs	r2, [r2, -r4, lsr #28]
    17d8:	2700001a 	smladcs	r0, sl, r0, r0
    17dc:	00001335 	andeq	r1, r0, r5, lsr r3
    17e0:	e2022f24 	and	r2, r2, #36, 30	; 0x90
    17e4:	00000013 	andeq	r0, r0, r3, lsl r0
    17e8:	00357c2d 	eorseq	r7, r5, sp, lsr #24
    17ec:	02302400 	eorseq	r2, r0, #0, 8
    17f0:	00000057 	andeq	r0, r0, r7, asr r0
    17f4:	041f0104 	ldreq	r0, [pc], #-260	; 17fc <.debug_info+0x17fc>
    17f8:	00050d2d 	andeq	r0, r5, sp, lsr #26
    17fc:	02312400 	eorseq	r2, r1, #0, 8
    1800:	00000057 	andeq	r0, r0, r7, asr r0
    1804:	041e0104 	ldreq	r0, [lr], #-260	; 0xfffffefc
    1808:	0023b52d 	eoreq	fp, r3, sp, lsr #10
    180c:	02322400 	eorseq	r2, r2, #0, 8
    1810:	00000190 	muleq	r0, r0, r1
    1814:	04050101 	streq	r0, [r5], #-257	; 0xfffffeff
    1818:	00353c2d 	eorseq	r3, r5, sp, lsr #24
    181c:	02332400 	eorseq	r2, r3, #0, 8
    1820:	00000190 	muleq	r0, r0, r1
    1824:	04040101 	streq	r0, [r4], #-257	; 0xfffffeff
    1828:	001c4c2d 	andseq	r4, ip, sp, lsr #24
    182c:	02342400 	eorseq	r2, r4, #0, 8
    1830:	00000190 	muleq	r0, r0, r1
    1834:	04030101 	streq	r0, [r3], #-257	; 0xfffffeff
    1838:	0019672d 	andseq	r6, r9, sp, lsr #14
    183c:	02352400 	eorseq	r2, r5, #0, 8
    1840:	00000190 	muleq	r0, r0, r1
    1844:	04020101 	streq	r0, [r2], #-257	; 0xfffffeff
    1848:	000d282d 	andeq	r2, sp, sp, lsr #16
    184c:	02362400 	eorseq	r2, r6, #0, 8
    1850:	00000190 	muleq	r0, r0, r1
    1854:	04010101 	streq	r0, [r1], #-257	; 0xfffffeff
    1858:	0047ad2d 	subeq	sl, r7, sp, lsr #26
    185c:	02372400 	eorseq	r2, r7, #0, 8
    1860:	00000190 	muleq	r0, r0, r1
    1864:	04000101 	streq	r0, [r0], #-257	; 0xfffffeff
    1868:	000f212d 	andeq	r2, pc, sp, lsr #2
    186c:	02382400 	eorseq	r2, r8, #0, 8
    1870:	00000190 	muleq	r0, r0, r1
    1874:	05070101 	streq	r0, [r7, #-257]	; 0xfffffeff
    1878:	000e4127 	andeq	r4, lr, r7, lsr #2
    187c:	02392400 	eorseq	r2, r9, #0, 8
    1880:	00000452 	andeq	r0, r0, r2, asr r4
    1884:	30122706 	andscc	r2, r2, r6, lsl #14
    1888:	3b240000 	blcc	901890 <axp2585_set_usb_vhold+0x90064c>
    188c:	00023002 	andeq	r3, r2, r2
    1890:	93270800 	teqls	r7, #0, 16
    1894:	24000024 	strcs	r0, [r0], #-36	; 0xffffffdc
    1898:	0512023c 	ldreq	r0, [r2, #-572]	; 0xfffffdc4
    189c:	27100000 	ldrcs	r0, [r0, -r0]
    18a0:	00002907 	andeq	r2, r0, r7, lsl #18
    18a4:	52023d24 	andpl	r3, r2, #36, 26	; 0x900
    18a8:	1c00001b 	stcne	0, cr0, [r0], {27}
    18ac:	002cee2d 	eoreq	lr, ip, sp, lsr #28
    18b0:	023e2400 	eorseq	r2, lr, #0, 8
    18b4:	00000190 	muleq	r0, r0, r1
    18b8:	20070101 	andcs	r0, r7, r1, lsl #2
    18bc:	0024c82d 	eoreq	ip, r4, sp, lsr #16
    18c0:	023f2400 	eorseq	r2, pc, #0, 8
    18c4:	00000190 	muleq	r0, r0, r1
    18c8:	20060101 	andcs	r0, r6, r1, lsl #2
    18cc:	0011d427 	andseq	sp, r1, r7, lsr #8
    18d0:	02442400 	subeq	r2, r4, #0, 8
    18d4:	00000fc5 	andeq	r0, r0, r5, asr #31
    18d8:	022b2724 	eoreq	r2, fp, #36, 14	; 0x900000
    18dc:	45240000 	strmi	r0, [r4, #-0]!
    18e0:	00002702 	andeq	r2, r0, r2, lsl #14
    18e4:	31274000 	teqcc	r7, r0
    18e8:	2400000f 	strcs	r0, [r0], #-15
    18ec:	103c0246 	eorsne	r0, ip, r6, asr #4
    18f0:	27440000 	strbcs	r0, [r4, -r0]
    18f4:	00002360 	andeq	r2, r0, r0, ror #6
    18f8:	07024724 	streq	r4, [r2, -r4, lsr #14]
    18fc:	54000005 	strpl	r0, [r0], #-5
    1900:	002a1627 	eoreq	r1, sl, r7, lsr #12
    1904:	02482400 	subeq	r2, r8, #0, 8
    1908:	00001b5d 	andeq	r1, r0, sp, asr fp
    190c:	274c275c 	smlsldcs	r2, ip, ip, r7
    1910:	49240000 	stmdbmi	r4!, {}	; <UNPREDICTABLE>
    1914:	00022502 	andeq	r2, r2, r2, lsl #10
    1918:	db276000 	blle	9d8008 <axp2585_set_usb_vhold+0x9d6dc4>
    191c:	24000027 	strcs	r0, [r0], #-39	; 0xffffffd9
    1920:	0225024a 	eoreq	r0, r5, #-1610612732	; 0xa0000004
    1924:	2d640000 	stclcs	0, cr0, [r4, #-0]
    1928:	000006e8 	andeq	r0, r0, r8, ror #13
    192c:	57024b24 	strpl	r4, [r2, -r4, lsr #22]
    1930:	04000000 	streq	r0, [r0], #-0
    1934:	2d681d03 	stclcs	13, cr1, [r8, #-12]!
    1938:	000042da 	ldrdeq	r4, [r0], -sl
    193c:	57024c24 	strpl	r4, [r2, -r4, lsr #24]
    1940:	04000000 	streq	r0, [r0], #-0
    1944:	2d681c01 	stclcs	12, cr1, [r8, #-4]!
    1948:	00000239 	andeq	r0, r0, r9, lsr r2
    194c:	57024d24 	strpl	r4, [r2, -r4, lsr #26]
    1950:	04000000 	streq	r0, [r0], #-0
    1954:	2d681b01 	fstmdbxcs	r8!, {d17-d16}	;@ Deprecated
    1958:	000030e3 	andeq	r3, r0, r3, ror #1
    195c:	57024e24 	strpl	r4, [r2, -r4, lsr #28]
    1960:	04000000 	streq	r0, [r0], #-0
    1964:	2d681a01 	vstmdbcs	r8!, {s3}
    1968:	00003587 	andeq	r3, r0, r7, lsl #11
    196c:	57024f24 	strpl	r4, [r2, -r4, lsr #30]
    1970:	04000000 	streq	r0, [r0], #-0
    1974:	2d681901 	stclcs	9, cr1, [r8, #-4]!
    1978:	00002847 	andeq	r2, r0, r7, asr #16
    197c:	57025024 	strpl	r5, [r2, -r4, lsr #32]
    1980:	04000000 	streq	r0, [r0], #-0
    1984:	2d681801 	stclcs	8, cr1, [r8, #-4]!
    1988:	00002be3 	andeq	r2, r0, r3, ror #23
    198c:	57025124 	strpl	r5, [r2, -r4, lsr #2]
    1990:	04000000 	streq	r0, [r0], #-0
    1994:	2d681701 	stclcs	7, cr1, [r8, #-4]!
    1998:	00002708 	andeq	r2, r0, r8, lsl #14
    199c:	57025224 	strpl	r5, [r2, -r4, lsr #4]
    19a0:	04000000 	streq	r0, [r0], #-0
    19a4:	2d681601 	stclcs	6, cr1, [r8, #-4]!
    19a8:	00000b39 	andeq	r0, r0, r9, lsr fp
    19ac:	57025324 	strpl	r5, [r2, -r4, lsr #6]
    19b0:	04000000 	streq	r0, [r0], #-0
    19b4:	2d681501 	cfstr64cs	mvdx1, [r8, #-4]!
    19b8:	00003e0c 	andeq	r3, r0, ip, lsl #28
    19bc:	57025424 	strpl	r5, [r2, -r4, lsr #8]
    19c0:	04000000 	streq	r0, [r0], #-0
    19c4:	2d681401 	cfstrdcs	mvd1, [r8, #-4]!
    19c8:	000028e1 	andeq	r2, r0, r1, ror #17
    19cc:	57025524 	strpl	r5, [r2, -r4, lsr #10]
    19d0:	04000000 	streq	r0, [r0], #-0
    19d4:	27681301 	strbcs	r1, [r8, -r1, lsl #6]!
    19d8:	000024ad 	andeq	r2, r0, sp, lsr #9
    19dc:	69025624 	stmdbvs	r2, {r2, r5, r9, sl, ip, lr}
    19e0:	6c000017 	stcvs	0, cr0, [r0], {23}
    19e4:	00155627 	andseq	r5, r5, r7, lsr #12
    19e8:	02572400 	subseq	r2, r7, #0, 8
    19ec:	0000173f 	andeq	r1, r0, pc, lsr r7
    19f0:	46f92770 			; <UNDEFINED> instruction: 0x46f92770
    19f4:	58240000 	stmdapl	r4!, {}	; <UNPREDICTABLE>
    19f8:	00009002 	andeq	r9, r0, r2
    19fc:	1d277400 	cfstrsne	mvf7, [r7, #-0]
    1a00:	24000041 	strcs	r0, [r0], #-65	; 0xffffffbf
    1a04:	00900259 	addseq	r0, r0, r9, asr r2
    1a08:	27780000 	ldrbcs	r0, [r8, -r0]!
    1a0c:	00004740 	andeq	r4, r0, r0, asr #14
    1a10:	27025a24 	strcs	r5, [r2, -r4, lsr #20]
    1a14:	7c000000 	stcvc	0, cr0, [r0], {-0}
    1a18:	0012b727 	andseq	fp, r2, r7, lsr #14
    1a1c:	025b2400 	subseq	r2, fp, #0, 8
    1a20:	00000027 	andeq	r0, r0, r7, lsr #32
    1a24:	2c5e2780 	mrrccs	7, 8, r2, lr, cr0
    1a28:	5c240000 	stcpl	0, cr0, [r4], #-0
    1a2c:	00002702 	andeq	r2, r0, r2, lsl #14
    1a30:	81278400 	teqhi	r7, r0, lsl #8
    1a34:	2400000f 	strcs	r0, [r0], #-15
    1a38:	0027025d 	eoreq	r0, r7, sp, asr r2
    1a3c:	27880000 	strcs	r0, [r8, r0]
    1a40:	000006d2 	ldrdeq	r0, [r0], -r2
    1a44:	63025f24 	movwvs	r5, #12068	; 0x2f24
    1a48:	8c00001b 	stchi	0, cr0, [r0], {27}
    1a4c:	00311327 	eorseq	r1, r1, r7, lsr #6
    1a50:	02602400 	rsbeq	r2, r0, #0, 8
    1a54:	00001b79 	andeq	r1, r0, r9, ror fp
    1a58:	6f712990 	svcvs	0x00712990
    1a5c:	61240073 	teqvs	r4, r3, ror r0
    1a60:	001b8402 	andseq	r8, fp, r2, lsl #8
    1a64:	0b009400 	bleq	26a6c <axp2585_set_usb_vhold+0x25828>
    1a68:	00000e93 	muleq	r0, r3, lr
    1a6c:	52362570 	eorspl	r2, r6, #112, 10	; 0x1c000000
    1a70:	0c00001b 	stceq	0, cr0, [r0], {27}
    1a74:	00000303 	andeq	r0, r0, r3, lsl #6
    1a78:	00453725 	subeq	r3, r5, r5, lsr #14
    1a7c:	0c000000 	stceq	0, cr0, [r0], {-0}
    1a80:	00003012 	andeq	r3, r0, r2, lsl r0
    1a84:	02303825 	eorseq	r3, r0, #2424832	; 0x250000
    1a88:	0c040000 	stceq	0, cr0, [r4], {-0}
    1a8c:	00000e41 	andeq	r0, r0, r1, asr #28
    1a90:	04523925 	ldrbeq	r3, [r2], #-2341	; 0xfffff6db
    1a94:	0c0c0000 	stceq	0, cr0, [ip], {-0}
    1a98:	00002a16 	andeq	r2, r0, r6, lsl sl
    1a9c:	1b5d3a25 	blne	1750338 <axp2585_set_usb_vhold+0x174f0f4>
    1aa0:	0c0c0000 	stceq	0, cr0, [ip], {-0}
    1aa4:	00001f5c 	andeq	r1, r0, ip, asr pc
    1aa8:	0fc53b25 	svceq	0x00c53b25
    1aac:	0c100000 	ldceq	0, cr0, [r0], {-0}
    1ab0:	0000022b 	andeq	r0, r0, fp, lsr #4
    1ab4:	00273c25 	eoreq	r3, r7, r5, lsr #24
    1ab8:	0c2c0000 	stceq	0, cr0, [ip], #-0
    1abc:	00002fd6 	ldrdeq	r2, [r0], -r6
    1ac0:	054f3d25 	strbeq	r3, [pc, #-3365]	; da3 <.debug_info+0xda3>
    1ac4:	0c300000 	ldceq	0, cr0, [r0], #-0
    1ac8:	00001fa3 	andeq	r1, r0, r3, lsr #31
    1acc:	054f3e25 	strbeq	r3, [pc, #-3621]	; caf <.debug_info+0xcaf>
    1ad0:	0c380000 	ldceq	0, cr0, [r8], #-0
    1ad4:	00001458 	andeq	r1, r0, r8, asr r4
    1ad8:	054f3f25 	strbeq	r3, [pc, #-3877]	; bbb <.debug_info+0xbbb>
    1adc:	0c400000 	mareq	acc0, r0, r0
    1ae0:	000012a4 	andeq	r1, r0, r4, lsr #5
    1ae4:	054f4025 	strbeq	r4, [pc, #-37]	; 1ac7 <.debug_info+0x1ac7>
    1ae8:	0c480000 	mareq	acc0, r0, r8
    1aec:	000014de 	ldrdeq	r1, [r0], -lr
    1af0:	054f4125 	strbeq	r4, [pc, #-293]	; 19d3 <.debug_info+0x19d3>
    1af4:	0c500000 	mraeq	r0, r0, acc0
    1af8:	000036f4 	strdeq	r3, [r0], -r4
    1afc:	00274225 	eoreq	r4, r7, r5, lsr #4
    1b00:	0c580000 	mraeq	r0, r8, acc0
    1b04:	00003ce3 	andeq	r3, r0, r3, ror #25
    1b08:	00274325 	eoreq	r4, r7, r5, lsr #6
    1b0c:	0c5c0000 	mraeq	r0, ip, acc0
    1b10:	000038e6 	andeq	r3, r0, r6, ror #17
    1b14:	00274425 	eoreq	r4, r7, r5, lsr #8
    1b18:	0c600000 	stcleq	0, cr0, [r0], #-0
    1b1c:	00002588 	andeq	r2, r0, r8, lsl #11
    1b20:	00274525 	eoreq	r4, r7, r5, lsr #10
    1b24:	0c640000 	stcleq	0, cr0, [r4], #-0
    1b28:	00000eb5 			; <UNDEFINED> instruction: 0x00000eb5
    1b2c:	00274625 	eoreq	r4, r7, r5, lsr #12
    1b30:	23680000 	cmncs	r8, #0
    1b34:	000030f3 	strdeq	r3, [r0], -r3	; <UNPREDICTABLE>
    1b38:	01904725 	orrseq	r4, r0, r5, lsr #14
    1b3c:	01010000 	mrseq	r0, (UNDEF: 1)
    1b40:	2b236c07 	blcs	8db024 <axp2585_set_usb_vhold+0x8d9de0>
    1b44:	25000012 	strcs	r0, [r0, #-18]	; 0xffffffee
    1b48:	00019048 	andeq	r9, r1, r8, asr #32
    1b4c:	06010100 	streq	r0, [r1], -r0, lsl #2
    1b50:	0406006c 	streq	r0, [r6], #-108	; 0xffffff94
    1b54:	00001a67 	andeq	r1, r0, r7, ror #20
    1b58:	0046d913 	subeq	sp, r6, r3, lsl r9
    1b5c:	58040600 	stmdapl	r4, {r9, sl}
    1b60:	0600001b 			; <UNDEFINED> instruction: 0x0600001b
    1b64:	00179904 	andseq	r9, r7, r4, lsl #18
    1b68:	1b790e00 	blne	1e45370 <axp2585_set_usb_vhold+0x1e4412c>
    1b6c:	350f0000 	strcc	r0, [pc, #-0]	; 1b74 <.debug_info+0x1b74>
    1b70:	0f000015 	svceq	0x00000015
    1b74:	000000cf 	andeq	r0, r0, pc, asr #1
    1b78:	69040600 	stmdbvs	r4, {r9, sl}
    1b7c:	1300001b 	movwne	r0, #27
    1b80:	00001de5 	andeq	r1, r0, r5, ror #27
    1b84:	1b7f0406 	blne	1fc2ba4 <axp2585_set_usb_vhold+0x1fc1960>
    1b88:	6a260000 	bvs	980008 <axp2585_set_usb_vhold+0x97edc4>
    1b8c:	6c00000b 	stcvs	0, cr0, [r0], {11}
    1b90:	d9027224 	stmdble	r2, {r2, r5, r9, ip, sp, lr}
    1b94:	2900001b 	stmdbcs	r0, {r0, r1, r3, r4}
    1b98:	0073706f 	rsbseq	r7, r3, pc, rrx
    1b9c:	ed027324 	stc	3, cr7, [r2, #-144]	; 0xffffff70
    1ba0:	00000013 	andeq	r0, r0, r3, lsl r0
    1ba4:	001ba227 	andseq	sl, fp, r7, lsr #4
    1ba8:	02742400 	rsbseq	r2, r4, #0, 8
    1bac:	00001be9 	andeq	r1, r0, r9, ror #23
    1bb0:	191b275c 	ldmdbne	fp, {r2, r3, r4, r6, r8, r9, sl, sp}
    1bb4:	75240000 	strvc	r0, [r4, #-0]!
    1bb8:	00172802 	andseq	r2, r7, r2, lsl #16
    1bbc:	28276000 	stmdacs	r7!, {sp, lr}
    1bc0:	2400003a 	strcs	r0, [r0], #-58	; 0xffffffc6
    1bc4:	17390276 			; <UNDEFINED> instruction: 0x17390276
    1bc8:	27640000 	strbcs	r0, [r4, -r0]!
    1bcc:	00003225 	andeq	r3, r0, r5, lsr #4
    1bd0:	39027724 	stmdbcc	r2, {r2, r5, r8, r9, sl, ip, sp, lr}
    1bd4:	68000017 	stmdavs	r0, {r0, r1, r2, r4}
    1bd8:	1be90e00 	blne	ffa453e0 <axp2585_set_usb_vhold+0xffa4419c>
    1bdc:	350f0000 	strcc	r0, [pc, #-0]	; 1be4 <.debug_info+0x1be4>
    1be0:	0f000015 	svceq	0x00000015
    1be4:	00000190 	muleq	r0, r0, r1
    1be8:	d9040600 	stmdble	r4, {r9, sl}
    1bec:	2e00001b 	mcrcs	0, 0, r0, cr0, cr11, {0}
    1bf0:	00005704 	andeq	r5, r0, r4, lsl #14
    1bf4:	2c262600 	stccs	6, cr2, [r6], #-0
    1bf8:	2200001c 	andcs	r0, r0, #28
    1bfc:	00002985 	andeq	r2, r0, r5, lsl #19
    1c00:	26ba2200 	ldrtcs	r2, [sl], r0, lsl #4
    1c04:	22010000 	andcs	r0, r1, #0
    1c08:	000013f7 	strdeq	r1, [r0], -r7
    1c0c:	12672202 	rsbne	r2, r7, #536870912	; 0x20000000
    1c10:	22030000 	andcs	r0, r3, #0
    1c14:	00001565 	andeq	r1, r0, r5, ror #10
    1c18:	2c332203 	lfmcs	f2, 4, [r3], #-12
    1c1c:	22040000 	andcs	r0, r4, #0
    1c20:	00002292 	muleq	r0, r2, r2
    1c24:	0a0c2205 	beq	30881c <axp2585_set_usb_vhold+0x3075d8>
    1c28:	00060000 	andeq	r0, r6, r0
    1c2c:	00113d0b 	andseq	r3, r1, fp, lsl #26
    1c30:	5e263400 	cdppl	4, 2, cr3, cr6, cr0, {0}
    1c34:	00001c51 	andeq	r1, r0, r1, asr ip
    1c38:	0018460c 	andseq	r4, r8, ip, lsl #12
    1c3c:	515f2600 	cmppl	pc, r0, lsl #12
    1c40:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c44:	0017400c 	andseq	r4, r7, ip
    1c48:	27602600 	strbcs	r2, [r0, -r0, lsl #12]!
    1c4c:	30000000 	andcc	r0, r0, r0
    1c50:	02300400 	eorseq	r0, r0, #0, 8
    1c54:	1c610000 	stclne	0, cr0, [r1], #-0
    1c58:	3e050000 	cdpcc	0, 0, cr0, cr5, cr0, {0}
    1c5c:	05000000 	streq	r0, [r0, #-0]
    1c60:	005d2100 	subseq	r2, sp, r0, lsl #2
    1c64:	57040000 	strpl	r0, [r4, -r0]
    1c68:	26000000 	strcs	r0, [r0], -r0
    1c6c:	001d4474 	andseq	r4, sp, r4, ror r4
    1c70:	37002200 	strcc	r2, [r0, -r0, lsl #4]
    1c74:	22000000 	andcs	r0, r0, #0
    1c78:	00000d8a 	andeq	r0, r0, sl, lsl #27
    1c7c:	2c782201 	lfmcs	f2, 2, [r8], #-4
    1c80:	22020000 	andcs	r0, r2, #0
    1c84:	00003a48 	andeq	r3, r0, r8, asr #20
    1c88:	370e2202 	strcc	r2, [lr, -r2, lsl #4]
    1c8c:	22030000 	andcs	r0, r3, #0
    1c90:	0000109c 	muleq	r0, ip, r0
    1c94:	2a382204 	bcs	e08818 <axp2585_set_usb_vhold+0xe075d4>
    1c98:	22050000 	andcs	r0, r5, #0
    1c9c:	000035b4 			; <UNDEFINED> instruction: 0x000035b4
    1ca0:	12112206 	andsne	r2, r1, #1610612736	; 0x60000000
    1ca4:	22070000 	andcs	r0, r7, #0
    1ca8:	00003004 	andeq	r3, r0, r4
    1cac:	29552208 	ldmdbcs	r5, {r3, r9, sp}^
    1cb0:	22090000 	andcs	r0, r9, #0
    1cb4:	0000000e 	andeq	r0, r0, lr
    1cb8:	03a3220a 			; <UNDEFINED> instruction: 0x03a3220a
    1cbc:	220b0000 	andcs	r0, fp, #0
    1cc0:	00003ae4 	andeq	r3, r0, r4, ror #21
    1cc4:	0a1a220c 	beq	688838 <axp2585_set_usb_vhold+0x6875f4>
    1cc8:	220d0000 	andcs	r0, sp, #0
    1ccc:	000032af 	andeq	r3, r0, pc, lsr #5
    1cd0:	4725220e 	strmi	r2, [r5, -lr, lsl #4]!
    1cd4:	220f0000 	andcs	r0, pc, #0
    1cd8:	0000010d 	andeq	r0, r0, sp, lsl #2
    1cdc:	1be42210 	blne	ff908848 <axp2585_set_usb_vhold+0xff907604>
    1ce0:	22110000 	andscs	r0, r1, #0
    1ce4:	0000294b 	andeq	r2, r0, fp, asr #18
    1ce8:	23342212 	teqcs	r4, #536870913	; 0x20000001
    1cec:	22130000 	andscs	r0, r3, #0
    1cf0:	0000332e 	andeq	r3, r0, lr, lsr #6
    1cf4:	036a2214 	cmneq	sl, #20, 4	; 0x40000001
    1cf8:	22150000 	andscs	r0, r5, #0
    1cfc:	00000d17 	andeq	r0, r0, r7, lsl sp
    1d00:	01952216 	orrseq	r2, r5, r6, lsl r2
    1d04:	22170000 	andscs	r0, r7, #0
    1d08:	00000f96 	muleq	r0, r6, pc	; <UNPREDICTABLE>
    1d0c:	3a7d2218 	bcc	1f48868 <axp2585_set_usb_vhold+0x1f47624>
    1d10:	22190000 	andscs	r0, r9, #0
    1d14:	00002233 	andeq	r2, r0, r3, lsr r2
    1d18:	06b4221a 	ssateq	r2, #21, sl, lsl #4
    1d1c:	221b0000 	andscs	r0, fp, #0
    1d20:	00004629 	andeq	r4, r0, r9, lsr #12
    1d24:	4659221c 			; <UNDEFINED> instruction: 0x4659221c
    1d28:	221d0000 	andscs	r0, sp, #0
    1d2c:	000023da 	ldrdeq	r2, [r0], -sl
    1d30:	4494221e 	ldrmi	r2, [r4], #542	; 0x21e
    1d34:	221f0000 	andscs	r0, pc, #0
    1d38:	000034c5 	andeq	r3, r0, r5, asr #9
    1d3c:	2c1d2220 	lfmcs	f2, 4, [sp], {32}
    1d40:	00210000 	eoreq	r0, r1, r0
    1d44:	00044821 	andeq	r4, r4, r1, lsr #16
    1d48:	00570400 	subseq	r0, r7, r0, lsl #8
    1d4c:	b1260000 	teqlt	r6, r0
    1d50:	00001d79 	andeq	r1, r0, r9, ror sp
    1d54:	00285922 	eoreq	r5, r8, r2, lsr #18
    1d58:	65220000 	strvs	r0, [r2, #-0]!
    1d5c:	01000002 	tsteq	r0, r2
    1d60:	001bc222 	andseq	ip, fp, r2, lsr #4
    1d64:	5c220200 	sfmpl	f0, 4, [r2], #-0
    1d68:	0300003e 	movweq	r0, #62	; 0x3e
    1d6c:	00011d22 	andeq	r1, r1, r2, lsr #26
    1d70:	be220400 	cdplt	4, 2, cr0, cr2, cr0, {0}
    1d74:	0500003d 	streq	r0, [r0, #-61]	; 0xffffffc3
    1d78:	08c60b00 	stmiaeq	r6, {r8, r9, fp}^
    1d7c:	26100000 	ldrcs	r0, [r0], -r0
    1d80:	001d9ecd 	andseq	r9, sp, sp, asr #29
    1d84:	1e330c00 	cdpne	12, 3, cr0, cr3, cr0, {0}
    1d88:	d6260000 	strtle	r0, [r6], -r0
    1d8c:	0000002e 	andeq	r0, r0, lr, lsr #32
    1d90:	34140c00 	ldrcc	r0, [r4], #-3072	; 0xfffff400
    1d94:	d7260000 	strle	r0, [r6, -r0]!
    1d98:	0000002e 	andeq	r0, r0, lr, lsr #32
    1d9c:	660b0008 	strvs	r0, [fp], -r8
    1da0:	3c000007 	stccc	0, cr0, [r0], {7}
    1da4:	1dcfda26 	vstrne	s27, [pc, #152]	; 1e44 <.debug_info+0x1e44>
    1da8:	8d0c0000 	stchi	0, cr0, [ip, #-0]
    1dac:	2600002c 	strcs	r0, [r0], -ip, lsr #32
    1db0:	001dcfdb 			; <UNDEFINED> instruction: 0x001dcfdb
    1db4:	5d0c0000 	stcpl	0, cr0, [ip, #-0]
    1db8:	26000005 	strcs	r0, [r0], -r5
    1dbc:	001d79dc 			; <UNDEFINED> instruction: 0x001d79dc
    1dc0:	410c2800 	tstmi	ip, r0, lsl #16
    1dc4:	26000018 			; <UNDEFINED> instruction: 0x26000018
    1dc8:	001f8ede 			; <UNDEFINED> instruction: 0x001f8ede
    1dcc:	04003800 	streq	r3, [r0], #-2048	; 0xfffff800
    1dd0:	00000230 	andeq	r0, r0, r0, lsr r2
    1dd4:	00001ddf 	ldrdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    1dd8:	00003e05 	andeq	r3, r0, r5, lsl #28
    1ddc:	28000400 	stmdacs	r0, {sl}
    1de0:	00001841 	andeq	r1, r0, r1, asr #16
    1de4:	4d2603ac 	stcmi	3, cr0, [r6, #-688]!	; 0xfffffd50
    1de8:	001f8e01 	andseq	r8, pc, r1, lsl #28
    1dec:	29bc2700 	ldmibcs	ip!, {r8, r9, sl, sp}
    1df0:	51260000 	teqpl	r6, r0
    1df4:	00205201 	eoreq	r5, r0, r1, lsl #4
    1df8:	e6270000 	strt	r0, [r7], -r0
    1dfc:	2600002e 	strcs	r0, [r0], -lr, lsr #32
    1e00:	00270153 	eoreq	r0, r7, r3, asr r1
    1e04:	270c0000 	strcs	r0, [ip, -r0]
    1e08:	0000015f 	andeq	r0, r0, pc, asr r1
    1e0c:	62015e26 	andvs	r5, r1, #608	; 0x260
    1e10:	10000020 	andne	r0, r0, r0, lsr #32
    1e14:	000afb27 	andeq	pc, sl, r7, lsr #22
    1e18:	01682600 	cmneq	r8, r0, lsl #12
    1e1c:	00000057 	andeq	r0, r0, r7, asr r0
    1e20:	388a271c 	stmcc	sl, {r2, r3, r4, r8, r9, sl, sp}
    1e24:	6a260000 	bvs	981e2c <axp2585_set_usb_vhold+0x980be8>
    1e28:	00213601 	eoreq	r3, r1, r1, lsl #12
    1e2c:	c2272000 	eorgt	r2, r7, #0
    1e30:	26000042 	strcs	r0, [r0], -r2, asr #32
    1e34:	213c016b 	teqcs	ip, fp, ror #2
    1e38:	27240000 	strcs	r0, [r4, -r0]!
    1e3c:	00000de1 	andeq	r0, r0, r1, ror #27
    1e40:	27017126 	strcs	r7, [r1, -r6, lsr #2]
    1e44:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    1e48:	003ba327 	eorseq	sl, fp, r7, lsr #6
    1e4c:	01782600 	cmneq	r8, r0, lsl #12
    1e50:	00002142 	andeq	r2, r0, r2, asr #2
    1e54:	0ff7272c 	svceq	0x00f7272c
    1e58:	84260000 	strthi	r0, [r6], #-0
    1e5c:	00002701 	andeq	r2, r0, r1, lsl #14
    1e60:	32273000 	eorcc	r3, r7, #0
    1e64:	26000047 	strcs	r0, [r0], -r7, asr #32
    1e68:	002701af 	eoreq	r0, r7, pc, lsr #3
    1e6c:	27340000 	ldrcs	r0, [r4, -r0]!
    1e70:	00004516 	andeq	r4, r0, r6, lsl r5
    1e74:	2701b026 	strcs	fp, [r1, -r6, lsr #32]
    1e78:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    1e7c:	00286b27 	eoreq	r6, r8, r7, lsr #22
    1e80:	01b12600 			; <UNDEFINED> instruction: 0x01b12600
    1e84:	00000027 	andeq	r0, r0, r7, lsr #32
    1e88:	0303273c 	movweq	r2, #14140	; 0x373c
    1e8c:	b3260000 	teqlt	r6, #0
    1e90:	00004501 	andeq	r4, r0, r1, lsl #10
    1e94:	3c274000 	stccc	0, cr4, [r7], #-0
    1e98:	26000024 	strcs	r0, [r0], -r4, lsr #32
    1e9c:	002701bb 	strhteq	r0, [r7], -fp
    1ea0:	27440000 	strbcs	r0, [r4, -r0]
    1ea4:	00003cf0 	strdeq	r3, [r0], -r0
    1ea8:	4801db26 	stmdami	r1, {r1, r2, r5, r8, r9, fp, ip, lr, pc}
    1eac:	48000021 	stmdami	r0, {r0, r5}
    1eb0:	00252027 	eoreq	r2, r5, r7, lsr #32
    1eb4:	01dc2600 	bicseq	r2, ip, r0, lsl #12
    1eb8:	00000027 	andeq	r0, r0, r7, lsr #32
    1ebc:	1b92274c 	blne	fe489d38 <axp2585_set_usb_vhold+0xfe488af4>
    1ec0:	dd260000 	stcle	0, cr0, [r6, #-0]
    1ec4:	00002701 	andeq	r2, r0, r1, lsl #14
    1ec8:	3d275000 	stccc	0, cr5, [r7, #-0]
    1ecc:	26000011 			; <UNDEFINED> instruction: 0x26000011
    1ed0:	214e01e1 	smlalttcs	r0, lr, r1, r1
    1ed4:	2a540000 	bcs	1501edc <axp2585_set_usb_vhold+0x1500c98>
    1ed8:	00003f42 	andeq	r3, r0, r2, asr #30
    1edc:	2701e426 	strcs	lr, [r1, -r6, lsr #8]
    1ee0:	c4000000 	strgt	r0, [r0], #-0
    1ee4:	0e412a02 	vmlaeq.f32	s5, s2, s4
    1ee8:	e7260000 	str	r0, [r6, -r0]!
    1eec:	00045201 	andeq	r5, r4, r1, lsl #4
    1ef0:	2a02c800 	bcs	b3ef8 <axp2585_set_usb_vhold+0xb2cb4>
    1ef4:	00000f0b 	andeq	r0, r0, fp, lsl #30
    1ef8:	5201ee26 	andpl	lr, r1, #608	; 0x260
    1efc:	c8000004 	stmdagt	r0, {r2}
    1f00:	07662a02 	strbeq	r2, [r6, -r2, lsl #20]!
    1f04:	ef260000 	svc	0x00260000
    1f08:	001d9e01 	andseq	r9, sp, r1, lsl #28
    1f0c:	2a02c800 	bcs	b3f14 <axp2585_set_usb_vhold+0xb2cd0>
    1f10:	000013bb 			; <UNDEFINED> instruction: 0x000013bb
    1f14:	7d01f226 	sfmvc	f7, 1, [r1, #-152]	; 0xffffff68
    1f18:	04000004 	streq	r0, [r0], #-4
    1f1c:	45c62a03 	strbmi	r2, [r6, #2563]	; 0xa03
    1f20:	f9260000 			; <UNDEFINED> instruction: 0xf9260000
    1f24:	00002701 	andeq	r2, r0, r1, lsl #14
    1f28:	2a030800 	bcs	c3f30 <axp2585_set_usb_vhold+0xc2cec>
    1f2c:	000021f2 	strdeq	r2, [r0], -r2	; <UNPREDICTABLE>
    1f30:	2701fd26 	strcs	pc, [r1, -r6, lsr #26]
    1f34:	0c000000 	stceq	0, cr0, [r0], {-0}
    1f38:	00f22a03 	rscseq	r2, r2, r3, lsl #20
    1f3c:	ff260000 			; <UNDEFINED> instruction: 0xff260000
    1f40:	00002e01 	andeq	r2, r0, r1, lsl #28
    1f44:	2a031000 	bcs	c5f4c <axp2585_set_usb_vhold+0xc4d08>
    1f48:	00001d85 	andeq	r1, r0, r5, lsl #27
    1f4c:	57020826 	strpl	r0, [r2, -r6, lsr #16]
    1f50:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    1f54:	237b2a03 	cmncs	fp, #12288	; 0x3000
    1f58:	09260000 	stmdbeq	r6!, {}	; <UNPREDICTABLE>
    1f5c:	00005702 	andeq	r5, r0, r2, lsl #14
    1f60:	2a031c00 	bcs	c8f68 <axp2585_set_usb_vhold+0xc7d24>
    1f64:	000033ff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
    1f68:	90020a26 	andls	r0, r2, r6, lsr #20
    1f6c:	20000000 	andcs	r0, r0, r0
    1f70:	08a92a03 	stmiaeq	r9!, {r0, r1, r9, fp, sp}
    1f74:	0f260000 	svceq	0x00260000
    1f78:	00019002 	andeq	r9, r1, r2
    1f7c:	2a032400 	bcs	caf84 <axp2585_set_usb_vhold+0xc9d40>
    1f80:	00002637 	andeq	r2, r0, r7, lsr r6
    1f84:	5e021426 	cdppl	4, 0, cr1, cr2, cr6, {1}
    1f88:	28000021 	stmdacs	r0, {r0, r5}
    1f8c:	04060003 	streq	r0, [r6], #-3
    1f90:	00001ddf 	ldrdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    1f94:	000dbd21 	andeq	fp, sp, r1, lsr #26
    1f98:	00570400 	subseq	r0, r7, r0, lsl #8
    1f9c:	f3260000 	vhadd.u32	d0, d6, d0
    1fa0:	00001fbd 			; <UNDEFINED> instruction: 0x00001fbd
    1fa4:	0006de22 	andeq	sp, r6, r2, lsr #28
    1fa8:	54220000 	strtpl	r0, [r2], #-0
    1fac:	0100002c 	tsteq	r0, ip, lsr #32
    1fb0:	0035ed22 	eorseq	lr, r5, r2, lsr #26
    1fb4:	42220200 	eormi	r0, r2, #0, 4
    1fb8:	03000046 	movweq	r0, #70	; 0x46
    1fbc:	223e0b00 	eorscs	r0, lr, #0, 22
    1fc0:	26240000 	strtcs	r0, [r4], -r0
    1fc4:	001ffdfe 			; <UNDEFINED> instruction: 0x001ffdfe
    1fc8:	2ad20c00 	bcs	ff483008 <axp2585_set_usb_vhold+0xff481dc4>
    1fcc:	ff260000 			; <UNDEFINED> instruction: 0xff260000
    1fd0:	00000090 	muleq	r0, r0, r0
    1fd4:	05082700 	streq	r2, [r8, #-1792]	; 0xfffff900
    1fd8:	00260000 	eoreq	r0, r6, r0
    1fdc:	00009001 	andeq	r9, r0, r1
    1fe0:	f8270400 			; <UNDEFINED> instruction: 0xf8270400
    1fe4:	26000035 			; <UNDEFINED> instruction: 0x26000035
    1fe8:	00900101 	addseq	r0, r0, r1, lsl #2
    1fec:	27080000 	strcs	r0, [r8, -r0]
    1ff0:	00002c8d 	andeq	r2, r0, sp, lsl #25
    1ff4:	fd010426 	stc2	4, cr0, [r1, #-152]	; 0xffffff68
    1ff8:	0c00001f 	stceq	0, cr0, [r0], {31}
    1ffc:	02300400 	eorseq	r0, r0, #0, 8
    2000:	200d0000 	andcs	r0, sp, r0
    2004:	3e050000 	cdpcc	0, 0, cr0, cr5, cr0, {0}
    2008:	02000000 	andeq	r0, r0, #0
    200c:	04912600 	ldreq	r2, [r1], #1536	; 0x600
    2010:	26240000 	strtcs	r0, [r4], -r0
    2014:	20280107 	eorcs	r0, r8, r7, lsl #2
    2018:	70290000 	eorvc	r0, r9, r0
    201c:	26007063 	strcs	r7, [r0], -r3, rrx
    2020:	1fbd0108 	svcne	0x00bd0108
    2024:	00000000 	andeq	r0, r0, r0
    2028:	001cf425 	andseq	pc, ip, r5, lsr #8
    202c:	00570400 	subseq	r0, r7, r0, lsl #8
    2030:	14260000 	strtne	r0, [r6], #-0
    2034:	00205201 	eoreq	r5, r0, r1, lsl #4
    2038:	38162200 	ldmdacc	r6, {r9, sp}
    203c:	22000000 	andcs	r0, r0, #0
    2040:	000022f0 	strdeq	r2, [r0], -r0
    2044:	0edc2201 	cdpeq	2, 13, cr2, cr12, cr1, {0}
    2048:	22020000 	andcs	r0, r2, #0
    204c:	000046af 	andeq	r4, r0, pc, lsr #13
    2050:	27040003 	strcs	r0, [r4, -r3]
    2054:	62000000 	andvs	r0, r0, #0
    2058:	05000020 	streq	r0, [r0, #-32]	; 0xffffffe0
    205c:	0000003e 	andeq	r0, r0, lr, lsr r0
    2060:	fb040002 	blx	102072 <axp2585_set_usb_vhold+0x100e2e>
    2064:	72000000 	andvc	r0, r0, #0
    2068:	05000020 	streq	r0, [r0, #-32]	; 0xffffffe0
    206c:	0000003e 	andeq	r0, r0, lr, lsr r0
    2070:	bc280002 	stclt	0, cr0, [r8], #-8
    2074:	58000024 	stmdapl	r0, {r2, r5}
    2078:	027f260b 	rsbseq	r2, pc, #11534336	; 0xb00000
    207c:	00002136 	andeq	r2, r0, r6, lsr r1
    2080:	0019a827 	andseq	sl, r9, r7, lsr #16
    2084:	02802600 	addeq	r2, r0, #0, 12
    2088:	000021c1 	andeq	r2, r0, r1, asr #3
    208c:	37972a00 	ldrcc	r2, [r7, r0, lsl #20]
    2090:	81260000 	teqhi	r6, r0
    2094:	0021d102 	eoreq	sp, r1, r2, lsl #2
    2098:	2a0b0400 	bcs	2c30a0 <axp2585_set_usb_vhold+0x2c1e5c>
    209c:	0000319c 	muleq	r0, ip, r1
    20a0:	90028226 	andls	r8, r2, r6, lsr #4
    20a4:	24000000 	strcs	r0, [r0], #-0
    20a8:	32a22a0b 	adccc	r2, r2, #45056	; 0xb000
    20ac:	84260000 	strthi	r0, [r6], #-0
    20b0:	0003bf02 	andeq	fp, r3, r2, lsl #30
    20b4:	2a0b2800 	bcs	2cc0bc <axp2585_set_usb_vhold+0x2cae78>
    20b8:	0000360a 	andeq	r3, r0, sl, lsl #12
    20bc:	27029926 	strcs	r9, [r2, -r6, lsr #18]
    20c0:	2c000000 	stccs	0, cr0, [r0], {-0}
    20c4:	41e42a0b 	mvnmi	r2, fp, lsl #20
    20c8:	9a260000 	bls	9820d0 <axp2585_set_usb_vhold+0x980e8c>
    20cc:	00002702 	andeq	r2, r0, r2, lsl #14
    20d0:	2a0b3000 	bcs	2ce0d8 <axp2585_set_usb_vhold+0x2cce94>
    20d4:	00004688 	andeq	r4, r0, r8, lsl #13
    20d8:	27029b26 	strcs	r9, [r2, -r6, lsr #22]
    20dc:	34000000 	strcc	r0, [r0], #-0
    20e0:	056a2a0b 	strbeq	r2, [sl, #-2571]!	; 0xfffff5f5
    20e4:	9d260000 	stcls	0, cr0, [r6, #-0]
    20e8:	00009002 	andeq	r9, r0, r2
    20ec:	2a0b3800 	bcs	2d00f4 <axp2585_set_usb_vhold+0x2ceeb0>
    20f0:	000026e0 	andeq	r2, r0, r0, ror #13
    20f4:	07029e26 	streq	r9, [r2, -r6, lsr #28]
    20f8:	3c000005 	stccc	0, cr0, [r0], {5}
    20fc:	1fd72a0b 	svcne	0x00d72a0b
    2100:	9f260000 	svcls	0x00260000
    2104:	00050702 	andeq	r0, r5, r2, lsl #14
    2108:	2a0b4400 	bcs	2d3110 <axp2585_set_usb_vhold+0x2d1ecc>
    210c:	00004587 	andeq	r4, r0, r7, lsl #11
    2110:	da02a026 	ble	aa1b0 <axp2585_set_usb_vhold+0xa8f6c>
    2114:	4c000003 	stcmi	0, cr0, [r0], {3}
    2118:	45602a0b 	strbmi	r2, [r0, #-2571]!	; 0xfffff5f5
    211c:	a2260000 	eorge	r0, r6, #0
    2120:	00009002 	andeq	r9, r0, r2
    2124:	2a0b5000 	bcs	2d612c <axp2585_set_usb_vhold+0x2d4ee8>
    2128:	000042f8 	strdeq	r4, [r0], -r8
    212c:	2802a326 	stmdacs	r2, {r1, r2, r5, r8, r9, sp, pc}
    2130:	54000020 	strpl	r0, [r0], #-32	; 0xffffffe0
    2134:	0406000b 	streq	r0, [r6], #-11
    2138:	00002072 	andeq	r2, r0, r2, ror r0
    213c:	200d0406 	andcs	r0, sp, r6, lsl #8
    2140:	04060000 	streq	r0, [r6], #-0
    2144:	00000027 	andeq	r0, r0, r7, lsr #32
    2148:	05070406 	streq	r0, [r7, #-1030]	; 0xfffffbfa
    214c:	2c040000 	stccs	0, cr0, [r4], {-0}
    2150:	5e00001c 	mcrpl	0, 0, r0, cr0, cr12, {0}
    2154:	05000021 	streq	r0, [r0, #-33]	; 0xffffffdf
    2158:	0000003e 	andeq	r0, r0, lr, lsr r0
    215c:	7d04000b 	stcvc	0, cr0, [r4, #-44]	; 0xffffffd4
    2160:	6e000004 	cdpvs	0, 0, cr0, cr0, cr4, {0}
    2164:	05000021 	streq	r0, [r0, #-33]	; 0xffffffdf
    2168:	0000003e 	andeq	r0, r0, lr, lsr r0
    216c:	4b260020 	blmi	980088 <axp2585_set_usb_vhold+0x97ee44>
    2170:	08000046 	stmdaeq	r0, {r1, r2, r6}
    2174:	96025726 	strls	r5, [r2], -r6, lsr #14
    2178:	27000021 	strcs	r0, [r0, -r1, lsr #32]
    217c:	00001841 	andeq	r1, r0, r1, asr #16
    2180:	8e025826 	cdphi	8, 0, cr5, cr2, cr6, {1}
    2184:	0000001f 	andeq	r0, r0, pc, lsl r0
    2188:	00216627 	eoreq	r6, r1, r7, lsr #12
    218c:	02592600 	subseq	r2, r9, #0, 12
    2190:	00000090 	muleq	r0, r0, r0
    2194:	55260004 	strpl	r0, [r6, #-4]!
    2198:	20000041 	andcs	r0, r0, r1, asr #32
    219c:	b1026a26 	tstlt	r2, r6, lsr #20
    21a0:	27000021 	strcs	r0, [r0, -r1, lsr #32]
    21a4:	00002b0f 	andeq	r2, r0, pc, lsl #22
    21a8:	b1026b26 	tstlt	r2, r6, lsr #22
    21ac:	00000021 	andeq	r0, r0, r1, lsr #32
    21b0:	216e0400 	cmncs	lr, r0, lsl #8
    21b4:	21c10000 	biccs	r0, r1, r0
    21b8:	3e050000 	cdpcc	0, 0, cr0, cr5, cr0, {0}
    21bc:	03000000 	movweq	r0, #0
    21c0:	1ddf0400 	cfldrdne	mvd0, [pc]	; 21c8 <.debug_info+0x21c8>
    21c4:	21d10000 	bicscs	r0, r1, r0
    21c8:	3e050000 	cdpcc	0, 0, cr0, cr5, cr0, {0}
    21cc:	02000000 	andeq	r0, r0, #0
    21d0:	21960400 	orrscs	r0, r6, r0, lsl #8
    21d4:	21e10000 	mvncs	r0, r0
    21d8:	3e050000 	cdpcc	0, 0, cr0, cr5, cr0, {0}
    21dc:	00000000 	andeq	r0, r0, r0
    21e0:	1fe70b00 	svcne	0x00e70b00
    21e4:	270c0000 	strcs	r0, [ip, -r0]
    21e8:	0022121b 	eoreq	r1, r2, fp, lsl r2
    21ec:	2ad20c00 	bcs	ff483008 <axp2585_set_usb_vhold+0xff481dc4>
    21f0:	1c270000 	stcne	0, cr0, [r7], #-0
    21f4:	000000fb 	strdeq	r0, [r0], -fp
    21f8:	43250c00 	teqmi	r5, #0, 24
    21fc:	1d270000 	stcne	0, cr0, [r7, #-0]
    2200:	00000230 	andeq	r0, r0, r0, lsr r2
    2204:	068b0c04 	streq	r0, [fp], r4, lsl #24
    2208:	1e270000 	cdpne	0, 2, cr0, cr7, cr0, {0}
    220c:	00000420 	andeq	r0, r0, r0, lsr #8
    2210:	0406000c 	streq	r0, [r6], #-12
    2214:	00000057 	andeq	r0, r0, r7, asr r0
    2218:	00247421 	eoreq	r7, r4, r1, lsr #8
    221c:	00570400 	subseq	r0, r7, r0, lsl #8
    2220:	4f280000 	svcmi	0x00280000
    2224:	00002241 	andeq	r2, r0, r1, asr #4
    2228:	000d9922 	andeq	r9, sp, r2, lsr #18
    222c:	67220000 	strvs	r0, [r2, -r0]!
    2230:	01000022 	tsteq	r0, r2, lsr #32
    2234:	00415e22 	subeq	r5, r1, r2, lsr #28
    2238:	75220200 	strvc	r0, [r2, #-512]!	; 0xfffffe00
    223c:	0300002e 	movweq	r0, #46	; 0x2e
    2240:	076d0b00 	strbeq	r0, [sp, -r0, lsl #22]!
    2244:	290c0000 	stmdbcs	ip, {}	; <UNPREDICTABLE>
    2248:	00227209 	eoreq	r7, r2, r9, lsl #4
    224c:	19be0c00 	ldmibne	lr!, {sl, fp}
    2250:	0a290000 	beq	a42258 <axp2585_set_usb_vhold+0xa41014>
    2254:	00002277 	andeq	r2, r0, r7, ror r2
    2258:	077f0c00 	ldrbeq	r0, [pc, -r0, lsl #24]!
    225c:	0f290000 	svceq	0x00290000
    2260:	00000025 	andeq	r0, r0, r5, lsr #32
    2264:	2e8b0c04 	cdpcs	12, 8, cr0, cr11, cr4, {0}
    2268:	14290000 	strtne	r0, [r9], #-0
    226c:	00000190 	muleq	r0, r0, r1
    2270:	13130008 	tstne	r3, #8
    2274:	06000028 	streq	r0, [r0], -r8, lsr #32
    2278:	00227204 	eoreq	r7, r2, r4, lsl #4
    227c:	467a0b00 	ldrbtmi	r0, [sl], -r0, lsl #22
    2280:	29040000 	stmdbcs	r4, {}	; <UNPREDICTABLE>
    2284:	00229519 	eoreq	r9, r2, r9, lsl r5
    2288:	646f1200 	strbtvs	r1, [pc], #-512	; 2290 <.debug_info+0x2290>
    228c:	9a1b2900 	bls	6cc694 <axp2585_set_usb_vhold+0x6cb450>
    2290:	00000022 	andeq	r0, r0, r2, lsr #32
    2294:	0b0a1300 	bleq	284c08 <axp2585_set_usb_vhold+0x2839c4>
    2298:	04060000 	streq	r0, [r6], #-0
    229c:	00002295 	muleq	r0, r5, r2
    22a0:	22a60406 	adccs	r0, r6, #100663296	; 0x6000000
    22a4:	830b0000 	movwhi	r0, #45056	; 0xb000
    22a8:	4c000042 	stcmi	0, cr0, [r0], {66}	; 0x42
    22ac:	23a06902 	movcs	r6, #32768	; 0x8000
    22b0:	030c0000 	movweq	r0, #49152	; 0xc000
    22b4:	02000003 	andeq	r0, r0, #3
    22b8:	0000456a 	andeq	r4, r0, sl, ror #10
    22bc:	940c0000 	strls	r0, [ip], #-0
    22c0:	02000013 	andeq	r0, r0, #19
    22c4:	0000456b 	andeq	r4, r0, fp, ror #10
    22c8:	950c0400 	strls	r0, [ip, #-1024]	; 0xfffffc00
    22cc:	0200003d 	andeq	r0, r0, #61	; 0x3d
    22d0:	0015356c 	andseq	r3, r5, ip, ror #10
    22d4:	540c0800 	strpl	r0, [ip], #-2048	; 0xfffff800
    22d8:	02000034 	andeq	r0, r0, #52	; 0x34
    22dc:	0023d56d 	eoreq	sp, r3, sp, ror #10
    22e0:	780c0c00 	stmdavc	ip, {sl, fp}
    22e4:	0200000b 	andeq	r0, r0, #11
    22e8:	0023db6e 	eoreq	sp, r3, lr, ror #22
    22ec:	fb0c1000 	blx	30400a <axp2585_set_usb_vhold+0x302dc6>
    22f0:	02000003 	andeq	r0, r0, #3
    22f4:	0023db6f 	eoreq	sp, r3, pc, ror #22
    22f8:	240c1400 	strcs	r1, [ip], #-1024	; 0xfffffc00
    22fc:	02000019 	andeq	r0, r0, #25
    2300:	0023db70 	eoreq	sp, r3, r0, ror fp
    2304:	560c1800 	strpl	r1, [ip], -r0, lsl #16
    2308:	0200001f 	andeq	r0, r0, #31
    230c:	0024e172 	eoreq	lr, r4, r2, ror r1
    2310:	7e0c1c00 	cdpvc	12, 0, cr1, cr12, cr0, {0}
    2314:	0200001d 	andeq	r0, r0, #29
    2318:	0024fb73 	eoreq	pc, r4, r3, ror fp	; <UNPREDICTABLE>
    231c:	f40c2000 	vst4.8	{d2-d5}, [ip], r0
    2320:	02000018 	andeq	r0, r0, #24
    2324:	00172874 	andseq	r2, r7, r4, ror r8
    2328:	cc0c2400 	cfstrsgt	mvf2, [ip], {-0}
    232c:	02000027 	andeq	r0, r0, #39	; 0x27
    2330:	00172875 	andseq	r2, r7, r5, ror r8
    2334:	a60c2800 	strge	r2, [ip], -r0, lsl #16
    2338:	0200002f 	andeq	r0, r0, #47	; 0x2f
    233c:	00173976 	andseq	r3, r7, r6, ror r9
    2340:	c80c2c00 	stmdagt	ip, {sl, fp, sp}
    2344:	02000041 	andeq	r0, r0, #65	; 0x41
    2348:	00172878 	andseq	r2, r7, r8, ror r8
    234c:	c60c3000 	strgt	r3, [ip], -r0
    2350:	02000002 	andeq	r0, r0, #2
    2354:	00172879 	andseq	r2, r7, r9, ror r8
    2358:	da0c3400 	ble	30d008 <axp2585_set_usb_vhold+0x30bdc4>
    235c:	02000004 	andeq	r0, r0, #4
    2360:	0025157b 	eoreq	r1, r5, fp, ror r5
    2364:	410c3800 	tstmi	ip, r0, lsl #16
    2368:	02000004 	andeq	r0, r0, #4
    236c:	0017287c 	andseq	r2, r7, ip, ror r8
    2370:	70123c00 	andsvc	r3, r2, r0, lsl #24
    2374:	7e02006d 	cdpvc	0, 0, cr0, cr2, cr13, {3}
    2378:	0000251b 	andeq	r2, r0, fp, lsl r5
    237c:	3e470c40 	cdpcc	12, 4, cr0, cr7, cr0, {2}
    2380:	80020000 	andhi	r0, r2, r0
    2384:	0000252b 	andeq	r2, r0, fp, lsr #10
    2388:	00701244 	rsbseq	r1, r0, r4, asr #4
    238c:	253b8202 	ldrcs	r8, [fp, #-514]!	; 0xfffffdfe
    2390:	0c480000 	mareq	acc0, r0, r8
    2394:	00000cbf 			; <UNDEFINED> instruction: 0x00000cbf
    2398:	03fe8302 	mvnseq	r8, #134217728	; 0x8000000
    239c:	004c0000 	subeq	r0, ip, r0
    23a0:	0003ea26 	andeq	lr, r3, r6, lsr #20
    23a4:	20021000 	andcs	r1, r2, r0
    23a8:	0023d502 	eoreq	sp, r3, r2, lsl #10
    23ac:	0bb32700 	bleq	fecc9c08 <axp2585_set_usb_vhold+0xfecc89c4>
    23b0:	21020000 	mrscs	r0, (UNDEF: 2)
    23b4:	000d2802 	andeq	r2, sp, r2, lsl #16
    23b8:	e2270000 	eor	r0, r7, #0
    23bc:	02000024 	andeq	r0, r0, #36	; 0x24
    23c0:	2afd0222 	bcs	fff42c50 <axp2585_set_usb_vhold+0xfff41a0c>
    23c4:	27080000 	strcs	r0, [r8, -r0]
    23c8:	00001ba9 	andeq	r1, r0, r9, lsr #23
    23cc:	21022402 	tstcs	r2, r2, lsl #8
    23d0:	0c00002b 	stceq	0, cr0, [r0], {43}	; 0x2b
    23d4:	a0040600 	andge	r0, r4, r0, lsl #12
    23d8:	06000023 	streq	r0, [r0], -r3, lsr #32
    23dc:	0023e104 	eoreq	lr, r3, r4, lsl #2
    23e0:	e7040600 	str	r0, [r4, -r0, lsl #12]
    23e4:	07000023 	streq	r0, [r0, -r3, lsr #32]
    23e8:	00000d4d 	andeq	r0, r0, sp, asr #26
    23ec:	00009020 	andeq	r9, r0, r0, lsr #32
    23f0:	00240000 	eoreq	r0, r4, r0
    23f4:	15350f00 	ldrne	r0, [r5, #-3840]!	; 0xfffff100
    23f8:	000f0000 	andeq	r0, pc, r0
    23fc:	00000024 	andeq	r0, r0, r4, lsr #32
    2400:	24060406 	strcs	r0, [r6], #-1030	; 0xfffffbfa
    2404:	3b260000 	blcc	980008 <axp2585_set_usb_vhold+0x97edc4>
    2408:	4000002e 	andmi	r0, r0, lr, lsr #32
    240c:	e1010302 	tst	r1, r2, lsl #6
    2410:	27000024 	strcs	r0, [r0, -r4, lsr #32]
    2414:	00000303 	andeq	r0, r0, r3, lsl #6
    2418:	45010402 	strmi	r0, [r1, #-1026]	; 0xfffffbfe
    241c:	00000000 	andeq	r0, r0, r0
    2420:	73756229 	cmnvc	r5, #-1879048190	; 0x90000002
    2424:	01050200 	mrseq	r0, SP_usr
    2428:	000022a0 	andeq	r2, r0, r0, lsr #5
    242c:	123d2704 	eorsne	r2, sp, #4, 14	; 0x100000
    2430:	07020000 	streq	r0, [r2, -r0]
    2434:	00287c01 	eoreq	r7, r8, r1, lsl #24
    2438:	8b270800 	blhi	9c2008 <axp2585_set_usb_vhold+0x9c0dc4>
    243c:	02000013 	andeq	r0, r0, #19
    2440:	00450108 	subeq	r0, r5, r8, lsl #2
    2444:	270c0000 	strcs	r0, [ip, -r0]
    2448:	00002a75 	andeq	r2, r0, r5, ror sl
    244c:	90010a02 	andls	r0, r1, r2, lsl #20
    2450:	10000001 	andne	r0, r0, r1
    2454:	003e8427 	eorseq	r8, lr, r7, lsr #8
    2458:	010b0200 	mrseq	r0, R11_fiq
    245c:	000025a7 	andeq	r2, r0, r7, lsr #11
    2460:	2cd12714 	ldclcs	7, cr2, [r1], {20}
    2464:	0d020000 	stceq	0, cr0, [r2, #-0]
    2468:	0028bf01 	eoreq	fp, r8, r1, lsl #30
    246c:	79271800 	stmdbvc	r7!, {fp, ip}
    2470:	02000038 	andeq	r0, r0, #56	; 0x38
    2474:	2906010e 	stmdbcs	r6, {r1, r2, r3, r8}
    2478:	271c0000 	ldrcs	r0, [ip, -r0]
    247c:	000018f4 	strdeq	r1, [r0], -r4
    2480:	28011002 	stmdacs	r1, {r1, ip}
    2484:	20000017 	andcs	r0, r0, r7, lsl r0
    2488:	0027cc27 	eoreq	ip, r7, r7, lsr #24
    248c:	01110200 	tsteq	r1, r0, lsl #4
    2490:	00001728 	andeq	r1, r0, r8, lsr #14
    2494:	2fa62724 	svccs	0x00a62724
    2498:	12020000 	andne	r0, r2, #0
    249c:	00173901 	andseq	r3, r7, r1, lsl #18
    24a0:	da272800 	ble	9ca008 <axp2585_set_usb_vhold+0x9c8dc4>
    24a4:	02000004 	andeq	r0, r0, #4
    24a8:	25150113 	ldrcs	r0, [r5, #-275]	; 0xfffffeed
    24ac:	272c0000 	strcs	r0, [ip, -r0]!
    24b0:	00000441 	andeq	r0, r0, r1, asr #8
    24b4:	28011402 	stmdacs	r1, {r1, sl, ip}
    24b8:	30000017 	andcc	r0, r0, r7, lsl r0
    24bc:	00398f27 	eorseq	r8, r9, r7, lsr #30
    24c0:	01150200 	tsteq	r5, r0, lsl #4
    24c4:	000023db 	ldrdeq	r2, [r0], -fp
    24c8:	6d702934 	ldclvs	9, cr2, [r0, #-208]!	; 0xffffff30
    24cc:	01170200 	tsteq	r7, r0, lsl #4
    24d0:	0000251b 	andeq	r2, r0, fp, lsl r5
    24d4:	00702938 	rsbseq	r2, r0, r8, lsr r9
    24d8:	16011902 	strne	r1, [r1], -r2, lsl #18
    24dc:	3c000029 	stccc	0, cr0, [r0], {41}	; 0x29
    24e0:	ec040600 	stc	6, cr0, [r4], {-0}
    24e4:	20000023 	andcs	r0, r0, r3, lsr #32
    24e8:	00000090 	muleq	r0, r0, r0
    24ec:	000024fb 	strdeq	r2, [r0], -fp
    24f0:	0015350f 	andseq	r3, r5, pc, lsl #10
    24f4:	129b0f00 	addsne	r0, fp, #0, 30
    24f8:	06000000 	streq	r0, [r0], -r0
    24fc:	0024e704 	eoreq	lr, r4, r4, lsl #14
    2500:	00902000 	addseq	r2, r0, r0
    2504:	25150000 	ldrcs	r0, [r5, #-0]
    2508:	350f0000 	strcc	r0, [pc, #-0]	; 2510 <.debug_info+0x2510>
    250c:	0f000015 	svceq	0x00000015
    2510:	000013e2 	andeq	r1, r0, r2, ror #7
    2514:	01040600 	tsteq	r4, r0, lsl #12
    2518:	06000025 	streq	r0, [r0], -r5, lsr #32
    251c:	00252104 	eoreq	r2, r5, r4, lsl #2
    2520:	13ed0700 	mvnne	r0, #0, 14
    2524:	47130000 	ldrmi	r0, [r3, -r0]
    2528:	0600003e 			; <UNDEFINED> instruction: 0x0600003e
    252c:	00253104 	eoreq	r3, r5, r4, lsl #2
    2530:	25260700 	strcs	r0, [r6, #-1792]!	; 0xfffff900
    2534:	83130000 	tsthi	r3, #0
    2538:	0600001b 			; <UNDEFINED> instruction: 0x0600001b
    253c:	00253604 	eoreq	r3, r5, r4, lsl #12
    2540:	2b702600 	blcs	1c09808 <axp2585_set_usb_vhold+0x1c085c4>
    2544:	02180000 	andseq	r0, r8, #0
    2548:	259c0214 	ldrcs	r0, [ip, #532]	; 0x214
    254c:	03270000 	teqeq	r7, #0
    2550:	02000003 	andeq	r0, r0, #3
    2554:	00450215 	subeq	r0, r5, r5, lsl r2
    2558:	27000000 	strcs	r0, [r0, -r0]
    255c:	0000398f 	andeq	r3, r0, pc, lsl #19
    2560:	db021602 	blle	87d70 <axp2585_set_usb_vhold+0x86b2c>
    2564:	04000023 	streq	r0, [r0], #-35	; 0xffffffdd
    2568:	001d7e27 	andseq	r7, sp, r7, lsr #28
    256c:	02170200 	andseq	r0, r7, #0, 4
    2570:	000024fb 	strdeq	r2, [r0], -fp
    2574:	39102708 	ldmdbcc	r0, {r3, r8, r9, sl, sp}
    2578:	18020000 	stmdane	r2, {}	; <UNPREDICTABLE>
    257c:	002ade02 	eoreq	sp, sl, r2, lsl #28
    2580:	e7270c00 	str	r0, [r7, -r0, lsl #24]!
    2584:	02000001 	andeq	r0, r0, #1
    2588:	1739021a 			; <UNDEFINED> instruction: 0x1739021a
    258c:	29100000 	ldmdbcs	r0, {}	; <UNPREDICTABLE>
    2590:	02006d70 	andeq	r6, r0, #112, 26	; 0x1c00
    2594:	251b021c 	ldrcs	r0, [fp, #-540]	; 0xfffffde4
    2598:	00140000 	andseq	r0, r4, r0
    259c:	25a20406 	strcs	r0, [r2, #1030]!	; 0x406
    25a0:	41070000 	mrsmi	r0, (UNDEF: 7)
    25a4:	21000025 	tstcs	r0, r5, lsr #32
    25a8:	00003e84 	andeq	r3, r0, r4, lsl #29
    25ac:	00005704 	andeq	r5, r0, r4, lsl #14
    25b0:	cadc0200 	bgt	ff702db8 <axp2585_set_usb_vhold+0xff701b74>
    25b4:	22000025 	andcs	r0, r0, #37	; 0x25
    25b8:	00001979 	andeq	r1, r0, r9, ror r9
    25bc:	429c2200 	addsmi	r2, ip, #0, 4
    25c0:	22010000 	andcs	r0, r1, #0
    25c4:	00003316 	andeq	r3, r0, r6, lsl r3
    25c8:	36280002 	strtcc	r0, [r8], -r2
    25cc:	00000011 	andeq	r0, r0, r1, lsl r0
    25d0:	01372a02 	teqeq	r7, r2, lsl #20
    25d4:	0000287c 	andeq	r2, r0, ip, ror r8
    25d8:	00352027 	eorseq	r2, r5, r7, lsr #32
    25dc:	01382a00 	teqeq	r8, r0, lsl #20
    25e0:	0000300a 	andeq	r3, r0, sl
    25e4:	02fe2700 	rscseq	r2, lr, #0, 14
    25e8:	3b2a0000 	blcc	a825f0 <axp2585_set_usb_vhold+0xa813ac>
    25ec:	00023001 	andeq	r3, r2, r1
    25f0:	03270400 	teqeq	r7, #0, 8
    25f4:	2a000003 	bcs	2608 <.debug_info+0x2608>
    25f8:	2ec7013e 	mcrcs	1, 6, r0, cr7, cr14, {1}
    25fc:	270c0000 	strcs	r0, [ip, -r0]
    2600:	00003e1f 	andeq	r3, r0, pc, lsl lr
    2604:	d701412a 	strle	r4, [r1, -sl, lsr #2]
    2608:	4800002e 	stmdami	r0, {r1, r2, r3, r5}
    260c:	002aa027 	eoreq	sl, sl, r7, lsr #32
    2610:	01422a00 	cmpeq	r2, r0, lsl #20
    2614:	00002f98 	muleq	r0, r8, pc	; <UNPREDICTABLE>
    2618:	01c8277c 	biceq	r2, r8, ip, ror r7
    261c:	432a0000 	teqmi	sl, #0
    2620:	00004501 	andeq	r4, r0, r1, lsl #10
    2624:	75278000 	strvc	r8, [r7, #-0]!
    2628:	2a00000a 	bcs	2658 <.debug_info+0x2658>
    262c:	00450144 	subeq	r0, r5, r4, asr #2
    2630:	27840000 	strcs	r0, [r4, r0]
    2634:	000029d4 	ldrdeq	r2, [r0], -r4
    2638:	af01452a 	svcge	0x0001452a
    263c:	8800000d 	stmdahi	r0, {r0, r2, r3}
    2640:	0039cc27 	eorseq	ip, r9, r7, lsr #24
    2644:	01482a00 	cmpeq	r8, r0, lsl #20
    2648:	00003097 	muleq	r0, r7, r0
    264c:	1c20278c 	stcne	7, cr2, [r0], #-560	; 0xfffffdd0
    2650:	492a0000 	stmdbmi	sl!, {}	; <UNPREDICTABLE>
    2654:	0030a201 	eorseq	sl, r0, r1, lsl #4
    2658:	84279000 	strthi	r9, [r7], #-0
    265c:	2a00002c 	bcs	2714 <.debug_info+0x2714>
    2660:	0057014a 	subseq	r0, r7, sl, asr #2
    2664:	27940000 	ldrcs	r0, [r4, r0]
    2668:	000001a6 	andeq	r0, r0, r6, lsr #3
    266c:	88014e2a 	stmdahi	r1, {r1, r3, r5, r9, sl, fp, lr}
    2670:	98000004 	stmdals	r0, {r2}
    2674:	00706b29 	rsbseq	r6, r0, r9, lsr #22
    2678:	ad01502a 	stcge	0, cr5, [r1, #-168]	; 0xffffff58
    267c:	a4000030 	strge	r0, [r0], #-48	; 0xffffffd0
    2680:	0040bc27 	subeq	fp, r0, r7, lsr #24
    2684:	01512a00 	cmpeq	r1, r0, lsl #20
    2688:	00000057 	andeq	r0, r0, r7, asr r0
    268c:	33ba27a8 			; <UNDEFINED> instruction: 0x33ba27a8
    2690:	542a0000 	strtpl	r0, [sl], #-0
    2694:	00005701 	andeq	r5, r0, r1, lsl #14
    2698:	2d27ac00 	stccs	12, cr10, [r7, #-0]
    269c:	2a00003a 	bcs	278c <.debug_info+0x278c>
    26a0:	30970155 	addscc	r0, r7, r5, asr r1
    26a4:	27b00000 	ldrcs	r0, [r0, r0]!
    26a8:	00001c17 	andeq	r1, r0, r7, lsl ip
    26ac:	a201562a 	andge	r5, r1, #44040192	; 0x2a00000
    26b0:	b4000030 	strlt	r0, [r0], #-48	; 0xffffffd0
    26b4:	00034227 	andeq	r4, r3, r7, lsr #4
    26b8:	01692a00 	cmneq	r9, r0, lsl #20
    26bc:	00000190 	muleq	r0, r0, r1
    26c0:	3a1827b8 	bcc	609ee8 <axp2585_set_usb_vhold+0x608ca4>
    26c4:	6c2a0000 	stcvs	0, cr0, [sl], #-0
    26c8:	00309701 	eorseq	r9, r0, r1, lsl #14
    26cc:	d427bc00 	strtle	fp, [r7], #-3072	; 0xfffff400
    26d0:	2a00001b 	bcs	2744 <.debug_info+0x2744>
    26d4:	30a2016d 	adccc	r0, r2, sp, ror #2
    26d8:	27c00000 	strbcs	r0, [r0, r0]
    26dc:	00000c9f 	muleq	r0, pc, ip	; <UNPREDICTABLE>
    26e0:	57016e2a 	strpl	r6, [r1, -sl, lsr #28]
    26e4:	c4000000 	strgt	r0, [r0], #-0
    26e8:	0022ae27 	eoreq	sl, r2, r7, lsr #28
    26ec:	01712a00 	cmneq	r1, r0, lsl #20
    26f0:	00000057 	andeq	r0, r0, r7, asr r0
    26f4:	41cf27c8 	bicmi	r2, pc, r8, asr #15
    26f8:	722a0000 	eorvc	r0, sl, #0
    26fc:	0030b801 	eorseq	fp, r0, r1, lsl #16
    2700:	5427cc00 	strtpl	ip, [r7], #-3072	; 0xfffff400
    2704:	2a000028 	bcs	27ac <.debug_info+0x27ac>
    2708:	02d30175 	sbcseq	r0, r3, #1073741853	; 0x4000001d
    270c:	2ad00000 	bcs	ff402714 <axp2585_set_usb_vhold+0xff4014d0>
    2710:	0000224c 	andeq	r2, r0, ip, asr #4
    2714:	25017f2a 	strcs	r7, [r1, #-3882]	; 0xfffff0d6
    2718:	00000000 	andeq	r0, r0, r0
    271c:	38302a01 	ldmdacc	r0!, {r0, r9, fp, sp}
    2720:	822a0000 	eorhi	r0, sl, #0
    2724:	00002501 	andeq	r2, r0, r1, lsl #10
    2728:	2a010400 	bcs	43730 <axp2585_set_usb_vhold+0x424ec>
    272c:	000040d0 	ldrdeq	r4, [r0], -r0
    2730:	5701852a 	strpl	r8, [r1, -sl, lsr #10]
    2734:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    2738:	12e22a01 	rscne	r2, r2, #4096	; 0x1000
    273c:	852a0000 	strhi	r0, [sl, #-0]!
    2740:	00005701 	andeq	r5, r0, r1, lsl #14
    2744:	2a010c00 	bcs	4574c <axp2585_set_usb_vhold+0x44508>
    2748:	00000810 	andeq	r0, r0, r0, lsl r8
    274c:	5701882a 	strpl	r8, [r1, -sl, lsr #16]
    2750:	10000000 	andne	r0, r0, r0
    2754:	27a72a01 	strcs	r2, [r7, r1, lsl #20]!
    2758:	882a0000 	stmdahi	sl!, {}	; <UNPREDICTABLE>
    275c:	00005701 	andeq	r5, r0, r1, lsl #14
    2760:	2a011400 	bcs	47768 <axp2585_set_usb_vhold+0x46524>
    2764:	000039e9 	andeq	r3, r0, r9, ror #19
    2768:	3401902a 	strcc	r9, [r1], #-42	; 0xffffffd6
    276c:	18000030 	stmdane	r0, {r4, r5}
    2770:	247c2a01 	ldrbtcs	r2, [ip], #-2561	; 0xfffff5ff
    2774:	912a0000 	teqls	sl, r0
    2778:	00303401 	eorseq	r3, r0, r1, lsl #8
    277c:	2a013400 	bcs	4f784 <axp2585_set_usb_vhold+0x4e540>
    2780:	000045b9 			; <UNDEFINED> instruction: 0x000045b9
    2784:	5701952a 	strpl	r9, [r1, -sl, lsr #10]
    2788:	50000000 	andpl	r0, r0, r0
    278c:	40c32a01 	sbcmi	r2, r3, r1, lsl #20
    2790:	952a0000 	strls	r0, [sl, #-0]!
    2794:	00005701 	andeq	r5, r0, r1, lsl #14
    2798:	2a015400 	bcs	577a0 <axp2585_set_usb_vhold+0x5655c>
    279c:	00003a59 	andeq	r3, r0, r9, asr sl
    27a0:	9301982a 	movwls	r9, #6186	; 0x182a
    27a4:	5800002e 	stmdapl	r0, {r1, r2, r3, r5}
    27a8:	075f2a01 	ldrbeq	r2, [pc, -r1, lsl #20]
    27ac:	9a2a0000 	bls	a827b4 <axp2585_set_usb_vhold+0xa81570>
    27b0:	00005701 	andeq	r5, r0, r1, lsl #14
    27b4:	2a017400 	bcs	5f7bc <axp2585_set_usb_vhold+0x5e578>
    27b8:	000009d5 	ldrdeq	r0, [r0], -r5
    27bc:	57019e2a 	strpl	r9, [r1, -sl, lsr #28]
    27c0:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    27c4:	32442a01 	subcc	r2, r4, #4096	; 0x1000
    27c8:	9f2a0000 	svcls	0x002a0000
    27cc:	00023001 	andeq	r3, r2, r1
    27d0:	2a017c00 	bcs	617d8 <axp2585_set_usb_vhold+0x60594>
    27d4:	0000426b 	andeq	r4, r0, fp, ror #4
    27d8:	be01a02a 	cdplt	0, 0, cr10, cr1, cr10, {1}
    27dc:	84000030 	strhi	r0, [r0], #-48	; 0xffffffd0
    27e0:	0c3d2a01 	ldceq	10, cr2, [sp], #-4
    27e4:	a52a0000 	strge	r0, [sl, #-0]!
    27e8:	0030c401 	eorseq	ip, r0, r1, lsl #8
    27ec:	2a018800 	bcs	647f4 <axp2585_set_usb_vhold+0x635b0>
    27f0:	000029c6 	andeq	r2, r0, r6, asr #19
    27f4:	5c01a62a 	stcpl	6, cr10, [r1], {42}	; 0x2a
    27f8:	8c000030 	stchi	0, cr0, [r0], {48}	; 0x30
    27fc:	348c2a01 	strcc	r2, [ip], #2561	; 0xa01
    2800:	a92a0000 	stmdbge	sl!, {}	; <UNPREDICTABLE>
    2804:	0030cf01 	eorseq	ip, r0, r1, lsl #30
    2808:	2a019800 	bcs	68810 <axp2585_set_usb_vhold+0x675cc>
    280c:	00002914 	andeq	r2, r0, r4, lsl r9
    2810:	da01ac2a 	ble	6d8c0 <axp2585_set_usb_vhold+0x6c67c>
    2814:	9c000030 	stcls	0, cr0, [r0], {48}	; 0x30
    2818:	3f2a2a01 	svccc	0x002a2a01
    281c:	b12a0000 	teqlt	sl, r0
    2820:	00014401 	andeq	r4, r1, r1, lsl #8
    2824:	2a01a000 	bcs	6a82c <axp2585_set_usb_vhold+0x695e8>
    2828:	00000ecf 	andeq	r0, r0, pc, asr #29
    282c:	1c01be2a 	stcne	14, cr11, [r1], {42}	; 0x2a
    2830:	a400002e 	strge	r0, [r0], #-46	; 0xffffffd2
    2834:	22d42a01 	sbcscs	r2, r4, #4096	; 0x1000
    2838:	bf2a0000 	svclt	0x002a0000
    283c:	00005701 	andeq	r5, r0, r1, lsl #14
    2840:	2a01a800 	bcs	6c848 <axp2585_set_usb_vhold+0x6b604>
    2844:	0000306b 	andeq	r3, r0, fp, rrx
    2848:	3001d62a 	andcc	sp, r1, sl, lsr #12
    284c:	ac000002 	stcge	0, cr0, [r0], {2}
    2850:	45ad2a01 	strmi	r2, [sp, #2561]!	; 0xa01
    2854:	d82a0000 	stmdale	sl!, {}	; <UNPREDICTABLE>
    2858:	00023001 	andeq	r3, r2, r1
    285c:	2a01b400 	bcs	6f864 <axp2585_set_usb_vhold+0x6e620>
    2860:	00000a58 	andeq	r0, r0, r8, asr sl
    2864:	de01db2a 	vmlale.f64	d13, d1, d26
    2868:	bc000002 	stclt	0, cr0, [r0], {2}
    286c:	3e752a01 	vaddcc.f32	s5, s10, s2
    2870:	dd2a0000 	stcle	0, cr0, [sl, #-0]
    2874:	00022501 	andeq	r2, r2, r1, lsl #10
    2878:	0001c000 	andeq	ip, r1, r0
    287c:	25ca0406 	strbcs	r0, [sl, #1030]	; 0x406
    2880:	6d0b0000 	stcvs	0, cr0, [fp, #-0]
    2884:	c4000046 	strgt	r0, [r0], #-70	; 0xffffffba
    2888:	28bfe92b 	ldmcs	pc!, {r0, r1, r3, r5, r8, fp, sp, lr, pc}	; <UNPREDICTABLE>
    288c:	030c0000 	movweq	r0, #49152	; 0xc000
    2890:	2b000003 	blcs	28a4 <.debug_info+0x28a4>
    2894:	002bb5ea 	eoreq	fp, fp, sl, ror #11
    2898:	750c0000 	strvc	r0, [ip, #-0]
    289c:	2b000027 	blcs	2940 <.debug_info+0x2940>
    28a0:	002bb5eb 	eoreq	fp, fp, fp, ror #11
    28a4:	8e0c2000 	cdphi	0, 0, cr2, cr12, cr0, {0}
    28a8:	2b00002b 	blcs	295c <.debug_info+0x295c>
    28ac:	0030fbec 	eorseq	pc, r0, ip, ror #23
    28b0:	0a0c4000 	beq	310008 <axp2585_set_usb_vhold+0x30edc4>
    28b4:	2b000042 	blcs	29c4 <.debug_info+0x29c4>
    28b8:	000937ed 	andeq	r3, r9, sp, ror #15
    28bc:	0600c000 	streq	ip, [r0], -r0
    28c0:	0028c504 	eoreq	ip, r8, r4, lsl #10
    28c4:	28820700 	stmcs	r2, {r8, r9, sl}
    28c8:	590b0000 	stmdbpl	fp, {}	; <UNPREDICTABLE>
    28cc:	18000039 	stmdane	r0, {r0, r3, r4, r5}
    28d0:	2906bd2b 	stmdbcs	r6, {r0, r1, r3, r5, r8, sl, fp, ip, sp, pc}
    28d4:	69120000 	ldmdbvs	r2, {}	; <UNPREDICTABLE>
    28d8:	be2b0064 	cdplt	0, 2, cr0, cr11, cr4, {3}
    28dc:	000030eb 	andeq	r3, r0, fp, ror #1
    28e0:	40930c00 	addsmi	r0, r3, r0, lsl #24
    28e4:	bf2b0000 	svclt	0x002b0000
    28e8:	000030e0 	andeq	r3, r0, r0, ror #1
    28ec:	6c63120c 	sfmvs	f1, 2, [r3], #-48	; 0xffffffd0
    28f0:	c02b0073 	eorgt	r0, fp, r3, ror r0
    28f4:	00000097 	muleq	r0, r7, r0
    28f8:	1c440c10 	mcrrne	12, 1, r0, r4, cr0
    28fc:	c12b0000 	teqgt	fp, r0
    2900:	00000097 	muleq	r0, r7, r0
    2904:	04060014 	streq	r0, [r6], #-20	; 0xffffffec
    2908:	0000290c 	andeq	r2, r0, ip, lsl #18
    290c:	0028ca07 	eoreq	ip, r8, r7, lsl #20
    2910:	13e81300 	mvnne	r1, #0, 6
    2914:	04060000 	streq	r0, [r6], #-0
    2918:	00002911 	andeq	r2, r0, r1, lsl r9
    291c:	0025ea26 	eoreq	lr, r5, r6, lsr #20
    2920:	7f023c00 	svcvc	0x00023c00
    2924:	0029ea01 	eoreq	lr, r9, r1, lsl #20
    2928:	03032700 	movweq	r2, #14080	; 0x3700
    292c:	80020000 	andhi	r0, r2, r0
    2930:	00004501 	andeq	r4, r0, r1, lsl #10
    2934:	3d270000 	stccc	0, cr0, [r7, #-0]
    2938:	02000012 	andeq	r0, r0, #18
    293c:	287c0181 	ldmdacs	ip!, {r0, r7, r8}^
    2940:	27040000 	strcs	r0, [r4, -r0]
    2944:	00003d35 	andeq	r3, r0, r5, lsr sp
    2948:	1f018302 	svcne	0x00018302
    294c:	0800002a 	stmdaeq	r0, {r1, r3, r5}
    2950:	0003fb27 	andeq	pc, r3, r7, lsr #22
    2954:	01840200 	orreq	r0, r4, r0, lsl #4
    2958:	000023db 	ldrdeq	r2, [r0], -fp
    295c:	34bc270c 	ldrtcc	r2, [ip], #1804	; 0x70c
    2960:	85020000 	strhi	r0, [r2, #-0]
    2964:	000daf01 	andeq	sl, sp, r1, lsl #30
    2968:	a5271000 	strge	r1, [r7, #-0]!
    296c:	02000031 	andeq	r0, r0, #49	; 0x31
    2970:	24fb0187 	ldrbtcs	r0, [fp], #391	; 0x187
    2974:	27140000 	ldrcs	r0, [r4, -r0]
    2978:	00003910 	andeq	r3, r0, r0, lsl r9
    297c:	3f018802 	svccc	0x00018802
    2980:	1800002a 	stmdane	r0, {r1, r3, r5}
    2984:	0029fc27 	eoreq	pc, r9, r7, lsr #24
    2988:	018a0200 	orreq	r0, sl, r0, lsl #4
    298c:	00002a56 	andeq	r2, r0, r6, asr sl
    2990:	2ff8271c 	svccs	0x00f8271c
    2994:	8b020000 	blhi	8299c <axp2585_set_usb_vhold+0x81758>
    2998:	00173901 	andseq	r3, r7, r1, lsl #18
    299c:	da272000 	ble	9c8008 <axp2585_set_usb_vhold+0x9c6dc4>
    29a0:	02000004 	andeq	r0, r0, #4
    29a4:	2515018d 	ldrcs	r0, [r5, #-397]	; 0xfffffe73
    29a8:	27240000 	strcs	r0, [r4, -r0]!
    29ac:	00000441 	andeq	r0, r0, r1, asr #8
    29b0:	28018e02 	stmdacs	r1, {r1, r9, sl, fp, pc}
    29b4:	28000017 	stmdacs	r0, {r0, r1, r2, r4}
    29b8:	002f8927 	eoreq	r8, pc, r7, lsr #18
    29bc:	01900200 	orrseq	r0, r0, r0, lsl #4
    29c0:	00001171 	andeq	r1, r0, r1, ror r1
    29c4:	321b272c 	andscc	r2, fp, #44, 14	; 0xb00000
    29c8:	91020000 	mrsls	r0, (UNDEF: 2)
    29cc:	002a6b01 	eoreq	r6, sl, r1, lsl #22
    29d0:	70293000 	eorvc	r3, r9, r0
    29d4:	9302006d 	movwls	r0, #8301	; 0x206d
    29d8:	00251b01 	eoreq	r1, r5, r1, lsl #22
    29dc:	70293400 	eorvc	r3, r9, r0, lsl #8
    29e0:	01950200 	orrseq	r0, r5, r0, lsl #4
    29e4:	0000253b 	andeq	r2, r0, fp, lsr r5
    29e8:	83260038 	teqhi	r6, #56	; 0x38
    29ec:	1000000b 	andne	r0, r0, fp
    29f0:	1f01c102 	svcne	0x0001c102
    29f4:	2700002a 	strcs	r0, [r0, -sl, lsr #32]
    29f8:	00000bb3 			; <UNDEFINED> instruction: 0x00000bb3
    29fc:	2801c202 	stmdacs	r1, {r1, r9, lr, pc}
    2a00:	0000000d 	andeq	r0, r0, sp
    2a04:	0024e227 	eoreq	lr, r4, r7, lsr #4
    2a08:	01c30200 	biceq	r0, r3, r0, lsl #4
    2a0c:	00002a8a 	andeq	r2, r0, sl, lsl #21
    2a10:	1ba92708 	blne	fea49c28 <axp2585_set_usb_vhold+0xfea489e4>
    2a14:	c5020000 	strgt	r0, [r2, #-0]
    2a18:	002aae01 	eoreq	sl, sl, r1, lsl #28
    2a1c:	06000c00 	streq	r0, [r0], -r0, lsl #24
    2a20:	0029ea04 	eoreq	lr, r9, r4, lsl #20
    2a24:	01442000 	mrseq	r2, (UNDEF: 68)
    2a28:	2a390000 	bcs	e42a30 <axp2585_set_usb_vhold+0xe417ec>
    2a2c:	350f0000 	strcc	r0, [pc, #-0]	; 2a34 <.debug_info+0x2a34>
    2a30:	0f000015 	svceq	0x00000015
    2a34:	00002a39 	andeq	r2, r0, r9, lsr sl
    2a38:	85040600 	strhi	r0, [r4, #-1536]	; 0xfffffa00
    2a3c:	06000001 	streq	r0, [r0], -r1
    2a40:	002a2504 	eoreq	r2, sl, r4, lsl #10
    2a44:	2a500e00 	bcs	140624c <axp2585_set_usb_vhold+0x1405008>
    2a48:	500f0000 	andpl	r0, pc, r0
    2a4c:	0000002a 	andeq	r0, r0, sl, lsr #32
    2a50:	291c0406 	ldmdbcs	ip, {r1, r2, sl}
    2a54:	04060000 	streq	r0, [r6], #-0
    2a58:	00002a45 	andeq	r2, r0, r5, asr #20
    2a5c:	00093720 	andeq	r3, r9, r0, lsr #14
    2a60:	002a6b00 	eoreq	r6, sl, r0, lsl #22
    2a64:	15350f00 	ldrne	r0, [r5, #-3840]!	; 0xfffff100
    2a68:	06000000 	streq	r0, [r0], -r0
    2a6c:	002a5c04 	eoreq	r5, sl, r4, lsl #24
    2a70:	01ce2000 	biceq	r2, lr, r0
    2a74:	2a8a0000 	bcs	fe282a7c <axp2585_set_usb_vhold+0xfe281838>
    2a78:	500f0000 	andpl	r0, pc, r0
    2a7c:	0f00002a 	svceq	0x0000002a
    2a80:	00002a1f 	andeq	r2, r0, pc, lsl sl
    2a84:	0001440f 	andeq	r4, r1, pc, lsl #8
    2a88:	04060000 	streq	r0, [r6], #-0
    2a8c:	00002a71 	andeq	r2, r0, r1, ror sl
    2a90:	0001ce20 	andeq	ip, r1, r0, lsr #28
    2a94:	002aae00 	eoreq	sl, sl, r0, lsl #28
    2a98:	2a500f00 	bcs	14066a0 <axp2585_set_usb_vhold+0x140545c>
    2a9c:	1f0f0000 	svcne	0x000f0000
    2aa0:	0f00002a 	svceq	0x0000002a
    2aa4:	00000045 	andeq	r0, r0, r5, asr #32
    2aa8:	0001c30f 	andeq	ip, r1, pc, lsl #6
    2aac:	04060000 	streq	r0, [r6], #-0
    2ab0:	00002a90 	muleq	r0, r0, sl
    2ab4:	00014420 	andeq	r4, r1, r0, lsr #8
    2ab8:	002ad200 	eoreq	sp, sl, r0, lsl #4
    2abc:	15350f00 	ldrne	r0, [r5, #-3840]!	; 0xfffff100
    2ac0:	390f0000 	stmdbcc	pc, {}	; <UNPREDICTABLE>
    2ac4:	0f00002a 	svceq	0x0000002a
    2ac8:	00002ad2 	ldrdeq	r2, [r0], -r2	; <UNPREDICTABLE>
    2acc:	002ad80f 	eoreq	sp, sl, pc, lsl #16
    2ad0:	04060000 	streq	r0, [r6], #-0
    2ad4:	00000cfd 	strdeq	r0, [r0], -sp
    2ad8:	0d1d0406 	cfldrseq	mvf0, [sp, #-24]	; 0xffffffe8
    2adc:	04060000 	streq	r0, [r6], #-0
    2ae0:	00002ab4 			; <UNDEFINED> instruction: 0x00002ab4
    2ae4:	0001ce20 	andeq	ip, r1, r0, lsr #28
    2ae8:	002afd00 	eoreq	pc, sl, r0, lsl #26
    2aec:	15350f00 	ldrne	r0, [r5, #-3840]!	; 0xfffff100
    2af0:	d50f0000 	strle	r0, [pc, #-0]	; 2af8 <.debug_info+0x2af8>
    2af4:	0f000023 	svceq	0x00000023
    2af8:	00000144 	andeq	r0, r0, r4, asr #2
    2afc:	e4040600 	str	r0, [r4], #-1536	; 0xfffffa00
    2b00:	2000002a 	andcs	r0, r0, sl, lsr #32
    2b04:	000001ce 	andeq	r0, r0, lr, asr #3
    2b08:	00002b21 	andeq	r2, r0, r1, lsr #22
    2b0c:	0015350f 	andseq	r3, r5, pc, lsl #10
    2b10:	23d50f00 	bicscs	r0, r5, #0, 30
    2b14:	450f0000 	strmi	r0, [pc, #-0]	; 2b1c <.debug_info+0x2b1c>
    2b18:	0f000000 	svceq	0x00000000
    2b1c:	000001c3 	andeq	r0, r0, r3, asr #3
    2b20:	03040600 	movweq	r0, #17920	; 0x4600
    2b24:	2600002b 	strcs	r0, [r0], -fp, lsr #32
    2b28:	00003781 	andeq	r3, r0, r1, lsl #15
    2b2c:	02ac0208 	adceq	r0, ip, #8, 4	; 0x80000000
    2b30:	00002b4f 	andeq	r2, r0, pc, asr #22
    2b34:	00470727 	subeq	r0, r7, r7, lsr #14
    2b38:	02b10200 	adcseq	r0, r1, #0, 4
    2b3c:	00000057 	andeq	r0, r0, r7, asr r0
    2b40:	063c2700 	ldrteq	r2, [ip], -r0, lsl #14
    2b44:	b2020000 	andlt	r0, r2, #0
    2b48:	00002702 	andeq	r2, r0, r2, lsl #14
    2b4c:	13000400 	movwne	r0, #1024	; 0x400
    2b50:	00002ed7 	ldrdeq	r2, [r0], -r7
    2b54:	2b4f0406 	blcs	13c3b74 <axp2585_set_usb_vhold+0x13c2930>
    2b58:	04060000 	streq	r0, [r6], #-0
    2b5c:	00001b8a 	andeq	r1, r0, sl, lsl #23
    2b60:	136c0406 	cmnne	ip, #100663296	; 0x6000000
    2b64:	04060000 	streq	r0, [r6], #-0
    2b68:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    2b6c:	2b270406 	blcs	9c3b8c <axp2585_set_usb_vhold+0x9c2948>
    2b70:	92130000 	andsls	r0, r3, #0
    2b74:	0600001f 			; <UNDEFINED> instruction: 0x0600001f
    2b78:	002b7204 	eoreq	r7, fp, r4, lsl #4
    2b7c:	6d632f00 	stclvs	15, cr2, [r3, #-0]
    2b80:	04060061 	streq	r0, [r6], #-97	; 0xffffff9f
    2b84:	00002b7d 	andeq	r2, r0, sp, ror fp
    2b88:	0033ae13 	eorseq	sl, r3, r3, lsl lr
    2b8c:	88040600 	stmdahi	r4, {r9, sl}
    2b90:	1300002b 	movwne	r0, #43	; 0x2b
    2b94:	000002e3 	andeq	r0, r0, r3, ror #5
    2b98:	2b930406 	blcs	fe4c3bb8 <axp2585_set_usb_vhold+0xfe4c2974>
    2b9c:	72130000 	andsvc	r0, r3, #0
    2ba0:	0600001d 			; <UNDEFINED> instruction: 0x0600001d
    2ba4:	002b9e04 	eoreq	r9, fp, r4, lsl #28
    2ba8:	12040600 	andne	r0, r4, #0, 12
    2bac:	06000005 	streq	r0, [r0], -r5
    2bb0:	00014404 	andeq	r4, r1, r4, lsl #8
    2bb4:	004b0400 	subeq	r0, fp, r0, lsl #8
    2bb8:	2bc50000 	blcs	ff142bc0 <axp2585_set_usb_vhold+0xff14197c>
    2bbc:	3e050000 	cdpcc	0, 0, cr0, cr5, cr0, {0}
    2bc0:	1f000000 	svcne	0x00000000
    2bc4:	00900400 	addseq	r0, r0, r0, lsl #8
    2bc8:	2bd50000 	blcs	ff542bd0 <axp2585_set_usb_vhold+0xff54198c>
    2bcc:	3e050000 	cdpcc	0, 0, cr0, cr5, cr0, {0}
    2bd0:	07000000 	streq	r0, [r0, -r0]
    2bd4:	1df70800 	ldclne	8, cr0, [r7]
    2bd8:	082c0000 	stmdaeq	ip!, {}	; <UNPREDICTABLE>
    2bdc:	00000097 	muleq	r0, r7, r0
    2be0:	003d8a08 	eorseq	r8, sp, r8, lsl #20
    2be4:	7e092c00 	cdpvc	12, 0, cr2, cr9, cr0, {0}
    2be8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    2bec:	000018fa 	strdeq	r1, [r0], -sl
    2bf0:	00970c2c 	addseq	r0, r7, ip, lsr #24
    2bf4:	250b0000 	strcs	r0, [fp, #-0]
    2bf8:	1000003e 	andne	r0, r0, lr, lsr r0
    2bfc:	2c4bb62c 	mcrrcs	6, 2, fp, fp, cr12
    2c00:	db0c0000 	blle	300008 <axp2585_set_usb_vhold+0x2fedc4>
    2c04:	2c000002 	stccs	0, cr0, [r0], {2}
    2c08:	002bebb7 	strhteq	lr, [fp], -r7
    2c0c:	d80c0000 	stmdale	ip, {}	; <UNPREDICTABLE>
    2c10:	2c00000f 	stccs	0, cr0, [r0], {15}
    2c14:	002bd5b8 	strhteq	sp, [fp], -r8
    2c18:	750c0400 	strvc	r0, [ip, #-1024]	; 0xfffffc00
    2c1c:	2c000008 	stccs	0, cr0, [r0], {8}
    2c20:	002bebb9 	strhteq	lr, [fp], -r9
    2c24:	ca0c0800 	bgt	302008 <axp2585_set_usb_vhold+0x300dc4>
    2c28:	2c000026 	stccs	0, cr0, [r0], {38}	; 0x26
    2c2c:	000070ba 	strheq	r7, [r0], -sl
    2c30:	7f0c0c00 	svcvc	0x000c0c00
    2c34:	2c000025 	stccs	0, cr0, [r0], {37}	; 0x25
    2c38:	000070bb 	strheq	r7, [r0], -fp
    2c3c:	bb0c0d00 	bllt	303408 <axp2585_set_usb_vhold+0x3021c4>
    2c40:	2c000038 	stccs	0, cr0, [r0], {56}	; 0x38
    2c44:	002be0bc 	strhteq	lr, [fp], -ip
    2c48:	08000e00 	stmdaeq	r0, {r9, sl, fp}
    2c4c:	000013c8 	andeq	r1, r0, r8, asr #7
    2c50:	2bf6bd2c 	blcs	ffdb2108 <axp2585_set_usb_vhold+0xffdb0ec4>
    2c54:	a60b0000 	strge	r0, [fp], -r0
    2c58:	10000005 	andne	r0, r0, r5
    2c5c:	2c93302d 	ldccs	0, cr3, [r3], {45}	; 0x2d
    2c60:	420c0000 	andmi	r0, ip, #0
    2c64:	2d00003f 	stccs	0, cr0, [r0, #-252]	; 0xffffff04
    2c68:	00005732 	andeq	r5, r0, r2, lsr r7
    2c6c:	73120000 	tstvc	r2, #0
    2c70:	2d007465 	cfstrscs	mvf7, [r0, #-404]	; 0xfffffe6c
    2c74:	002d0d34 	eoreq	r0, sp, r4, lsr sp
    2c78:	67120400 	ldrvs	r0, [r2, -r0, lsl #8]
    2c7c:	2d007465 	cfstrscs	mvf7, [r0, #-404]	; 0xfffffe6c
    2c80:	002d2736 	eoreq	r2, sp, r6, lsr r7
    2c84:	8f0c0800 	svchi	0x000c0800
    2c88:	2d000028 	stccs	0, cr0, [r0, #-160]	; 0xffffff60
    2c8c:	000ce238 	andeq	lr, ip, r8, lsr r2
    2c90:	20000c00 	andcs	r0, r0, r0, lsl #24
    2c94:	00000090 	muleq	r0, r0, r0
    2c98:	00002ca7 	andeq	r2, r0, r7, lsr #25
    2c9c:	0000450f 	andeq	r4, r0, pc, lsl #10
    2ca0:	2ca70f00 	stccs	15, cr0, [r7]
    2ca4:	06000000 	streq	r0, [r0], -r0
    2ca8:	002d0804 	eoreq	r0, sp, r4, lsl #16
    2cac:	45530b00 	ldrbmi	r0, [r3, #-2816]	; 0xfffff500
    2cb0:	2d140000 	ldccs	0, cr0, [r4, #-0]
    2cb4:	002d0844 	eoreq	r0, sp, r4, asr #16
    2cb8:	03030c00 	movweq	r0, #15360	; 0x3c00
    2cbc:	452d0000 	strmi	r0, [sp, #-0]!
    2cc0:	00000045 	andeq	r0, r0, r5, asr #32
    2cc4:	6f6d1200 	svcvs	0x006d1200
    2cc8:	462d0064 	strtmi	r0, [sp], -r4, rrx
    2ccc:	0000287c 	andeq	r2, r0, ip, ror r8
    2cd0:	706f1204 	rsbvc	r1, pc, r4, lsl #4
    2cd4:	472d0073 			; <UNDEFINED> instruction: 0x472d0073
    2cd8:	00002ddb 	ldrdeq	r2, [r0], -fp
    2cdc:	35490c08 	strbcc	r0, [r9, #-3080]	; 0xfffff3f8
    2ce0:	482d0000 	stmdami	sp!, {}	; <UNPREDICTABLE>
    2ce4:	00002de6 	andeq	r2, r0, r6, ror #27
    2ce8:	11020c0c 	tstne	r2, ip, lsl #24
    2cec:	492d0000 	pushmi	{}	; <UNPREDICTABLE>
    2cf0:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    2cf4:	3f420c0e 	svccc	0x00420c0e
    2cf8:	4a2d0000 	bmi	b42d00 <axp2585_set_usb_vhold+0xb41abc>
    2cfc:	000000ba 	strheq	r0, [r0], -sl
    2d00:	2d2d180f 	stccs	8, cr1, [sp, #-60]!	; 0xffffffc4
    2d04:	00100000 	andseq	r0, r0, r0
    2d08:	002cad07 	eoreq	sl, ip, r7, lsl #26
    2d0c:	93040600 	movwls	r0, #17920	; 0x4600
    2d10:	2000002c 	andcs	r0, r0, ip, lsr #32
    2d14:	00000090 	muleq	r0, r0, r0
    2d18:	00002d27 	andeq	r2, r0, r7, lsr #26
    2d1c:	0001440f 	andeq	r4, r1, pc, lsl #8
    2d20:	2ca70f00 	stccs	15, cr0, [r7]
    2d24:	06000000 	streq	r0, [r0], -r0
    2d28:	002d1304 	eoreq	r1, sp, r4, lsl #6
    2d2c:	2d041600 	stccs	6, cr1, [r4, #-0]
    2d30:	002d574b 	eoreq	r5, sp, fp, asr #14
    2d34:	72611e00 	rsbvc	r1, r1, #0, 28
    2d38:	4c2d0067 	stcmi	0, cr0, [sp], #-412	; 0xfffffe64
    2d3c:	00000025 	andeq	r0, r0, r5, lsr #32
    2d40:	7274731e 	rsbsvc	r7, r4, #2013265920	; 0x78000000
    2d44:	7c4d2d00 	mcrrvc	13, 0, r2, sp, cr0
    2d48:	1e00002d 	cdpne	0, 0, cr0, cr0, cr13, {1}
    2d4c:	00727261 	rsbseq	r7, r2, r1, ror #4
    2d50:	2dd04e2d 	ldclcs	14, cr4, [r0, #180]	; 0xb4
    2d54:	0b000000 	bleq	2d5c <.debug_info+0x2d5c>
    2d58:	000010ad 	andeq	r1, r0, sp, lsr #1
    2d5c:	7c552d08 	mrrcvc	13, 0, r2, r5, cr8
    2d60:	0c00002d 	stceq	0, cr0, [r0], {45}	; 0x2d
    2d64:	000024b5 			; <UNDEFINED> instruction: 0x000024b5
    2d68:	0057562d 	subseq	r5, r7, sp, lsr #12
    2d6c:	0c000000 	stceq	0, cr0, [r0], {-0}
    2d70:	00001df0 	strdeq	r1, [r0], -r0
    2d74:	0144572d 	cmpeq	r4, sp, lsr #14
    2d78:	00040000 	andeq	r0, r4, r0
    2d7c:	2d820406 	cfstrscs	mvf0, [r2, #24]
    2d80:	57070000 	strpl	r0, [r7, -r0]
    2d84:	0b00002d 	bleq	2e40 <.debug_info+0x2e40>
    2d88:	00003acb 	andeq	r3, r0, fp, asr #21
    2d8c:	d05b2d14 	subsle	r2, fp, r4, lsl sp
    2d90:	1200002d 	andne	r0, r0, #45	; 0x2d
    2d94:	0078616d 	rsbseq	r6, r8, sp, ror #2
    2d98:	00575d2d 	subseq	r5, r7, sp, lsr #26
    2d9c:	0c000000 	stceq	0, cr0, [r0], {-0}
    2da0:	00004108 	andeq	r4, r0, r8, lsl #2
    2da4:	00575e2d 	subseq	r5, r7, sp, lsr #28
    2da8:	12040000 	andne	r0, r4, #0
    2dac:	006d756e 	rsbeq	r7, sp, lr, ror #10
    2db0:	22125f2d 	andscs	r5, r2, #45, 30	; 0xb4
    2db4:	12080000 	andne	r0, r8, #0
    2db8:	0073706f 	rsbseq	r7, r3, pc, rrx
    2dbc:	2ddb602d 	ldclcs	0, cr6, [fp, #180]	; 0xb4
    2dc0:	0c0c0000 	stceq	0, cr0, [ip], {-0}
    2dc4:	0000280e 	andeq	r2, r0, lr, lsl #16
    2dc8:	0025612d 	eoreq	r6, r5, sp, lsr #2
    2dcc:	00100000 	andseq	r0, r0, r0
    2dd0:	2dd60406 	cfldrdcs	mvd0, [r6, #24]
    2dd4:	87070000 	strhi	r0, [r7, -r0]
    2dd8:	0600002d 	streq	r0, [r0], -sp, lsr #32
    2ddc:	002de104 	eoreq	lr, sp, r4, lsl #2
    2de0:	2c560700 	mrrccs	7, 0, r0, r6, cr0
    2de4:	c4070000 	strgt	r0, [r7], #-0
    2de8:	0b000000 	bleq	2df0 <.debug_info+0x2df0>
    2dec:	00002e80 	andeq	r2, r0, r0, lsl #29
    2df0:	1c292e0c 	stcne	14, cr2, [r9], #-48	; 0xffffffd0
    2df4:	0c00002e 	stceq	0, cr0, [r0], {46}	; 0x2e
    2df8:	000036be 			; <UNDEFINED> instruction: 0x000036be
    2dfc:	2e222a2e 	vmulcs.f32	s4, s4, s29
    2e00:	0c000000 	stceq	0, cr0, [r0], {-0}
    2e04:	00002ddd 	ldrdeq	r2, [r0], -sp
    2e08:	2e222b2e 	vmulcs.f64	d2, d2, d30
    2e0c:	12040000 	andne	r0, r4, #0
    2e10:	0079656b 	rsbseq	r6, r9, fp, ror #10
    2e14:	2e222c2e 	cdpcs	12, 2, cr2, cr2, cr14, {1}
    2e18:	00080000 	andeq	r0, r8, r0
    2e1c:	2deb0406 	cfstrdcs	mvd0, [fp, #24]!
    2e20:	ce080000 	cdpgt	0, 0, cr0, cr8, cr0, {0}
    2e24:	2e000002 	cdpcs	0, 0, cr0, cr0, cr2, {0}
    2e28:	0000da27 	andeq	sp, r0, r7, lsr #20
    2e2c:	190b0b00 	stmdbne	fp, {r8, r9, fp}
    2e30:	2f180000 	svccs	0x00180000
    2e34:	002e4626 	eoreq	r4, lr, r6, lsr #12
    2e38:	2fc80c00 	svccs	0x00c80c00
    2e3c:	272f0000 	strcs	r0, [pc, -r0]!
    2e40:	00002e46 	andeq	r2, r0, r6, asr #28
    2e44:	a6040000 	strge	r0, [r4], -r0
    2e48:	56000006 	strpl	r0, [r0], -r6
    2e4c:	0500002e 	streq	r0, [r0, #-46]	; 0xffffffd2
    2e50:	0000003e 	andeq	r0, r0, lr, lsr r0
    2e54:	042e0001 	strteq	r0, [lr], #-1
    2e58:	00000057 	andeq	r0, r0, r7, asr r0
    2e5c:	2e930930 	mrccs	9, 4, r0, cr3, cr0, {1}
    2e60:	28220000 	stmdacs	r2!, {}	; <UNPREDICTABLE>
    2e64:	0000001f 	andeq	r0, r0, pc, lsl r0
    2e68:	0035cf22 	eorseq	ip, r5, r2, lsr #30
    2e6c:	a7220100 	strge	r0, [r2, -r0, lsl #2]!
    2e70:	02000035 	andeq	r0, r0, #53	; 0x35
    2e74:	0001da22 	andeq	sp, r1, r2, lsr #20
    2e78:	d4220300 	strtle	r0, [r2], #-768	; 0xfffffd00
    2e7c:	04000016 	streq	r0, [r0], #-22	; 0xffffffea
    2e80:	00380a22 	eorseq	r0, r8, r2, lsr #20
    2e84:	f9220500 			; <UNDEFINED> instruction: 0xf9220500
    2e88:	06000045 	streq	r0, [r0], -r5, asr #32
    2e8c:	001c5f22 	andseq	r5, ip, r2, lsr #30
    2e90:	0b000700 	bleq	4a98 <.debug_info+0x4a98>
    2e94:	000017ed 	andeq	r1, r0, sp, ror #15
    2e98:	ac15301c 	ldcge	0, cr3, [r5], {28}
    2e9c:	0c00002e 	stceq	0, cr0, [r0], {46}	; 0x2e
    2ea0:	00003293 	muleq	r0, r3, r2
    2ea4:	2eac1730 	mcrcs	7, 5, r1, cr12, cr0, {1}
    2ea8:	00000000 	andeq	r0, r0, r0
    2eac:	002ebc04 	eoreq	fp, lr, r4, lsl #24
    2eb0:	002ebc00 	eoreq	fp, lr, r0, lsl #24
    2eb4:	003e0500 	eorseq	r0, lr, r0, lsl #10
    2eb8:	00060000 	andeq	r0, r6, r0
    2ebc:	2ec20406 	cdpcs	4, 12, cr0, cr2, cr6, {0}
    2ec0:	fd130000 	ldc2	0, cr0, [r3, #-0]
    2ec4:	0400001b 	streq	r0, [r0], #-27	; 0xffffffe5
    2ec8:	0000004b 	andeq	r0, r0, fp, asr #32
    2ecc:	00002ed7 	ldrdeq	r2, [r0], -r7
    2ed0:	00003e05 	andeq	r3, r0, r5, lsl #28
    2ed4:	0b003b00 	bleq	11adc <axp2585_set_usb_vhold+0x10898>
    2ed8:	000006f6 	strdeq	r0, [r0], -r6
    2edc:	1f292a34 	svcne	0x00292a34
    2ee0:	0c00002f 	stceq	0, cr0, [r0], {47}	; 0x2f
    2ee4:	000023b0 			; <UNDEFINED> instruction: 0x000023b0
    2ee8:	0db52a2a 	ldceq	10, cr2, [r5, #168]!	; 0xa8
    2eec:	12000000 	andne	r0, r0, #0
    2ef0:	00646f6d 	rsbeq	r6, r4, sp, ror #30
    2ef4:	287c2b2a 	ldmdacs	ip!, {r1, r3, r5, r8, r9, fp, sp}^
    2ef8:	0c240000 	stceq	0, cr0, [r4], #-0
    2efc:	0000422e 	andeq	r4, r0, lr, lsr #4
    2f00:	0daf2c2a 	stceq	12, cr2, [pc, #168]!	; 2fb0 <.debug_info+0x2fb0>
    2f04:	12280000 	eorne	r0, r8, #0
    2f08:	2a00706d 	bcs	1f0c4 <axp2585_set_usb_vhold+0x1de80>
    2f0c:	002f242d 	eoreq	r2, pc, sp, lsr #8
    2f10:	980c2c00 	stmdals	ip, {sl, fp, sp}
    2f14:	2a00001d 	bcs	2f90 <.debug_info+0x2f90>
    2f18:	002ba92e 	eoreq	sl, fp, lr, lsr #18
    2f1c:	13003000 	movwne	r3, #0
    2f20:	0000087d 	andeq	r0, r0, sp, ror r8
    2f24:	2f1f0406 	svccs	0x001f0406
    2f28:	c30b0000 	movwgt	r0, #45056	; 0xb000
    2f2c:	1c000016 	stcne	0, cr0, [r0], {22}
    2f30:	2f7f312a 	svccs	0x007f312a
    2f34:	b30c0000 	movwlt	r0, #49152	; 0xc000
    2f38:	2a00000b 	bcs	2f6c <.debug_info+0x2f6c>
    2f3c:	000d2832 	andeq	r2, sp, r2, lsr r8
    2f40:	e20c0000 	and	r0, ip, #0
    2f44:	2a000024 	bcs	2fdc <.debug_info+0x2fdc>
    2f48:	002fa433 	eoreq	sl, pc, r3, lsr r4	; <UNPREDICTABLE>
    2f4c:	a90c0800 	stmdbge	ip, {fp}
    2f50:	2a00001b 	bcs	2fc4 <.debug_info+0x2fc4>
    2f54:	002fc835 	eoreq	ip, pc, r5, lsr r8	; <UNPREDICTABLE>
    2f58:	530c0c00 	movwpl	r0, #52224	; 0xcc00
    2f5c:	2a000019 	bcs	2fc8 <.debug_info+0x2fc8>
    2f60:	002fde37 	eoreq	sp, pc, r7, lsr lr	; <UNPREDICTABLE>
    2f64:	890c1000 	stmdbhi	ip, {ip}
    2f68:	2a00002b 	bcs	301c <.debug_info+0x301c>
    2f6c:	002ff338 	eoreq	pc, pc, r8, lsr r3	; <UNPREDICTABLE>
    2f70:	8f0c1400 	svchi	0x000c1400
    2f74:	2a000028 	bcs	301c <.debug_info+0x301c>
    2f78:	00300439 	eorseq	r0, r0, r9, lsr r4
    2f7c:	20001800 	andcs	r1, r0, r0, lsl #16
    2f80:	000001ce 	andeq	r0, r0, lr, asr #3
    2f84:	00002f98 	muleq	r0, r8, pc	; <UNPREDICTABLE>
    2f88:	002f980f 	eoreq	r9, pc, pc, lsl #16
    2f8c:	2f9e0f00 	svccs	0x009e0f00
    2f90:	440f0000 	strmi	r0, [pc], #-0	; 2f98 <.debug_info+0x2f98>
    2f94:	00000001 	andeq	r0, r0, r1
    2f98:	2f2a0406 	svccs	0x002a0406
    2f9c:	04060000 	streq	r0, [r6], #-0
    2fa0:	00002ed7 	ldrdeq	r2, [r0], -r7
    2fa4:	2f7f0406 	svccs	0x007f0406
    2fa8:	ce200000 	cdpgt	0, 2, cr0, cr0, cr0, {0}
    2fac:	c8000001 	stmdagt	r0, {r0}
    2fb0:	0f00002f 	svceq	0x0000002f
    2fb4:	00002f98 	muleq	r0, r8, pc	; <UNPREDICTABLE>
    2fb8:	002f9e0f 	eoreq	r9, pc, pc, lsl #28
    2fbc:	00450f00 	subeq	r0, r5, r0, lsl #30
    2fc0:	c30f0000 	movwgt	r0, #61440	; 0xf000
    2fc4:	00000001 	andeq	r0, r0, r1
    2fc8:	2faa0406 	svccs	0x00aa0406
    2fcc:	de0e0000 	cdple	0, 0, cr0, cr14, cr0, {0}
    2fd0:	0f00002f 	svceq	0x0000002f
    2fd4:	0000287c 	andeq	r2, r0, ip, ror r8
    2fd8:	0000450f 	andeq	r4, r0, pc, lsl #10
    2fdc:	04060000 	streq	r0, [r6], #-0
    2fe0:	00002fce 	andeq	r2, r0, lr, asr #31
    2fe4:	00009020 	andeq	r9, r0, r0, lsr #32
    2fe8:	002ff300 	eoreq	pc, pc, r0, lsl #6
    2fec:	287c0f00 	ldmdacs	ip!, {r8, r9, sl, fp}^
    2ff0:	06000000 	streq	r0, [r0], -r0
    2ff4:	002fe404 	eoreq	lr, pc, r4, lsl #8
    2ff8:	30040e00 	andcc	r0, r4, r0, lsl #28
    2ffc:	7c0f0000 	stcvc	0, cr0, [pc], {-0}
    3000:	00000028 	andeq	r0, r0, r8, lsr #32
    3004:	2ff90406 	svccs	0x00f90406
    3008:	5d250000 	stcpl	0, cr0, [r5, #-0]
    300c:	04000036 	streq	r0, [r0], #-54	; 0xffffffca
    3010:	00000057 	andeq	r0, r0, r7, asr r0
    3014:	3401232a 	strcc	r2, [r1], #-810	; 0xfffffcd6
    3018:	22000030 	andcs	r0, r0, #48	; 0x30
    301c:	0000136b 	andeq	r1, r0, fp, ror #6
    3020:	09342200 	ldmdbeq	r4!, {r9, sp}
    3024:	22010000 	andcs	r0, r1, #0
    3028:	00001e76 	andeq	r1, r0, r6, ror lr
    302c:	366a2202 	strbtcc	r2, [sl], -r2, lsl #4
    3030:	00030000 	andeq	r0, r3, r0
    3034:	00326326 	eorseq	r6, r2, r6, lsr #6
    3038:	2c2a1c00 	stccs	12, cr1, [sl], #-0
    303c:	00305c01 	eorseq	r5, r0, r1, lsl #24
    3040:	6f6d2900 	svcvs	0x006d2900
    3044:	2d2a0064 	stccs	0, cr0, [sl, #-400]!	; 0xfffffe70
    3048:	00287c01 	eoreq	r7, r8, r1, lsl #24
    304c:	c8270000 	stmdagt	r7!, {}	; <UNPREDICTABLE>
    3050:	2a00002f 	bcs	3114 <.debug_info+0x3114>
    3054:	2e2d012e 	sufcsep	f0, f5, #0.5
    3058:	00040000 	andeq	r0, r4, r0
    305c:	00020b26 	andeq	r0, r2, r6, lsr #22
    3060:	312a0c00 	teqcc	sl, r0, lsl #24
    3064:	00309101 	eorseq	r9, r0, r1, lsl #2
    3068:	25652700 	strbcs	r2, [r5, #-1792]!	; 0xfffff900
    306c:	322a0000 	eorcc	r0, sl, #0
    3070:	00309101 	eorseq	r9, r0, r1, lsl #2
    3074:	4c270000 	stcmi	0, cr0, [r7], #-0
    3078:	2a000033 	bcs	314c <.debug_info+0x314c>
    307c:	00570133 	subseq	r0, r7, r3, lsr r1
    3080:	27040000 	strcs	r0, [r4, -r0]
    3084:	0000160a 	andeq	r1, r0, sl, lsl #12
    3088:	4401342a 	strmi	r3, [r1], #-1066	; 0xfffffbd6
    308c:	08000001 	stmdaeq	r0, {r0}
    3090:	4b040600 	blmi	104898 <axp2585_set_usb_vhold+0x103654>
    3094:	0600002c 	streq	r0, [r0], -ip, lsr #32
    3098:	00309d04 	eorseq	r9, r0, r4, lsl #26
    309c:	014a0700 	cmpeq	sl, r0, lsl #14
    30a0:	04060000 	streq	r0, [r6], #-0
    30a4:	000030a8 	andeq	r3, r0, r8, lsr #1
    30a8:	00002707 	andeq	r2, r0, r7, lsl #14
    30ac:	ad040600 	stcge	6, cr0, [r4, #-0]
    30b0:	1300002c 	movwne	r0, #44	; 0x2c
    30b4:	000007b4 			; <UNDEFINED> instruction: 0x000007b4
    30b8:	30b30406 	adcscc	r0, r3, r6, lsl #8
    30bc:	04060000 	streq	r0, [r6], #-0
    30c0:	000002e5 	andeq	r0, r0, r5, ror #5
    30c4:	305c0406 	subscc	r0, ip, r6, lsl #8
    30c8:	d0130000 	andsle	r0, r3, r0
    30cc:	06000024 	streq	r0, [r0], -r4, lsr #32
    30d0:	0030ca04 	eorseq	ip, r0, r4, lsl #20
    30d4:	2cfa1300 	ldclcs	3, cr1, [sl]
    30d8:	04060000 	streq	r0, [r6], #-0
    30dc:	000030d5 	ldrdeq	r3, [r0], -r5
    30e0:	00433608 	subeq	r3, r3, r8, lsl #12
    30e4:	270d2b00 	strcs	r2, [sp, -r0, lsl #22]
    30e8:	04000000 	streq	r0, [r0], #-0
    30ec:	00000065 	andeq	r0, r0, r5, rrx
    30f0:	000030fb 	strdeq	r3, [r0], -fp
    30f4:	00003e05 	andeq	r3, r0, r5, lsl #28
    30f8:	04000800 	streq	r0, [r0], #-2048	; 0xfffff800
    30fc:	0000004b 	andeq	r0, r0, fp, asr #32
    3100:	0000310b 	andeq	r3, r0, fp, lsl #2
    3104:	00003e05 	andeq	r3, r0, r5, lsl #28
    3108:	04007f00 	streq	r7, [r0], #-3840	; 0xfffff100
    310c:	0000004b 	andeq	r0, r0, fp, asr #32
    3110:	0000311b 	andeq	r3, r0, fp, lsl r1
    3114:	00003e05 	andeq	r3, r0, r5, lsl #28
    3118:	26001300 	strcs	r1, [r0], -r0, lsl #6
    311c:	00001baf 	andeq	r1, r0, pc, lsr #23
    3120:	01fc2b18 	mvnseq	r2, r8, lsl fp
    3124:	00003143 	andeq	r3, r0, r3, asr #2
    3128:	00030327 	andeq	r0, r3, r7, lsr #6
    312c:	01fd2b00 	mvnseq	r2, r0, lsl #22
    3130:	0000310b 	andeq	r3, r0, fp, lsl #2
    3134:	40932700 	addsmi	r2, r3, r0, lsl #14
    3138:	fe2b0000 	cdp2	0, 2, cr0, cr11, cr0, {0}
    313c:	0030e001 	eorseq	lr, r0, r1
    3140:	1a001400 	bne	8148 <axp2585_set_usb_vhold+0x6f04>
    3144:	000025da 	ldrdeq	r2, [r0], -sl
    3148:	16310190 			; <UNDEFINED> instruction: 0x16310190
    314c:	000031ce 	andeq	r3, r0, lr, asr #3
    3150:	0003030c 	andeq	r0, r3, ip, lsl #6
    3154:	45173100 	ldrmi	r3, [r7, #-256]	; 0xffffff00
    3158:	00000000 	andeq	r0, r0, r0
    315c:	00646912 	rsbeq	r6, r4, r2, lsl r9
    3160:	00901831 	addseq	r1, r0, r1, lsr r8
    3164:	0c040000 	stceq	0, cr0, [r4], {-0}
    3168:	00002a47 	andeq	r2, r0, r7, asr #20
    316c:	01901931 	orrseq	r1, r0, r1, lsr r9
    3170:	12080000 	andne	r0, r8, #0
    3174:	00766564 	rsbseq	r6, r6, r4, ror #10
    3178:	153b1a31 	ldrne	r1, [fp, #-2609]!	; 0xfffff5cf
    317c:	1b100000 	blne	403184 <axp2585_set_usb_vhold+0x401f40>
    3180:	0000263f 	andeq	r2, r0, pc, lsr r6
    3184:	00da1b31 	sbcseq	r1, sl, r1, lsr fp
    3188:	01780000 	cmneq	r8, r0
    318c:	00423a1b 	subeq	r3, r2, fp, lsl sl
    3190:	b91c3100 	ldmdblt	ip, {r8, ip, sp}
    3194:	7c000003 	stcvc	0, cr0, [r0], {3}
    3198:	439b1b01 	orrsmi	r1, fp, #1024	; 0x400
    319c:	1e310000 	cdpne	0, 3, cr0, cr1, cr0, {0}
    31a0:	000031ce 	andeq	r3, r0, lr, asr #3
    31a4:	6b1b0180 	blvs	6c0608 <axp2585_set_usb_vhold+0x6bf3c4>
    31a8:	3100001c 	tstcc	r0, ip, lsl r0
    31ac:	0001441f 	andeq	r4, r1, pc, lsl r4
    31b0:	1b018400 	blne	641b8 <axp2585_set_usb_vhold+0x62f74>
    31b4:	00001714 	andeq	r1, r0, r4, lsl r7
    31b8:	31de2231 	bicscc	r2, lr, r1, lsr r2
    31bc:	01880000 	orreq	r0, r8, r0
    31c0:	0031be1b 	eorseq	fp, r1, fp, lsl lr
    31c4:	7d253100 	stfvcs	f3, [r5, #-0]
    31c8:	8c000022 	stchi	0, cr0, [r0], {34}	; 0x22
    31cc:	04060001 	streq	r0, [r6], #-1
    31d0:	000031d4 	ldrdeq	r3, [r0], -r4
    31d4:	00311b07 	eorseq	r1, r1, r7, lsl #22
    31d8:	17141300 	ldrne	r1, [r4, -r0, lsl #6]
    31dc:	04060000 	streq	r0, [r6], #-0
    31e0:	000031d9 	ldrdeq	r3, [r0], -r9
    31e4:	00148f0b 	andseq	r8, r4, fp, lsl #30
    31e8:	ae315c00 	cdpge	12, 3, cr5, cr1, cr0, {0}
    31ec:	00003251 	andeq	r3, r0, r1, asr r2
    31f0:	0018f40c 	andseq	pc, r8, ip, lsl #8
    31f4:	66af3100 	strtvs	r3, [pc], r0, lsl #2
    31f8:	00000032 	andeq	r0, r0, r2, lsr r0
    31fc:	0027cc0c 	eoreq	ip, r7, ip, lsl #24
    3200:	66b03100 	ldrtvs	r3, [r0], r0, lsl #2
    3204:	04000032 	streq	r0, [r0], #-50	; 0xffffffce
    3208:	002fa60c 	eoreq	sl, pc, ip, lsl #12
    320c:	77b13100 	ldrvc	r3, [r1, r0, lsl #2]!
    3210:	08000032 	stmdaeq	r0, {r1, r4, r5}
    3214:	0004da0c 	andeq	sp, r4, ip, lsl #20
    3218:	91b23100 			; <UNDEFINED> instruction: 0x91b23100
    321c:	0c000032 	stceq	0, cr0, [r0], {50}	; 0x32
    3220:	0004410c 	andeq	r4, r4, ip, lsl #2
    3224:	66b33100 	ldrtvs	r3, [r3], r0, lsl #2
    3228:	10000032 	andne	r0, r0, r2, lsr r0
    322c:	0047840c 	subeq	r8, r7, ip, lsl #8
    3230:	06b43100 	ldrteq	r3, [r4], r0, lsl #2
    3234:	14000024 	strne	r0, [r0], #-36	; 0xffffffdc
    3238:	0047b80c 	subeq	fp, r7, ip, lsl #16
    323c:	ceb53100 	frdgts	f3, f5, f0
    3240:	54000031 	strpl	r0, [r0], #-49	; 0xffffffcf
    3244:	00354e0c 	eorseq	r4, r5, ip, lsl #28
    3248:	90b63100 	adcsls	r3, r6, r0, lsl #2
    324c:	58000001 	stmdapl	r0, {r0}
    3250:	00902000 	addseq	r2, r0, r0
    3254:	32600000 	rsbcc	r0, r0, #0
    3258:	600f0000 	andvs	r0, pc, r0
    325c:	00000032 	andeq	r0, r0, r2, lsr r0
    3260:	31430406 	cmpcc	r3, r6, lsl #8
    3264:	04060000 	streq	r0, [r6], #-0
    3268:	00003251 	andeq	r3, r0, r1, asr r2
    326c:	0032770e 	eorseq	r7, r2, lr, lsl #14
    3270:	32600f00 	rsbcc	r0, r0, #0, 30
    3274:	06000000 	streq	r0, [r0], -r0
    3278:	00326c04 	eorseq	r6, r2, r4, lsl #24
    327c:	00902000 	addseq	r2, r0, r0
    3280:	32910000 	addscc	r0, r1, #0
    3284:	600f0000 	andvs	r0, pc, r0
    3288:	0f000032 	svceq	0x00000032
    328c:	000013e2 	andeq	r1, r0, r2, ror #7
    3290:	7d040600 	stcvc	6, cr0, [r4, #-0]
    3294:	06000032 			; <UNDEFINED> instruction: 0x06000032
    3298:	00329d04 	eorseq	r9, r2, r4, lsl #26
    329c:	30cc1300 	sbccc	r1, ip, r0, lsl #6
    32a0:	0c210000 	stceq	0, cr0, [r1], #-0
    32a4:	0400003d 	streq	r0, [r0], #-61	; 0xffffffc3
    32a8:	00000057 	andeq	r0, r0, r7, asr r0
    32ac:	32c50a32 	sbccc	r0, r5, #204800	; 0x32000
    32b0:	62220000 	eorvs	r0, r2, #0
    32b4:	0000003b 	andeq	r0, r0, fp, lsr r0
    32b8:	0042b622 	subeq	fp, r2, r2, lsr #12
    32bc:	6b220100 	blvs	880408 <axp2585_set_usb_vhold+0x87f1c4>
    32c0:	02000023 	andeq	r0, r0, #35	; 0x23
    32c4:	2d340800 	ldccs	8, cr0, [r4, #-0]
    32c8:	10320000 	eorsne	r0, r2, r0
    32cc:	000032a2 	andeq	r3, r0, r2, lsr #5
    32d0:	00119621 	andseq	r9, r1, r1, lsr #12
    32d4:	00570400 	subseq	r0, r7, r0, lsl #8
    32d8:	97330000 	ldrls	r0, [r3, -r0]!
    32dc:	000032ff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
    32e0:	002d7e22 	eoreq	r7, sp, r2, lsr #28
    32e4:	68220000 	stmdavs	r2!, {}	; <UNPREDICTABLE>
    32e8:	0100002d 	tsteq	r0, sp, lsr #32
    32ec:	0044ea22 	subeq	lr, r4, r2, lsr #20
    32f0:	a9220200 	stmdbge	r2!, {r9}
    32f4:	03000041 	movweq	r0, #65	; 0x41
    32f8:	00031522 	andeq	r1, r3, r2, lsr #10
    32fc:	08000400 	stmdaeq	r0, {sl}
    3300:	00002485 	andeq	r2, r0, r5, lsl #9
    3304:	330a5c34 	movwcc	r5, #44084	; 0xac34
    3308:	04060000 	streq	r0, [r6], #-0
    330c:	00003310 	andeq	r3, r0, r0, lsl r3
    3310:	0032c520 	eorseq	ip, r2, r0, lsr #10
    3314:	00332400 	eorseq	r2, r3, r0, lsl #8
    3318:	00900f00 	addseq	r0, r0, r0, lsl #30
    331c:	250f0000 	strcs	r0, [pc, #-0]	; 3324 <.debug_info+0x3324>
    3320:	00000000 	andeq	r0, r0, r0
    3324:	00570430 	subseq	r0, r7, r0, lsr r4
    3328:	99340000 	ldmdbls	r4!, {}	; <UNPREDICTABLE>
    332c:	00337401 	eorseq	r7, r3, r1, lsl #8
    3330:	11c92200 	bicne	r2, r9, r0, lsl #4
    3334:	22000000 	andcs	r0, r0, #0
    3338:	00002466 	andeq	r2, r0, r6, ror #8
    333c:	253b2201 	ldrcs	r2, [fp, #-513]!	; 0xfffffdff
    3340:	22020000 	andcs	r0, r2, #0
    3344:	00003754 	andeq	r3, r0, r4, asr r7
    3348:	04752203 	ldrbteq	r2, [r5], #-515	; 0xfffffdfd
    334c:	22040000 	andcs	r0, r4, #0
    3350:	00000828 	andeq	r0, r0, r8, lsr #16
    3354:	166d2205 	strbtne	r2, [sp], -r5, lsl #4
    3358:	22060000 	andcs	r0, r6, #0
    335c:	00001fac 	andeq	r1, r0, ip, lsr #31
    3360:	33792207 	cmncc	r9, #1879048192	; 0x70000000
    3364:	22080000 	andcs	r0, r8, #0
    3368:	00000b2d 	andeq	r0, r0, sp, lsr #22
    336c:	36e82209 	strbtcc	r2, [r8], r9, lsl #4
    3370:	000a0000 	andeq	r0, sl, r0
    3374:	0044c821 	subeq	ip, r4, r1, lsr #16
    3378:	00570400 	subseq	r0, r7, r0, lsl #8
    337c:	1d350000 	ldcne	0, cr0, [r5, #-0]
    3380:	00003397 	muleq	r0, r7, r3
    3384:	002a8922 	eoreq	r8, sl, r2, lsr #18
    3388:	89220000 	stmdbhi	r2!, {}	; <UNPREDICTABLE>
    338c:	7f000033 	svcvc	0x00000033
    3390:	000f4d22 	andeq	r4, pc, r2, lsr #26
    3394:	0b00ff00 	bleq	42f9c <axp2585_set_usb_vhold+0x41d58>
    3398:	00001278 	andeq	r1, r0, r8, ror r2
    339c:	d02335a0 	eorle	r3, r3, r0, lsr #11
    33a0:	0c000034 	stceq	0, cr0, [r0], {52}	; 0x34
    33a4:	00000303 	andeq	r0, r0, r3, lsl #6
    33a8:	00452435 	subeq	r2, r5, r5, lsr r4
    33ac:	0c000000 	stceq	0, cr0, [r0], {-0}
    33b0:	0000322d 	andeq	r3, r0, sp, lsr #4
    33b4:	33742535 	cmncc	r4, #222298112	; 0xd400000
    33b8:	0c040000 	stceq	0, cr0, [r4], {-0}
    33bc:	00003a6e 	andeq	r3, r0, lr, ror #20
    33c0:	33742635 	cmncc	r4, #55574528	; 0x3500000
    33c4:	0c080000 	stceq	0, cr0, [r8], {-0}
    33c8:	00003f42 	andeq	r3, r0, r2, asr #30
    33cc:	00902735 	addseq	r2, r0, r5, lsr r7
    33d0:	0c0c0000 	stceq	0, cr0, [ip], {-0}
    33d4:	00001147 	andeq	r1, r0, r7, asr #2
    33d8:	34e63735 	strbtcc	r3, [r6], #1845	; 0x735
    33dc:	0c100000 	ldceq	0, cr0, [r0], {-0}
    33e0:	0000074b 	andeq	r0, r0, fp, asr #14
    33e4:	35003d35 	strcc	r3, [r0, #-3381]	; 0xfffff2cb
    33e8:	0c140000 	ldceq	0, cr0, [r4], {-0}
    33ec:	000031d1 	ldrdeq	r3, [r0], -r1
    33f0:	35154035 	ldrcc	r4, [r5, #-53]	; 0xffffffcb
    33f4:	0c180000 	ldceq	0, cr0, [r8], {-0}
    33f8:	00001e89 	andeq	r1, r0, r9, lsl #29
    33fc:	35344a35 	ldrcc	r4, [r4, #-2613]!	; 0xfffff5cb
    3400:	121c0000 	andsne	r0, ip, #0
    3404:	00766564 	rsbseq	r6, r6, r4, ror #10
    3408:	15354e35 	ldrne	r4, [r5, #-3637]!	; 0xfffff1cb
    340c:	0c200000 	stceq	0, cr0, [r0], #-0
    3410:	0000398f 	andeq	r3, r0, pc, lsl #19
    3414:	23db4f35 	bicscs	r4, fp, #53, 30	; 0xd4
    3418:	0c240000 	stceq	0, cr0, [r4], #-0
    341c:	00002fc8 	andeq	r2, r0, r8, asr #31
    3420:	02305135 	eorseq	r5, r0, #1073741837	; 0x4000000d
    3424:	0c280000 	stceq	0, cr0, [r8], #-0
    3428:	00003a5e 	andeq	r3, r0, lr, asr sl
    342c:	00455235 	subeq	r5, r5, r5, lsr r2
    3430:	0c300000 	ldceq	0, cr0, [r0], #-0
    3434:	000000bb 	strheq	r0, [r0], -fp
    3438:	00275435 	eoreq	r5, r7, r5, lsr r4
    343c:	0c340000 	ldceq	0, cr0, [r4], #-0
    3440:	00002282 	andeq	r2, r0, r2, lsl #5
    3444:	00275435 	eoreq	r5, r7, r5, lsr r4
    3448:	0c380000 	ldceq	0, cr0, [r8], #-0
    344c:	00000beb 	andeq	r0, r0, fp, ror #23
    3450:	0fc55535 	svceq	0x00c55535
    3454:	0c3c0000 	ldceq	0, cr0, [ip], #-0
    3458:	000010bb 	strheq	r1, [r0], -fp
    345c:	00905635 	addseq	r5, r0, r5, lsr r6
    3460:	0c580000 	mraeq	r0, r8, acc0
    3464:	00000289 	andeq	r0, r0, r9, lsl #5
    3468:	35455735 	strbcc	r5, [r5, #-1845]	; 0xfffff8cb
    346c:	0c5c0000 	mraeq	r0, ip, acc0
    3470:	0000469b 	muleq	r0, fp, r6
    3474:	103c5935 	eorsne	r5, ip, r5, lsr r9
    3478:	0c600000 	stcleq	0, cr0, [r0], #-0
    347c:	00002d40 	andeq	r2, r0, r0, asr #26
    3480:	00905a35 	addseq	r5, r0, r5, lsr sl
    3484:	0c700000 	ldcleq	0, cr0, [r0], #-0
    3488:	000039dc 	ldrdeq	r3, [r0], -ip
    348c:	21e15e35 	mvncs	r5, r5, lsr lr
    3490:	0c740000 	ldcleq	0, cr0, [r4], #-0
    3494:	00000439 	andeq	r0, r0, r9, lsr r4
    3498:	35a06035 	strcc	r6, [r0, #53]!	; 0x35
    349c:	0c800000 	stceq	0, cr0, [r0], {0}
    34a0:	000016b9 			; <UNDEFINED> instruction: 0x000016b9
    34a4:	02306135 	eorseq	r6, r0, #1073741837	; 0x4000000d
    34a8:	0c840000 	stceq	0, cr0, [r4], {0}
    34ac:	000025f0 	strdeq	r2, [r0], -r0
    34b0:	00256235 	eoreq	r6, r5, r5, lsr r2
    34b4:	0c8c0000 	stceq	0, cr0, [ip], {0}
    34b8:	00003342 	andeq	r3, r0, r2, asr #6
    34bc:	01906435 	orrseq	r6, r0, r5, lsr r4
    34c0:	0c900000 	ldceq	0, cr0, [r0], {0}
    34c4:	00003f48 	andeq	r3, r0, r8, asr #30
    34c8:	04886835 	streq	r6, [r8], #2101	; 0x835
    34cc:	00940000 	addseq	r0, r4, r0
    34d0:	0034e00e 	eorseq	lr, r4, lr
    34d4:	34e00f00 	strbtcc	r0, [r0], #3840	; 0xf00
    34d8:	740f0000 	strvc	r0, [pc], #-0	; 34e0 <.debug_info+0x34e0>
    34dc:	00000033 	andeq	r0, r0, r3, lsr r0
    34e0:	33970406 	orrscc	r0, r7, #100663296	; 0x6000000
    34e4:	04060000 	streq	r0, [r6], #-0
    34e8:	000034d0 	ldrdeq	r3, [r0], -r0
    34ec:	00009020 	andeq	r9, r0, r0, lsr #32
    34f0:	00350000 	eorseq	r0, r5, r0
    34f4:	34e00f00 	strbtcc	r0, [r0], #3840	; 0xf00
    34f8:	740f0000 	strvc	r0, [pc], #-0	; 3500 <.debug_info+0x3500>
    34fc:	00000033 	andeq	r0, r0, r3, lsr r0
    3500:	34ec0406 	strbtcc	r0, [ip], #1030	; 0x406
    3504:	74200000 	strtvc	r0, [r0], #-0
    3508:	15000033 	strne	r0, [r0, #-51]	; 0xffffffcd
    350c:	0f000035 	svceq	0x00000035
    3510:	000034e0 	andeq	r3, r0, r0, ror #9
    3514:	06040600 	streq	r0, [r4], -r0, lsl #12
    3518:	20000035 	andcs	r0, r0, r5, lsr r0
    351c:	00000090 	muleq	r0, r0, r0
    3520:	00003534 	andeq	r3, r0, r4, lsr r5
    3524:	0034e00f 	eorseq	lr, r4, pc
    3528:	21420f00 	cmpcs	r2, r0, lsl #30
    352c:	420f0000 	andmi	r0, pc, #0
    3530:	00000021 	andeq	r0, r0, r1, lsr #32
    3534:	351b0406 	ldrcc	r0, [fp, #-1030]	; 0xfffffbfa
    3538:	450e0000 	strmi	r0, [lr, #-0]
    353c:	0f000035 	svceq	0x00000035
    3540:	000034e0 	andeq	r3, r0, r0, ror #9
    3544:	3a040600 	bcc	104d4c <axp2585_set_usb_vhold+0x103b08>
    3548:	0b000035 	bleq	3624 <.debug_info+0x3624>
    354c:	00003be1 	andeq	r3, r0, r1, ror #23
    3550:	a0d8351c 	sbcsge	r3, r8, ip, lsl r5
    3554:	0c000035 	stceq	0, cr0, [r0], {53}	; 0x35
    3558:	00000303 	andeq	r0, r0, r3, lsl #6
    355c:	0045da35 	subeq	sp, r5, r5, lsr sl
    3560:	0c000000 	stceq	0, cr0, [r0], {-0}
    3564:	0000191b 	andeq	r1, r0, fp, lsl r9
    3568:	3545db35 	strbcc	sp, [r5, #-2869]	; 0xfffff4cb
    356c:	0c040000 	stceq	0, cr0, [r4], {-0}
    3570:	00003590 	muleq	r0, r0, r5
    3574:	3545dc35 	strbcc	sp, [r5, #-3125]	; 0xfffff3cb
    3578:	0c080000 	stceq	0, cr0, [r8], {-0}
    357c:	00000fe6 	andeq	r0, r0, r6, ror #31
    3580:	0472df35 	ldrbteq	sp, [r2], #-3893	; 0xfffff0cb
    3584:	0c0c0000 	stceq	0, cr0, [ip], {-0}
    3588:	0000084e 	andeq	r0, r0, lr, asr #16
    358c:	0230e035 	eorseq	lr, r0, #53	; 0x35
    3590:	0c0c0000 	stceq	0, cr0, [ip], {-0}
    3594:	000032e8 	andeq	r3, r0, r8, ror #5
    3598:	0230e335 	eorseq	lr, r0, #-738197504	; 0xd4000000
    359c:	00140000 	andseq	r0, r4, r0
    35a0:	354b0406 	strbcc	r0, [fp, #-1030]	; 0xfffffbfa
    35a4:	042e0000 	strteq	r0, [lr], #-0
    35a8:	00000057 	andeq	r0, r0, r7, asr r0
    35ac:	35e93236 	strbcc	r3, [r9, #566]!	; 0x236
    35b0:	50220000 	eorpl	r0, r2, r0
    35b4:	00000018 	andeq	r0, r0, r8, lsl r0
    35b8:	002d9e22 	eoreq	r9, sp, r2, lsr #28
    35bc:	a0220100 	eorge	r0, r2, r0, lsl #2
    35c0:	02000015 	andeq	r0, r0, #21
    35c4:	003d5f22 	eorseq	r5, sp, r2, lsr #30
    35c8:	9b220300 	blls	880c08 <axp2585_set_usb_vhold+0x87f9c4>
    35cc:	04000039 	streq	r0, [r0], #-57	; 0xffffffc7
    35d0:	0032c522 	eorseq	ip, r2, r2, lsr #10
    35d4:	57220500 	strpl	r0, [r2, -r0, lsl #10]!
    35d8:	06000033 			; <UNDEFINED> instruction: 0x06000033
    35dc:	00445d22 	subeq	r5, r4, r2, lsr #26
    35e0:	ae220700 	cdpge	7, 2, cr0, cr2, cr0, {0}
    35e4:	0800001d 	stmdaeq	r0, {r0, r2, r3, r4}
    35e8:	57042e00 	strpl	r2, [r4, -r0, lsl #28]
    35ec:	36000000 	strcc	r0, [r0], -r0
    35f0:	0036203e 	eorseq	r2, r6, lr, lsr r0
    35f4:	17482200 	strbne	r2, [r8, -r0, lsl #4]
    35f8:	22000000 	andcs	r0, r0, #0
    35fc:	00000e62 	andeq	r0, r0, r2, ror #28
    3600:	10062201 	andne	r2, r6, r1, lsl #4
    3604:	22020000 	andcs	r0, r2, #0
    3608:	00001108 	andeq	r1, r0, r8, lsl #2
    360c:	349f2203 	ldrcc	r2, [pc], #515	; 8 <.debug_info+0x8>
    3610:	22040000 	andcs	r0, r4, #0
    3614:	00000858 	andeq	r0, r0, r8, asr r8
    3618:	38c42205 	stmiacc	r4, {r0, r2, r9, sp}^
    361c:	00060000 	andeq	r0, r6, r0
    3620:	00269921 	eoreq	r9, r6, r1, lsr #18
    3624:	00570400 	subseq	r0, r7, r0, lsl #8
    3628:	57360000 	ldrpl	r0, [r6, -r0]!
    362c:	000037b7 			; <UNDEFINED> instruction: 0x000037b7
    3630:	0040ef22 	subeq	lr, r0, r2, lsr #30
    3634:	c3220000 	teqgt	r2, #0
    3638:	01000043 	tsteq	r0, r3, asr #32
    363c:	0037a622 	eorseq	sl, r7, r2, lsr #12
    3640:	3c220200 	sfmcc	f0, 4, [r2], #-0
    3644:	0300001f 	movweq	r0, #31
    3648:	0027e722 	eoreq	lr, r7, r2, lsr #14
    364c:	f8220400 			; <UNDEFINED> instruction: 0xf8220400
    3650:	05000016 	streq	r0, [r0, #-22]	; 0xffffffea
    3654:	001cbc22 	andseq	fp, ip, r2, lsr #24
    3658:	f2220600 	vmax.s32	d0, d2, d0
    365c:	0700000c 	streq	r0, [r0, -ip]
    3660:	000c5022 	andeq	r5, ip, r2, lsr #32
    3664:	2d220800 	stccs	8, cr0, [r2, #-0]
    3668:	09000010 	stmdbeq	r0, {r4}
    366c:	003fd822 	eorseq	sp, pc, r2, lsr #16
    3670:	c7220a00 	strgt	r0, [r2, -r0, lsl #20]!
    3674:	0b000033 	bleq	3748 <.debug_info+0x3748>
    3678:	003d4122 	eorseq	r4, sp, r2, lsr #2
    367c:	f2220c00 			; <UNDEFINED> instruction: 0xf2220c00
    3680:	0d000038 	stceq	0, cr0, [r0, #-224]	; 0xffffff20
    3684:	00140b22 	andseq	r0, r4, r2, lsr #22
    3688:	59220e00 	stmdbpl	r2!, {r9, sl, fp}
    368c:	0f000006 	svceq	0x00000006
    3690:	0007d522 	andeq	sp, r7, r2, lsr #10
    3694:	71221000 	teqvc	r2, r0
    3698:	11000039 	tstne	r0, r9, lsr r0
    369c:	0034d722 	eorseq	sp, r4, r2, lsr #14
    36a0:	ff221200 			; <UNDEFINED> instruction: 0xff221200
    36a4:	13000014 	movwne	r0, #20
    36a8:	00165122 	andseq	r5, r6, r2, lsr #2
    36ac:	ec221400 	cfstrs	mvf1, [r2], #-0
    36b0:	15000026 	strne	r0, [r0, #-38]	; 0xffffffda
    36b4:	003b7e22 	eorseq	r7, fp, r2, lsr #28
    36b8:	a8221600 	stmdage	r2!, {r9, sl, ip}
    36bc:	1700000a 	strne	r0, [r0, -sl]
    36c0:	00309022 	eorseq	r9, r0, r2, lsr #32
    36c4:	25221800 	strcs	r1, [r2, #-2048]!	; 0xfffff800
    36c8:	1900001c 	stmdbne	r0, {r2, r3, r4}
    36cc:	0037bf22 	eorseq	fp, r7, r2, lsr #30
    36d0:	70221a00 	eorvc	r1, r2, r0, lsl #20
    36d4:	1b000041 	blne	37e0 <.debug_info+0x37e0>
    36d8:	0010e122 	andseq	lr, r0, r2, lsr #2
    36dc:	41221c00 	teqmi	r2, r0, lsl #24
    36e0:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
    36e4:	00315422 	eorseq	r5, r1, r2, lsr #8
    36e8:	2d221e00 	stccs	14, cr1, [r2, #-0]
    36ec:	1f000001 	svcne	0x00000001
    36f0:	00368b22 	eorseq	r8, r6, r2, lsr #22
    36f4:	0d222000 	stceq	0, cr2, [r2, #-0]
    36f8:	2100002d 	tstcs	r0, sp, lsr #32
    36fc:	002b9922 	eoreq	r9, fp, r2, lsr #18
    3700:	b7222200 	strlt	r2, [r2, -r0, lsl #4]!
    3704:	2300002d 	movwcs	r0, #45	; 0x2d
    3708:	0036c322 	eorseq	ip, r6, r2, lsr #6
    370c:	38222400 	stmdacc	r2!, {sl, sp}
    3710:	2500000d 	strcs	r0, [r0, #-13]
    3714:	00402b22 	subeq	r2, r0, r2, lsr #22
    3718:	02222600 	eoreq	r2, r2, #0, 12
    371c:	2700000c 	strcs	r0, [r0, -ip]
    3720:	00443622 	subeq	r3, r4, r2, lsr #12
    3724:	49222800 	stmdbmi	r2!, {fp, sp}
    3728:	29000040 	stmdbcs	r0, {r6}
    372c:	00304322 	eorseq	r4, r0, r2, lsr #6
    3730:	bf222a00 	svclt	0x00222a00
    3734:	2b000003 	blcs	3748 <.debug_info+0x3748>
    3738:	00475f22 	subeq	r5, r7, r2, lsr #30
    373c:	0d222c00 	stceq	12, cr2, [r2, #-0]
    3740:	2d000006 	stccs	0, cr0, [r0, #-24]	; 0xffffffe8
    3744:	001ff422 	andseq	pc, pc, r2, lsr #8
    3748:	11222e00 	teqne	r2, r0, lsl #28
    374c:	2f000027 	svccs	0x00000027
    3750:	002b1922 	eoreq	r1, fp, r2, lsr #18
    3754:	54223000 	strtpl	r3, [r2], #-0
    3758:	3100002e 	tstcc	r0, lr, lsr #32
    375c:	00296422 	eoreq	r6, r9, r2, lsr #8
    3760:	f5223200 			; <UNDEFINED> instruction: 0xf5223200
    3764:	33000034 	movwcc	r0, #52	; 0x34
    3768:	0004b122 	andeq	fp, r4, r2, lsr #2
    376c:	1c223400 	cfstrsne	mvf3, [r2], #-0
    3770:	35000000 	strcc	r0, [r0, #-0]
    3774:	0008f822 	andeq	pc, r8, r2, lsr #16
    3778:	51223600 	teqpl	r2, r0, lsl #12
    377c:	37000004 	strcc	r0, [r0, -r4]
    3780:	001e5322 	andseq	r5, lr, r2, lsr #6
    3784:	1d223800 	stcne	8, cr3, [r2, #-0]
    3788:	39000017 	stmdbcc	r0, {r0, r1, r2, r4}
    378c:	001ed922 	andseq	sp, lr, r2, lsr #18
    3790:	45223a00 	strmi	r3, [r2, #-2560]!	; 0xfffff600
    3794:	3b000000 	blcc	379c <.debug_info+0x379c>
    3798:	002f1922 	eoreq	r1, pc, r2, lsr #18
    379c:	2d223c00 	stccs	12, cr3, [r2, #-0]
    37a0:	3d000037 	stccc	0, cr0, [r0, #-220]	; 0xffffff24
    37a4:	002e1422 	eoreq	r1, lr, r2, lsr #8
    37a8:	8e223e00 	cdphi	14, 2, cr3, cr2, cr0, {0}
    37ac:	3f000045 	svccc	0x00000045
    37b0:	00162322 	andseq	r2, r6, r2, lsr #6
    37b4:	21004000 	mrscs	r4, (UNDEF: 0)
    37b8:	00003392 	muleq	r0, r2, r3
    37bc:	00005704 	andeq	r5, r0, r4, lsl #14
    37c0:	f89d3600 			; <UNDEFINED> instruction: 0xf89d3600
    37c4:	22000037 	andcs	r0, r0, #55	; 0x37
    37c8:	00001f05 	andeq	r1, r0, r5, lsl #30
    37cc:	25062200 	strcs	r2, [r6, #-512]	; 0xfffffe00
    37d0:	22010000 	andcs	r0, r1, #0
    37d4:	00003dcb 	andeq	r3, r0, fp, asr #27
    37d8:	28ef2202 	stmiacs	pc!, {r1, r9, sp}^	; <UNPREDICTABLE>
    37dc:	22030000 	andcs	r0, r3, #0
    37e0:	00003f7c 	andeq	r3, r0, ip, ror pc
    37e4:	43ef2204 	mvnmi	r2, #4, 4	; 0x40000000
    37e8:	22050000 	andcs	r0, r5, #0
    37ec:	00001e9f 	muleq	r0, pc, lr	; <UNPREDICTABLE>
    37f0:	14622206 	strbtne	r2, [r2], #-518	; 0xfffffdfa
    37f4:	00070000 	andeq	r0, r7, r0
    37f8:	00474a19 	subeq	r4, r7, r9, lsl sl
    37fc:	ac360400 	cfldrsge	mvf0, [r6], #-0
    3800:	0000381b 	andeq	r3, r0, fp, lsl r8
    3804:	003ad817 	eorseq	sp, sl, r7, lsl r8
    3808:	90ad3600 	adcls	r3, sp, r0, lsl #12
    380c:	17000000 	strne	r0, [r0, -r0]
    3810:	00001f35 	andeq	r1, r0, r5, lsr pc
    3814:	0045ae36 	subeq	sl, r5, r6, lsr lr
    3818:	0b000000 	bleq	3820 <.debug_info+0x3820>
    381c:	000011f2 	strdeq	r1, [r0], -r2
    3820:	acbf362c 	ldcge	6, cr3, [pc], #176	; 38d8 <.debug_info+0x38d8>
    3824:	0c000038 	stceq	0, cr0, [r0], {56}	; 0x38
    3828:	00000303 	andeq	r0, r0, r3, lsl #6
    382c:	0045c036 	subeq	ip, r5, r6, lsr r0
    3830:	0c000000 	stceq	0, cr0, [r0], {-0}
    3834:	00002775 	andeq	r2, r0, r5, ror r7
    3838:	37b7c136 			; <UNDEFINED> instruction: 0x37b7c136
    383c:	0c040000 	stceq	0, cr0, [r4], {-0}
    3840:	00003680 	andeq	r3, r0, r0, lsl #13
    3844:	38acc236 	stmiacc	ip!, {r1, r2, r4, r5, r9, lr, pc}
    3848:	0c080000 	stceq	0, cr0, [r8], {-0}
    384c:	00004363 	andeq	r4, r0, r3, ror #6
    3850:	01c3c336 	biceq	ip, r3, r6, lsr r3
    3854:	0c0c0000 	stceq	0, cr0, [ip], {-0}
    3858:	0000324d 	andeq	r3, r0, sp, asr #4
    385c:	3a2bcb36 	bcc	af653c <axp2585_set_usb_vhold+0xaf52f8>
    3860:	0c100000 	ldceq	0, cr0, [r0], {-0}
    3864:	00004066 	andeq	r4, r0, r6, rrx
    3868:	3a55ce36 	bcc	1577148 <axp2585_set_usb_vhold+0x1575f04>
    386c:	0c140000 	ldceq	0, cr0, [r4], {-0}
    3870:	00003863 	andeq	r3, r0, r3, ror #16
    3874:	3a6fd636 	bcc	1bf9154 <axp2585_set_usb_vhold+0x1bf7f10>
    3878:	0c180000 	ldceq	0, cr0, [r8], {-0}
    387c:	000015f3 	strdeq	r1, [r0], -r3
    3880:	3a80d836 	bcc	fe039960 <axp2585_set_usb_vhold+0xfe03871c>
    3884:	0c1c0000 	ldceq	0, cr0, [ip], {-0}
    3888:	000025b4 			; <UNDEFINED> instruction: 0x000025b4
    388c:	3a80d936 	bcc	fe039d6c <axp2585_set_usb_vhold+0xfe038b28>
    3890:	0c200000 	stceq	0, cr0, [r0], #-0
    3894:	00003e2f 	andeq	r3, r0, pc, lsr #28
    3898:	0190e036 	orrseq	lr, r0, r6, lsr r0
    389c:	0c240000 	stceq	0, cr0, [r4], #-0
    38a0:	00003651 	andeq	r3, r0, r1, asr r6
    38a4:	0090e236 	addseq	lr, r0, r6, lsr r2
    38a8:	00280000 	eoreq	r0, r8, r0
    38ac:	36200406 	strtcc	r0, [r0], -r6, lsl #8
    38b0:	90200000 	eorls	r0, r0, r0
    38b4:	cb000000 	blgt	38bc <.debug_info+0x38bc>
    38b8:	0f000038 	svceq	0x00000038
    38bc:	000038cb 	andeq	r3, r0, fp, asr #17
    38c0:	0036200f 	eorseq	r2, r6, pc
    38c4:	3a250f00 	bcc	9474cc <axp2585_set_usb_vhold+0x946288>
    38c8:	06000000 	streq	r0, [r0], -r0
    38cc:	0038d104 	eorseq	sp, r8, r4, lsl #2
    38d0:	199b1a00 	ldmibne	fp, {r9, fp, ip}
    38d4:	02080000 	andeq	r0, r8, #0
    38d8:	3a25e536 	bcc	97cdb8 <axp2585_set_usb_vhold+0x97bb74>
    38dc:	c50c0000 	strgt	r0, [ip, #-0]
    38e0:	36000006 	strcc	r0, [r0], -r6
    38e4:	003a86e6 	eorseq	r8, sl, r6, ror #13
    38e8:	be0c0000 	cdplt	0, 0, cr0, cr12, cr0, {0}
    38ec:	36000046 	strcc	r0, [r0], -r6, asr #32
    38f0:	002bafe8 	eoreq	sl, fp, r8, ror #31
    38f4:	580c0400 	stmdapl	ip, {sl}
    38f8:	3600002d 	strcc	r0, [r0], -sp, lsr #32
    38fc:	0001c3e9 	andeq	ip, r1, r9, ror #7
    3900:	df0c0800 	svcle	0x000c0800
    3904:	36000035 			; <UNDEFINED> instruction: 0x36000035
    3908:	002bafeb 	eoreq	sl, fp, fp, ror #31
    390c:	b10c0c00 	tstlt	ip, r0, lsl #24
    3910:	3600003d 			; <UNDEFINED> instruction: 0x3600003d
    3914:	0001c3ec 	andeq	ip, r1, ip, ror #7
    3918:	930c1000 	movwls	r1, #49152	; 0xc000
    391c:	3600002c 	strcc	r0, [r0], -ip, lsr #32
    3920:	002b8ded 	eoreq	r8, fp, sp, ror #27
    3924:	ce0c1400 	cfcpysgt	mvf1, mvf12
    3928:	3600002e 	strcc	r0, [r0], -lr, lsr #32
    392c:	000025f0 	strdeq	r2, [r0], -r0
    3930:	64121800 	ldrvs	r1, [r2], #-2048	; 0xfffff800
    3934:	36007665 	strcc	r7, [r0], -r5, ror #12
    3938:	00153bf3 			; <UNDEFINED> instruction: 0x00153bf3
    393c:	c81b2000 	ldmdagt	fp, {sp}
    3940:	36000023 	strcc	r0, [r0], -r3, lsr #32
    3944:	00103cf4 			; <UNDEFINED> instruction: 0x00103cf4
    3948:	1b018800 	blne	65950 <axp2585_set_usb_vhold+0x6470c>
    394c:	00001250 	andeq	r1, r0, r0, asr r2
    3950:	106df536 	rsbne	pc, sp, r6, lsr r5	; <UNPREDICTABLE>
    3954:	01980000 	orrseq	r0, r8, r0
    3958:	0022261b 	eoreq	r2, r2, fp, lsl r6
    395c:	52f63600 	rscspl	r3, r6, #0, 12
    3960:	cc000004 	stcgt	0, cr0, [r0], {4}
    3964:	0cdd1b01 	fldmiaxeq	sp, {d17-d16}	;@ Deprecated
    3968:	f7360000 			; <UNDEFINED> instruction: 0xf7360000
    396c:	00000190 	muleq	r0, r0, r1
    3970:	861b01cc 	ldrhi	r0, [fp], -ip, asr #3
    3974:	36000010 			; <UNDEFINED> instruction: 0x36000010
    3978:	000225f8 	strdeq	r2, [r2], -r8
    397c:	3101d000 	mrscc	sp, (UNDEF: 1)
    3980:	00647a74 	rsbeq	r7, r4, r4, ror sl
    3984:	3a96fa36 	bcc	fe5c2264 <axp2585_set_usb_vhold+0xfe5c1020>
    3988:	01d40000 	bicseq	r0, r4, r0
    398c:	64637431 	strbtvs	r7, [r3], #-1073	; 0xfffffbcf
    3990:	a1fb3600 	mvnsge	r3, r0, lsl #12
    3994:	d800003a 	stmdale	r0, {r1, r3, r4, r5}
    3998:	14321b01 	ldrtne	r1, [r2], #-2817	; 0xfffff4ff
    399c:	ff360000 			; <UNDEFINED> instruction: 0xff360000
    39a0:	000035a0 	andeq	r3, r0, r0, lsr #11
    39a4:	682a01dc 	stmdavs	sl!, {r2, r3, r4, r6, r7, r8}
    39a8:	36000026 	strcc	r0, [r0], -r6, lsr #32
    39ac:	01440100 	mrseq	r0, (UNDEF: 84)
    39b0:	01e00000 	mvneq	r0, r0
    39b4:	0031292a 	eorseq	r2, r1, sl, lsr #18
    39b8:	01013600 	tsteq	r1, r0, lsl #12
    39bc:	000035a0 	andeq	r3, r0, r0, lsr #11
    39c0:	852a01e4 	strhi	r0, [sl, #-484]!	; 0xfffffe1c
    39c4:	36000012 			; <UNDEFINED> instruction: 0x36000012
    39c8:	01440102 	cmpeq	r4, r2, lsl #2
    39cc:	01e80000 	mvneq	r0, r0
    39d0:	00192f2a 	andseq	r2, r9, sl, lsr #30
    39d4:	01033600 	tsteq	r3, r0, lsl #12
    39d8:	000035a0 	andeq	r3, r0, r0, lsr #11
    39dc:	4b2a01ec 	blmi	a807b8 <axp2585_set_usb_vhold+0xa7f574>
    39e0:	3600003b 			; <UNDEFINED> instruction: 0x3600003b
    39e4:	01440104 	cmpeq	r4, r4, lsl #2
    39e8:	01f00000 	mvnseq	r0, r0
    39ec:	0030d72a 	eorseq	sp, r0, sl, lsr #14
    39f0:	01053600 	tsteq	r5, r0, lsl #12
    39f4:	000035a0 	andeq	r3, r0, r0, lsr #11
    39f8:	252a01f4 	strcs	r0, [sl, #-500]!	; 0xfffffe0c
    39fc:	36000044 	strcc	r0, [r0], -r4, asr #32
    3a00:	01440106 	cmpeq	r4, r6, lsl #2
    3a04:	01f80000 	mvnseq	r0, r0
    3a08:	00460a2a 	subeq	r0, r6, sl, lsr #20
    3a0c:	01073600 	tsteq	r7, r0, lsl #12
    3a10:	000035a0 	andeq	r3, r0, r0, lsr #11
    3a14:	f42a01fc 	vld4.<illegal width 64>	{d0,d2,d4,d6}, [sl :256], ip
    3a18:	3600000d 	strcc	r0, [r0], -sp
    3a1c:	01440108 	cmpeq	r4, r8, lsl #2
    3a20:	02000000 	andeq	r0, r0, #0
    3a24:	f8040600 			; <UNDEFINED> instruction: 0xf8040600
    3a28:	06000037 			; <UNDEFINED> instruction: 0x06000037
    3a2c:	0038b204 	eorseq	fp, r8, r4, lsl #4
    3a30:	00902000 	addseq	r2, r0, r0
    3a34:	3a4a0000 	bcc	1283a3c <axp2585_set_usb_vhold+0x12827f8>
    3a38:	cb0f0000 	blgt	3c3a40 <axp2585_set_usb_vhold+0x3c27fc>
    3a3c:	0f000038 	svceq	0x00000038
    3a40:	00003620 	andeq	r3, r0, r0, lsr #12
    3a44:	003a4a0f 	eorseq	r4, sl, pc, lsl #20
    3a48:	04060000 	streq	r0, [r6], #-0
    3a4c:	00003a50 	andeq	r3, r0, r0, asr sl
    3a50:	0037f807 	eorseq	pc, r7, r7, lsl #16
    3a54:	31040600 	tstcc	r4, r0, lsl #12
    3a58:	2000003a 	andcs	r0, r0, sl, lsr r0
    3a5c:	00000090 	muleq	r0, r0, r0
    3a60:	00003a6f 	andeq	r3, r0, pc, ror #20
    3a64:	0038cb0f 	eorseq	ip, r8, pc, lsl #22
    3a68:	36200f00 	strtcc	r0, [r0], -r0, lsl #30
    3a6c:	06000000 	streq	r0, [r0], -r0
    3a70:	003a5b04 	eorseq	r5, sl, r4, lsl #22
    3a74:	3a800e00 	bcc	fe00727c <axp2585_set_usb_vhold+0xfe006038>
    3a78:	cb0f0000 	blgt	3c3a80 <axp2585_set_usb_vhold+0x3c283c>
    3a7c:	00000038 	andeq	r0, r0, r8, lsr r0
    3a80:	3a750406 	bcc	1d44aa0 <axp2585_set_usb_vhold+0x1d4385c>
    3a84:	04060000 	streq	r0, [r6], #-0
    3a88:	00003a8c 	andeq	r3, r0, ip, lsl #21
    3a8c:	00381b07 	eorseq	r1, r8, r7, lsl #22
    3a90:	08e41300 	stmiaeq	r4!, {r8, r9, ip}^
    3a94:	04060000 	streq	r0, [r6], #-0
    3a98:	00003a91 	muleq	r0, r1, sl
    3a9c:	000b1613 	andeq	r1, fp, r3, lsl r6
    3aa0:	9c040600 	stcls	6, cr0, [r4], {-0}
    3aa4:	2600003a 			; <UNDEFINED> instruction: 0x2600003a
    3aa8:	00003271 	andeq	r3, r0, r1, ror r2
    3aac:	01133624 	tsteq	r3, r4, lsr #12
    3ab0:	00003b2a 	andeq	r3, r0, sl, lsr #22
    3ab4:	00030327 	andeq	r0, r3, r7, lsr #6
    3ab8:	01143600 	tsteq	r4, r0, lsl #12
    3abc:	00000045 	andeq	r0, r0, r5, asr #32
    3ac0:	409f2700 	addsmi	r2, pc, r0, lsl #14
    3ac4:	15360000 	ldrne	r0, [r6, #-0]!
    3ac8:	00009001 	andeq	r9, r0, r1
    3acc:	fc270400 	stc2	4, cr0, [r7], #-0
    3ad0:	3600002a 	strcc	r0, [r0], -sl, lsr #32
    3ad4:	00900116 	addseq	r0, r0, r6, lsl r1
    3ad8:	27080000 	strcs	r0, [r8, -r0]
    3adc:	00000695 	muleq	r0, r5, r6
    3ae0:	90011736 	andls	r1, r1, r6, lsr r7
    3ae4:	0c000000 	stceq	0, cr0, [r0], {-0}
    3ae8:	001eb927 	andseq	fp, lr, r7, lsr #18
    3aec:	01183600 	tsteq	r8, r0, lsl #12
    3af0:	00000090 	muleq	r0, r0, r0
    3af4:	0ea12710 	mcreq	7, 5, r2, cr1, cr0, {0}
    3af8:	19360000 	ldmdbne	r6!, {}	; <UNPREDICTABLE>
    3afc:	00009001 	andeq	r9, r0, r1
    3b00:	fa271400 	blx	9c5008 <axp2585_set_usb_vhold+0x9c3dc4>
    3b04:	36000005 	strcc	r0, [r0], -r5
    3b08:	0090011a 	addseq	r0, r0, sl, lsl r1
    3b0c:	27180000 	ldrcs	r0, [r8, -r0]
    3b10:	00000383 	andeq	r0, r0, r3, lsl #7
    3b14:	90011b36 	andls	r1, r1, r6, lsr fp
    3b18:	1c000000 	stcne	0, cr0, [r0], {-0}
    3b1c:	00365127 	eorseq	r5, r6, r7, lsr #2
    3b20:	011c3600 	tsteq	ip, r0, lsl #12
    3b24:	00000090 	muleq	r0, r0, r0
    3b28:	78210020 	stmdavc	r1!, {r5}
    3b2c:	04000015 	streq	r0, [r0], #-21	; 0xffffffeb
    3b30:	00000057 	andeq	r0, r0, r7, asr r0
    3b34:	3bb9d437 	blcc	fee78c18 <axp2585_set_usb_vhold+0xfee779d4>
    3b38:	49220000 	stmdbmi	r2!, {}	; <UNPREDICTABLE>
    3b3c:	00000015 	andeq	r0, r0, r5, lsl r0
    3b40:	00231822 	eoreq	r1, r3, r2, lsr #16
    3b44:	6b220100 	blvs	880408 <axp2585_set_usb_vhold+0x87f1c4>
    3b48:	0200001f 	andeq	r0, r0, #31
    3b4c:	001e4722 	andseq	r4, lr, r2, lsr #14
    3b50:	c9220300 	stmdbgt	r2!, {r8, r9}
    3b54:	04000009 	streq	r0, [r0], #-9
    3b58:	00083d22 	andeq	r3, r8, r2, lsr #26
    3b5c:	c9220500 	stmdbgt	r2!, {r8, sl}
    3b60:	06000005 	streq	r0, [r0], -r5
    3b64:	00057222 	andeq	r7, r5, r2, lsr #4
    3b68:	23220700 	teqcs	r2, #0, 14
    3b6c:	08000034 	stmdaeq	r0, {r2, r4, r5}
    3b70:	0019b322 	andseq	fp, r9, r2, lsr #6
    3b74:	af220900 	svcge	0x00220900
    3b78:	0a000026 	beq	3c18 <.debug_info+0x3c18>
    3b7c:	002f0e22 	eoreq	r0, pc, r2, lsr #28
    3b80:	8e220b00 	vmulhi.f64	d0, d2, d0
    3b84:	0c000010 	stceq	0, cr0, [r0], {16}
    3b88:	00164322 	andseq	r4, r6, r2, lsr #6
    3b8c:	1e220d00 	cdpne	13, 2, cr0, cr2, cr0, {0}
    3b90:	0e000015 	mcreq	0, 0, r0, cr0, cr5, {0}
    3b94:	002ce022 	eoreq	lr, ip, r2, lsr #32
    3b98:	14220f00 	strtne	r0, [r2], #-3840	; 0xfffff100
    3b9c:	1000000f 	andne	r0, r0, pc
    3ba0:	00131a22 	andseq	r1, r3, r2, lsr #20
    3ba4:	b6221100 	strtlt	r1, [r2], -r0, lsl #2
    3ba8:	12000020 	andne	r0, r0, #32
    3bac:	002b3c22 	eoreq	r3, fp, r2, lsr #24
    3bb0:	98221300 	stmdals	r2!, {r8, r9, ip}
    3bb4:	14000005 	strne	r0, [r0], #-5
    3bb8:	0ace1a00 	beq	ff386808 <axp2585_set_usb_vhold+0xff3855c4>
    3bbc:	01a40000 			; <UNDEFINED> instruction: 0x01a40000
    3bc0:	40dc5138 	sbcsmi	r5, ip, r8, lsr r1
    3bc4:	620c0000 	andvs	r0, ip, #0
    3bc8:	3800001f 	stmdacc	r0, {r0, r1, r2, r3, r4}
    3bcc:	0000da52 	andeq	sp, r0, r2, asr sl
    3bd0:	b10c0000 	mrslt	r0, (UNDEF: 12)
    3bd4:	38000001 	stmdacc	r0, {r0}
    3bd8:	0000da53 	andeq	sp, r0, r3, asr sl
    3bdc:	e20c0400 	and	r0, ip, #0, 8
    3be0:	38000011 	stmdacc	r0, {r0, r4}
    3be4:	0000da54 	andeq	sp, r0, r4, asr sl
    3be8:	b80c0800 	stmdalt	ip, {fp}
    3bec:	38000001 	stmdacc	r0, {r0}
    3bf0:	0000da55 	andeq	sp, r0, r5, asr sl
    3bf4:	d60c0c00 	strle	r0, [ip], -r0, lsl #24
    3bf8:	38000005 	stmdacc	r0, {r0, r2}
    3bfc:	0000da56 	andeq	sp, r0, r6, asr sl
    3c00:	270c1000 	strcs	r1, [ip, -r0]
    3c04:	38000028 	stmdacc	r0, {r3, r5}
    3c08:	0000da57 	andeq	sp, r0, r7, asr sl
    3c0c:	450c1400 	strmi	r1, [ip, #-1024]	; 0xfffffc00
    3c10:	38000014 	stmdacc	r0, {r2, r4}
    3c14:	0000da58 	andeq	sp, r0, r8, asr sl
    3c18:	510c1800 	tstpl	ip, r0, lsl #16
    3c1c:	38000009 	stmdacc	r0, {r0, r3}
    3c20:	0000da59 	andeq	sp, r0, r9, asr sl
    3c24:	4b0c1c00 	blmi	307008 <axp2585_set_usb_vhold+0x305dc4>
    3c28:	38000010 	stmdacc	r0, {r4}
    3c2c:	0000da5a 	andeq	sp, r0, sl, asr sl
    3c30:	8c0c2000 	stchi	0, cr2, [ip], {-0}
    3c34:	38000042 	stmdacc	r0, {r1, r6}
    3c38:	0000da5b 	andeq	sp, r0, fp, asr sl
    3c3c:	400c2400 	andmi	r2, ip, r0, lsl #8
    3c40:	38000041 	stmdacc	r0, {r0, r6}
    3c44:	0000da5c 	andeq	sp, r0, ip, asr sl
    3c48:	f70c2800 			; <UNDEFINED> instruction: 0xf70c2800
    3c4c:	3800003d 	stmdacc	r0, {r0, r2, r3, r4, r5}
    3c50:	0000da5d 	andeq	sp, r0, sp, asr sl
    3c54:	920c2c00 	andls	r2, ip, #0, 24
    3c58:	38000016 	stmdacc	r0, {r1, r2, r4}
    3c5c:	0000da5e 	andeq	sp, r0, lr, asr sl
    3c60:	b70c3000 	strlt	r3, [ip, -r0]
    3c64:	38000005 	stmdacc	r0, {r0, r2}
    3c68:	0000da5f 	andeq	sp, r0, pc, asr sl
    3c6c:	4d0c3400 	cfstrsmi	mvf3, [ip, #-0]
    3c70:	38000026 	stmdacc	r0, {r1, r2, r5}
    3c74:	0000da60 	andeq	sp, r0, r0, ror #20
    3c78:	910c3800 	tstls	ip, r0, lsl #16
    3c7c:	38000009 	stmdacc	r0, {r0, r3}
    3c80:	0000da61 	andeq	sp, r0, r1, ror #20
    3c84:	580c3c00 	stmdapl	ip, {sl, fp, ip, sp}
    3c88:	38000027 	stmdacc	r0, {r0, r1, r2, r5}
    3c8c:	0000da62 	andeq	sp, r0, r2, ror #20
    3c90:	df0c4000 	svcle	0x000c4000
    3c94:	38000018 	stmdacc	r0, {r3, r4}
    3c98:	0000da63 	andeq	sp, r0, r3, ror #20
    3c9c:	160c4400 	strne	r4, [ip], -r0, lsl #8
    3ca0:	38000024 	stmdacc	r0, {r2, r5}
    3ca4:	0000da64 	andeq	sp, r0, r4, ror #20
    3ca8:	040c4800 	streq	r4, [ip], #-2048	; 0xfffff800
    3cac:	3800002e 	stmdacc	r0, {r1, r2, r3, r5}
    3cb0:	0000da65 	andeq	sp, r0, r5, ror #20
    3cb4:	330c4c00 	movwcc	r4, #52224	; 0xcc00
    3cb8:	3800003c 	stmdacc	r0, {r2, r3, r4, r5}
    3cbc:	0000da67 	andeq	sp, r0, r7, ror #20
    3cc0:	410c5000 	mrsmi	r5, (UNDEF: 12)
    3cc4:	3800003c 	stmdacc	r0, {r2, r3, r4, r5}
    3cc8:	0000da68 	andeq	sp, r0, r8, ror #20
    3ccc:	4f0c5400 	svcmi	0x000c5400
    3cd0:	3800003c 	stmdacc	r0, {r2, r3, r4, r5}
    3cd4:	0000da69 	andeq	sp, r0, r9, ror #20
    3cd8:	7b0c5800 	blvc	316008 <axp2585_set_usb_vhold+0x314dc4>
    3cdc:	3800002f 	stmdacc	r0, {r0, r1, r2, r3, r5}
    3ce0:	0000da6a 	andeq	sp, r0, sl, ror #20
    3ce4:	6a0c5c00 	bvs	317008 <axp2585_set_usb_vhold+0x315dc4>
    3ce8:	3800003c 	stmdacc	r0, {r2, r3, r4, r5}
    3cec:	0000da6b 	andeq	sp, r0, fp, ror #20
    3cf0:	780c6000 	stmdavc	ip, {sp, lr}
    3cf4:	3800003c 	stmdacc	r0, {r2, r3, r4, r5}
    3cf8:	0000da6c 	andeq	sp, r0, ip, ror #20
    3cfc:	860c6400 	strhi	r6, [ip], -r0, lsl #8
    3d00:	3800003c 	stmdacc	r0, {r2, r3, r4, r5}
    3d04:	0000da6d 	andeq	sp, r0, sp, ror #20
    3d08:	940c6800 	strls	r6, [ip], #-2048	; 0xfffff800
    3d0c:	3800003c 	stmdacc	r0, {r2, r3, r4, r5}
    3d10:	0000da6e 	andeq	sp, r0, lr, ror #20
    3d14:	a20c6c00 	andge	r6, ip, #0, 24
    3d18:	3800003c 	stmdacc	r0, {r2, r3, r4, r5}
    3d1c:	0000da6f 	andeq	sp, r0, pc, ror #20
    3d20:	0b0c7000 	bleq	31c008 <axp2585_set_usb_vhold+0x31adc4>
    3d24:	38000020 	stmdacc	r0, {r5}
    3d28:	0000da70 	andeq	sp, r0, r0, ror sl
    3d2c:	1a0c7400 	bne	31d008 <axp2585_set_usb_vhold+0x31bdc4>
    3d30:	38000020 	stmdacc	r0, {r5}
    3d34:	0000da71 	andeq	sp, r0, r1, ror sl
    3d38:	290c7800 	stmdbcs	ip, {fp, ip, sp, lr}
    3d3c:	38000020 	stmdacc	r0, {r5}
    3d40:	0000da72 	andeq	sp, r0, r2, ror sl
    3d44:	380c7c00 	stmdacc	ip, {sl, fp, ip, sp, lr}
    3d48:	38000020 	stmdacc	r0, {r5}
    3d4c:	0000da73 	andeq	sp, r0, r3, ror sl
    3d50:	470c8000 	strmi	r8, [ip, -r0]
    3d54:	38000020 	stmdacc	r0, {r5}
    3d58:	0000da74 	andeq	sp, r0, r4, ror sl
    3d5c:	560c8400 	strpl	r8, [ip], -r0, lsl #8
    3d60:	38000020 	stmdacc	r0, {r5}
    3d64:	0000da75 	andeq	sp, r0, r5, ror sl
    3d68:	650c8800 	strvs	r8, [ip, #-2048]	; 0xfffff800
    3d6c:	38000020 	stmdacc	r0, {r5}
    3d70:	0000da76 	andeq	sp, r0, r6, ror sl
    3d74:	740c8c00 	strvc	r8, [ip], #-3072	; 0xfffff400
    3d78:	38000020 	stmdacc	r0, {r5}
    3d7c:	0000da77 	andeq	sp, r0, r7, ror sl
    3d80:	830c9000 	movwhi	r9, #49152	; 0xc000
    3d84:	38000020 	stmdacc	r0, {r5}
    3d88:	0000da78 	andeq	sp, r0, r8, ror sl
    3d8c:	920c9400 	andls	r9, ip, #0, 8
    3d90:	38000020 	stmdacc	r0, {r5}
    3d94:	0000da79 	andeq	sp, r0, r9, ror sl
    3d98:	c80c9800 	stmdagt	ip, {fp, ip, pc}
    3d9c:	38000020 	stmdacc	r0, {r5}
    3da0:	0000da7a 	andeq	sp, r0, sl, ror sl
    3da4:	d70c9c00 	strle	r9, [ip, -r0, lsl #24]
    3da8:	38000020 	stmdacc	r0, {r5}
    3dac:	0000da7b 	andeq	sp, r0, fp, ror sl
    3db0:	e60ca000 	str	sl, [ip], -r0
    3db4:	38000020 	stmdacc	r0, {r5}
    3db8:	0000da7c 	andeq	sp, r0, ip, ror sl
    3dbc:	f50ca400 			; <UNDEFINED> instruction: 0xf50ca400
    3dc0:	38000020 	stmdacc	r0, {r5}
    3dc4:	0000da7d 	andeq	sp, r0, sp, ror sl
    3dc8:	040ca800 	streq	sl, [ip], #-2048	; 0xfffff800
    3dcc:	38000021 	stmdacc	r0, {r0, r5}
    3dd0:	0000da7e 	andeq	sp, r0, lr, ror sl
    3dd4:	130cac00 	movwne	sl, #52224	; 0xcc00
    3dd8:	38000021 	stmdacc	r0, {r0, r5}
    3ddc:	0000da7f 	andeq	sp, r0, pc, ror sl
    3de0:	220cb000 	andcs	fp, ip, #0
    3de4:	38000021 	stmdacc	r0, {r0, r5}
    3de8:	0000da80 	andeq	sp, r0, r0, lsl #21
    3dec:	310cb400 	tstcc	ip, r0, lsl #8
    3df0:	38000021 	stmdacc	r0, {r0, r5}
    3df4:	0000da81 	andeq	sp, r0, r1, lsl #21
    3df8:	400cb800 	andmi	fp, ip, r0, lsl #16
    3dfc:	38000021 	stmdacc	r0, {r0, r5}
    3e00:	0000da82 	andeq	sp, r0, r2, lsl #21
    3e04:	4f0cbc00 	svcmi	0x000cbc00
    3e08:	38000021 	stmdacc	r0, {r0, r5}
    3e0c:	0000da83 	andeq	sp, r0, r3, lsl #21
    3e10:	bf0cc000 	svclt	0x000cc000
    3e14:	38000021 	stmdacc	r0, {r0, r5}
    3e18:	0000da84 	andeq	sp, r0, r4, lsl #21
    3e1c:	ce0cc400 	cfcpysgt	mvf12, mvf12
    3e20:	38000021 	stmdacc	r0, {r0, r5}
    3e24:	0000da85 	andeq	sp, r0, r5, lsl #21
    3e28:	dd0cc800 	stcle	8, cr12, [ip, #-0]
    3e2c:	38000021 	stmdacc	r0, {r0, r5}
    3e30:	0000da86 	andeq	sp, r0, r6, lsl #21
    3e34:	480ccc00 	stmdami	ip, {sl, fp, lr, pc}
    3e38:	38000019 	stmdacc	r0, {r0, r3, r4}
    3e3c:	0000da88 	andeq	sp, r0, r8, lsl #21
    3e40:	980cd000 	stmdals	ip, {ip, lr, pc}
    3e44:	38000047 	stmdacc	r0, {r0, r1, r2, r6}
    3e48:	0000da89 	andeq	sp, r0, r9, lsl #21
    3e4c:	730cd400 	movwvc	sp, #50176	; 0xc400
    3e50:	3800000f 	stmdacc	r0, {r0, r1, r2, r3}
    3e54:	0000da8a 	andeq	sp, r0, sl, lsl #21
    3e58:	340cd800 	strcc	sp, [ip], #-2048	; 0xfffff800
    3e5c:	3800003f 	stmdacc	r0, {r0, r1, r2, r3, r4, r5}
    3e60:	0000da8b 	andeq	sp, r0, fp, lsl #21
    3e64:	3d0cdc00 	stccc	12, cr13, [ip, #-0]
    3e68:	38000027 	stmdacc	r0, {r0, r1, r2, r5}
    3e6c:	0000da8c 	andeq	sp, r0, ip, lsl #21
    3e70:	f10ce000 			; <UNDEFINED> instruction: 0xf10ce000
    3e74:	38000014 	stmdacc	r0, {r2, r4}
    3e78:	0000da8d 	andeq	sp, r0, sp, lsl #21
    3e7c:	8c0ce400 	cfstrshi	mvf14, [ip], {-0}
    3e80:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    3e84:	0000da8e 	andeq	sp, r0, lr, lsl #21
    3e88:	9f0ce800 	svcls	0x000ce800
    3e8c:	3800000f 	stmdacc	r0, {r0, r1, r2, r3}
    3e90:	0000da8f 	andeq	sp, r0, pc, lsl #21
    3e94:	780cec00 	stmdavc	ip, {sl, fp, sp, lr, pc}
    3e98:	3800001f 	stmdacc	r0, {r0, r1, r2, r3, r4}
    3e9c:	0000da90 	muleq	r0, r0, sl
    3ea0:	7a0cf000 	bvc	33c008 <axp2585_set_usb_vhold+0x33adc4>
    3ea4:	38000027 	stmdacc	r0, {r0, r1, r2, r5}
    3ea8:	0000da91 	muleq	r0, r1, sl
    3eac:	2b0cf400 	blcs	33d008 <axp2585_set_usb_vhold+0x33bdc4>
    3eb0:	3800003b 	stmdacc	r0, {r0, r1, r3, r4, r5}
    3eb4:	0000da92 	muleq	r0, r2, sl
    3eb8:	680cf800 	stmdavs	ip, {fp, ip, sp, lr, pc}
    3ebc:	38000017 	stmdacc	r0, {r0, r1, r2, r4}
    3ec0:	0000da93 	muleq	r0, r3, sl
    3ec4:	b91bfc00 	ldmdblt	fp, {sl, fp, ip, sp, lr, pc}
    3ec8:	38000044 	stmdacc	r0, {r2, r6}
    3ecc:	0000da94 	muleq	r0, r4, sl
    3ed0:	1b010000 	blne	43ed8 <axp2585_set_usb_vhold+0x42c94>
    3ed4:	0000345e 	andeq	r3, r0, lr, asr r4
    3ed8:	00da9538 	sbcseq	r9, sl, r8, lsr r5
    3edc:	01040000 	mrseq	r0, (UNDEF: 4)
    3ee0:	000ee91b 	andeq	lr, lr, fp, lsl r9
    3ee4:	da963800 	ble	fe591eec <axp2585_set_usb_vhold+0xfe590ca8>
    3ee8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    3eec:	05271b01 	streq	r1, [r7, #-2817]!	; 0xfffff4ff
    3ef0:	97380000 	ldrls	r0, [r8, -r0]!
    3ef4:	000000da 	ldrdeq	r0, [r0], -sl
    3ef8:	421b010c 	andsmi	r0, fp, #12, 2
    3efc:	38000005 	stmdacc	r0, {r0, r2}
    3f00:	0000da98 	muleq	r0, r8, sl
    3f04:	1b011000 	blne	47f0c <axp2585_set_usb_vhold+0x46cc8>
    3f08:	00003bc9 	andeq	r3, r0, r9, asr #23
    3f0c:	00da9938 	sbcseq	r9, sl, r8, lsr r9
    3f10:	01140000 	tsteq	r4, r0
    3f14:	002c9b1b 	eoreq	r9, ip, fp, lsl fp
    3f18:	da9a3800 	ble	fe691f20 <axp2585_set_usb_vhold+0xfe690cdc>
    3f1c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    3f20:	24561b01 	ldrbcs	r1, [r6], #-2817	; 0xfffff4ff
    3f24:	9b380000 	blls	e03f2c <axp2585_set_usb_vhold+0xe02ce8>
    3f28:	000000da 	ldrdeq	r0, [r0], -sl
    3f2c:	e41b011c 	ldr	r0, [fp], #-284	; 0xfffffee4
    3f30:	38000037 	stmdacc	r0, {r0, r1, r2, r4, r5}
    3f34:	0000da9c 	muleq	r0, ip, sl
    3f38:	1b012000 	blne	4bf40 <axp2585_set_usb_vhold+0x4acfc>
    3f3c:	00001890 	muleq	r0, r0, r8
    3f40:	00da9d38 	sbcseq	r9, sl, r8, lsr sp
    3f44:	01240000 	teqeq	r4, r0
    3f48:	00041a1b 	andeq	r1, r4, fp, lsl sl
    3f4c:	da9e3800 	ble	fe791f54 <axp2585_set_usb_vhold+0xfe790d10>
    3f50:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    3f54:	22c51b01 	sbccs	r1, r5, #1024	; 0x400
    3f58:	9f380000 	svcls	0x00380000
    3f5c:	000000da 	ldrdeq	r0, [r0], -sl
    3f60:	1a1b012c 	bne	6c04b8 <axp2585_set_usb_vhold+0x6bf274>
    3f64:	38000040 	stmdacc	r0, {r6}
    3f68:	0000daa0 	andeq	sp, r0, r0, lsr #21
    3f6c:	1b013000 	blne	4ff74 <axp2585_set_usb_vhold+0x4ed30>
    3f70:	000035c3 	andeq	r3, r0, r3, asr #11
    3f74:	00daa138 	sbcseq	sl, sl, r8, lsr r1
    3f78:	01340000 	teqeq	r4, r0
    3f7c:	00121f1b 	andseq	r1, r2, fp, lsl pc
    3f80:	daa23800 	ble	fe891f88 <axp2585_set_usb_vhold+0xfe890d44>
    3f84:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    3f88:	13ae1b01 			; <UNDEFINED> instruction: 0x13ae1b01
    3f8c:	a3380000 	teqge	r8, #0
    3f90:	000000da 	ldrdeq	r0, [r0], -sl
    3f94:	6f1b013c 	svcvs	0x001b013c
    3f98:	38000021 	stmdacc	r0, {r0, r5}
    3f9c:	0000daa4 	andeq	sp, r0, r4, lsr #21
    3fa0:	1b014000 	blne	53fa8 <axp2585_set_usb_vhold+0x52d64>
    3fa4:	00002a4f 	andeq	r2, r0, pc, asr #20
    3fa8:	00daa538 	sbcseq	sl, sl, r8, lsr r5
    3fac:	01440000 	mrseq	r0, (UNDEF: 68)
    3fb0:	00441a1b 	subeq	r1, r4, fp, lsl sl
    3fb4:	daa63800 	ble	fe991fbc <axp2585_set_usb_vhold+0xfe990d78>
    3fb8:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    3fbc:	11a81b01 			; <UNDEFINED> instruction: 0x11a81b01
    3fc0:	a7380000 	ldrge	r0, [r8, -r0]!
    3fc4:	000000da 	ldrdeq	r0, [r0], -sl
    3fc8:	5f1b014c 	svcpl	0x001b014c
    3fcc:	38000010 	stmdacc	r0, {r4}
    3fd0:	0000daa9 	andeq	sp, r0, r9, lsr #21
    3fd4:	1b015000 	blne	57fdc <axp2585_set_usb_vhold+0x56d98>
    3fd8:	0000217e 	andeq	r2, r0, lr, ror r1
    3fdc:	00daaa38 	sbcseq	sl, sl, r8, lsr sl
    3fe0:	01540000 	cmpeq	r4, r0
    3fe4:	0010731b 	andseq	r7, r0, fp, lsl r3
    3fe8:	daab3800 	ble	fead1ff0 <axp2585_set_usb_vhold+0xfead0dac>
    3fec:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
    3ff0:	10cc1b01 	sbcne	r1, ip, r1, lsl #22
    3ff4:	ac380000 	ldcge	0, cr0, [r8], #-0
    3ff8:	000000da 	ldrdeq	r0, [r0], -sl
    3ffc:	241b015c 	ldrcs	r0, [fp], #-348	; 0xfffffea4
    4000:	38000004 	stmdacc	r0, {r2}
    4004:	0000daad 	andeq	sp, r0, sp, lsr #21
    4008:	1b016000 	blne	5c010 <axp2585_set_usb_vhold+0x5adcc>
    400c:	0000177b 	andeq	r1, r0, fp, ror r7
    4010:	00daae38 	sbcseq	sl, sl, r8, lsr lr
    4014:	01640000 	cmneq	r4, r0
    4018:	00178e1b 	andseq	r8, r7, fp, lsl lr
    401c:	daaf3800 	ble	febd2024 <axp2585_set_usb_vhold+0xfebd0de0>
    4020:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
    4024:	17a11b01 	strne	r1, [r1, r1, lsl #22]!
    4028:	b0380000 	eorslt	r0, r8, r0
    402c:	000000da 	ldrdeq	r0, [r0], -sl
    4030:	b41b016c 	ldrlt	r0, [fp], #-364	; 0xfffffe94
    4034:	38000017 	stmdacc	r0, {r0, r1, r2, r4}
    4038:	0000dab1 			; <UNDEFINED> instruction: 0x0000dab1
    403c:	1b017000 	blne	60044 <axp2585_set_usb_vhold+0x5ee00>
    4040:	000017c7 	andeq	r1, r0, r7, asr #15
    4044:	00dab238 	sbcseq	fp, sl, r8, lsr r2
    4048:	01740000 	cmneq	r4, r0
    404c:	0017da1b 	andseq	sp, r7, fp, lsl sl
    4050:	dab33800 	ble	fecd2058 <axp2585_set_usb_vhold+0xfecd0e14>
    4054:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    4058:	256c1b01 	strbcs	r1, [ip, #-2817]!	; 0xfffff4ff
    405c:	b4380000 	ldrtlt	r0, [r8], #-0
    4060:	000000da 	ldrdeq	r0, [r0], -sl
    4064:	ff1b017c 			; <UNDEFINED> instruction: 0xff1b017c
    4068:	38000017 	stmdacc	r0, {r0, r1, r2, r4}
    406c:	0000dab5 			; <UNDEFINED> instruction: 0x0000dab5
    4070:	1b018000 	blne	64078 <axp2585_set_usb_vhold+0x62e34>
    4074:	00001812 	andeq	r1, r0, r2, lsl r8
    4078:	00dab638 	sbcseq	fp, sl, r8, lsr r6
    407c:	01840000 	orreq	r0, r4, r0
    4080:	003e8f1b 	eorseq	r8, lr, fp, lsl pc
    4084:	dab73800 	ble	fedd208c <axp2585_set_usb_vhold+0xfedd0e48>
    4088:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
    408c:	3ea31b01 	vfmacc.f64	d1, d3, d1
    4090:	b8380000 	ldmdalt	r8!, {}	; <UNPREDICTABLE>
    4094:	000000da 	ldrdeq	r0, [r0], -sl
    4098:	b71b018c 	ldrlt	r0, [fp, -ip, lsl #3]
    409c:	3800003e 	stmdacc	r0, {r1, r2, r3, r4, r5}
    40a0:	0000dab9 			; <UNDEFINED> instruction: 0x0000dab9
    40a4:	1b019000 	blne	680ac <axp2585_set_usb_vhold+0x66e68>
    40a8:	00003ecb 	andeq	r3, r0, fp, asr #29
    40ac:	00daba38 	sbcseq	fp, sl, r8, lsr sl
    40b0:	01940000 	orrseq	r0, r4, r0
    40b4:	003edf1b 	eorseq	sp, lr, fp, lsl pc
    40b8:	dabb3800 	ble	feed20c0 <axp2585_set_usb_vhold+0xfeed0e7c>
    40bc:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
    40c0:	3ef31b01 	vmovcc.f64	d17, #49	; 0x31
    40c4:	bc380000 	ldclt	0, cr0, [r8], #-0
    40c8:	000000da 	ldrdeq	r0, [r0], -sl
    40cc:	071b019c 			; <UNDEFINED> instruction: 0x071b019c
    40d0:	3800003f 	stmdacc	r0, {r0, r1, r2, r3, r4, r5}
    40d4:	0000dabd 			; <UNDEFINED> instruction: 0x0000dabd
    40d8:	0001a000 	andeq	sl, r1, r0
    40dc:	0024fa0b 	eoreq	pc, r4, fp, lsl #20
    40e0:	c0383800 	eorsgt	r3, r8, r0, lsl #16
    40e4:	00004191 	muleq	r0, r1, r1
    40e8:	002c700c 	eoreq	r7, ip, ip
    40ec:	90c13800 	sbcls	r3, r1, r0, lsl #16
    40f0:	00000000 	andeq	r0, r0, r0
    40f4:	0026040c 	eoreq	r0, r6, ip, lsl #8
    40f8:	90c23800 	sbcls	r3, r2, r0, lsl #16
    40fc:	04000000 	streq	r0, [r0], #-0
    4100:	0018800c 	andseq	r8, r8, ip
    4104:	90c33800 	sbcls	r3, r3, r0, lsl #16
    4108:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    410c:	000ce50c 	andeq	lr, ip, ip, lsl #10
    4110:	90c43800 	sbcls	r3, r4, r0, lsl #16
    4114:	0c000000 	stceq	0, cr0, [r0], {-0}
    4118:	0002f10c 	andeq	pc, r2, ip, lsl #2
    411c:	90c53800 	sbcls	r3, r5, r0, lsl #16
    4120:	10000000 	andne	r0, r0, r0
    4124:	0023080c 	eoreq	r0, r3, ip, lsl #16
    4128:	90c63800 	sbcls	r3, r6, r0, lsl #16
    412c:	14000000 	strne	r0, [r0], #-0
    4130:	002f910c 	eoreq	r9, pc, ip, lsl #2
    4134:	90c73800 	sbcls	r3, r7, r0, lsl #16
    4138:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    413c:	00116c0c 	andseq	r6, r1, ip, lsl #24
    4140:	90c83800 	sbcls	r3, r8, r0, lsl #16
    4144:	1c000000 	stcne	0, cr0, [r0], {-0}
    4148:	0037fb0c 	eorseq	pc, r7, ip, lsl #22
    414c:	a1c93800 	bicge	r3, r9, r0, lsl #16
    4150:	20000043 	andcs	r0, r0, r3, asr #32
    4154:	0046ca0c 	subeq	ip, r6, ip, lsl #20
    4158:	a1ca3800 	bicge	r3, sl, r0, lsl #16
    415c:	24000043 	strcs	r0, [r0], #-67	; 0xffffffbd
    4160:	001ef80c 	andseq	pc, lr, ip, lsl #16
    4164:	bbcb3800 	bllt	ff2d216c <axp2585_set_usb_vhold+0xff2d0f28>
    4168:	28000043 	stmdacs	r0, {r0, r1, r6}
    416c:	0003350c 	andeq	r3, r3, ip, lsl #10
    4170:	a1cc3800 	bicge	r3, ip, r0, lsl #16
    4174:	2c000043 	stccs	0, cr0, [r0], {67}	; 0x43
    4178:	001ecc0c 	andseq	ip, lr, ip, lsl #24
    417c:	bbcd3800 	bllt	ff352184 <axp2585_set_usb_vhold+0xff350f40>
    4180:	30000043 	andcc	r0, r0, r3, asr #32
    4184:	0003080c 	andeq	r0, r3, ip, lsl #16
    4188:	a1ce3800 	bicge	r3, lr, r0, lsl #16
    418c:	34000043 	strcc	r0, [r0], #-67	; 0xffffffbd
    4190:	00902000 	addseq	r2, r0, r0
    4194:	41a00000 	movmi	r0, r0
    4198:	a00f0000 	andge	r0, pc, r0
    419c:	00000041 	andeq	r0, r0, r1, asr #32
    41a0:	41a60406 			; <UNDEFINED> instruction: 0x41a60406
    41a4:	b3260000 	teqlt	r6, #0
    41a8:	f4000043 	vst4.16	{d0-d3}, [r0], r3
    41ac:	a1011b38 	tstge	r1, r8, lsr fp
    41b0:	27000043 	strcs	r0, [r0, -r3, asr #32]
    41b4:	00002451 	andeq	r2, r0, r1, asr r4
    41b8:	cb011c38 	blgt	4b2a0 <axp2585_set_usb_vhold+0x4a05c>
    41bc:	00000038 	andeq	r0, r0, r8, lsr r0
    41c0:	00636129 	rsbeq	r6, r3, r9, lsr #2
    41c4:	cb011d38 	blgt	4b6ac <axp2585_set_usb_vhold+0x4a468>
    41c8:	04000038 	streq	r0, [r0], #-56	; 0xffffffc8
    41cc:	62737529 	rsbsvs	r7, r3, #171966464	; 0xa400000
    41d0:	011e3800 	tsteq	lr, r0, lsl #16
    41d4:	000038cb 	andeq	r3, r0, fp, asr #17
    41d8:	3b6b2708 	blcc	1ac9c28 <axp2585_set_usb_vhold+0x1ac89e4>
    41dc:	22380000 	eorscs	r0, r8, #0
    41e0:	00460d01 	subeq	r0, r6, r1, lsl #26
    41e4:	0c270c00 	stceq	12, cr0, [r7], #-0
    41e8:	38000040 	stmdacc	r0, {r6}
    41ec:	46130123 	ldrmi	r0, [r3], -r3, lsr #2
    41f0:	29100000 	ldmdbcs	r0, {}	; <UNPREDICTABLE>
    41f4:	00766564 	rsbseq	r6, r6, r4, ror #10
    41f8:	35012438 	strcc	r2, [r1, #-1080]	; 0xfffffbc8
    41fc:	14000015 	strne	r0, [r0], #-21	; 0xffffffeb
    4200:	00439627 	subeq	r9, r3, r7, lsr #12
    4204:	01253800 	teqeq	r5, r0, lsl #16
    4208:	0000469e 	muleq	r0, lr, r6
    420c:	31432718 	cmpcc	r3, r8, lsl r7
    4210:	26380000 	ldrtcs	r0, [r8], -r0
    4214:	000fc501 	andeq	ip, pc, r1, lsl #10
    4218:	31271c00 	teqcc	r7, r0, lsl #24
    421c:	3800000f 	stmdacc	r0, {r0, r1, r2, r3}
    4220:	106d0127 	rsbne	r0, sp, r7, lsr #2
    4224:	27380000 	ldrcs	r0, [r8, -r0]!
    4228:	00000e46 	andeq	r0, r0, r6, asr #28
    422c:	6d012838 	stcvs	8, cr2, [r1, #-224]	; 0xffffff20
    4230:	6c000010 	stcvs	0, cr0, [r0], {16}
    4234:	00242827 	eoreq	r2, r4, r7, lsr #16
    4238:	01293800 	teqeq	r9, r0, lsl #16
    423c:	00000057 	andeq	r0, r0, r7, asr r0
    4240:	227527a0 	rsbscs	r2, r5, #160, 14	; 0x2800000
    4244:	2a380000 	bcs	e0424c <axp2585_set_usb_vhold+0xe03008>
    4248:	00048801 	andeq	r8, r4, r1, lsl #16
    424c:	4927a400 	stmdbmi	r7!, {sl, sp, pc}
    4250:	3800000b 	stmdacc	r0, {r0, r1, r3}
    4254:	0090012c 	addseq	r0, r0, ip, lsr #2
    4258:	27b00000 	ldrcs	r0, [r0, r0]!
    425c:	0000385b 	andeq	r3, r0, fp, asr r8
    4260:	90012d38 	andls	r2, r1, r8, lsr sp
    4264:	b4000000 	strlt	r0, [r0], #-0
    4268:	001e2b27 	andseq	r2, lr, r7, lsr #22
    426c:	012e3800 	teqeq	lr, r0, lsl #16
    4270:	00000090 	muleq	r0, r0, r0
    4274:	2f9127b8 	svccs	0x009127b8
    4278:	2f380000 	svccs	0x00380000
    427c:	00009001 	andeq	r9, r0, r1
    4280:	6c27bc00 	stcvs	12, cr11, [r7], #-0
    4284:	38000011 	stmdacc	r0, {r0, r4}
    4288:	00900130 	addseq	r0, r0, r0, lsr r1
    428c:	27c00000 	strbcs	r0, [r0, r0]
    4290:	000027d3 	ldrdeq	r2, [r0], -r3
    4294:	90013538 	andls	r3, r1, r8, lsr r5
    4298:	c4000000 	strgt	r0, [r0], #-0
    429c:	000b5227 	andeq	r5, fp, r7, lsr #4
    42a0:	01363800 	teqeq	r6, r0, lsl #16
    42a4:	00000090 	muleq	r0, r0, r0
    42a8:	024927c8 	subeq	r2, r9, #200, 14	; 0x3200000
    42ac:	37380000 	ldrcc	r0, [r8, -r0]!
    42b0:	00009001 	andeq	r9, r0, r1
    42b4:	3727cc00 	strcc	ip, [r7, -r0, lsl #24]!
    42b8:	38000028 	stmdacc	r0, {r3, r5}
    42bc:	00900138 	addseq	r0, r0, r8, lsr r1
    42c0:	27d00000 	ldrbcs	r0, [r0, r0]
    42c4:	00002b34 	andeq	r2, r0, r4, lsr fp
    42c8:	90013938 	andls	r3, r1, r8, lsr r9
    42cc:	d4000001 	strle	r0, [r0], #-1
    42d0:	00065227 	andeq	r5, r6, r7, lsr #4
    42d4:	013a3800 	teqeq	sl, r0, lsl #16
    42d8:	00000190 	muleq	r0, r0, r1
    42dc:	3b5a27d5 	blcc	1689f5c <axp2585_set_usb_vhold+0x1688d18>
    42e0:	3b380000 	blcc	e042e8 <axp2585_set_usb_vhold+0xe030a4>
    42e4:	00019001 	andeq	r9, r1, r1
    42e8:	cd27d600 	stcgt	6, cr13, [r7, #-0]
    42ec:	3800002f 	stmdacc	r0, {r0, r1, r2, r3, r5}
    42f0:	0190013c 	orrseq	r0, r0, ip, lsr r1
    42f4:	27d70000 	ldrbcs	r0, [r7, r0]
    42f8:	000014d4 	ldrdeq	r1, [r0], -r4
    42fc:	90013d38 	andls	r3, r1, r8, lsr sp
    4300:	d8000001 	stmdale	r0, {r0}
    4304:	002e3127 	eoreq	r3, lr, r7, lsr #2
    4308:	01423800 	cmpeq	r2, r0, lsl #16
    430c:	00000190 	muleq	r0, r0, r1
    4310:	0d5e27d9 	ldcleq	7, cr2, [lr, #-868]	; 0xfffffc9c
    4314:	43380000 	teqmi	r8, #0
    4318:	00019001 	andeq	r9, r1, r1
    431c:	f127da00 			; <UNDEFINED> instruction: 0xf127da00
    4320:	38000024 	stmdacc	r0, {r2, r5}
    4324:	01900144 	orrseq	r0, r0, r4, asr #2
    4328:	27db0000 	ldrbcs	r0, [fp, r0]
    432c:	00000e56 	andeq	r0, r0, r6, asr lr
    4330:	90014538 	andls	r4, r1, r8, lsr r5
    4334:	dc000001 	stcle	0, cr0, [r0], {1}
    4338:	002c4427 	eoreq	r4, ip, r7, lsr #8
    433c:	01463800 	cmpeq	r6, r0, lsl #16
    4340:	00000190 	muleq	r0, r0, r1
    4344:	392927dd 	stmdbcc	r9!, {r0, r2, r3, r4, r6, r7, r8, r9, sl, sp}
    4348:	47380000 	ldrmi	r0, [r8, -r0]!
    434c:	00019001 	andeq	r9, r1, r1
    4350:	9527de00 	strls	sp, [r7, #-3584]!	; 0xfffff200
    4354:	38000025 	stmdacc	r0, {r0, r2, r5}
    4358:	01900148 	orrseq	r0, r0, r8, asr #2
    435c:	27df0000 	ldrbcs	r0, [pc, r0]
    4360:	00003d16 	andeq	r3, r0, r6, lsl sp
    4364:	90014a38 	andls	r4, r1, r8, lsr sl
    4368:	e0000000 	and	r0, r0, r0
    436c:	00063427 	andeq	r3, r6, r7, lsr #8
    4370:	014d3800 	cmpeq	sp, r0, lsl #16
    4374:	000000cf 	andeq	r0, r0, pc, asr #1
    4378:	44e127e4 	strbtmi	r2, [r1], #2020	; 0x7e4
    437c:	4e380000 	cdpmi	0, 3, cr0, cr8, cr0, {0}
    4380:	0000cf01 	andeq	ip, r0, r1, lsl #30
    4384:	6129e800 	teqvs	r9, r0, lsl #16
    4388:	38006364 	stmdacc	r0, {r2, r5, r6, r8, r9, sp, lr}
    438c:	47340150 			; <UNDEFINED> instruction: 0x47340150
    4390:	27ec0000 	strbcs	r0, [ip, r0]!
    4394:	00001959 	andeq	r1, r0, r9, asr r9
    4398:	45015238 	strmi	r5, [r1, #-568]	; 0xfffffdc8
    439c:	f0000047 			; <UNDEFINED> instruction: 0xf0000047
    43a0:	91040600 	tstls	r4, r0, lsl #12
    43a4:	20000041 	andcs	r0, r0, r1, asr #32
    43a8:	00000090 	muleq	r0, r0, r0
    43ac:	000043bb 			; <UNDEFINED> instruction: 0x000043bb
    43b0:	0041a00f 	subeq	sl, r1, pc
    43b4:	00900f00 	addseq	r0, r0, r0, lsl #30
    43b8:	06000000 	streq	r0, [r0], -r0
    43bc:	0043a704 	subeq	sl, r3, r4, lsl #14
    43c0:	33f20b00 	mvnscc	r0, #0, 22
    43c4:	383c0000 	ldmdacc	ip!, {}	; <UNPREDICTABLE>
    43c8:	004482d1 	ldrdeq	r8, [r4], #-33	; 0xffffffdf
    43cc:	2c700c00 	ldclcs	12, cr0, [r0], #-0
    43d0:	d2380000 	eorsle	r0, r8, #0
    43d4:	00000090 	muleq	r0, r0, r0
    43d8:	26040c00 	strcs	r0, [r4], -r0, lsl #24
    43dc:	d3380000 	teqle	r8, #0
    43e0:	00000090 	muleq	r0, r0, r0
    43e4:	18800c04 	stmne	r0, {r2, sl, fp}
    43e8:	d4380000 	ldrtle	r0, [r8], #-0
    43ec:	00000090 	muleq	r0, r0, r0
    43f0:	0ce50c08 	stcleq	12, cr0, [r5], #32
    43f4:	d5380000 	ldrle	r0, [r8, #-0]!
    43f8:	00000090 	muleq	r0, r0, r0
    43fc:	1cd90c0c 	ldclne	12, cr0, [r9], {12}
    4400:	d6380000 	ldrtle	r0, [r8], -r0
    4404:	00000090 	muleq	r0, r0, r0
    4408:	342f0c10 	strtcc	r0, [pc], #-3088	; 8 <.debug_info+0x8>
    440c:	d7380000 	ldrle	r0, [r8, -r0]!
    4410:	00000090 	muleq	r0, r0, r0
    4414:	18250c14 	stmdane	r5!, {r2, r4, sl, fp}
    4418:	d8380000 	ldmdale	r8!, {}	; <UNPREDICTABLE>
    441c:	00000090 	muleq	r0, r0, r0
    4420:	0bf70c18 	bleq	ffdc3068 <axp2585_set_usb_vhold+0xffdc1e24>
    4424:	d9380000 	ldmdble	r8!, {}	; <UNPREDICTABLE>
    4428:	00000090 	muleq	r0, r0, r0
    442c:	3b400c1c 	blcc	1003078 <axp2585_set_usb_vhold+0x1001e34>
    4430:	da380000 	ble	e04438 <axp2585_set_usb_vhold+0xe031f4>
    4434:	00000090 	muleq	r0, r0, r0
    4438:	2ab60c20 	bcs	fed83088 <axp2585_set_usb_vhold+0xfed81e44>
    443c:	db380000 	blle	e04444 <axp2585_set_usb_vhold+0xe03200>
    4440:	000043a1 	andeq	r4, r0, r1, lsr #7
    4444:	3b0e0c24 	blcc	383098 <axp2585_set_usb_vhold+0x381e54>
    4448:	dc380000 	ldcle	0, cr0, [r8], #-0
    444c:	000043a1 	andeq	r4, r0, r1, lsr #7
    4450:	2faf0c28 	svccs	0x00af0c28
    4454:	dd380000 	ldcle	0, cr0, [r8, #-0]
    4458:	000043bb 			; <UNDEFINED> instruction: 0x000043bb
    445c:	00ca0c2c 	sbceq	r0, sl, ip, lsr #24
    4460:	de380000 	cdple	0, 3, cr0, cr8, cr0, {0}
    4464:	000043a1 	andeq	r4, r0, r1, lsr #7
    4468:	2f980c30 	svccs	0x00980c30
    446c:	df380000 	svcle	0x00380000
    4470:	000043bb 			; <UNDEFINED> instruction: 0x000043bb
    4474:	01870c34 	orreq	r0, r7, r4, lsr ip
    4478:	e0380000 	eors	r0, r8, r0
    447c:	000043a1 	andeq	r4, r0, r1, lsr #7
    4480:	fb0b0038 	blx	2c00ea <axp2585_set_usb_vhold+0x2beea6>
    4484:	6800003c 	stmdavs	r0, {r2, r3, r4, r5}
    4488:	45c7e338 	strbmi	lr, [r7, #824]	; 0x338
    448c:	330c0000 	movwcc	r0, #49152	; 0xc000
    4490:	3800000e 	stmdacc	r0, {r1, r2, r3}
    4494:	000090e4 	andeq	r9, r0, r4, ror #1
    4498:	c60c0000 	strgt	r0, [ip], -r0
    449c:	38000018 	stmdacc	r0, {r3, r4}
    44a0:	000090e5 	andeq	r9, r0, r5, ror #1
    44a4:	b50c0400 	strlt	r0, [ip, #-1024]	; 0xfffffc00
    44a8:	38000014 	stmdacc	r0, {r2, r4}
    44ac:	000090e6 	andeq	r9, r0, r6, ror #1
    44b0:	0a0c0800 	beq	302008 <axp2585_set_usb_vhold+0x300dc4>
    44b4:	3800002a 	stmdacc	r0, {r1, r3, r5}
    44b8:	000090e7 	andeq	r9, r0, r7, ror #1
    44bc:	820c0c00 	andhi	r0, ip, #0, 24
    44c0:	38000009 	stmdacc	r0, {r0, r3}
    44c4:	000090e8 	andeq	r9, r0, r8, ror #1
    44c8:	9f0c1000 	svcls	0x000c1000
    44cc:	38000021 	stmdacc	r0, {r0, r5}
    44d0:	000090e9 	andeq	r9, r0, r9, ror #1
    44d4:	700c1400 	andvc	r1, ip, r0, lsl #8
    44d8:	3800002c 	stmdacc	r0, {r2, r3, r5}
    44dc:	000090ea 	andeq	r9, r0, sl, ror #1
    44e0:	040c1800 	streq	r1, [ip], #-2048	; 0xfffff800
    44e4:	38000026 	stmdacc	r0, {r1, r2, r5}
    44e8:	000090eb 	andeq	r9, r0, fp, ror #1
    44ec:	e10c1c00 	tst	ip, r0, lsl #24
    44f0:	38000043 	stmdacc	r0, {r0, r1, r6}
    44f4:	000090ec 	andeq	r9, r0, ip, ror #1
    44f8:	a30c2000 	movwge	r2, #49152	; 0xc000
    44fc:	38000047 	stmdacc	r0, {r0, r1, r2, r6}
    4500:	000090ed 	andeq	r9, r0, sp, ror #1
    4504:	d90c2400 	stmdble	ip, {sl, sp}
    4508:	3800001c 	stmdacc	r0, {r2, r3, r4}
    450c:	000090ee 	andeq	r9, r0, lr, ror #1
    4510:	f00c2800 			; <UNDEFINED> instruction: 0xf00c2800
    4514:	3800002b 	stmdacc	r0, {r0, r1, r3, r5}
    4518:	000090ef 	andeq	r9, r0, pc, ror #1
    451c:	3e0c2c00 	cdpcc	12, 0, cr2, cr12, cr0, {0}
    4520:	38000045 	stmdacc	r0, {r0, r2, r6}
    4524:	000090f0 	strdeq	r9, [r0], -r0
    4528:	800c3000 	andhi	r3, ip, r0
    452c:	38000015 	stmdacc	r0, {r0, r2, r4}
    4530:	000090f1 	strdeq	r9, [r0], -r1
    4534:	250c3400 	strcs	r3, [ip, #-1024]	; 0xfffffc00
    4538:	38000023 	stmdacc	r0, {r0, r1, r5}
    453c:	000090f2 	strdeq	r9, [r0], -r2
    4540:	d60c3800 	strle	r3, [ip], -r0, lsl #16
    4544:	3800001d 	stmdacc	r0, {r0, r2, r3, r4}
    4548:	000090f3 	strdeq	r9, [r0], -r3
    454c:	830c3c00 	movwhi	r3, #52224	; 0xcc00
    4550:	38000032 	stmdacc	r0, {r1, r4, r5}
    4554:	000090f4 	strdeq	r9, [r0], -r4
    4558:	730c4000 	movwvc	r4, #49152	; 0xc000
    455c:	38000018 	stmdacc	r0, {r3, r4}
    4560:	0043a1f5 	strdeq	sl, [r3], #-21	; 0xffffffeb
    4564:	dc0c4400 	cfstrsle	mvf4, [ip], {-0}
    4568:	3800000b 	stmdacc	r0, {r0, r1, r3}
    456c:	0043a1f6 	strdeq	sl, [r3], #-22	; 0xffffffea
    4570:	640c4800 	strvs	r4, [ip], #-2048	; 0xfffff800
    4574:	38000009 	stmdacc	r0, {r0, r3}
    4578:	0043a1f7 	strdeq	sl, [r3], #-23	; 0xffffffe9
    457c:	d60c4c00 	strle	r4, [ip], -r0, lsl #24
    4580:	38000018 	stmdacc	r0, {r3, r4}
    4584:	0043a1f8 	strdeq	sl, [r3], #-24	; 0xffffffe8
    4588:	370c5000 	strcc	r5, [ip, -r0]
    458c:	38000031 	stmdacc	r0, {r0, r4, r5}
    4590:	0043a1f9 	strdeq	sl, [r3], #-25	; 0xffffffe7
    4594:	6e0c5400 	cfcpysvs	mvf5, mvf12
    4598:	38000034 	stmdacc	r0, {r2, r4, r5}
    459c:	0043bbfa 	strdeq	fp, [r3], #-186	; 0xffffff46
    45a0:	1b0c5800 	blne	316008 <axp2585_set_usb_vhold+0x314dc4>
    45a4:	38000005 	stmdacc	r0, {r0, r2}
    45a8:	0043bbfb 	strdeq	fp, [r3], #-187	; 0xffffff45
    45ac:	0a0c5c00 	beq	317008 <axp2585_set_usb_vhold+0x315dc4>
    45b0:	3800001c 	stmdacc	r0, {r2, r3, r4}
    45b4:	0043bbfc 	strdeq	fp, [r3], #-188	; 0xffffff44
    45b8:	580c6000 	stmdapl	ip, {sp, lr}
    45bc:	38000025 	stmdacc	r0, {r0, r2, r5}
    45c0:	0043bbfd 	strdeq	fp, [r3], #-189	; 0xffffff43
    45c4:	26006400 	strcs	r6, [r0], -r0, lsl #8
    45c8:	0000371d 	andeq	r3, r0, sp, lsl r7
    45cc:	0112380c 	tsteq	r2, ip, lsl #16
    45d0:	000045fb 	strdeq	r4, [r0], -fp
    45d4:	00636129 	rsbeq	r6, r3, r9, lsr #2
    45d8:	fb011338 	blx	492c2 <axp2585_set_usb_vhold+0x4807e>
    45dc:	00000045 	andeq	r0, r0, r5, asr #32
    45e0:	62737529 	rsbsvs	r7, r3, #171966464	; 0xa400000
    45e4:	01143800 	tsteq	r4, r0, lsl #16
    45e8:	00004601 	andeq	r4, r0, r1, lsl #12
    45ec:	24512704 	ldrbcs	r2, [r1], #-1796	; 0xfffff8fc
    45f0:	15380000 	ldrne	r0, [r8, #-0]!
    45f4:	00460701 	subeq	r0, r6, r1, lsl #14
    45f8:	06000800 	streq	r0, [r0], -r0, lsl #16
    45fc:	0040dc04 	subeq	sp, r0, r4, lsl #24
    4600:	c1040600 	tstgt	r4, r0, lsl #12
    4604:	06000043 	streq	r0, [r0], -r3, asr #32
    4608:	00448204 	subeq	r8, r4, r4, lsl #4
    460c:	a7040600 	strge	r0, [r4, -r0, lsl #12]
    4610:	0600003a 			; <UNDEFINED> instruction: 0x0600003a
    4614:	0045c704 	subeq	ip, r5, r4, lsl #14
    4618:	0fc20b00 	svceq	0x00c20b00
    461c:	39280000 	stmdbcc	r8!, {}	; <UNPREDICTABLE>
    4620:	00469e48 	subeq	r9, r6, r8, asr #28
    4624:	65641200 	strbvs	r1, [r4, #-512]!	; 0xfffffe00
    4628:	49390076 	ldmdbmi	r9!, {r1, r2, r4, r5, r6}
    462c:	00001535 	andeq	r1, r0, r5, lsr r5
    4630:	44870c00 	strmi	r0, [r7], #3072	; 0xc00
    4634:	4a390000 	bmi	e4463c <axp2585_set_usb_vhold+0xe433f8>
    4638:	00004879 	andeq	r4, r0, r9, ror r8
    463c:	420f0c04 	andmi	r0, pc, #4, 24	; 0x400
    4640:	4b390000 	blmi	e44648 <axp2585_set_usb_vhold+0xe43404>
    4644:	00000090 	muleq	r0, r0, r0
    4648:	20b00c08 	adcscs	r0, r0, r8, lsl #24
    464c:	4c390000 	ldcmi	0, cr0, [r9], #-0
    4650:	000031de 	ldrdeq	r3, [r0], -lr
    4654:	3dee0c0c 	stclcc	12, cr0, [lr, #48]!	; 0x30
    4658:	4d390000 	ldcmi	0, cr0, [r9, #-0]
    465c:	0000488b 	andeq	r4, r0, fp, lsl #17
    4660:	72691210 	rsbvc	r1, r9, #16, 4
    4664:	4e390071 	mrcmi	0, 1, r0, cr9, cr1, {3}
    4668:	00000090 	muleq	r0, r0, r0
    466c:	30ae0c14 	adccc	r0, lr, r4, lsl ip
    4670:	4f390000 	svcmi	0x00390000
    4674:	00000190 	muleq	r0, r0, r1
    4678:	1f1f0c18 	svcne	0x001f0c18
    467c:	50390000 	eorspl	r0, r9, r0
    4680:	00000190 	muleq	r0, r0, r1
    4684:	02fe0c19 	rscseq	r0, lr, #6400	; 0x1900
    4688:	51390000 	teqpl	r9, r0
    468c:	00000230 	andeq	r0, r0, r0, lsr r2
    4690:	41940c1c 	orrsmi	r0, r4, ip, lsl ip
    4694:	52390000 	eorspl	r0, r9, #0
    4698:	00000090 	muleq	r0, r0, r0
    469c:	04060024 	streq	r0, [r6], #-36	; 0xffffffdc
    46a0:	00004619 	andeq	r4, r0, r9, lsl r6
    46a4:	001e9326 	andseq	r9, lr, r6, lsr #6
    46a8:	55381400 	ldrpl	r1, [r8, #-1024]!	; 0xfffffc00
    46ac:	00473401 	subeq	r3, r7, r1, lsl #8
    46b0:	278e2700 	strcs	r2, [lr, r0, lsl #14]
    46b4:	56380000 	ldrtpl	r0, [r8], -r0
    46b8:	0001ef01 	andeq	lr, r1, r1, lsl #30
    46bc:	90270000 	eorls	r0, r7, r0
    46c0:	38000019 	stmdacc	r0, {r0, r3, r4}
    46c4:	01ef0157 	mvneq	r0, r7, asr r1
    46c8:	27020000 	strcs	r0, [r2, -r0]
    46cc:	00000488 	andeq	r0, r0, r8, lsl #9
    46d0:	ef015838 	svc	0x00015838
    46d4:	04000001 	streq	r0, [r0], #-1
    46d8:	0041f727 	subeq	pc, r1, r7, lsr #14
    46dc:	01593800 	cmpeq	r9, r0, lsl #16
    46e0:	000001ef 	andeq	r0, r0, pc, ror #3
    46e4:	0d672706 	stcleq	7, cr2, [r7, #-24]!	; 0xffffffe8
    46e8:	5a380000 	bpl	e046f0 <axp2585_set_usb_vhold+0xe034ac>
    46ec:	0001ef01 	andeq	lr, r1, r1, lsl #30
    46f0:	1d270800 	stcne	8, cr0, [r7, #-0]
    46f4:	38000043 	stmdacc	r0, {r0, r1, r6}
    46f8:	01ef015b 	mvneq	r0, fp, asr r1
    46fc:	270a0000 	strcs	r0, [sl, -r0]
    4700:	0000032d 	andeq	r0, r0, sp, lsr #6
    4704:	ef015c38 	svc	0x00015c38
    4708:	0c000001 	stceq	0, cr0, [r0], {1}
    470c:	003e6c27 	eorseq	r6, lr, r7, lsr #24
    4710:	015d3800 	cmpeq	sp, r0, lsl #16
    4714:	000001ef 	andeq	r0, r0, pc, ror #3
    4718:	0bd3270e 	bleq	ff4c9c40 <axp2585_set_usb_vhold+0xff4c89fc>
    471c:	5e380000 	cdppl	0, 3, cr0, cr8, cr0, {0}
    4720:	0001ef01 	andeq	lr, r1, r1, lsl #30
    4724:	54271000 	strtpl	r1, [r7], #-0
    4728:	38000038 	stmdacc	r0, {r3, r4, r5}
    472c:	01ef015f 	mvneq	r0, pc, asr r1
    4730:	00120000 	andseq	r0, r2, r0
    4734:	46a40406 	strtmi	r0, [r4], r6, lsl #8
    4738:	450e0000 	strmi	r0, [lr, #-0]
    473c:	0f000047 	svceq	0x00000047
    4740:	000041a0 	andeq	r4, r0, r0, lsr #3
    4744:	3a040600 	bcc	105f4c <axp2585_set_usb_vhold+0x104d08>
    4748:	21000047 	tstcs	r0, r7, asr #32
    474c:	00001fc7 	andeq	r1, r0, r7, asr #31
    4750:	00005704 	andeq	r5, r0, r4, lsl #14
    4754:	6e223900 	cdpvs	9, 2, cr3, cr2, cr0, {0}
    4758:	22000047 	andcs	r0, r0, #71	; 0x47
    475c:	000028a6 	andeq	r2, r0, r6, lsr #17
    4760:	23f12200 	mvnscs	r2, #0, 4
    4764:	22010000 	andcs	r0, r1, #0
    4768:	00000e1e 	andeq	r0, r0, lr, lsl lr
    476c:	e50b0002 	str	r0, [fp, #-2]
    4770:	18000022 	stmdane	r0, {r1, r5}
    4774:	47ab2839 			; <UNDEFINED> instruction: 0x47ab2839
    4778:	750c0000 	strvc	r0, [ip, #-0]
    477c:	39000027 	stmdbcc	r0, {r0, r1, r2, r5}
    4780:	00474b29 	subeq	r4, r7, r9, lsr #22
    4784:	610c0000 	mrsvs	r0, (UNDEF: 12)
    4788:	39000026 	stmdbcc	r0, {r1, r2, r5}
    478c:	0047b02a 	subeq	fp, r7, sl, lsr #32
    4790:	410c0400 	tstmi	ip, r0, lsl #8
    4794:	3900000e 	stmdbcc	r0, {r1, r2, r3}
    4798:	0004882b 	andeq	r8, r4, fp, lsr #16
    479c:	d20c0800 	andle	r0, ip, #0, 16
    47a0:	39000025 	stmdbcc	r0, {r0, r2, r5}
    47a4:	0000ba2f 	andeq	fp, r0, pc, lsr #20
    47a8:	13001400 	movwne	r1, #1024	; 0x400
    47ac:	00002fbd 			; <UNDEFINED> instruction: 0x00002fbd
    47b0:	47ab0406 	strmi	r0, [fp, r6, lsl #8]!
    47b4:	fd0b0000 	stc2	0, cr0, [fp, #-0]
    47b8:	0800003f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5}
    47bc:	47db3239 			; <UNDEFINED> instruction: 0x47db3239
    47c0:	2c0c0000 	stccs	0, cr0, [ip], {-0}
    47c4:	39000009 	stmdbcc	r0, {r0, r3}
    47c8:	0032ff33 	eorseq	pc, r2, r3, lsr pc	; <UNPREDICTABLE>
    47cc:	0a0c0000 	beq	300008 <axp2585_set_usb_vhold+0x2fedc4>
    47d0:	39000042 	stmdbcc	r0, {r1, r6}
    47d4:	00002534 	andeq	r2, r0, r4, lsr r5
    47d8:	0b000400 	bleq	57e0 <.debug_info+0x57e0>
    47dc:	00002ae2 	andeq	r2, r0, r2, ror #21
    47e0:	18373910 	ldmdane	r7!, {r4, r8, fp, ip, sp}
    47e4:	0c000048 	stceq	0, cr0, [r0], {72}	; 0x48
    47e8:	00000303 	andeq	r0, r0, r3, lsl #6
    47ec:	00453839 	subeq	r3, r5, r9, lsr r8
    47f0:	0c000000 	stceq	0, cr0, [r0], {-0}
    47f4:	000038af 	andeq	r3, r0, pc, lsr #17
    47f8:	00573939 	subseq	r3, r7, r9, lsr r9
    47fc:	0c040000 	stceq	0, cr0, [r4], {-0}
    4800:	00000cb3 			; <UNDEFINED> instruction: 0x00000cb3
    4804:	00573a39 	subseq	r3, r7, r9, lsr sl
    4808:	0c080000 	stceq	0, cr0, [r8], {-0}
    480c:	00003fca 	andeq	r3, r0, sl, asr #31
    4810:	00903b39 	addseq	r3, r0, r9, lsr fp
    4814:	000c0000 	andeq	r0, ip, r0
    4818:	0011730b 	andseq	r7, r1, fp, lsl #6
    481c:	3e393000 	cdpcc	0, 3, cr3, cr9, cr0, {0}
    4820:	00004879 	andeq	r4, r0, r9, ror r8
    4824:	000e410c 	andeq	r4, lr, ip, lsl #2
    4828:	883f3900 	ldmdahi	pc!, {r8, fp, ip, sp}	; <UNPREDICTABLE>
    482c:	00000004 	andeq	r0, r0, r4
    4830:	70616d12 	rsbvc	r6, r1, r2, lsl sp
    4834:	79403900 	stmdbvc	r0, {r8, fp, ip, sp}^
    4838:	0c000048 	stceq	0, cr0, [r0], {72}	; 0x48
    483c:	0043960c 	subeq	r9, r3, ip, lsl #12
    4840:	7f413900 	svcvc	0x00413900
    4844:	10000048 	andne	r0, r0, r8, asr #32
    4848:	003a990c 	eorseq	r9, sl, ip, lsl #18
    484c:	85423900 	strbhi	r3, [r2, #-2304]	; 0xfffff700
    4850:	14000048 	strne	r0, [r0], #-72	; 0xffffffb8
    4854:	002d950c 	eoreq	r9, sp, ip, lsl #10
    4858:	90433900 	subls	r3, r3, r0, lsl #18
    485c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    4860:	0012430c 	andseq	r4, r2, ip, lsl #6
    4864:	f0443900 			; <UNDEFINED> instruction: 0xf0443900
    4868:	20000000 	andcs	r0, r0, r0
    486c:	003de10c 	eorseq	lr, sp, ip, lsl #2
    4870:	de453900 	cdple	9, 4, cr3, cr5, cr0, {0}
    4874:	28000002 	stmdacs	r0, {r1}
    4878:	6e040600 	cfmadd32vs	mvax0, mvfx0, mvfx4, mvfx0
    487c:	06000047 	streq	r0, [r0], -r7, asr #32
    4880:	0047db04 	subeq	sp, r7, r4, lsl #22
    4884:	b6040600 	strlt	r0, [r4], -r0, lsl #12
    4888:	06000047 	streq	r0, [r0], -r7, asr #32
    488c:	00481804 	subeq	r1, r8, r4, lsl #16
    4890:	079a0b00 	ldreq	r0, [sl, r0, lsl #22]
    4894:	39080000 	stmdbcc	r8, {}	; <UNPREDICTABLE>
    4898:	0048b65f 	subeq	fp, r8, pc, asr r6
    489c:	03030c00 	movweq	r0, #15360	; 0x3c00
    48a0:	60390000 	eorsvs	r0, r9, r0
    48a4:	00000144 	andeq	r0, r0, r4, asr #2
    48a8:	73691200 	cmnvc	r9, #0, 4
    48ac:	61390072 	teqvs	r9, r2, ror r0
    48b0:	000032ff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
    48b4:	042e0004 	strteq	r0, [lr], #-4
    48b8:	00000057 	andeq	r0, r0, r7, asr r0
    48bc:	48e17739 	stmiami	r1!, {r0, r3, r4, r5, r8, r9, sl, ip, sp, lr}^
    48c0:	75220000 	strvc	r0, [r2, #-0]!
    48c4:	01000042 	tsteq	r0, r2, asr #32
    48c8:	00094822 	andeq	r4, r9, r2, lsr #16
    48cc:	f8220200 			; <UNDEFINED> instruction: 0xf8220200
    48d0:	04000004 	streq	r0, [r0], #-4
    48d4:	003a8822 	eorseq	r8, sl, r2, lsr #16
    48d8:	22220800 	eorcs	r0, r2, #0, 16
    48dc:	1000003c 	andne	r0, r0, ip, lsr r0
    48e0:	57042e00 	strpl	r2, [r4, -r0, lsl #28]
    48e4:	39000000 	stmdbcc	r0, {}	; <UNPREDICTABLE>
    48e8:	0049007f 	subeq	r0, r9, pc, ror r0
    48ec:	24062200 	strcs	r2, [r6], #-512	; 0xfffffe00
    48f0:	22010000 	andcs	r0, r1, #0
    48f4:	00003a9e 	muleq	r0, lr, sl
    48f8:	0cc82202 	sfmeq	f2, 2, [r8], {2}
    48fc:	00040000 	andeq	r0, r4, r0
    4900:	00238f32 	eoreq	r8, r3, r2, lsr pc
    4904:	03800200 	orreq	r0, r0, #0, 4
    4908:	00000025 	andeq	r0, r0, r5, lsr #32
    490c:	00491e03 	subeq	r1, r9, r3, lsl #28
    4910:	65643300 	strbvs	r3, [r4, #-768]!	; 0xfffffd00
    4914:	80020076 	andhi	r0, r2, r6, ror r0
    4918:	00491e03 	subeq	r1, r9, r3, lsl #28
    491c:	04060000 	streq	r0, [r6], #-0
    4920:	00004924 	andeq	r4, r0, r4, lsr #18
    4924:	00153b07 	andseq	r3, r5, r7, lsl #22
    4928:	0a873400 	beq	fe1cd008 <axp2585_set_usb_vhold+0xfe1cbdc4>
    492c:	85020000 	strhi	r0, [r2, #-0]
    4930:	494f0303 	stmdbmi	pc, {r0, r1, r8, r9}^	; <UNPREDICTABLE>
    4934:	64330000 	ldrtvs	r0, [r3], #-0
    4938:	02007665 	andeq	r7, r0, #105906176	; 0x6500000
    493c:	15350385 	ldrne	r0, [r5, #-901]!	; 0xfffffc7b
    4940:	0a350000 	beq	d40008 <axp2585_set_usb_vhold+0xd3edc4>
    4944:	02000042 	andeq	r0, r0, #66	; 0x42
    4948:	00250385 	eoreq	r0, r5, r5, lsl #7
    494c:	36000000 	strcc	r0, [r0], -r0
    4950:	0000302e 	andeq	r3, r0, lr, lsr #32
    4954:	0025cd31 	eoreq	ip, r5, r1, lsr sp
    4958:	6b030000 	blvs	c4960 <axp2585_set_usb_vhold+0xc371c>
    495c:	37000049 	strcc	r0, [r0, -r9, asr #32]
    4960:	00000c9a 	muleq	r0, sl, ip
    4964:	496bcd31 	stmdbmi	fp!, {r0, r4, r5, r8, sl, fp, lr, pc}^
    4968:	06000000 	streq	r0, [r0], -r0
    496c:	00497104 	subeq	r7, r9, r4, lsl #2
    4970:	31430700 	cmpcc	r3, r0, lsl #14
    4974:	a9360000 	ldmdbge	r6!, {}	; <UNPREDICTABLE>
    4978:	0100001c 	tsteq	r0, ip, lsl r0
    497c:	000090bf 	strheq	r9, [r0], -pc	; <UNPREDICTABLE>
    4980:	49920300 	ldmibmi	r2, {r8, r9}
    4984:	72380000 	eorsvc	r0, r8, #0
    4988:	01006765 	tsteq	r0, r5, ror #14
    498c:	0000dabf 			; <UNDEFINED> instruction: 0x0000dabf
    4990:	51360000 	teqpl	r6, r0
    4994:	0100002f 	tsteq	r0, pc, lsr #32
    4998:	000090d0 	ldrdeq	r9, [r0], -r0
    499c:	49ae0300 	stmibmi	lr!, {r8, r9}
    49a0:	72380000 	eorsvc	r0, r8, #0
    49a4:	01006765 	tsteq	r0, r5, ror #14
    49a8:	0000dad0 	ldrdeq	sp, [r0], -r0
    49ac:	9f360000 	svcls	0x00360000
    49b0:	01000014 	tsteq	r0, r4, lsl r0
    49b4:	000090d5 	ldrdeq	r9, [r0], -r5
    49b8:	49ca0300 	stmibmi	sl, {r8, r9}^
    49bc:	72380000 	eorsvc	r0, r8, #0
    49c0:	01006765 	tsteq	r0, r5, ror #14
    49c4:	0000dad5 	ldrdeq	sp, [r0], -r5
    49c8:	b3360000 	teqlt	r6, #0
    49cc:	0100003b 	tsteq	r0, fp, lsr r0
    49d0:	00009063 	andeq	r9, r0, r3, rrx
    49d4:	4a070100 	bmi	1c4ddc <axp2585_set_usb_vhold+0x1c3b98>
    49d8:	a2370000 	eorsge	r0, r7, #0
    49dc:	01000035 	tsteq	r0, r5, lsr r0
    49e0:	0041a063 	subeq	sl, r1, r3, rrx
    49e4:	75633800 	strbvc	r3, [r3, #-2048]!	; 0xfffff800
    49e8:	63010072 	movwvs	r0, #4210	; 0x1072
    49ec:	00000090 	muleq	r0, r0, r0
    49f0:	706d7439 	rsbvc	r7, sp, r9, lsr r4
    49f4:	ba650100 	blt	1944dfc <axp2585_set_usb_vhold+0x1943bb8>
    49f8:	39000000 	stmdbcc	r0, {}	; <UNPREDICTABLE>
    49fc:	0070616d 	rsbseq	r6, r0, sp, ror #2
    4a00:	48796601 	ldmdami	r9!, {r0, r9, sl, sp, lr}^
    4a04:	36000000 	strcc	r0, [r0], -r0
    4a08:	00003bf6 	strdeq	r3, [r0], -r6
    4a0c:	00904601 	addseq	r4, r0, r1, lsl #12
    4a10:	44010000 	strmi	r0, [r1], #-0
    4a14:	3700004a 	strcc	r0, [r0, -sl, asr #32]
    4a18:	000035a2 	andeq	r3, r0, r2, lsr #11
    4a1c:	41a04601 	lslmi	r4, r1, #12
    4a20:	76380000 	ldrtvc	r0, [r8], -r0
    4a24:	01006c6f 	tsteq	r0, pc, ror #24
    4a28:	00009046 	andeq	r9, r0, r6, asr #32
    4a2c:	6d743900 	ldclvs	9, cr3, [r4, #-0]
    4a30:	48010070 	stmdami	r1, {r4, r5, r6}
    4a34:	000000ba 	strheq	r0, [r0], -sl
    4a38:	70616d39 	rsbvc	r6, r1, r9, lsr sp
    4a3c:	79490100 	stmdbvc	r9, {r8}^
    4a40:	00000048 	andeq	r0, r0, r8, asr #32
    4a44:	00421836 	subeq	r1, r2, r6, lsr r8
    4a48:	90260300 	eorls	r0, r6, r0, lsl #6
    4a4c:	03000001 	movweq	r0, #1
    4a50:	00004a60 	andeq	r4, r0, r0, ror #20
    4a54:	72747038 	rsbsvc	r7, r4, #56	; 0x38
    4a58:	37260300 	strcc	r0, [r6, -r0, lsl #6]!
    4a5c:	00000009 	andeq	r0, r0, r9
    4a60:	0018b13a 	andseq	fp, r8, sl, lsr r1
    4a64:	03d23100 	bicseq	r3, r2, #0, 2
    4a68:	00004a83 	andeq	r4, r0, r3, lsl #21
    4a6c:	000c9a37 	andeq	r9, ip, r7, lsr sl
    4a70:	60d23100 	sbcsvs	r3, r2, r0, lsl #2
    4a74:	37000032 	smladxcc	r0, r2, r0, r0
    4a78:	0000420a 	andeq	r4, r0, sl, lsl #4
    4a7c:	0025d331 	eoreq	sp, r5, r1, lsr r3
    4a80:	36000000 	strcc	r0, [r0], -r0
    4a84:	0000362c 	andeq	r3, r0, ip, lsr #12
    4a88:	00902501 	addseq	r2, r0, r1, lsl #10
    4a8c:	aa010000 	bge	44a94 <axp2585_set_usb_vhold+0x43850>
    4a90:	3700004a 	strcc	r0, [r0, -sl, asr #32]
    4a94:	000035a2 	andeq	r3, r0, r2, lsr #11
    4a98:	41a02501 	lslmi	r2, r1, #10
    4a9c:	63380000 	teqvs	r8, #0
    4aa0:	01007275 	tsteq	r0, r5, ror r2
    4aa4:	00009025 	andeq	r9, r0, r5, lsr #32
    4aa8:	833b0000 	teqhi	fp, #0
    4aac:	0000004a 	andeq	r0, r0, sl, asr #32
    4ab0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    4ab4:	01000000 	mrseq	r0, (UNDEF: 0)
    4ab8:	004ace9c 	umaaleq	ip, sl, ip, lr
    4abc:	4a933c00 	bmi	fe4d3ac4 <axp2585_set_usb_vhold+0xfe4d2880>
    4ac0:	00000000 	andeq	r0, r0, r0
    4ac4:	9e3d0000 	cdpls	0, 3, cr0, cr13, cr0, {0}
    4ac8:	0100004a 	tsteq	r0, sl, asr #32
    4acc:	96360051 			; <UNDEFINED> instruction: 0x96360051
    4ad0:	01000002 	tsteq	r0, r2
    4ad4:	00009041 	andeq	r9, r0, r1, asr #32
    4ad8:	4aea0100 	bmi	ffa84ee0 <axp2585_set_usb_vhold+0xffa83c9c>
    4adc:	a2370000 	eorsge	r0, r7, #0
    4ae0:	01000035 	tsteq	r0, r5, lsr r0
    4ae4:	0041a041 	subeq	sl, r1, r1, asr #32
    4ae8:	ce3b0000 	cdpgt	0, 3, cr0, cr11, cr0, {0}
    4aec:	0800004a 	stmdaeq	r0, {r1, r3, r6}
    4af0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    4af4:	01000000 	mrseq	r0, (UNDEF: 0)
    4af8:	004b079c 	umaaleq	r0, fp, ip, r7
    4afc:	4ade3c00 	bmi	ff793b04 <axp2585_set_usb_vhold+0xff7928c0>
    4b00:	00130000 	andseq	r0, r3, r0
    4b04:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
    4b08:	000009ad 	andeq	r0, r0, sp, lsr #19
    4b0c:	0090ba01 	addseq	fp, r0, r1, lsl #20
    4b10:	00100000 	andseq	r0, r0, r0
    4b14:	00080000 	andeq	r0, r8, r0
    4b18:	9c010000 	stcls	0, cr0, [r1], {-0}
    4b1c:	00004b30 	andeq	r4, r0, r0, lsr fp
    4b20:	0035a23f 	eorseq	sl, r5, pc, lsr r2
    4b24:	a0ba0100 	adcsge	r0, sl, r0, lsl #2
    4b28:	26000041 	strcs	r0, [r0], -r1, asr #32
    4b2c:	00000000 	andeq	r0, r0, r0
    4b30:	0030fa40 	eorseq	pc, r0, r0, asr #20
    4b34:	032a0100 	teqeq	sl, #0, 2
    4b38:	00000090 	muleq	r0, r0, r0
    4b3c:	00000000 	andeq	r0, r0, r0
    4b40:	00000044 	andeq	r0, r0, r4, asr #32
    4b44:	4b7c9c01 	blmi	1f2bb50 <axp2585_set_usb_vhold+0x1f2a90c>
    4b48:	72410000 	subvc	r0, r1, #0
    4b4c:	01007465 	tsteq	r0, r5, ror #8
    4b50:	0090032c 	addseq	r0, r0, ip, lsr #6
    4b54:	00390000 	eorseq	r0, r9, r0
    4b58:	3f420000 	svccc	0x00420000
    4b5c:	8c00003a 	stchi	0, cr0, [r0], {58}	; 0x3a
    4b60:	0500004b 	streq	r0, [r0, #-75]	; 0xffffffb5
    4b64:	00000003 	andeq	r0, r0, r3
    4b68:	00144300 	andseq	r4, r4, r0, lsl #6
    4b6c:	5ca60000 	stcpl	0, cr0, [r6]
    4b70:	34430000 	strbcc	r0, [r3], #-0
    4b74:	b1000000 	mrslt	r0, (UNDEF: 0)
    4b78:	0000005c 	andeq	r0, r0, ip, asr r0
    4b7c:	00005204 	andeq	r5, r0, r4, lsl #4
    4b80:	004b8c00 	subeq	r8, fp, r0, lsl #24
    4b84:	003e0500 	eorseq	r0, lr, r0, lsl #10
    4b88:	00180000 	andseq	r0, r8, r0
    4b8c:	004b7c07 	subeq	r7, fp, r7, lsl #24
    4b90:	35654000 	strbcc	r4, [r5, #-0]!
    4b94:	fa010000 	blx	44b9c <axp2585_set_usb_vhold+0x43958>
    4b98:	00009002 	andeq	r9, r0, r2
    4b9c:	00001800 	andeq	r1, r0, r0, lsl #16
    4ba0:	00004c00 	andeq	r4, r0, r0, lsl #24
    4ba4:	179c0100 	ldrne	r0, [ip, r0, lsl #2]
    4ba8:	4400004c 	strmi	r0, [r0], #-76	; 0xffffffb4
    4bac:	00766564 	rsbseq	r6, r6, r4, ror #10
    4bb0:	6002fa01 	andvs	pc, r2, r1, lsl #20
    4bb4:	62000032 	andvs	r0, r0, #50	; 0x32
    4bb8:	45000000 	strmi	r0, [r0, #-0]
    4bbc:	0000329a 	muleq	r0, sl, r2
    4bc0:	a002fc01 	andge	pc, r2, r1, lsl #24
    4bc4:	46000041 	strmi	r0, [r0], -r1, asr #32
    4bc8:	0000058b 	andeq	r0, r0, fp, lsl #11
    4bcc:	9002fd01 	andls	pc, r2, r1, lsl #26
    4bd0:	01000000 	mrseq	r0, (UNDEF: 0)
    4bd4:	494f4755 	stmdbmi	pc, {r0, r2, r4, r6, r8, r9, sl, lr}^	; <UNPREDICTABLE>
    4bd8:	00200000 	eoreq	r0, r0, r0
    4bdc:	00040000 	andeq	r0, r4, r0
    4be0:	fc010000 	stc2	0, cr0, [r1], {-0}
    4be4:	004c0402 	subeq	r0, ip, r2, lsl #8
    4be8:	495f4800 	ldmdbmi	pc, {fp, lr}^	; <UNPREDICTABLE>
    4bec:	00490000 	subeq	r0, r9, r0
    4bf0:	20000049 	andcs	r0, r0, r9, asr #32
    4bf4:	04000000 	streq	r0, [r0], #-0
    4bf8:	31000000 	mrscc	r0, (UNDEF: 0)
    4bfc:	491148cf 	ldmdbmi	r1, {r0, r1, r2, r3, r6, r7, fp, lr}
    4c00:	00000000 	andeq	r0, r0, r0
    4c04:	00003c43 	andeq	r3, r0, r3, asr #24
    4c08:	005cbc00 	subseq	fp, ip, r0, lsl #24
    4c0c:	00604300 	rsbeq	r4, r0, r0, lsl #6
    4c10:	5cb10000 	ldcpl	0, cr0, [r1]
    4c14:	40000000 	andmi	r0, r0, r0
    4c18:	000016a1 	andeq	r1, r0, r1, lsr #13
    4c1c:	9002ef01 	andls	lr, r2, r1, lsl #30
    4c20:	64000000 	strvs	r0, [r0], #-0
    4c24:	24000000 	strcs	r0, [r0], #-0
    4c28:	01000000 	mrseq	r0, (UNDEF: 0)
    4c2c:	004c969c 	umaaleq	r9, ip, ip, r6
    4c30:	65644400 	strbvs	r4, [r4, #-1024]!	; 0xfffffc00
    4c34:	ef010076 	svc	0x00010076
    4c38:	00326002 	eorseq	r6, r2, r2
    4c3c:	00007500 	andeq	r7, r0, r0, lsl #10
    4c40:	35204a00 	strcc	r4, [r0, #-2560]!	; 0xfffff600
    4c44:	f0010000 			; <UNDEFINED> instruction: 0xf0010000
    4c48:	0013e202 	andseq	lr, r3, r2, lsl #4
    4c4c:	00008800 	andeq	r8, r0, r0, lsl #16
    4c50:	329a4500 	addscc	r4, sl, #0, 10
    4c54:	f2010000 	vhadd.s8	d0, d1, d0
    4c58:	0041a002 	subeq	sl, r1, r2
    4c5c:	494f4700 	stmdbmi	pc, {r8, r9, sl, lr}^	; <UNPREDICTABLE>
    4c60:	00740000 	rsbseq	r0, r4, r0
    4c64:	00040000 	andeq	r0, r4, r0
    4c68:	f2010000 	vhadd.s8	d0, d1, d0
    4c6c:	004c8c02 	subeq	r8, ip, r2, lsl #24
    4c70:	495f4800 	ldmdbmi	pc, {fp, lr}^	; <UNPREDICTABLE>
    4c74:	00490000 	subeq	r0, r9, r0
    4c78:	74000049 	strvc	r0, [r0], #-73	; 0xffffffb7
    4c7c:	04000000 	streq	r0, [r0], #-0
    4c80:	31000000 	mrscc	r0, (UNDEF: 0)
    4c84:	491148cf 	ldmdbmi	r1, {r0, r1, r2, r3, r6, r7, fp, lr}
    4c88:	00000000 	andeq	r0, r0, r0
    4c8c:	00008043 	andeq	r8, r0, r3, asr #32
    4c90:	005cc800 	subseq	ip, ip, r0, lsl #16
    4c94:	3f4b0000 	svccc	0x004b0000
    4c98:	0100000a 	tsteq	r0, sl
    4c9c:	00880311 	addeq	r0, r8, r1, lsl r3
    4ca0:	00080000 	andeq	r0, r8, r0
    4ca4:	9c010000 	stcls	0, cr0, [r1], {-0}
    4ca8:	00004cd2 	ldrdeq	r4, [r0], -r2
    4cac:	76656444 	strbtvc	r6, [r5], -r4, asr #8
    4cb0:	03110100 	tsteq	r1, #0, 2
    4cb4:	00003260 	andeq	r3, r0, r0, ror #4
    4cb8:	0000009b 	muleq	r0, fp, r0
    4cbc:	00329a45 	eorseq	r9, r2, r5, asr #20
    4cc0:	03130100 	tsteq	r3, #0, 2
    4cc4:	000041a0 	andeq	r4, r0, r0, lsr #3
    4cc8:	0000904c 	andeq	r9, r0, ip, asr #32
    4ccc:	005cd400 	subseq	sp, ip, r0, lsl #8
    4cd0:	e3400000 	movt	r0, #0
    4cd4:	01000005 	tsteq	r0, r5
    4cd8:	009002dd 			; <UNDEFINED> instruction: 0x009002dd
    4cdc:	00900000 	addseq	r0, r0, r0
    4ce0:	00640000 	rsbeq	r0, r4, r0
    4ce4:	9c010000 	stcls	0, cr0, [r1], {-0}
    4ce8:	00004d93 	muleq	r0, r3, sp
    4cec:	000c9a4a 	andeq	r9, ip, sl, asr #20
    4cf0:	02dd0100 	sbcseq	r0, sp, #0, 2
    4cf4:	00003260 	andeq	r3, r0, r0, ror #4
    4cf8:	000000ae 	andeq	r0, r0, lr, lsr #1
    4cfc:	0100694d 	tsteq	r0, sp, asr #18
    4d00:	009002df 			; <UNDEFINED> instruction: 0x009002df
    4d04:	69410000 	stmdbvs	r1, {}^	; <UNPREDICTABLE>
    4d08:	01007172 	tsteq	r0, r2, ror r1
    4d0c:	009002df 			; <UNDEFINED> instruction: 0x009002df
    4d10:	00cc0000 	sbceq	r0, ip, r0
    4d14:	9a450000 	bls	1140008 <axp2585_set_usb_vhold+0x113edc4>
    4d18:	01000032 	tsteq	r0, r2, lsr r0
    4d1c:	41a002e0 	rormi	r0, r0, #5
    4d20:	c2450000 	subgt	r0, r5, #0
    4d24:	0100000f 	tsteq	r0, pc
    4d28:	469e02e1 	ldrmi	r0, [lr], r1, ror #5
    4d2c:	004e0000 	subeq	r0, lr, r0
    4d30:	94000049 	strls	r0, [r0], #-73	; 0xffffffb7
    4d34:	00000000 	andeq	r0, r0, r0
    4d38:	01000000 	mrseq	r0, (UNDEF: 0)
    4d3c:	4d4802e1 	sfmmi	f0, 2, [r8, #-900]	; 0xfffffc7c
    4d40:	11480000 	mrsne	r0, (UNDEF: 72)
    4d44:	00000049 	andeq	r0, r0, r9, asr #32
    4d48:	00494f47 	subeq	r4, r9, r7, asr #30
    4d4c:	0000a800 	andeq	sl, r0, r0, lsl #16
    4d50:	00000800 	andeq	r0, r0, r0, lsl #16
    4d54:	02e00100 	rsceq	r0, r0, #0, 2
    4d58:	00004d77 	andeq	r4, r0, r7, ror sp
    4d5c:	00495f48 	subeq	r5, r9, r8, asr #30
    4d60:	49004900 	stmdbmi	r0, {r8, fp, lr}
    4d64:	00a80000 	adceq	r0, r8, r0
    4d68:	00080000 	andeq	r0, r8, r0
    4d6c:	cf310000 	svcgt	0x00310000
    4d70:	00491148 	subeq	r1, r9, r8, asr #2
    4d74:	43000000 	movwmi	r0, #0
    4d78:	000000c8 	andeq	r0, r0, r8, asr #1
    4d7c:	00005ce0 	andeq	r5, r0, r0, ror #25
    4d80:	0000d843 	andeq	sp, r0, r3, asr #16
    4d84:	005ceb00 	subseq	lr, ip, r0, lsl #22
    4d88:	00e84300 	rsceq	r4, r8, r0, lsl #6
    4d8c:	5cf60000 	ldclpl	0, cr0, [r6]
    4d90:	40000000 	andmi	r0, r0, r0
    4d94:	00000c21 	andeq	r0, r0, r1, lsr #24
    4d98:	ce022801 	cdpgt	8, 0, cr2, cr2, cr1, {0}
    4d9c:	f4000001 	vst4.8	{d0-d3}, [r0], r1
    4da0:	54000000 	strpl	r0, [r0], #-0
    4da4:	01000000 	mrseq	r0, (UNDEF: 0)
    4da8:	004e069c 	umaaleq	r0, lr, ip, r6
    4dac:	65644400 	strbvs	r4, [r4, #-1024]!	; 0xfffffc00
    4db0:	28010076 	stmdacs	r1, {r1, r2, r4, r5, r6}
    4db4:	00153502 	andseq	r3, r5, r2, lsl #10
    4db8:	0000f500 	andeq	pc, r0, r0, lsl #10
    4dbc:	0bb34a00 	bleq	fecd2808 <axp2585_set_usb_vhold+0xfecd15c4>
    4dc0:	29010000 	stmdbcs	r1, {}	; <UNPREDICTABLE>
    4dc4:	0023d502 	eoreq	sp, r3, r2, lsl #10
    4dc8:	00010800 	andeq	r0, r1, r0, lsl #16
    4dcc:	75624400 	strbvc	r4, [r2, #-1024]!	; 0xfffffc00
    4dd0:	29010066 	stmdbcs	r1, {r1, r2, r5, r6}
    4dd4:	00014402 	andeq	r4, r1, r2, lsl #8
    4dd8:	00011b00 	andeq	r1, r1, r0, lsl #22
    4ddc:	00734d00 	rsbseq	r4, r3, r0, lsl #26
    4de0:	44022b01 	strmi	r2, [r2], #-2817	; 0xfffff4ff
    4de4:	4d000001 	stcmi	0, cr0, [r0, #-4]
    4de8:	00646e65 	rsbeq	r6, r4, r5, ror #28
    4dec:	44022c01 	strmi	r2, [r2], #-3073	; 0xfffff3ff
    4df0:	43000001 	movwmi	r0, #1
    4df4:	00000118 	andeq	r0, r0, r8, lsl r1
    4df8:	00005d02 	andeq	r5, r0, r2, lsl #26
    4dfc:	00013c43 	andeq	r3, r1, r3, asr #24
    4e00:	005d0200 	subseq	r0, sp, r0, lsl #4
    4e04:	9c400000 	marls	acc0, r0, r0
    4e08:	01000041 	tsteq	r0, r1, asr #32
    4e0c:	01ce020c 	biceq	r0, lr, ip, lsl #4
    4e10:	01480000 	mrseq	r0, (UNDEF: 72)
    4e14:	00540000 	subseq	r0, r4, r0
    4e18:	9c010000 	stcls	0, cr0, [r1], {-0}
    4e1c:	00004e79 	andeq	r4, r0, r9, ror lr
    4e20:	76656444 	strbtvc	r6, [r5], -r4, asr #8
    4e24:	020c0100 	andeq	r0, ip, #0, 2
    4e28:	00001535 	andeq	r1, r0, r5, lsr r5
    4e2c:	00000139 	andeq	r0, r0, r9, lsr r1
    4e30:	000bb34a 	andeq	fp, fp, sl, asr #6
    4e34:	020d0100 	andeq	r0, sp, #0, 2
    4e38:	000023d5 	ldrdeq	r2, [r0], -r5
    4e3c:	0000014c 	andeq	r0, r0, ip, asr #2
    4e40:	66756244 	ldrbtvs	r6, [r5], -r4, asr #4
    4e44:	020d0100 	andeq	r0, sp, #0, 2
    4e48:	00000144 	andeq	r0, r0, r4, asr #2
    4e4c:	0000015f 	andeq	r0, r0, pc, asr r1
    4e50:	0100734d 	tsteq	r0, sp, asr #6
    4e54:	0144020f 	cmpeq	r4, pc, lsl #4
    4e58:	654d0000 	strbvs	r0, [sp, #-0]
    4e5c:	0100646e 	tsteq	r0, lr, ror #8
    4e60:	01440210 	cmpeq	r4, r0, lsl r2
    4e64:	6c430000 	marvs	acc0, r0, r3
    4e68:	02000001 	andeq	r0, r0, #1
    4e6c:	4300005d 	movwmi	r0, #93	; 0x5d
    4e70:	00000190 	muleq	r0, r0, r1
    4e74:	00005d02 	andeq	r5, r0, r2, lsl #26
    4e78:	2bc43e00 	blcs	ff10f808 <axp2585_set_usb_vhold+0xff10e5c4>
    4e7c:	c4010000 	strgt	r0, [r1], #-0
    4e80:	00000090 	muleq	r0, r0, r0
    4e84:	0000019c 	muleq	r0, ip, r1
    4e88:	00000054 	andeq	r0, r0, r4, asr r0
    4e8c:	4ecf9c01 	cdpmi	12, 12, cr9, cr15, cr1, {0}
    4e90:	a23f0000 	eorsge	r0, pc, #0
    4e94:	01000035 	tsteq	r0, r5, lsr r0
    4e98:	0041a0c4 	subeq	sl, r1, r4, asr #1
    4e9c:	00017d00 	andeq	r7, r1, r0, lsl #26
    4ea0:	6d744f00 	ldclvs	15, cr4, [r4, #-0]
    4ea4:	c6010070 			; <UNDEFINED> instruction: 0xc6010070
    4ea8:	00004ecf 	andeq	r4, r0, pc, asr #29
    4eac:	39769102 	ldmdbcc	r6!, {r1, r8, ip, pc}^
    4eb0:	00736572 	rsbseq	r6, r3, r2, ror r5
    4eb4:	00dac701 	sbcseq	ip, sl, r1, lsl #14
    4eb8:	6d390000 	ldcvs	0, cr0, [r9, #-0]
    4ebc:	01007061 	tsteq	r0, r1, rrx
    4ec0:	004879c8 	subeq	r7, r8, r8, asr #19
    4ec4:	01bc4300 			; <UNDEFINED> instruction: 0x01bc4300
    4ec8:	5d0e0000 	stcpl	0, cr0, [lr, #-0]
    4ecc:	04000000 	streq	r0, [r0], #-0
    4ed0:	000000ba 	strheq	r0, [r0], -sl
    4ed4:	00004edf 	ldrdeq	r4, [r0], -pc	; <UNPREDICTABLE>
    4ed8:	00003e05 	andeq	r3, r0, r5, lsl #28
    4edc:	3e000100 	adfccs	f0, f0, f0
    4ee0:	00000406 	andeq	r0, r0, r6, lsl #8
    4ee4:	0090e601 	addseq	lr, r0, r1, lsl #12
    4ee8:	01f00000 	mvnseq	r0, r0
    4eec:	003c0000 	eorseq	r0, ip, r0
    4ef0:	9c010000 	stcls	0, cr0, [r1], {-0}
    4ef4:	00004f35 	andeq	r4, r0, r5, lsr pc
    4ef8:	0035a23f 	eorseq	sl, r5, pc, lsr r2
    4efc:	a0e60100 	rscge	r0, r6, r0, lsl #2
    4f00:	90000041 	andls	r0, r0, r1, asr #32
    4f04:	4f000001 	svcmi	0x00000001
    4f08:	00706d74 	rsbseq	r6, r0, r4, ror sp
    4f0c:	4ecfe801 	cdpmi	8, 12, cr14, cr15, cr1, {0}
    4f10:	91020000 	mrsls	r0, (UNDEF: 2)
    4f14:	215e5076 	cmpcs	lr, r6, ror r0
    4f18:	e9010000 	stmdb	r1, {}	; <UNPREDICTABLE>
    4f1c:	000000da 	ldrdeq	r0, [r0], -sl
    4f20:	70616d39 	rsbvc	r6, r1, r9, lsr sp
    4f24:	79ea0100 	stmibvc	sl!, {r8}^
    4f28:	43000048 	movwmi	r0, #72	; 0x48
    4f2c:	00000210 	andeq	r0, r0, r0, lsl r2
    4f30:	00005d0e 	andeq	r5, r0, lr, lsl #26
    4f34:	3aae4000 	bcc	feb90008 <axp2585_set_usb_vhold+0xfeb8edc4>
    4f38:	47010000 	strmi	r0, [r1, -r0]
    4f3c:	0001ce02 	andeq	ip, r1, r2, lsl #28
    4f40:	00022c00 	andeq	r2, r2, r0, lsl #24
    4f44:	00005000 	andeq	r5, r0, r0
    4f48:	f39c0100 	vaddw.u16	q0, q6, d0
    4f4c:	4400004f 	strmi	r0, [r0], #-79	; 0xffffffb1
    4f50:	00766564 	rsbseq	r6, r6, r4, ror #10
    4f54:	35024701 	strcc	r4, [r2, #-1793]	; 0xfffff8ff
    4f58:	a3000015 	movwge	r0, #21
    4f5c:	4a000001 	bmi	4f68 <.debug_info+0x4f68>
    4f60:	00000bb3 			; <UNDEFINED> instruction: 0x00000bb3
    4f64:	d5024801 	strle	r4, [r2, #-2049]	; 0xfffff7ff
    4f68:	b6000023 	strlt	r0, [r0], -r3, lsr #32
    4f6c:	44000001 	strmi	r0, [r0], #-1
    4f70:	00667562 	rsbeq	r7, r6, r2, ror #10
    4f74:	44024801 	strmi	r4, [r2], #-2049	; 0xfffff7ff
    4f78:	c9000001 	stmdbgt	r0, {r0}
    4f7c:	45000001 	strmi	r0, [r0, #-1]
    4f80:	0000329a 	muleq	r0, sl, r2
    4f84:	a0024a01 	andge	r4, r2, r1, lsl #20
    4f88:	4d000041 	stcmi	0, cr0, [r0, #-260]	; 0xfffffefc
    4f8c:	4b010073 	blmi	45160 <axp2585_set_usb_vhold+0x43f1c>
    4f90:	00014402 	andeq	r4, r1, r2, lsl #8
    4f94:	6e654d00 	cdpvs	13, 6, cr4, cr5, cr0, {0}
    4f98:	4c010064 	stcmi	0, cr0, [r1], {100}	; 0x64
    4f9c:	00014402 	andeq	r4, r1, r2, lsl #8
    4fa0:	0fe15100 	svceq	0x00e15100
    4fa4:	4d010000 	stcmi	0, cr0, [r1, #-0]
    4fa8:	00009002 	andeq	r9, r0, r2
    4fac:	0001e700 	andeq	lr, r1, r0, lsl #14
    4fb0:	416b4500 	cmnmi	fp, r0, lsl #10
    4fb4:	4d010000 	stcmi	0, cr0, [r1, #-0]
    4fb8:	00009002 	andeq	r9, r0, r2
    4fbc:	49004700 	stmdbmi	r0, {r8, r9, sl, lr}
    4fc0:	02340000 	eorseq	r0, r4, #0
    4fc4:	00040000 	andeq	r0, r4, r0
    4fc8:	4a010000 	bmi	44fd0 <axp2585_set_usb_vhold+0x43d8c>
    4fcc:	004fd702 	subeq	sp, pc, r2, lsl #14
    4fd0:	49114800 	ldmdbmi	r1, {fp, lr}
    4fd4:	43000000 	movwmi	r0, #0
    4fd8:	00000240 	andeq	r0, r0, r0, asr #4
    4fdc:	00004e79 	andeq	r4, r0, r9, ror lr
    4fe0:	00024c43 	andeq	r4, r2, r3, asr #24
    4fe4:	004edf00 	subeq	sp, lr, r0, lsl #30
    4fe8:	027c4c00 	rsbseq	r4, ip, #0, 24
    4fec:	5d020000 	stcpl	0, cr0, [r2, #-0]
    4ff0:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
    4ff4:	00001125 	andeq	r1, r0, r5, lsr #2
    4ff8:	0090da01 	addseq	sp, r0, r1, lsl #20
    4ffc:	027c0000 	rsbseq	r0, ip, #0
    5000:	003c0000 	eorseq	r0, ip, r0
    5004:	9c010000 	stcls	0, cr0, [r1], {-0}
    5008:	00005049 	andeq	r5, r0, r9, asr #32
    500c:	0035a23f 	eorseq	sl, r5, pc, lsr r2
    5010:	a0da0100 	sbcsge	r0, sl, r0, lsl #2
    5014:	fa000041 	blx	10c <.debug_info+0x10c>
    5018:	4f000001 	svcmi	0x00000001
    501c:	00706d74 	rsbseq	r6, r0, r4, ror sp
    5020:	4ecfdc01 	cdpmi	12, 12, cr13, cr15, cr1, {0}
    5024:	91020000 	mrsls	r0, (UNDEF: 2)
    5028:	65723976 	ldrbvs	r3, [r2, #-2422]!	; 0xfffff68a
    502c:	dd010073 	stcle	0, cr0, [r1, #-460]	; 0xfffffe34
    5030:	000000da 	ldrdeq	r0, [r0], -sl
    5034:	70616d39 	rsbvc	r6, r1, r9, lsr sp
    5038:	79de0100 	ldmibvc	lr, {r8}^
    503c:	43000048 	movwmi	r0, #72	; 0x48
    5040:	0000029c 	muleq	r0, ip, r2
    5044:	00005d0e 	andeq	r5, r0, lr, lsl #26
    5048:	0fb14000 	svceq	0x00b14000
    504c:	33010000 	movwcc	r0, #4096	; 0x1000
    5050:	0001ce02 	andeq	ip, r1, r2, lsl #28
    5054:	0002b800 	andeq	fp, r2, r0, lsl #16
    5058:	00008c00 	andeq	r8, r0, r0, lsl #24
    505c:	f99c0100 			; <UNDEFINED> instruction: 0xf99c0100
    5060:	44000050 	strmi	r0, [r0], #-80	; 0xffffffb0
    5064:	00766564 	rsbseq	r6, r6, r4, ror #10
    5068:	35023301 	strcc	r3, [r2, #-769]	; 0xfffffcff
    506c:	0d000015 	stceq	0, cr0, [r0, #-84]	; 0xffffffac
    5070:	4a000002 	bmi	5080 <.debug_info+0x5080>
    5074:	00000bb3 			; <UNDEFINED> instruction: 0x00000bb3
    5078:	d5023401 	strle	r3, [r2, #-1025]	; 0xfffffbff
    507c:	20000023 	andcs	r0, r0, r3, lsr #32
    5080:	44000002 	strmi	r0, [r0], #-2
    5084:	00667562 	rsbeq	r7, r6, r2, ror #10
    5088:	45023401 	strmi	r3, [r2, #-1025]	; 0xfffffbff
    508c:	33000000 	movwcc	r0, #0
    5090:	4a000002 	bmi	50a0 <.debug_info+0x50a0>
    5094:	00002ad2 	ldrdeq	r2, [r0], -r2	; <UNPREDICTABLE>
    5098:	c3023401 	movwgt	r3, #9217	; 0x2401
    509c:	46000001 	strmi	r0, [r0], -r1
    50a0:	41000002 	tstmi	r0, r2
    50a4:	006c6176 	rsbeq	r6, ip, r6, ror r1
    50a8:	90023601 	andls	r3, r2, r1, lsl #12
    50ac:	64000000 	strvs	r0, [r0], #-0
    50b0:	41000002 	tstmi	r0, r2
    50b4:	00727265 	rsbseq	r7, r2, r5, ror #4
    50b8:	90023601 	andls	r3, r2, r1, lsl #12
    50bc:	8f000000 	svchi	0x00000000
    50c0:	45000002 	strmi	r0, [r0, #-2]
    50c4:	0000329a 	muleq	r0, sl, r2
    50c8:	a0023701 	andge	r3, r2, r1, lsl #14
    50cc:	52000041 	andpl	r0, r0, #65	; 0x41
    50d0:	0070616d 	rsbseq	r6, r0, sp, ror #2
    50d4:	79023801 	stmdbvc	r2, {r0, fp, ip, sp}
    50d8:	01000048 	tsteq	r0, r8, asr #32
    50dc:	02e04355 	rsceq	r4, r0, #1409286145	; 0x54000001
    50e0:	5d190000 	ldcpl	0, cr0, [r9, #-0]
    50e4:	18430000 	stmdane	r3, {}^	; <UNPREDICTABLE>
    50e8:	25000003 	strcs	r0, [r0, #-3]
    50ec:	4300005d 	movwmi	r0, #93	; 0x5d
    50f0:	00000340 	andeq	r0, r0, r0, asr #6
    50f4:	00005d30 	andeq	r5, r0, r0, lsr sp
    50f8:	38224000 	stmdacc	r2!, {lr}
    50fc:	17010000 	strne	r0, [r1, -r0]
    5100:	0001ce02 	andeq	ip, r1, r2, lsl #28
    5104:	00034400 	andeq	r4, r3, r0, lsl #8
    5108:	00007400 	andeq	r7, r0, r0, lsl #8
    510c:	9f9c0100 	svcls	0x009c0100
    5110:	44000051 	strmi	r0, [r0], #-81	; 0xffffffaf
    5114:	00766564 	rsbseq	r6, r6, r4, ror #10
    5118:	35021701 	strcc	r1, [r2, #-1793]	; 0xfffff8ff
    511c:	ad000015 	stcge	0, cr0, [r0, #-84]	; 0xffffffac
    5120:	4a000002 	bmi	5130 <.debug_info+0x5130>
    5124:	00000bb3 			; <UNDEFINED> instruction: 0x00000bb3
    5128:	d5021801 	strle	r1, [r2, #-2049]	; 0xfffff7ff
    512c:	c0000023 	andgt	r0, r0, r3, lsr #32
    5130:	44000002 	strmi	r0, [r0], #-2
    5134:	00667562 	rsbeq	r7, r6, r2, ror #10
    5138:	45021801 	strmi	r1, [r2, #-2049]	; 0xfffff7ff
    513c:	d3000000 	movwle	r0, #0
    5140:	4a000002 	bmi	5150 <.debug_info+0x5150>
    5144:	00002ad2 	ldrdeq	r2, [r0], -r2	; <UNPREDICTABLE>
    5148:	c3021801 	movwgt	r1, #10241	; 0x2801
    514c:	e6000001 	str	r0, [r0], -r1
    5150:	52000002 	andpl	r0, r0, #2
    5154:	006c6176 	rsbeq	r6, ip, r6, ror r1
    5158:	90021a01 	andls	r1, r2, r1, lsl #20
    515c:	02000000 	andeq	r0, r0, #0
    5160:	65416491 	strbvs	r6, [r1, #-1169]	; 0xfffffb6f
    5164:	01007272 	tsteq	r0, r2, ror r2
    5168:	0090021a 	addseq	r0, r0, sl, lsl r2
    516c:	03040000 	movweq	r0, #16384	; 0x4000
    5170:	9a450000 	bls	1140008 <axp2585_set_usb_vhold+0x113edc4>
    5174:	01000032 	tsteq	r0, r2, lsr r0
    5178:	41a0021b 	lslmi	r0, fp, r2
    517c:	6d520000 	ldclvs	0, cr0, [r2, #-0]
    5180:	01007061 	tsteq	r0, r1, rrx
    5184:	4879021c 	ldmdami	r9!, {r2, r3, r4, r9}^
    5188:	55010000 	strpl	r0, [r1, #-0]
    518c:	00036c43 	andeq	r6, r3, r3, asr #24
    5190:	005d1900 	subseq	r1, sp, r0, lsl #18
    5194:	03ac4300 			; <UNDEFINED> instruction: 0x03ac4300
    5198:	5d3b0000 	ldcpl	0, cr0, [fp, #-0]
    519c:	40000000 	andmi	r0, r0, r0
    51a0:	000029e0 	andeq	r2, r0, r0, ror #19
    51a4:	90010301 	andls	r0, r1, r1, lsl #6
    51a8:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
    51ac:	5c000003 	stcpl	0, cr0, [r0], {3}
    51b0:	01000000 	mrseq	r0, (UNDEF: 0)
    51b4:	00520a9c 			; <UNDEFINED> instruction: 0x00520a9c
    51b8:	35a24a00 	strcc	r4, [r2, #2560]!	; 0xa00
    51bc:	03010000 	movweq	r0, #4096	; 0x1000
    51c0:	0041a001 	subeq	sl, r1, r1
    51c4:	00032200 	andeq	r2, r3, r0, lsl #4
    51c8:	6f764400 	svcvs	0x00764400
    51cc:	0301006c 	movweq	r0, #4204	; 0x106c
    51d0:	00009001 	andeq	r9, r0, r1
    51d4:	00033500 	andeq	r3, r3, r0, lsl #10
    51d8:	6d744100 	ldfvse	f4, [r4, #-0]
    51dc:	05010070 	streq	r0, [r1, #-112]	; 0xffffff90
    51e0:	0001e401 	andeq	lr, r1, r1, lsl #8
    51e4:	00035300 	andeq	r5, r3, r0, lsl #6
    51e8:	616d5200 	cmnvs	sp, r0, lsl #4
    51ec:	06010070 			; <UNDEFINED> instruction: 0x06010070
    51f0:	00487901 	subeq	r7, r8, r1, lsl #18
    51f4:	43540100 	cmpmi	r4, #0, 2
    51f8:	000003f8 	strdeq	r0, [r0], -r8
    51fc:	00005d3b 	andeq	r5, r0, fp, lsr sp
    5200:	00040c43 	andeq	r0, r4, r3, asr #24
    5204:	005cb100 	subseq	fp, ip, r0, lsl #2
    5208:	7f3e0000 	svcvc	0x003e0000
    520c:	0100000e 	tsteq	r0, lr
    5210:	000090f2 	strdeq	r9, [r0], -r2
    5214:	00041400 	andeq	r1, r4, r0, lsl #8
    5218:	00003800 	andeq	r3, r0, r0, lsl #16
    521c:	619c0100 	orrsvs	r0, ip, r0, lsl #2
    5220:	3f000052 	svccc	0x00000052
    5224:	000035a2 	andeq	r3, r0, r2, lsr #11
    5228:	41a0f201 	lslmi	pc, r1, #4	; <UNPREDICTABLE>
    522c:	03710000 	cmneq	r1, #0
    5230:	63530000 	cmpvs	r3, #0
    5234:	01007275 	tsteq	r0, r5, ror r2
    5238:	000090f2 	strdeq	r9, [r0], -r2
    523c:	00038400 	andeq	r8, r3, r0, lsl #8
    5240:	6d743900 	ldclvs	9, cr3, [r4, #-0]
    5244:	f4010070 	vst4.16	{d0-d3}, [r1 :256], r0
    5248:	000001e4 	andeq	r0, r0, r4, ror #3
    524c:	70616d39 	rsbvc	r6, r1, r9, lsr sp
    5250:	79f50100 	ldmibvc	r5!, {r8}^
    5254:	43000048 	movwmi	r0, #72	; 0x48
    5258:	00000444 	andeq	r0, r0, r4, asr #8
    525c:	00005d3b 	andeq	r5, r0, fp, lsr sp
    5260:	27b64b00 	ldrcs	r4, [r6, r0, lsl #22]!
    5264:	63010000 	movwvs	r0, #4096	; 0x1000
    5268:	00044c02 	andeq	r4, r4, r2, lsl #24
    526c:	00010000 	andeq	r0, r1, r0
    5270:	ed9c0100 	ldfs	f0, [ip]
    5274:	4a000052 	bmi	53c4 <.debug_info+0x53c4>
    5278:	000035a2 	andeq	r3, r0, r2, lsr #11
    527c:	a0026301 	andge	r6, r2, r1, lsl #6
    5280:	97000041 	strls	r0, [r0, -r1, asr #32]
    5284:	52000003 	andpl	r0, r0, #3
    5288:	00706d74 	rsbseq	r6, r0, r4, ror sp
    528c:	cf026501 	svcgt	0x00026501
    5290:	0200004e 	andeq	r0, r0, #78	; 0x4e
    5294:	6d526e91 	ldclvs	14, cr6, [r2, #-580]	; 0xfffffdbc
    5298:	01007061 	tsteq	r0, r1, rrx
    529c:	48790266 	ldmdami	r9!, {r1, r2, r5, r6, r9}^
    52a0:	55010000 	strpl	r0, [r1, #-0]
    52a4:	00047c43 	andeq	r7, r4, r3, asr #24
    52a8:	005d0e00 	subseq	r0, sp, r0, lsl #28
    52ac:	049c4300 	ldreq	r4, [ip], #768	; 0x300
    52b0:	5d0e0000 	stcpl	0, cr0, [lr, #-0]
    52b4:	bc430000 	marlt	acc0, r0, r3
    52b8:	46000004 	strmi	r0, [r0], -r4
    52bc:	4300005d 	movwmi	r0, #93	; 0x5d
    52c0:	000004cc 	andeq	r0, r0, ip, asr #9
    52c4:	00005cb1 			; <UNDEFINED> instruction: 0x00005cb1
    52c8:	0004ec43 	andeq	lr, r4, r3, asr #24
    52cc:	005cb100 	subseq	fp, ip, r0, lsl #2
    52d0:	04fc4300 	ldrbteq	r4, [ip], #768	; 0x300
    52d4:	5d460000 	stclpl	0, cr0, [r6, #-0]
    52d8:	0c430000 	mareq	acc0, r0, r3
    52dc:	b1000005 	tstlt	r0, r5
    52e0:	4300005c 	movwmi	r0, #92	; 0x5c
    52e4:	00000544 	andeq	r0, r0, r4, asr #10
    52e8:	00005cb1 			; <UNDEFINED> instruction: 0x00005cb1
    52ec:	30b73e00 	adcscc	r3, r7, r0, lsl #28
    52f0:	8d010000 	stchi	0, cr0, [r1, #-0]
    52f4:	00000090 	muleq	r0, r0, r0
    52f8:	0000054c 	andeq	r0, r0, ip, asr #10
    52fc:	00000270 	andeq	r0, r0, r0, ror r2
    5300:	54469c01 	strbpl	r9, [r6], #-3073	; 0xfffff3ff
    5304:	a23f0000 	eorsge	r0, pc, #0
    5308:	01000035 	tsteq	r0, r5, lsr r0
    530c:	0041a08d 	subeq	sl, r1, sp, lsl #1
    5310:	0003b500 	andeq	fp, r3, r0, lsl #10
    5314:	61764f00 	cmnvs	r6, r0, lsl #30
    5318:	8f01006c 	svchi	0x0001006c
    531c:	000000ba 	strheq	r0, [r0], -sl
    5320:	54539102 	ldrbpl	r9, [r3], #-258	; 0xfffffefe
    5324:	00000807 	andeq	r0, r0, r7, lsl #16
    5328:	4ecf8f01 	cdpmi	15, 12, cr8, cr15, cr1, {0}
    532c:	91020000 	mrsls	r0, (UNDEF: 2)
    5330:	6d744f5c 	ldclvs	15, cr4, [r4, #-368]!	; 0xfffffe90
    5334:	8f010070 	svchi	0x00010070
    5338:	00004ecf 	andeq	r4, r0, pc, asr #29
    533c:	555e9102 	ldrbpl	r9, [lr, #-258]	; 0xfffffefe
    5340:	00001298 	muleq	r0, r8, r2
    5344:	00ba9001 	adcseq	r9, sl, r1
    5348:	03de0000 	bicseq	r0, lr, #0
    534c:	00550000 	subseq	r0, r5, r0
    5350:	01000045 	tsteq	r0, r5, asr #32
    5354:	0000ba91 	muleq	r0, r1, sl
    5358:	00041200 	andeq	r1, r4, r0, lsl #4
    535c:	33095000 	movwcc	r5, #36864	; 0x9000
    5360:	92010000 	andls	r0, r1, #0
    5364:	00000090 	muleq	r0, r0, r0
    5368:	00283750 	eoreq	r3, r8, r0, asr r7
    536c:	90920100 	addsls	r0, r2, r0, lsl #2
    5370:	55000000 	strpl	r0, [r0, #-0]
    5374:	00000b49 	andeq	r0, r0, r9, asr #22
    5378:	00909301 	addseq	r9, r0, r1, lsl #6
    537c:	04510000 	ldrbeq	r0, [r1], #-0
    5380:	6d560000 	ldclvs	0, cr0, [r6, #-0]
    5384:	01007061 	tsteq	r0, r1, rrx
    5388:	00487994 	umaaleq	r7, r8, r4, r9
    538c:	00046f00 	andeq	r6, r4, r0, lsl #30
    5390:	05704300 	ldrbeq	r4, [r0, #-768]!	; 0xfffffd00
    5394:	5d510000 	ldclpl	0, cr0, [r1, #-0]
    5398:	9c430000 	marls	acc0, r0, r3
    539c:	51000005 	tstpl	r0, r5
    53a0:	4300005d 	movwmi	r0, #93	; 0x5d
    53a4:	000005c0 	andeq	r0, r0, r0, asr #11
    53a8:	00005d51 	andeq	r5, r0, r1, asr sp
    53ac:	0005e443 	andeq	lr, r5, r3, asr #8
    53b0:	005d0e00 	subseq	r0, sp, r0, lsl #28
    53b4:	05f84300 	ldrbeq	r4, [r8, #768]!	; 0x300
    53b8:	5d0e0000 	stcpl	0, cr0, [lr, #-0]
    53bc:	1c430000 	marne	acc0, r0, r3
    53c0:	46000006 	strmi	r0, [r0], -r6
    53c4:	4300005d 	movwmi	r0, #93	; 0x5d
    53c8:	00000634 	andeq	r0, r0, r4, lsr r6
    53cc:	00005cb1 			; <UNDEFINED> instruction: 0x00005cb1
    53d0:	00065c43 	andeq	r5, r6, r3, asr #24
    53d4:	005cb100 	subseq	fp, ip, r0, lsl #2
    53d8:	068c4300 	streq	r4, [ip], r0, lsl #6
    53dc:	5d510000 	ldclpl	0, cr0, [r1, #-0]
    53e0:	e4430000 	strb	r0, [r3], #-0
    53e4:	25000006 	strcs	r0, [r0, #-6]
    53e8:	4300005d 	movwmi	r0, #93	; 0x5d
    53ec:	000006f4 	strdeq	r0, [r0], -r4
    53f0:	00005d30 	andeq	r5, r0, r0, lsr sp
    53f4:	00071443 	andeq	r1, r7, r3, asr #8
    53f8:	005d4600 	subseq	r4, sp, r0, lsl #12
    53fc:	07244300 	streq	r4, [r4, -r0, lsl #6]!
    5400:	5cb10000 	ldcpl	0, cr0, [r1]
    5404:	30430000 	subcc	r0, r3, r0
    5408:	b1000007 	tstlt	r0, r7
    540c:	4300005c 	movwmi	r0, #92	; 0x5c
    5410:	00000750 	andeq	r0, r0, r0, asr r7
    5414:	00005d46 	andeq	r5, r0, r6, asr #26
    5418:	00076043 	andeq	r6, r7, r3, asr #32
    541c:	005cb100 	subseq	fp, ip, r0, lsl #2
    5420:	07704300 	ldrbeq	r4, [r0, -r0, lsl #6]!
    5424:	5cb10000 	ldcpl	0, cr0, [r1]
    5428:	80430000 	subhi	r0, r3, r0
    542c:	46000007 	strmi	r0, [r0], -r7
    5430:	4300005d 	movwmi	r0, #93	; 0x5d
    5434:	00000790 	muleq	r0, r0, r7
    5438:	00005cb1 			; <UNDEFINED> instruction: 0x00005cb1
    543c:	0007a043 	andeq	sl, r7, r3, asr #32
    5440:	005cb100 	subseq	fp, ip, r0, lsl #2
    5444:	743e0000 	ldrtvc	r0, [lr], #-0
    5448:	0100000d 	tsteq	r0, sp
    544c:	00009077 	andeq	r9, r0, r7, ror r0
    5450:	0007bc00 	andeq	fp, r7, r0, lsl #24
    5454:	00003400 	andeq	r3, r0, r0, lsl #8
    5458:	919c0100 	orrsls	r0, ip, r0, lsl #2
    545c:	3f000054 	svccc	0x00000054
    5460:	000035a2 	andeq	r3, r0, r2, lsr #11
    5464:	41a07701 	lslmi	r7, r1, #14
    5468:	048d0000 	streq	r0, [sp], #0
    546c:	744f0000 	strbvc	r0, [pc], #-0	; 5474 <.debug_info+0x5474>
    5470:	0100706d 	tsteq	r0, sp, rrx
    5474:	0000ba79 	andeq	fp, r0, r9, ror sl
    5478:	6f910200 	svcvs	0x00910200
    547c:	70616d39 	rsbvc	r6, r1, r9, lsr sp
    5480:	797a0100 	ldmdbvc	sl!, {r8}^
    5484:	43000048 	movwmi	r0, #72	; 0x48
    5488:	000007d8 	ldrdeq	r0, [r0], -r8
    548c:	00005d51 	andeq	r5, r0, r1, asr sp
    5490:	00a53e00 	adceq	r3, r5, r0, lsl #28
    5494:	5a010000 	bpl	4549c <axp2585_set_usb_vhold+0x44258>
    5498:	00000090 	muleq	r0, r0, r0
    549c:	000007f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    54a0:	00000034 	andeq	r0, r0, r4, lsr r0
    54a4:	54dc9c01 	ldrbpl	r9, [ip], #3073	; 0xc01
    54a8:	a23f0000 	eorsge	r0, pc, #0
    54ac:	01000035 	tsteq	r0, r5, lsr r0
    54b0:	0041a05a 	subeq	sl, r1, sl, asr r0
    54b4:	0004a000 	andeq	sl, r4, r0
    54b8:	6d744f00 	ldclvs	15, cr4, [r4, #-0]
    54bc:	5c010070 	stcpl	0, cr0, [r1], {112}	; 0x70
    54c0:	000000ba 	strheq	r0, [r0], -sl
    54c4:	396f9102 	stmdbcc	pc!, {r1, r8, ip, pc}^	; <UNPREDICTABLE>
    54c8:	0070616d 	rsbseq	r6, r0, sp, ror #2
    54cc:	48795d01 	ldmdami	r9!, {r0, r8, sl, fp, ip, lr}^
    54d0:	0c430000 	mareq	acc0, r0, r3
    54d4:	51000008 	tstpl	r0, r8
    54d8:	0000005d 	andeq	r0, r0, sp, asr r0
    54dc:	00078532 	andeq	r8, r7, r2, lsr r5
    54e0:	01390100 	teqeq	r9, r0, lsl #2
    54e4:	00000090 	muleq	r0, r0, r0
    54e8:	00556501 	subseq	r6, r5, r1, lsl #10
    54ec:	0fc23500 	svceq	0x00c23500
    54f0:	39010000 	stmdbcc	r1, {}	; <UNPREDICTABLE>
    54f4:	00469e01 	subeq	r9, r6, r1, lsl #28
    54f8:	3c2b4500 	cfstr32cc	mvfx4, [fp], #-0
    54fc:	3b010000 	blcc	45504 <axp2585_set_usb_vhold+0x442c0>
    5500:	00556501 	subseq	r6, r5, r1, lsl #10
    5504:	61764d00 	cmnvs	r6, r0, lsl #26
    5508:	3c01006c 	stccc	0, cr0, [r1], {108}	; 0x6c
    550c:	0000ba01 	andeq	fp, r0, r1, lsl #20
    5510:	42574500 	subsmi	r4, r7, #0, 10
    5514:	3d010000 	stccc	0, cr0, [r1, #-0]
    5518:	00009001 	andeq	r9, r0, r1
    551c:	64724d00 	ldrbtvs	r4, [r2], #-3328	; 0xfffff300
    5520:	3d010063 	stccc	0, cr0, [r1, #-396]	; 0xfffffe74
    5524:	00009001 	andeq	r9, r0, r1
    5528:	616d4d00 	cmnvs	sp, r0, lsl #26
    552c:	3e010070 	mcrcc	0, 0, r0, cr1, cr0, {3}
    5530:	00487901 	subeq	r7, r8, r1, lsl #18
    5534:	00694d00 	rsbeq	r4, r9, r0, lsl #26
    5538:	90013f01 	andls	r3, r1, r1, lsl #30
    553c:	45000000 	strmi	r0, [r0, #-0]
    5540:	000007f3 	strdeq	r0, [r0], -r3
    5544:	75013f01 	strvc	r3, [r1, #-3841]	; 0xfffff0ff
    5548:	45000055 	strmi	r0, [r0, #-85]	; 0xffffffab
    554c:	00004082 	andeq	r4, r0, r2, lsl #1
    5550:	c5014001 	strgt	r4, [r1, #-1]
    5554:	5700002b 	strpl	r0, [r0, -fp, lsr #32]
    5558:	00003a3f 	andeq	r3, r0, pc, lsr sl
    555c:	00005595 	muleq	r0, r5, r5
    5560:	00000785 	andeq	r0, r0, r5, lsl #15
    5564:	00ba0400 	adcseq	r0, sl, r0, lsl #8
    5568:	55750000 	ldrbpl	r0, [r5, #-0]!
    556c:	3e050000 	cdpcc	0, 0, cr0, cr5, cr0, {0}
    5570:	1f000000 	svcne	0x00000000
    5574:	00900400 	addseq	r0, r0, r0, lsl #8
    5578:	55850000 	strpl	r0, [r5]
    557c:	3e050000 	cdpcc	0, 0, cr0, cr5, cr0, {0}
    5580:	03000000 	movweq	r0, #0
    5584:	00520400 	subseq	r0, r2, r0, lsl #8
    5588:	55950000 	ldrpl	r0, [r5]
    558c:	3e050000 	cdpcc	0, 0, cr0, cr5, cr0, {0}
    5590:	14000000 	strne	r0, [r0], #-0
    5594:	55850700 	strpl	r0, [r5, #1792]	; 0x700
    5598:	93400000 	movtls	r0, #0
    559c:	0100001c 	tsteq	r0, ip, lsl r0
    55a0:	00900273 	addseq	r0, r0, r3, ror r2
    55a4:	08240000 	stmdaeq	r4!, {}	; <UNPREDICTABLE>
    55a8:	097c0000 	ldmdbeq	ip!, {}^	; <UNPREDICTABLE>
    55ac:	9c010000 	stcls	0, cr0, [r1], {-0}
    55b0:	000058d3 	ldrdeq	r5, [r0], -r3
    55b4:	000c9a4a 	andeq	r9, ip, sl, asr #20
    55b8:	02730100 	rsbseq	r0, r3, #0, 2
    55bc:	00003260 	andeq	r3, r0, r0, ror #4
    55c0:	000004b3 			; <UNDEFINED> instruction: 0x000004b3
    55c4:	003a3f42 	eorseq	r3, sl, r2, asr #30
    55c8:	0058e300 	subseq	lr, r8, r0, lsl #6
    55cc:	5c030500 	cfstr32pl	mvfx0, [r3], {-0}
    55d0:	4d000000 	stcmi	0, cr0, [r0, #-0]
    55d4:	00746572 	rsbseq	r6, r4, r2, ror r5
    55d8:	90027601 	andls	r7, r2, r1, lsl #12
    55dc:	4d000000 	stcmi	0, cr0, [r0, #-0]
    55e0:	76010069 	strvc	r0, [r1], -r9, rrx
    55e4:	00009002 	andeq	r9, r0, r2
    55e8:	72694d00 	rsbvc	r4, r9, #0, 26
    55ec:	76010071 			; <UNDEFINED> instruction: 0x76010071
    55f0:	00009002 	andeq	r9, r0, r2
    55f4:	329a5100 	addscc	r5, sl, #0, 2
    55f8:	77010000 	strvc	r0, [r1, -r0]
    55fc:	0041a002 	subeq	sl, r1, r2
    5600:	0004d100 	andeq	sp, r4, r0, lsl #2
    5604:	0fc24500 	svceq	0x00c24500
    5608:	78010000 	stmdavc	r1, {}	; <UNPREDICTABLE>
    560c:	00469e02 	subeq	r9, r6, r2, lsl #28
    5610:	12045800 	andne	r5, r4, #0, 16
    5614:	d9010000 	stmdble	r1, {}	; <UNPREDICTABLE>
    5618:	29f45802 	ldmibcs	r4!, {r1, fp, ip, lr}^
    561c:	d2010000 	andle	r0, r1, #0
    5620:	49004e02 	stmdbmi	r0, {r1, r9, sl, fp, lr}
    5624:	084c0000 	stmdaeq	ip, {}^	; <UNPREDICTABLE>
    5628:	00200000 	eoreq	r0, r0, r0
    562c:	78010000 	stmdavc	r1, {}	; <UNPREDICTABLE>
    5630:	00563b02 	subseq	r3, r6, r2, lsl #22
    5634:	49114800 	ldmdbmi	r1, {fp, lr}
    5638:	4e000000 	cdpmi	0, 0, cr0, cr0, cr0, {0}
    563c:	000054dc 	ldrdeq	r5, [r0], -ip
    5640:	00000884 	andeq	r0, r0, r4, lsl #17
    5644:	00000038 	andeq	r0, r0, r8, lsr r0
    5648:	d4029501 	strle	r9, [r2], #-1281	; 0xfffffaff
    564c:	48000057 	stmdami	r0, {r0, r1, r2, r4, r6}
    5650:	000054ed 	andeq	r5, r0, sp, ror #9
    5654:	00003859 	andeq	r3, r0, r9, asr r8
    5658:	54f95a00 	ldrbtpl	r5, [r9], #2560	; 0xa00
    565c:	91030000 	mrsls	r0, (UNDEF: 3)
    5660:	055b7fb8 	ldrbeq	r7, [fp, #-4024]	; 0xfffff048
    5664:	fa000055 	blx	15c <.debug_info+0x15c>
    5668:	5c000004 	stcpl	0, cr0, [r0], {4}
    566c:	00005511 	andeq	r5, r0, r1, lsl r5
    5670:	00551d5c 	subseq	r1, r5, ip, asr sp
    5674:	55295b00 	strpl	r5, [r9, #-2816]!	; 0xfffff500
    5678:	05c40000 	strbeq	r0, [r4]
    567c:	355c0000 	ldrbcc	r0, [ip, #-0]
    5680:	5a000055 	bpl	57dc <.debug_info+0x57dc>
    5684:	0000553f 	andeq	r5, r0, pc, lsr r5
    5688:	7f889103 	svcvc	0x00889103
    568c:	00554b5a 	subseq	r4, r5, sl, asr fp
    5690:	98910300 	ldmls	r1, {r8, r9}
    5694:	55575a7f 	ldrbpl	r5, [r7, #-2687]	; 0xfffff581
    5698:	03050000 	movweq	r0, #20480	; 0x5000
    569c:	000000a4 	andeq	r0, r0, r4, lsr #1
    56a0:	00094043 	andeq	r4, r9, r3, asr #32
    56a4:	005d3b00 	subseq	r3, sp, r0, lsl #22
    56a8:	095c4300 	ldmdbeq	ip, {r8, r9, lr}^
    56ac:	5cb10000 	ldcpl	0, cr0, [r1]
    56b0:	9c430000 	marls	acc0, r0, r3
    56b4:	3b000009 	blcc	56e0 <.debug_info+0x56e0>
    56b8:	4300005d 	movwmi	r0, #93	; 0x5d
    56bc:	000009c4 	andeq	r0, r0, r4, asr #19
    56c0:	00005d3b 	andeq	r5, r0, fp, lsr sp
    56c4:	0009d443 	andeq	sp, r9, r3, asr #8
    56c8:	005d5100 	subseq	r5, sp, r0, lsl #2
    56cc:	0a6c4300 	beq	1b10c08 <axp2585_set_usb_vhold+0x1b0f9c4>
    56d0:	5d5c0000 	ldclpl	0, cr0, [ip, #-0]
    56d4:	8c430000 	marhi	acc0, r0, r3
    56d8:	5c00000a 	stcpl	0, cr0, [r0], {10}
    56dc:	4300005d 	movwmi	r0, #93	; 0x5d
    56e0:	00000ac0 	andeq	r0, r0, r0, asr #21
    56e4:	00005d3b 	andeq	r5, r0, fp, lsr sp
    56e8:	000adc43 	andeq	sp, sl, r3, asr #24
    56ec:	005cb100 	subseq	fp, ip, r0, lsl #2
    56f0:	0be84300 	bleq	ffa10c08 <axp2585_set_usb_vhold+0xffa0f9c4>
    56f4:	5d670000 	stclpl	0, cr0, [r7, #-0]
    56f8:	04430000 	strbeq	r0, [r3], #-0
    56fc:	3000000c 	andcc	r0, r0, ip
    5700:	4300005d 	movwmi	r0, #93	; 0x5d
    5704:	00000c18 	andeq	r0, r0, r8, lsl ip
    5708:	00005d30 	andeq	r5, r0, r0, lsr sp
    570c:	000c3443 	andeq	r3, ip, r3, asr #8
    5710:	005d3000 	subseq	r3, sp, r0
    5714:	0c504300 	mrrceq	3, 0, r4, r0, cr0
    5718:	5d300000 	ldcpl	0, cr0, [r0, #-0]
    571c:	60430000 	subvs	r0, r3, r0
    5720:	5100000c 	tstpl	r0, ip
    5724:	4300005d 	movwmi	r0, #93	; 0x5d
    5728:	00000c88 	andeq	r0, r0, r8, lsl #25
    572c:	00005d51 	andeq	r5, r0, r1, asr sp
    5730:	000ca443 	andeq	sl, ip, r3, asr #8
    5734:	005d5c00 	subseq	r5, sp, r0, lsl #24
    5738:	0cb44300 	ldceq	3, cr4, [r4]
    573c:	5d5c0000 	ldclpl	0, cr0, [ip, #-0]
    5740:	f0430000 			; <UNDEFINED> instruction: 0xf0430000
    5744:	3b00000c 	blcc	577c <.debug_info+0x577c>
    5748:	4300005d 	movwmi	r0, #93	; 0x5d
    574c:	00000d04 	andeq	r0, r0, r4, lsl #26
    5750:	00005d3b 	andeq	r5, r0, fp, lsr sp
    5754:	000d4443 	andeq	r4, sp, r3, asr #8
    5758:	005d3b00 	subseq	r3, sp, r0, lsl #22
    575c:	0d904300 	ldceq	3, cr4, [r0]
    5760:	5d3b0000 	ldcpl	0, cr0, [fp, #-0]
    5764:	ac430000 	marge	acc0, r0, r3
    5768:	b100000d 	tstlt	r0, sp
    576c:	4300005c 	movwmi	r0, #92	; 0x5c
    5770:	00000ebc 			; <UNDEFINED> instruction: 0x00000ebc
    5774:	00005d5c 	andeq	r5, r0, ip, asr sp
    5778:	000ecc43 	andeq	ip, lr, r3, asr #24
    577c:	005d5c00 	subseq	r5, sp, r0, lsl #24
    5780:	0ed44300 	cdpeq	3, 13, cr4, cr4, cr0, {0}
    5784:	5d250000 	stcpl	0, cr0, [r5, #-0]
    5788:	dc430000 	marle	acc0, r0, r3
    578c:	2500000e 	strcs	r0, [r0, #-14]
    5790:	4300005d 	movwmi	r0, #93	; 0x5d
    5794:	00000ee4 	andeq	r0, r0, r4, ror #29
    5798:	00005d25 	andeq	r5, r0, r5, lsr #26
    579c:	000f1c43 	andeq	r1, pc, r3, asr #24
    57a0:	005d5c00 	subseq	r5, sp, r0, lsl #24
    57a4:	0f344300 	svceq	0x00344300
    57a8:	5d5c0000 	ldclpl	0, cr0, [ip, #-0]
    57ac:	4c430000 	marmi	acc0, r0, r3
    57b0:	5c00000f 	stcpl	0, cr0, [r0], {15}
    57b4:	4300005d 	movwmi	r0, #93	; 0x5d
    57b8:	00000f64 	andeq	r0, r0, r4, ror #30
    57bc:	00005d5c 	andeq	r5, r0, ip, asr sp
    57c0:	00110443 	andseq	r0, r1, r3, asr #8
    57c4:	005d5c00 	subseq	r5, sp, r0, lsl #24
    57c8:	11144300 	tstne	r4, r0, lsl #6
    57cc:	5d5c0000 	ldclpl	0, cr0, [ip, #-0]
    57d0:	00000000 	andeq	r0, r0, r0
    57d4:	004a4447 	subeq	r4, sl, r7, asr #8
    57d8:	000de400 	andeq	lr, sp, r0, lsl #8
    57dc:	00001000 	andeq	r1, r0, r0
    57e0:	029a0100 	addseq	r0, sl, #0, 2
    57e4:	000057ee 	andeq	r5, r0, lr, ror #15
    57e8:	004a5448 	subeq	r5, sl, r8, asr #8
    57ec:	60470000 	subvs	r0, r7, r0
    57f0:	6000004a 	andvs	r0, r0, sl, asr #32
    57f4:	0400000e 	streq	r0, [r0], #-14
    57f8:	01000000 	mrseq	r0, (UNDEF: 0)
    57fc:	582702cb 	stmdapl	r7!, {r0, r1, r3, r6, r7, r9}
    5800:	77480000 	strbvc	r0, [r8, -r0]
    5804:	4800004a 	stmdami	r0, {r1, r3, r6}
    5808:	00004a6c 	andeq	r4, r0, ip, ror #20
    580c:	00492949 	subeq	r2, r9, r9, asr #18
    5810:	000e6000 	andeq	r6, lr, r0
    5814:	00000400 	andeq	r0, r0, r0, lsl #8
    5818:	48d53100 	ldmmi	r5, {r8, ip, sp}^
    581c:	00004942 	andeq	r4, r0, r2, asr #18
    5820:	00493648 	subeq	r3, r9, r8, asr #12
    5824:	43000000 	movwmi	r0, #0
    5828:	00000848 	andeq	r0, r0, r8, asr #16
    582c:	00005cb1 			; <UNDEFINED> instruction: 0x00005cb1
    5830:	00086c43 	andeq	r6, r8, r3, asr #24
    5834:	005d7200 	subseq	r7, sp, r0, lsl #4
    5838:	0dc84300 	stcleq	3, cr4, [r8]
    583c:	5cb10000 	ldcpl	0, cr0, [r1]
    5840:	e4430000 	strb	r0, [r3], #-0
    5844:	7e00000d 	cdpvc	0, 0, cr0, cr0, cr13, {0}
    5848:	4300005d 	movwmi	r0, #93	; 0x5d
    584c:	00000e4c 	andeq	r0, r0, ip, asr #28
    5850:	00005ce0 	andeq	r5, r0, r0, ror #25
    5854:	000e7043 	andeq	r7, lr, r3, asr #32
    5858:	005d8a00 	subseq	r8, sp, r0, lsl #20
    585c:	0f784300 	svceq	0x00784300
    5860:	5d960000 	ldcpl	0, cr0, [r6]
    5864:	a0430000 	subge	r0, r3, r0
    5868:	b100000f 	tstlt	r0, pc
    586c:	4300005c 	movwmi	r0, #92	; 0x5c
    5870:	00000fc0 	andeq	r0, r0, r0, asr #31
    5874:	00005cb1 			; <UNDEFINED> instruction: 0x00005cb1
    5878:	000ff043 	andeq	pc, pc, r3, asr #32
    587c:	005cb100 	subseq	fp, ip, r0, lsl #2
    5880:	10104300 	andsne	r4, r0, r0, lsl #6
    5884:	5cb10000 	ldcpl	0, cr0, [r1]
    5888:	30430000 	subcc	r0, r3, r0
    588c:	a2000010 	andge	r0, r0, #16
    5890:	4300005d 	movwmi	r0, #93	; 0x5d
    5894:	0000105c 	andeq	r1, r0, ip, asr r0
    5898:	00005dad 	andeq	r5, r0, sp, lsr #27
    589c:	00107843 	andseq	r7, r0, r3, asr #16
    58a0:	005ce000 	subseq	lr, ip, r0
    58a4:	10884300 	addne	r4, r8, r0, lsl #6
    58a8:	5ceb0000 	stclpl	0, cr0, [fp]
    58ac:	3c430000 	marcc	acc0, r0, r3
    58b0:	b1000011 	tstlt	r0, r1, lsl r0
    58b4:	4300005c 	movwmi	r0, #92	; 0x5c
    58b8:	0000115c 	andeq	r1, r0, ip, asr r1
    58bc:	00005cb1 			; <UNDEFINED> instruction: 0x00005cb1
    58c0:	00117443 	andseq	r7, r1, r3, asr #8
    58c4:	005cb100 	subseq	fp, ip, r0, lsl #2
    58c8:	11844300 	orrne	r4, r4, r0, lsl #6
    58cc:	5cb10000 	ldcpl	0, cr0, [r1]
    58d0:	04000000 	streq	r0, [r0], #-0
    58d4:	00000052 	andeq	r0, r0, r2, asr r0
    58d8:	000058e3 	andeq	r5, r0, r3, ror #17
    58dc:	00003e05 	andeq	r3, r0, r5, lsl #28
    58e0:	07001500 	streq	r1, [r0, -r0, lsl #10]
    58e4:	000058d3 	ldrdeq	r5, [r0], -r3
    58e8:	0049ca3b 	subeq	ip, r9, fp, lsr sl
    58ec:	0011a000 	andseq	sl, r1, r0
    58f0:	00007400 	andeq	r7, r0, r0, lsl #8
    58f4:	569c0100 	ldrpl	r0, [ip], r0, lsl #2
    58f8:	3c000059 	stccc	0, cr0, [r0], {89}	; 0x59
    58fc:	000049da 	ldrdeq	r4, [r0], -sl
    5900:	000005f8 	strdeq	r0, [r0], -r8
    5904:	0049e53c 	subeq	lr, r9, ip, lsr r5
    5908:	00062100 	andeq	r2, r6, r0, lsl #2
    590c:	49f05c00 	ldmibmi	r0!, {sl, fp, ip, lr}^
    5910:	fb5c0000 	blx	170591a <axp2585_set_usb_vhold+0x17046d6>
    5914:	5d000049 	stcpl	0, cr0, [r0, #-292]	; 0xfffffedc
    5918:	000011f8 	strdeq	r1, [r0], -r8
    591c:	0000001c 	andeq	r0, r0, ip, lsl r0
    5920:	0000594c 	andeq	r5, r0, ip, asr #18
    5924:	004a1748 	subeq	r1, sl, r8, asr #14
    5928:	4a224800 	bmi	897930 <axp2585_set_usb_vhold+0x8966ec>
    592c:	f85e0000 			; <UNDEFINED> instruction: 0xf85e0000
    5930:	1c000011 	stcne	0, cr0, [r0], {17}
    5934:	5c000000 	stcpl	0, cr0, [r0], {-0}
    5938:	00004a2d 	andeq	r4, r0, sp, lsr #20
    593c:	004a385c 	subeq	r3, sl, ip, asr r8
    5940:	12104300 	andsne	r4, r0, #0, 6
    5944:	5cb10000 	ldcpl	0, cr0, [r1]
    5948:	00000000 	andeq	r0, r0, r0
    594c:	0011e843 	andseq	lr, r1, r3, asr #16
    5950:	005d3b00 	subseq	r3, sp, r0, lsl #22
    5954:	073b0000 	ldreq	r0, [fp, -r0]!
    5958:	4400004a 	strmi	r0, [r0], #-74	; 0xffffffb6
    595c:	74000012 	strvc	r0, [r0], #-18	; 0xffffffee
    5960:	01000000 	mrseq	r0, (UNDEF: 0)
    5964:	0059c49c 			; <UNDEFINED> instruction: 0x0059c49c
    5968:	4a173c00 	bmi	5d4970 <axp2585_set_usb_vhold+0x5d372c>
    596c:	063f0000 	ldrteq	r0, [pc], -r0
    5970:	223c0000 	eorscs	r0, ip, #0
    5974:	6800004a 	stmdavs	r0, {r1, r3, r6}
    5978:	5c000006 	stcpl	0, cr0, [r0], {6}
    597c:	00004a2d 	andeq	r4, r0, sp, lsr #20
    5980:	004a385c 	subeq	r3, sl, ip, asr r8
    5984:	129c5d00 	addsne	r5, ip, #0, 26
    5988:	001c0000 	andseq	r0, ip, r0
    598c:	59ba0000 	ldmibpl	sl!, {}	; <UNPREDICTABLE>
    5990:	17480000 	strbne	r0, [r8, -r0]
    5994:	4800004a 	stmdami	r0, {r1, r3, r6}
    5998:	00004a22 	andeq	r4, r0, r2, lsr #20
    599c:	00129c5e 	andseq	r9, r2, lr, asr ip
    59a0:	00001c00 	andeq	r1, r0, r0, lsl #24
    59a4:	4a2d5c00 	bmi	b5c9ac <axp2585_set_usb_vhold+0xb5b768>
    59a8:	385c0000 	ldmdacc	ip, {}^	; <UNPREDICTABLE>
    59ac:	4300004a 	movwmi	r0, #74	; 0x4a
    59b0:	000012b4 			; <UNDEFINED> instruction: 0x000012b4
    59b4:	00005cb1 			; <UNDEFINED> instruction: 0x00005cb1
    59b8:	8c430000 	marhi	acc0, r0, r3
    59bc:	3b000012 	blcc	5a0c <.debug_info+0x5a0c>
    59c0:	0000005d 	andeq	r0, r0, sp, asr r0
    59c4:	000aec13 	andeq	lr, sl, r3, lsl ip
    59c8:	3c125400 	cfldrscc	mvf5, [r2], {-0}
    59cc:	2f010000 	svccs	0x00010000
    59d0:	000040dc 	ldrdeq	r4, [r0], -ip
    59d4:	00640305 	rsbeq	r0, r4, r5, lsl #6
    59d8:	2f540000 	svccs	0x00540000
    59dc:	01000041 	tsteq	r0, r1, asr #32
    59e0:	0043c180 	subeq	ip, r3, r0, lsl #3
    59e4:	9c030500 	cfstr32ls	mvfx0, [r3], {-0}
    59e8:	46000000 	strmi	r0, [r0], -r0
    59ec:	00002894 	muleq	r0, r4, r8
    59f0:	82011201 	andhi	r1, r1, #268435456	; 0x10000000
    59f4:	05000044 	streq	r0, [r0, #-68]	; 0xffffffbc
    59f8:	0000d803 	andeq	sp, r0, r3, lsl #16
    59fc:	0ec24600 	cdpeq	6, 12, cr4, cr2, cr0, {0}
    5a00:	24010000 	strcs	r0, [r1], #-0
    5a04:	003aa701 	eorseq	sl, sl, r1, lsl #14
    5a08:	40030500 	andmi	r0, r3, r0, lsl #10
    5a0c:	46000001 	strmi	r0, [r0], -r1
    5a10:	000039bb 			; <UNDEFINED> instruction: 0x000039bb
    5a14:	c7013001 	strgt	r3, [r1, -r1]
    5a18:	05000045 	streq	r0, [r0, #-69]	; 0xffffffbb
    5a1c:	00016403 	andeq	r6, r1, r3, lsl #8
    5a20:	48910400 	ldmmi	r1, {sl}
    5a24:	5a310000 	bpl	c45a2c <axp2585_set_usb_vhold+0xc447e8>
    5a28:	3e050000 	cdpcc	0, 0, cr0, cr5, cr0, {0}
    5a2c:	07000000 	streq	r0, [r0, -r0]
    5a30:	152a4600 	strne	r4, [sl, #-1536]!	; 0xfffffa00
    5a34:	fb010000 	blx	45a3e <axp2585_set_usb_vhold+0x447fa>
    5a38:	005a4301 	subseq	r4, sl, r1, lsl #6
    5a3c:	1c030500 	cfstr32ne	mvfx0, [r3], {-0}
    5a40:	07000000 	streq	r0, [r0, -r0]
    5a44:	00005a21 	andeq	r5, r0, r1, lsr #20
    5a48:	00276d46 	eoreq	r6, r7, r6, asr #26
    5a4c:	02090100 	andeq	r0, r9, #0, 2
    5a50:	00000090 	muleq	r0, r0, r0
    5a54:	00600305 	rsbeq	r0, r0, r5, lsl #6
    5a58:	63460000 	movtvs	r0, #24576	; 0x6000
    5a5c:	0100000f 	tsteq	r0, pc
    5a60:	0090020a 	addseq	r0, r0, sl, lsl #4
    5a64:	03050000 	movweq	r0, #20480	; 0x5000
    5a68:	0000005c 	andeq	r0, r0, ip, asr r0
    5a6c:	00301845 	eorseq	r1, r0, r5, asr #16
    5a70:	020b0100 	andeq	r0, fp, #0, 2
    5a74:	00000090 	muleq	r0, r0, r0
    5a78:	0028b546 	eoreq	fp, r8, r6, asr #10
    5a7c:	02540100 	subseq	r0, r4, #0, 2
    5a80:	000023a0 	andeq	r2, r0, r0, lsr #7
    5a84:	01b40305 			; <UNDEFINED> instruction: 0x01b40305
    5a88:	ba460000 	blt	1180008 <axp2585_set_usb_vhold+0x117edc4>
    5a8c:	0100002e 	tsteq	r0, lr, lsr #32
    5a90:	23a00255 	movcs	r0, #1342177285	; 0x50000005
    5a94:	03050000 	movweq	r0, #20480	; 0x5000
    5a98:	000001a4 	andeq	r0, r0, r4, lsr #3
    5a9c:	00376346 	eorseq	r6, r7, r6, asr #6
    5aa0:	02560100 	subseq	r0, r6, #0, 2
    5aa4:	000023a0 	andeq	r2, r0, r0, lsr #7
    5aa8:	01940305 	orrseq	r0, r4, r5, lsl #6
    5aac:	60040000 	andvs	r0, r4, r0
    5ab0:	be00000e 	cdplt	0, 0, cr0, cr0, cr14, {0}
    5ab4:	0500005a 	streq	r0, [r0, #-90]	; 0xffffffa6
    5ab8:	0000003e 	andeq	r0, r0, lr, lsr r0
    5abc:	84460003 	strbhi	r0, [r6], #-3
    5ac0:	01000043 	tsteq	r0, r3, asr #32
    5ac4:	5aae0257 	bpl	feb86428 <axp2585_set_usb_vhold+0xfeb851e4>
    5ac8:	03050000 	movweq	r0, #20480	; 0x5000
    5acc:	00000184 	andeq	r0, r0, r4, lsl #3
    5ad0:	0046e246 	subeq	lr, r6, r6, asr #4
    5ad4:	025e0100 	subseq	r0, lr, #0, 2
    5ad8:	00000d4d 	andeq	r0, r0, sp, asr #26
    5adc:	01700305 	cmneq	r0, r5, lsl #6
    5ae0:	c5040000 	strgt	r0, [r4, #-0]
    5ae4:	f2000028 	vhadd.s8	d0, d0, d24
    5ae8:	0500005a 	streq	r0, [r0, #-90]	; 0xffffffa6
    5aec:	0000003e 	andeq	r0, r0, lr, lsr r0
    5af0:	64460001 	strbvs	r0, [r6], #-1
    5af4:	0100002f 	tsteq	r0, pc, lsr #32
    5af8:	5b040318 	blpl	106760 <axp2585_set_usb_vhold+0x10551c>
    5afc:	03050000 	movweq	r0, #20480	; 0x5000
    5b00:	000000bc 	strheq	r0, [r0], -ip
    5b04:	005ae207 	subseq	lr, sl, r7, lsl #4
    5b08:	2fe14600 	svccs	0x00e14600
    5b0c:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    5b10:	0031e403 	eorseq	lr, r1, r3, lsl #8
    5b14:	00030500 	andeq	r0, r3, r0, lsl #10
    5b18:	46000000 	strmi	r0, [r0], -r0
    5b1c:	000015bd 			; <UNDEFINED> instruction: 0x000015bd
    5b20:	c8033701 	stmdagt	r3, {r0, r8, r9, sl, ip, sp}
    5b24:	05000002 	streq	r0, [r0, #-2]
    5b28:	00000003 	andeq	r0, r0, r3
    5b2c:	37725f00 	ldrbcc	r5, [r2, -r0, lsl #30]!
    5b30:	513a0000 	teqpl	sl, r0
    5b34:	00003bb9 			; <UNDEFINED> instruction: 0x00003bb9
    5b38:	000c465f 	andeq	r4, ip, pc, asr r6
    5b3c:	570d3b00 	strpl	r3, [sp, -r0, lsl #22]
    5b40:	04000000 	streq	r0, [r0], #-0
    5b44:	00000090 	muleq	r0, r0, r0
    5b48:	00005b4e 	andeq	r5, r0, lr, asr #22
    5b4c:	6c5f0060 	mrrcvs	0, 6, r0, pc, cr0	; <UNPREDICTABLE>
    5b50:	3c000000 	stccc	0, cr0, [r0], {-0}
    5b54:	005b432e 	subseq	r4, fp, lr, lsr #6
    5b58:	072d6100 	streq	r6, [sp, -r0, lsl #2]!
    5b5c:	b93d0000 	ldmdblt	sp!, {}	; <UNPREDICTABLE>
    5b60:	00009001 	andeq	r9, r0, r1
    5b64:	00520400 	subseq	r0, r2, r0, lsl #8
    5b68:	5b700000 	blpl	1c05b70 <axp2585_set_usb_vhold+0x1c0492c>
    5b6c:	00600000 	rsbeq	r0, r0, r0
    5b70:	001ef061 	andseq	pc, lr, r1, rrx
    5b74:	01f13d00 	mvnseq	r3, r0, lsl #26
    5b78:	00005b7c 	andeq	r5, r0, ip, ror fp
    5b7c:	005b6507 	subseq	r6, fp, r7, lsl #10
    5b80:	0fca6100 	svceq	0x00ca6100
    5b84:	fc3d0000 	ldc2	0, cr0, [sp], #-0
    5b88:	005b8d01 	subseq	r8, fp, r1, lsl #26
    5b8c:	5b650700 	blpl	1947794 <axp2585_set_usb_vhold+0x1946550>
    5b90:	f2610000 	vhadd.s32	d16, d1, d0
    5b94:	3e000012 	mcrcc	0, 0, r0, cr0, cr2, {0}
    5b98:	00a20114 	adceq	r0, r2, r4, lsl r1
    5b9c:	b15f0000 	cmplt	pc, r0
    5ba0:	0b000003 	bleq	5bb4 <.debug_info+0x5bb4>
    5ba4:	00030a1c 	andeq	r0, r3, ip, lsl sl
    5ba8:	28796200 	ldmdacs	r9!, {r9, sp, lr}^
    5bac:	543f0000 	ldrtpl	r0, [pc], #-0	; 5bb4 <.debug_info+0x5bb4>
    5bb0:	00000027 	andeq	r0, r0, r7, lsr #32
    5bb4:	ae5f5d01 	cdpge	13, 5, cr5, cr15, cr1, {0}
    5bb8:	12000002 	andne	r0, r0, #2
    5bbc:	005bcc59 	subseq	ip, fp, r9, asr ip
    5bc0:	c7040600 	strgt	r0, [r4, -r0, lsl #12]
    5bc4:	0700005b 	smlsdeq	r0, fp, r0, r0
    5bc8:	000004b9 			; <UNDEFINED> instruction: 0x000004b9
    5bcc:	005bc107 	subseq	ip, fp, r7, lsl #2
    5bd0:	30a80400 	adccc	r0, r8, r0, lsl #8
    5bd4:	5be70000 	blpl	ff9c5bdc <axp2585_set_usb_vhold+0xff9c4998>
    5bd8:	3e050000 	cdpcc	0, 0, cr0, cr5, cr0, {0}
    5bdc:	20000000 	andcs	r0, r0, r0
    5be0:	00003e05 	andeq	r3, r0, r5, lsl #28
    5be4:	61000000 	mrsvs	r0, (UNDEF: 0)
    5be8:	00004073 	andeq	r4, r0, r3, ror r0
    5bec:	f302f212 	vqsub.u8	d15, d2, d2
    5bf0:	0700005b 	smlsdeq	r0, fp, r0, r0
    5bf4:	00005bd1 	ldrdeq	r5, [r0], -r1
    5bf8:	0035fe5f 	eorseq	pc, r5, pc, asr lr	; <UNPREDICTABLE>
    5bfc:	90224000 	eorls	r4, r2, r0
    5c00:	5f000000 	svcpl	0x00000000
    5c04:	00000397 	muleq	r0, r7, r3
    5c08:	00902340 	addseq	r2, r0, r0, asr #6
    5c0c:	155f0000 	ldrbne	r0, [pc, #-0]	; 8 <.debug_info+0x8>
    5c10:	1900001e 	stmdbne	r0, {r1, r2, r3, r4}
    5c14:	0059c498 			; <UNDEFINED> instruction: 0x0059c498
    5c18:	10236100 	eorne	r6, r3, r0, lsl #2
    5c1c:	60200000 	eorvs	r0, r0, r0
    5c20:	0010ae01 	andseq	sl, r0, r1, lsl #28
    5c24:	0b935f00 	bleq	fe4d7c08 <axp2585_set_usb_vhold+0xfe4d69c4>
    5c28:	4e260000 	cdpmi	0, 2, cr0, cr6, cr0, {0}
    5c2c:	00000090 	muleq	r0, r0, r0
    5c30:	00440961 	subeq	r0, r4, r1, ror #18
    5c34:	03542600 	cmpeq	r4, #0, 12
    5c38:	00002072 	andeq	r2, r0, r2, ror r0
    5c3c:	00329704 	eorseq	r9, r2, r4, lsl #14
    5c40:	005c4c00 	subseq	r4, ip, r0, lsl #24
    5c44:	003e0500 	eorseq	r0, lr, r0, lsl #10
    5c48:	000d0000 	andeq	r0, sp, r0
    5c4c:	00424861 	subeq	r4, r2, r1, ror #16
    5c50:	01074100 	mrseq	r4, (UNDEF: 23)
    5c54:	00005c3c 	andeq	r5, r0, ip, lsr ip
    5c58:	00147c61 	andseq	r7, r4, r1, ror #24
    5c5c:	01323300 	teqeq	r2, r0, lsl #6
    5c60:	00000057 	andeq	r0, r0, r7, asr r0
    5c64:	00070561 	andeq	r0, r7, r1, ror #10
    5c68:	01cc3400 	biceq	r3, ip, r0, lsl #8
    5c6c:	000003da 	ldrdeq	r0, [r0], -sl
    5c70:	005c7b04 	subseq	r7, ip, r4, lsl #22
    5c74:	005c7b00 	subseq	r7, ip, r0, lsl #22
    5c78:	07006000 	streq	r6, [r0, -r0]
    5c7c:	00000070 	andeq	r0, r0, r0, ror r0
    5c80:	00383c5f 	eorseq	r3, r8, pc, asr ip
    5c84:	8b124200 	blhi	49648c <axp2585_set_usb_vhold+0x495248>
    5c88:	0700005c 	smlsdeq	r0, ip, r0, r0
    5c8c:	00005c70 	andeq	r5, r0, r0, ror ip
    5c90:	00007b5f 	andeq	r7, r0, pc, asr fp
    5c94:	90b53900 	adcsls	r3, r5, r0, lsl #18
    5c98:	5f000000 	svcpl	0x00000000
    5c9c:	00001939 	andeq	r1, r0, r9, lsr r9
    5ca0:	0090b639 	addseq	fp, r0, r9, lsr r6
    5ca4:	c6630000 	strbtgt	r0, [r3], -r0
    5ca8:	c6000028 	strgt	r0, [r0], -r8, lsr #32
    5cac:	31000028 	tstcc	r0, r8, lsr #32
    5cb0:	23c163c1 	biccs	r6, r1, #67108867	; 0x4000003
    5cb4:	23c10000 	biccs	r0, r1, #0
    5cb8:	8e3c0000 	cdphi	0, 3, cr0, cr12, cr0, {0}
    5cbc:	003d9e64 	eorseq	r9, sp, r4, ror #28
    5cc0:	003d9e00 	eorseq	r9, sp, r0, lsl #28
    5cc4:	016c3800 	cmneq	ip, r0, lsl #16
    5cc8:	0031e064 	eorseq	lr, r1, r4, rrx
    5ccc:	0031e000 	eorseq	lr, r1, r0
    5cd0:	016b3800 	cmneq	fp, r0, lsl #16
    5cd4:	00096d64 	andeq	r6, r9, r4, ror #26
    5cd8:	00096d00 	andeq	r6, r9, r0, lsl #26
    5cdc:	016d3800 	cmneq	sp, r0, lsl #16
    5ce0:	002de463 	eoreq	lr, sp, r3, ror #8
    5ce4:	002de400 	eoreq	lr, sp, r0, lsl #8
    5ce8:	63393100 	teqvs	r9, #0, 2
    5cec:	000011bc 			; <UNDEFINED> instruction: 0x000011bc
    5cf0:	000011bc 			; <UNDEFINED> instruction: 0x000011bc
    5cf4:	c664a239 			; <UNDEFINED> instruction: 0xc664a239
    5cf8:	c6000012 			; <UNDEFINED> instruction: 0xc6000012
    5cfc:	38000012 	stmdacc	r0, {r1, r4}
    5d00:	a4640166 	strbtge	r0, [r4], #-358	; 0xfffffe9a
    5d04:	a4000033 	strge	r0, [r0], #-51	; 0xffffffcd
    5d08:	3d000033 	stccc	0, cr0, [r0, #-204]	; 0xffffff34
    5d0c:	9763019b 			; <UNDEFINED> instruction: 0x9763019b
    5d10:	9700000a 	strls	r0, [r0, -sl]
    5d14:	3900000a 	stmdbcc	r0, {r1, r3}
    5d18:	393e6497 	ldmdbcc	lr!, {r0, r1, r2, r4, r7, sl, sp, lr}
    5d1c:	393e0000 	ldmdbcc	lr!, {}	; <UNPREDICTABLE>
    5d20:	4d3d0000 	ldcmi	0, cr0, [sp, #-0]
    5d24:	31f46301 	mvnscc	r6, r1, lsl #6
    5d28:	31f40000 	mvnscc	r0, r0
    5d2c:	9a390000 	bls	e45d34 <axp2585_set_usb_vhold+0xe44af0>
    5d30:	002cb363 	eoreq	fp, ip, r3, ror #6
    5d34:	002cb300 	eoreq	fp, ip, r0, lsl #6
    5d38:	63993900 	orrsvs	r3, r9, #0, 18
    5d3c:	00003fb8 			; <UNDEFINED> instruction: 0x00003fb8
    5d40:	00003fb8 			; <UNDEFINED> instruction: 0x00003fb8
    5d44:	fd639839 	stc2l	8, cr9, [r3, #-228]!	; 0xffffff1c
    5d48:	fd00002e 	stc2	0, cr0, [r0, #-184]	; 0xffffff48
    5d4c:	3900002e 	stmdbcc	r0, {r1, r2, r3, r5}
    5d50:	452e63b9 	strmi	r6, [lr, #-953]!	; 0xfffffc47
    5d54:	452e0000 	strmi	r0, [lr, #-0]!
    5d58:	96390000 	ldrtls	r0, [r9], -r0
    5d5c:	0039f263 	eorseq	pc, r9, r3, ror #4
    5d60:	0039f200 	eorseq	pc, r9, r0, lsl #4
    5d64:	63943900 	orrsvs	r3, r4, #0, 18
    5d68:	000032f7 	strdeq	r3, [r0], -r7
    5d6c:	000032f7 	strdeq	r3, [r0], -r7
    5d70:	7d649539 	cfstr64vc	mvdx9, [r4, #-228]!	; 0xffffff1c
    5d74:	7d000016 	stcvc	0, cr0, [r0, #-88]	; 0xffffffa8
    5d78:	38000016 	stmdacc	r0, {r1, r2, r4}
    5d7c:	9564016e 	strbls	r0, [r4, #-366]!	; 0xfffffe92
    5d80:	95000038 	strls	r0, [r0, #-56]	; 0xffffffc8
    5d84:	38000038 	stmdacc	r0, {r3, r4, r5}
    5d88:	18640162 	stmdane	r4!, {r1, r5, r6, r8}^
    5d8c:	18000002 	stmdane	r0, {r1}
    5d90:	1c000002 	stcne	0, cr0, [r0], {2}
    5d94:	36640103 	strbtcc	r0, [r4], -r3, lsl #2
    5d98:	3600003a 			; <UNDEFINED> instruction: 0x3600003a
    5d9c:	0200003a 	andeq	r0, r0, #58	; 0x3a
    5da0:	4163045f 	cmnmi	r3, pc, asr r4
    5da4:	41000036 	tstmi	r0, r6, lsr r0
    5da8:	39000036 	stmdbcc	r0, {r1, r2, r4, r5}
    5dac:	2e9864a0 	cdpcs	4, 9, cr6, cr8, cr0, {5}
    5db0:	2e980000 	cdpcs	0, 9, cr0, cr8, cr0, {0}
    5db4:	5d020000 	stcpl	0, cr0, [r2, #-0]
    5db8:	地址 0x0000000000005db8 越界。


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
axp2585_set_ac_ihold():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:40
}

static int axp2585_set_ac_ihold(struct axp_charger_dev *cdev, int cur)
{
	return 0;
}
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
axp2585_get_usb_current():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:68
}

static int axp2585_get_usb_current(struct axp_charger_dev *cdev)
{
	return 0;
}
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
axp2585_get_bat_health():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:189
}

static int axp2585_get_bat_health(struct axp_charger_dev *cdev)
{
	return POWER_SUPPLY_HEALTH_GOOD;
}
  10:	02000017 	andeq	r0, r0, #23
  14:	0b0b000f 	bleq	2c0058 <axp2585_set_usb_vhold+0x2bee14>
axp2585_charger_resume():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:763

	return 0;
}

static int axp2585_charger_resume(struct platform_device *dev)
{
  18:	24030000 	strcs	r0, [r3], #-0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:768
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);
	int pre_rest_vol;

	if (axp_suspend_flag == AXP_SUSPEND_WITH_IRQ) {
		axp_suspend_flag = AXP_NOT_SUSPEND;
  1c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
#endif
}

static inline void *dev_get_drvdata(const struct device *dev)
{
	return dev->driver_data;
  20:	000e030b 	andeq	r0, lr, fp, lsl #6
axp2585_charger_resume():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:768
  24:	01010400 	tsteq	r1, r0, lsl #8
  28:	13011349 	movwne	r1, #4937	; 0x1349
  2c:	21050000 	mrscs	r0, (UNDEF: 5)
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:774
	//	sunxi_nmi_enable();
	} else {
		axp_suspend_flag = AXP_NOT_SUSPEND;
	}
	pre_rest_vol = chg_dev->rest_vol;
	axp_charger_resume(chg_dev);
  30:	2f134900 	svccs	0x00134900
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:773
		axp_suspend_flag = AXP_NOT_SUSPEND;
	//	sunxi_nmi_enable();
	} else {
		axp_suspend_flag = AXP_NOT_SUSPEND;
	}
	pre_rest_vol = chg_dev->rest_vol;
  34:	0600000b 	streq	r0, [r0], -fp
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:774
	axp_charger_resume(chg_dev);
  38:	0b0b000f 	bleq	2c007c <axp2585_set_usb_vhold+0x2bee38>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:776

	if (chg_dev->rest_vol - pre_rest_vol) {
  3c:	00001349 	andeq	r1, r0, r9, asr #6
  40:	49002607 	stmdbmi	r0, {r0, r1, r2, r9, sl, sp}
  44:	08000013 	stmdaeq	r0, {r0, r1, r4}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:783
				pre_rest_vol, chg_dev->rest_vol);
		/*axp_regmap_write(map, 0x05, chg_dev->rest_vol | 0x80);*/
	}

	return 0;
}
  48:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
  4c:	0b3b0b3a 	bleq	ec2d3c <axp2585_set_usb_vhold+0xec1af8>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:777
	}
	pre_rest_vol = chg_dev->rest_vol;
	axp_charger_resume(chg_dev);

	if (chg_dev->rest_vol - pre_rest_vol) {
		pr_info("battery vol change: %d->%d\n",
  50:	00001349 	andeq	r1, r0, r9, asr #6
  54:	0b002409 	bleq	9080 <axp2585_set_usb_vhold+0x7e3c>
  58:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  5c:	0a000008 	beq	84 <.debug_abbrev+0x84>
  60:	08030016 	stmdaeq	r3, {r1, r2, r4}
axp2585_charger_suspend():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
static int axp2585_charger_suspend(struct platform_device *dev,
				pm_message_t state)
{
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_suspend_flag = AXP_WAS_SUSPEND;
  64:	0b3b0b3a 	bleq	ec2d54 <axp2585_set_usb_vhold+0xec1b10>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:753
	return 0;
}

static int axp2585_charger_suspend(struct platform_device *dev,
				pm_message_t state)
{
  68:	00001349 	andeq	r1, r0, r9, asr #6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_suspend_flag = AXP_WAS_SUSPEND;
  6c:	0301130b 	movweq	r1, #4875	; 0x130b
  70:	3a0b0b0e 	bcc	2c2cb0 <axp2585_set_usb_vhold+0x2c1a6c>
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  74:	010b3b0b 	tsteq	fp, fp, lsl #22
axp2585_charger_suspend():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
  78:	0c000013 	stceq	0, cr0, [r0], {19}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:757
	axp_charger_suspend(chg_dev);
  7c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:760

	return 0;
}
  80:	0b3b0b3a 	bleq	ec2d70 <axp2585_set_usb_vhold+0xec1b2c>
  84:	0b381349 	bleq	e04db0 <axp2585_set_usb_vhold+0xe03b6c>
axp2585_charger_shutdown():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:789

static void axp2585_charger_shutdown(struct platform_device *dev)
{
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_charger_shutdown(chg_dev);
  88:	130d0000 	movwne	r0, #53248	; 0xd000
  8c:	3a0b0b01 	bcc	2c2c98 <axp2585_set_usb_vhold+0x2c1a54>
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:734
fail:
	return -1;
}

static int axp2585_charger_remove(struct platform_device *pdev)
{
  90:	010b3b0b 	tsteq	fp, fp, lsl #22
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  94:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
  98:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:734
  9c:	00001301 	andeq	r1, r0, r1, lsl #6
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  a0:	4900050f 	stmdbmi	r0, {r0, r1, r2, r3, r8, sl}
  a4:	10000013 	andne	r0, r0, r3, lsl r0
  a8:	19270015 	stmdbne	r7!, {r0, r2, r4}
  ac:	00001349 	andeq	r1, r0, r9, asr #6
  b0:	27001511 	smladcs	r0, r1, r5, r1
  b4:	12000019 	andne	r0, r0, #25
  b8:	0803000d 	stmdaeq	r3, {r0, r2, r3}
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:740
	int i, irq;
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
  bc:	0b3b0b3a 	bleq	ec2dac <axp2585_set_usb_vhold+0xec1b68>
  c0:	0b381349 	bleq	e04dec <axp2585_set_usb_vhold+0xe03ba8>
  c4:	13130000 	tstne	r3, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:741
		if (irq < 0)
  c8:	3c0e0300 	stccc	3, cr0, [lr], {-0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:743
			continue;
		axp_free_irq(axp_dev, irq);
  cc:	14000019 	strne	r0, [r0], #-25	; 0xffffffe7
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:741
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
		if (irq < 0)
  d0:	0b0b0013 	bleq	2c0124 <axp2585_set_usb_vhold+0x2beee0>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:743
			continue;
		axp_free_irq(axp_dev, irq);
  d4:	0b3b0b3a 	bleq	ec2dc4 <axp2585_set_usb_vhold+0xec1b80>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:739 (discriminator 2)
{
	int i, irq;
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
  d8:	13150000 	tstne	r5, #0
  dc:	0b0e0300 	bleq	380ce4 <axp2585_set_usb_vhold+0x37faa0>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:746
		if (irq < 0)
			continue;
		axp_free_irq(axp_dev, irq);
	}

	axp_power_supply_unregister(chg_dev);
  e0:	3b0b3a0b 	blcc	2ce914 <axp2585_set_usb_vhold+0x2cd6d0>
  e4:	16000005 	strne	r0, [r0], -r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:749

	return 0;
}
  e8:	0b0b0117 	bleq	2c054c <axp2585_set_usb_vhold+0x2bf308>
  ec:	0b3b0b3a 	bleq	ec2ddc <axp2585_set_usb_vhold+0xec1b98>
  f0:	00001301 	andeq	r1, r0, r1, lsl #6
show_boost_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:554
	return count;
}

static ssize_t show_boost_mode(struct device *dev,
			struct device_attribute *attr, char *buf)
{
  f4:	03000d17 	movweq	r0, #3351	; 0xd17
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:558
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "1: open  0: close");
  f8:	3b0b3a0e 	blcc	2ce938 <axp2585_set_usb_vhold+0x2cd6f4>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:554
	return count;
}

static ssize_t show_boost_mode(struct device *dev,
			struct device_attribute *attr, char *buf)
{
  fc:	0013490b 	andseq	r4, r3, fp, lsl #18
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:558
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "1: open  0: close");
 100:	000d1800 	andeq	r1, sp, r0, lsl #16
 104:	0b381349 	bleq	e04e30 <axp2585_set_usb_vhold+0xe03bec>
 108:	17190000 	ldrne	r0, [r9, -r0]
 10c:	0b0e0301 	bleq	380d18 <axp2585_set_usb_vhold+0x37fad4>
 110:	3b0b3a0b 	blcc	2ce944 <axp2585_set_usb_vhold+0x2cd700>
 114:	0013010b 	andseq	r0, r3, fp, lsl #2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:559
	s += scnprintf(s, end - s, "boost_mode=%d\n", boost_mode);
 118:	01131a00 	tsteq	r3, r0, lsl #20
 11c:	050b0e03 	streq	r0, [fp, #-3587]	; 0xfffff1fd
 120:	0b3b0b3a 	bleq	ec2e10 <axp2585_set_usb_vhold+0xec1bcc>
 124:	00001301 	andeq	r1, r0, r1, lsl #6
 128:	03000d1b 	movweq	r0, #3355	; 0xd1b
 12c:	3b0b3a0e 	blcc	2ce96c <axp2585_set_usb_vhold+0x2cd728>
 130:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 134:	1c000005 	stcne	0, cr0, [r0], {5}
 138:	1349000d 	movtne	r0, #36877	; 0x900d
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:560
	return s - buf;
 13c:	00000538 	andeq	r0, r0, r8, lsr r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:561
}
 140:	0301131d 	movweq	r1, #4893	; 0x131d
 144:	3a0b0b08 	bcc	2c2d6c <axp2585_set_usb_vhold+0x2c1b28>
show_tc_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:526
static int tc_mode = 1;
static int boost_mode = 1;
static int power = 1;
static ssize_t show_tc_mode(struct device *dev,
			    struct device_attribute *attr, char *buf)
{
 148:	010b3b0b 	tsteq	fp, fp, lsl #22
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:530
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "0: close 1: sink 2: source 3: drp");
 14c:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:526
static int tc_mode = 1;
static int boost_mode = 1;
static int power = 1;
static ssize_t show_tc_mode(struct device *dev,
			    struct device_attribute *attr, char *buf)
{
 150:	0803000d 	stmdaeq	r3, {r0, r2, r3}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:530
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "0: close 1: sink 2: source 3: drp");
 154:	0b3b0b3a 	bleq	ec2e44 <axp2585_set_usb_vhold+0xec1c00>
 158:	00001349 	andeq	r1, r0, r9, asr #6
 15c:	0000261f 	andeq	r2, r0, pc, lsl r6
 160:	01152000 	tsteq	r5, r0
 164:	13491927 	movtne	r1, #39207	; 0x9927
 168:	00001301 	andeq	r1, r0, r1, lsl #6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:531
	s += scnprintf(s, end - s, "tc_mode=%d\n", tc_mode);
 16c:	03010421 	movweq	r0, #5153	; 0x1421
 170:	490b0b0e 	stmdbmi	fp, {r1, r2, r3, r8, r9, fp}
 174:	3b0b3a13 	blcc	2ce9c8 <axp2585_set_usb_vhold+0x2cd784>
 178:	0013010b 	andseq	r0, r3, fp, lsl #2
 17c:	00282200 	eoreq	r2, r8, r0, lsl #4
 180:	0b1c0e03 	bleq	703994 <axp2585_set_usb_vhold+0x702750>
 184:	0d230000 	stceq	0, cr0, [r3, #-0]
 188:	3a0e0300 	bcc	380d90 <axp2585_set_usb_vhold+0x37fb4c>
 18c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:532
	return s - buf;
 190:	0d0b0b13 	vstreq	d0, [fp, #-76]	; 0xffffffb4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:533
}
 194:	380b0c0b 	stmdacc	fp, {r0, r1, r3, sl, fp}
 198:	2400000b 	strcs	r0, [r0], #-11
axp2585_get_vbat():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:197
{
	return ((int)(((reg >> 8) << 4) | (reg & 0x000F))) * 1200 / 1000;
}

static int axp2585_get_vbat(struct axp_charger_dev *cdev)
{
 19c:	13490021 	movtne	r0, #36897	; 0x9021
 1a0:	0000052f 	andeq	r0, r0, pc, lsr #10
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:200
	u8 tmp[2];
	u32 res;
	struct axp_regmap *map = cdev->chip->regmap;
 1a4:	03010425 	movweq	r0, #5157	; 0x1425
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:202

	axp_regmap_reads(map, AXP2585_VBATH_RES, 2, tmp);
 1a8:	490b0b0e 	stmdbmi	fp, {r1, r2, r3, r8, r9, fp}
 1ac:	3b0b3a13 	blcc	2cea00 <axp2585_set_usb_vhold+0x2cd7bc>
 1b0:	00130105 	andseq	r0, r3, r5, lsl #2
 1b4:	01132600 	tsteq	r3, r0, lsl #12
 1b8:	0b0b0e03 	bleq	2c39cc <axp2585_set_usb_vhold+0x2c2788>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:203
	res = (tmp[0] << 8) | tmp[1];
 1bc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:205

	return axp2585_vbat_to_mV(res);
 1c0:	00001301 	andeq	r1, r0, r1, lsl #6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:203
	u8 tmp[2];
	u32 res;
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, AXP2585_VBATH_RES, 2, tmp);
	res = (tmp[0] << 8) | tmp[1];
 1c4:	03000d27 	movweq	r0, #3367	; 0xd27
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:205

	return axp2585_vbat_to_mV(res);
 1c8:	3b0b3a0e 	blcc	2cea08 <axp2585_set_usb_vhold+0x2cd7c4>
 1cc:	38134905 	ldmdacc	r3, {r0, r2, r8, fp, lr}
 1d0:	2800000b 	stmdacs	r0, {r0, r1, r3}
 1d4:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 1d8:	0b3a050b 	bleq	e8160c <axp2585_set_usb_vhold+0xe803c8>
 1dc:	1301053b 	movwne	r0, #5435	; 0x153b
 1e0:	0d290000 	stceq	0, cr0, [r9, #-0]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:206
}
 1e4:	3a080300 	bcc	200dec <axp2585_set_usb_vhold+0x1ffba8>
 1e8:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 1ec:	000b3813 	andeq	r3, fp, r3, lsl r8
axp2585_get_disibat():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:231

	return axp2585_icharge_to_mA(res);
}

static int axp2585_get_disibat(struct axp_charger_dev *cdev)
{
 1f0:	000d2a00 	andeq	r2, sp, r0, lsl #20
 1f4:	0b3a0e03 	bleq	e83a08 <axp2585_set_usb_vhold+0xe827c4>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:234
	u8 tmp[2];
	u32 dis_res;
	struct axp_regmap *map = cdev->chip->regmap;
 1f8:	1349053b 	movtne	r0, #38203	; 0x953b
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:236

	axp_regmap_reads(map, AXP2585_DISIBATH_REG, 2, tmp);
 1fc:	00000538 	andeq	r0, r0, r8, lsr r5
 200:	03000d2b 	movweq	r0, #3371	; 0xd2b
 204:	3b0b3a08 	blcc	2cea2c <axp2585_set_usb_vhold+0x2cd7e8>
 208:	38134905 	ldmdacc	r3, {r0, r2, r8, fp, lr}
 20c:	2c000005 	stccs	0, cr0, [r0], {5}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:237
	dis_res = (tmp[0] << 8) | tmp[1];
 210:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 214:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:239

	return axp2585_ibat_to_mA(dis_res);
 218:	0b0b1349 	bleq	2c4f44 <axp2585_set_usb_vhold+0x2c3d00>
 21c:	0b0c0b0d 	bleq	302e58 <axp2585_set_usb_vhold+0x301c14>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:240
}
 220:	00000538 	andeq	r0, r0, r8, lsr r5
 224:	03000d2d 	movweq	r0, #3373	; 0xd2d
 228:	3b0b3a0e 	blcc	2cea68 <axp2585_set_usb_vhold+0x2cd824>
axp2585_power_show():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:585
	return count;
}

static ssize_t axp2585_power_show(struct device *dev,
			    struct device_attribute *attr, char *buf)
{
 22c:	0b134905 	bleq	4d2648 <axp2585_set_usb_vhold+0x4d1404>
 230:	0c0b0d0b 	stceq	13, cr0, [fp], {11}
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
 234:	000b380b 	andeq	r3, fp, fp, lsl #16
axp2585_power_show():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:590
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);
	int vbat, ibat;
	vbat = axp2585_get_vbat(chg_dev);
 238:	01042e00 	tsteq	r4, r0, lsl #28
 23c:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 240:	0b3b0b3a 	bleq	ec2f30 <axp2585_set_usb_vhold+0xec1cec>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:591
	ibat = axp2585_get_disibat(chg_dev);
 244:	00001301 	andeq	r1, r0, r1, lsl #6
 248:	0300132f 	movweq	r1, #815	; 0x32f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:593
	power = vbat*ibat/1000;
	s += scnprintf(s, end - s, "%dmV\n", power);
 24c:	00193c08 	andseq	r3, r9, r8, lsl #24
 250:	01043000 	mrseq	r3, (UNDEF: 4)
 254:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 258:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 25c:	00001301 	andeq	r1, r0, r1, lsl #6
 260:	03000d31 	movweq	r0, #3377	; 0xd31
 264:	3b0b3a08 	blcc	2cea8c <axp2585_set_usb_vhold+0x2cd848>
 268:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 26c:	32000005 	andcc	r0, r0, #5
 270:	0e03012e 	adfeqsp	f0, f3, #0.5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:595
	return s - buf;
}
 274:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:593
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);
	int vbat, ibat;
	vbat = axp2585_get_vbat(chg_dev);
	ibat = axp2585_get_disibat(chg_dev);
	power = vbat*ibat/1000;
	s += scnprintf(s, end - s, "%dmV\n", power);
 278:	13491927 	movtne	r1, #39207	; 0x9927
axp2585_get_ibat():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:219
{
	return (int)((((reg >> 8) << 4) | (reg & 0x000F)) << 1);
}

static int axp2585_get_ibat(struct axp_charger_dev *cdev)
{
 27c:	13010b20 	movwne	r0, #6944	; 0x1b20
 280:	05330000 	ldreq	r0, [r3, #-0]!
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:222
	u8 tmp[2];
	u32 res;
	struct axp_regmap *map = cdev->chip->regmap;
 284:	3a080300 	bcc	200e8c <axp2585_set_usb_vhold+0x1ffc48>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:224

	axp_regmap_reads(map, AXP2585_IBATH_REG, 2, tmp);
 288:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 28c:	34000013 	strcc	r0, [r0], #-19	; 0xffffffed
 290:	0e03012e 	adfeqsp	f0, f3, #0.5
 294:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 298:	0b201927 	bleq	80673c <axp2585_set_usb_vhold+0x8054f8>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:225
	res = (tmp[0] << 8) | tmp[1];
 29c:	00001301 	andeq	r1, r0, r1, lsl #6
 2a0:	03000535 	movweq	r0, #1333	; 0x535
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:227

	return axp2585_icharge_to_mA(res);
 2a4:	3b0b3a0e 	blcc	2ceae4 <axp2585_set_usb_vhold+0x2cd8a0>
 2a8:	00134905 	andseq	r4, r3, r5, lsl #18
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:228
}
 2ac:	012e3600 	teqeq	lr, r0, lsl #12
 2b0:	0b3a0e03 	bleq	e83ac4 <axp2585_set_usb_vhold+0xe82880>
 2b4:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
store_boost_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:565
	return s - buf;
}

static ssize_t store_boost_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
 2b8:	0b201349 	bleq	804fe4 <axp2585_set_usb_vhold+0x803da0>
 2bc:	00001301 	andeq	r1, r0, r1, lsl #6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:568
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;
 2c0:	03000537 	movweq	r0, #1335	; 0x537
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:565
	return s - buf;
}

static ssize_t store_boost_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
 2c4:	3b0b3a0e 	blcc	2ceb04 <axp2585_set_usb_vhold+0x2cd8c0>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:570
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;

	err = kstrtoint(buf, 16, &val);
 2c8:	0013490b 	andseq	r4, r3, fp, lsl #18
 2cc:	00053800 	andeq	r3, r5, r0, lsl #16
 2d0:	0b3a0803 	bleq	e822e4 <axp2585_set_usb_vhold+0xe810a0>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:568
static ssize_t store_boost_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;
 2d4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 2d8:	34390000 	ldrtcc	r0, [r9], #-0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:570

	err = kstrtoint(buf, 16, &val);
 2dc:	3a080300 	bcc	200ee4 <axp2585_set_usb_vhold+0x1ffca0>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:571
	if (err)
 2e0:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 2e4:	3a000013 	bcc	338 <.debug_abbrev+0x338>
 2e8:	0e03012e 	adfeqsp	f0, f3, #0.5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:573
		return err;
	if (val != 1)
 2ec:	0b3b0b3a 	bleq	ec2fdc <axp2585_set_usb_vhold+0xec1d98>
 2f0:	0b201927 	bleq	806794 <axp2585_set_usb_vhold+0x805550>
 2f4:	00001301 	andeq	r1, r0, r1, lsl #6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
		val = 0;
	boost_mode = val;
 2f8:	31012e3b 	tstcc	r1, fp, lsr lr
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:579
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
	else
		axp_regmap_clr_bits(map, 0x12, 0x80);
 2fc:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
	boost_mode = val;
 300:	97184006 	ldrls	r4, [r8, -r6]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:579
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
	else
		axp_regmap_clr_bits(map, 0x12, 0x80);
 304:	13011942 	movwne	r1, #6466	; 0x1942
 308:	053c0000 	ldreq	r0, [ip, #-0]!
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:574

	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
 30c:	02133100 	andseq	r3, r3, #0, 2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	boost_mode = val;
 310:	3d000017 	stccc	0, cr0, [r0, #-92]	; 0xffffffa4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:579
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
	else
		axp_regmap_clr_bits(map, 0x12, 0x80);
 314:	13310005 	teqne	r1, #5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:580
	return count;
 318:	00001802 	andeq	r1, r0, r2, lsl #16
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:581
}
 31c:	03012e3e 	movweq	r2, #7742	; 0x1e3e
 320:	3b0b3a0e 	blcc	2ceb60 <axp2585_set_usb_vhold+0x2cd91c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
	boost_mode = val;
 324:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:577
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
 328:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
	boost_mode = val;
 32c:	97184006 	ldrls	r4, [r8, -r6]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:577
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
 330:	13011942 	movwne	r1, #6466	; 0x1942
 334:	053f0000 	ldreq	r0, [pc, #-0]!	; 33c <.debug_abbrev+0x33c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
	boost_mode = val;
 338:	3a0e0300 	bcc	380f40 <axp2585_set_usb_vhold+0x37fcfc>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:577
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
 33c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 340:	00170213 	andseq	r0, r7, r3, lsl r2
store_tc_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:537
	return s - buf;
}

static ssize_t store_tc_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
 344:	012e4000 	teqeq	lr, r0
 348:	0b3a0e03 	bleq	e83b5c <axp2585_set_usb_vhold+0xe82918>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:540
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;
 34c:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:537
	return s - buf;
}

static ssize_t store_tc_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
 350:	01111349 	tsteq	r1, r9, asr #6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:542
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;

	err = kstrtoint(buf, 16, &val);
 354:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 358:	01194297 			; <UNDEFINED> instruction: 0x01194297
 35c:	41000013 	tstmi	r0, r3, lsl r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:540
static ssize_t store_tc_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;
 360:	08030034 	stmdaeq	r3, {r2, r4, r5}
 364:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:542

	err = kstrtoint(buf, 16, &val);
 368:	17021349 	strne	r1, [r2, -r9, asr #6]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:543
	if (err)
 36c:	34420000 	strbcc	r0, [r2], #-0
 370:	490e0300 	stmdbmi	lr, {r8, r9}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:545
		return err;
	if (val > 3)
 374:	02193413 	andseq	r3, r9, #318767104	; 0x13000000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:547
		val = 1;
	tc_mode = val;
 378:	43000018 	movwmi	r0, #24
 37c:	00018289 	andeq	r8, r1, r9, lsl #5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:548
		axp_regmap_update(map, 0x33, tc_mode, 0x03);
 380:	13310111 	teqne	r1, #1073741828	; 0x40000004
 384:	05440000 	strbeq	r0, [r4, #-0]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:545
	struct axp_regmap *map = chg_dev->chip->regmap;

	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val > 3)
 388:	3a080300 	bcc	200f90 <axp2585_set_usb_vhold+0x1ffd4c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:546
		val = 1;
 38c:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 390:	00170213 	andseq	r0, r7, r3, lsl r2
 394:	00344500 	eorseq	r4, r4, r0, lsl #10
 398:	0b3a0e03 	bleq	e83bac <axp2585_set_usb_vhold+0xe82968>
 39c:	1349053b 	movtne	r0, #38203	; 0x953b
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:548
	tc_mode = val;
		axp_regmap_update(map, 0x33, tc_mode, 0x03);
 3a0:	34460000 	strbcc	r0, [r6], #-0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:547
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val > 3)
		val = 1;
	tc_mode = val;
 3a4:	3a0e0300 	bcc	380fac <axp2585_set_usb_vhold+0x37fd68>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:548
		axp_regmap_update(map, 0x33, tc_mode, 0x03);
 3a8:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:549
	return count;
 3ac:	00180213 	andseq	r0, r8, r3, lsl r2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:550
}
 3b0:	011d4700 	tsteq	sp, r0, lsl #14
 3b4:	01111331 	tsteq	r1, r1, lsr r3
axp2585_set_chg_vol():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:264
static int axp2585_set_chg_vol(struct axp_charger_dev *cdev, int vol)
{
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;

	if (vol > 3840 && vol < 4608)
 3b8:	0b580612 	bleq	1601c08 <axp2585_set_usb_vhold+0x16009c4>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:260
	axp_regmap_update(map, 0x8b, tmp, 0x3F);
	return 0;
}

static int axp2585_set_chg_vol(struct axp_charger_dev *cdev, int vol)
{
 3bc:	13010559 	movwne	r0, #5465	; 0x1559
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:264
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;

	if (vol > 3840 && vol < 4608)
 3c0:	05480000 	strbeq	r0, [r8, #-0]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:262
}

static int axp2585_set_chg_vol(struct axp_charger_dev *cdev, int vol)
{
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;
 3c4:	00133100 	andseq	r3, r3, r0, lsl #2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:264

	if (vol > 3840 && vol < 4608)
 3c8:	011d4900 	tsteq	sp, r0, lsl #18
 3cc:	01111331 	tsteq	r1, r1, lsr r3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:262
}

static int axp2585_set_chg_vol(struct axp_charger_dev *cdev, int vol)
{
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;
 3d0:	0b580612 	bleq	1601c20 <axp2585_set_usb_vhold+0x16009dc>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:264

	if (vol > 3840 && vol < 4608)
 3d4:	00000b59 	andeq	r0, r0, r9, asr fp
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:265
		tmp = (vol - 3840)/16;
 3d8:	0300054a 	movweq	r0, #1354	; 0x54a
 3dc:	3b0b3a0e 	blcc	2cec1c <axp2585_set_usb_vhold+0x2cd9d8>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:270
	else {
		pr_warn("unsupported voltage: %dmv, use default 4200mv\n", vol);
		tmp = (4200 - 3840)/16;
	}
	axp_regmap_update(map, 0x8c, tmp << 2, 0xfc);
 3e0:	02134905 	andseq	r4, r3, #81920	; 0x14000
 3e4:	4b000017 	blmi	448 <.debug_abbrev+0x448>
 3e8:	0e03012e 	adfeqsp	f0, f3, #0.5
 3ec:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 3f0:	01111927 	tsteq	r1, r7, lsr #18
 3f4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:272
	return 0;
}
 3f8:	01194297 			; <UNDEFINED> instruction: 0x01194297
 3fc:	4c000013 	stcmi	0, cr0, [r0], {19}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:267
	struct axp_regmap *map = cdev->chip->regmap;

	if (vol > 3840 && vol < 4608)
		tmp = (vol - 3840)/16;
	else {
		pr_warn("unsupported voltage: %dmv, use default 4200mv\n", vol);
 400:	00018289 	andeq	r8, r1, r9, lsl #5
 404:	42950111 	addsmi	r0, r5, #1073741828	; 0x40000004
 408:	00133119 	andseq	r3, r3, r9, lsl r1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:268
		tmp = (4200 - 3840)/16;
 40c:	00344d00 	eorseq	r4, r4, r0, lsl #26
 410:	0b3a0803 	bleq	e82424 <axp2585_set_usb_vhold+0xe811e0>
axp2585_set_chg_cur():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:252
	if (cur == 0)
		axp_regmap_clr_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
	else
		axp_regmap_set_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
*/
	tmp = (cur) / 64;
 414:	1349053b 	movtne	r0, #38203	; 0x953b
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:243

	return axp2585_ibat_to_mA(dis_res);
}

static int axp2585_set_chg_cur(struct axp_charger_dev *cdev, int cur)
{
 418:	1d4e0000 	stclne	0, cr0, [lr, #-0]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:252
	if (cur == 0)
		axp_regmap_clr_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
	else
		axp_regmap_set_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
*/
	tmp = (cur) / 64;
 41c:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:245
}

static int axp2585_set_chg_cur(struct axp_charger_dev *cdev, int cur)
{
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;
 420:	58175501 	ldmdapl	r7, {r0, r8, sl, ip, lr}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:252
	if (cur == 0)
		axp_regmap_clr_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
	else
		axp_regmap_set_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
*/
	tmp = (cur) / 64;
 424:	0105590b 	tsteq	r5, fp, lsl #18
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:255
	if (tmp > 0x3f)
		tmp = 0x3f;
	axp_regmap_update(map, 0x8b, tmp, 0x3F);
 428:	4f000013 	svcmi	0x00000013
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:252
	if (cur == 0)
		axp_regmap_clr_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
	else
		axp_regmap_set_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
*/
	tmp = (cur) / 64;
 42c:	08030034 	stmdaeq	r3, {r2, r4, r5}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:255
	if (tmp > 0x3f)
		tmp = 0x3f;
	axp_regmap_update(map, 0x8b, tmp, 0x3F);
 430:	0b3b0b3a 	bleq	ec3120 <axp2585_set_usb_vhold+0xec1edc>
 434:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 438:	34500000 	ldrbcc	r0, [r0], #-0
 43c:	3a0e0300 	bcc	381044 <axp2585_set_usb_vhold+0x37fe00>
 440:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:257
	return 0;
}
 444:	51000013 	tstpl	r0, r3, lsl r0
 448:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
axp2585_private_debug():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:612
	.name = "bmu_control",
	.attrs = bmu_control_attrs,
};

static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
 44c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 450:	17021349 	strne	r1, [r2, -r9, asr #6]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:614
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;
 454:	34520000 	ldrbcc	r0, [r2], #-0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:612
	.name = "bmu_control",
	.attrs = bmu_control_attrs,
};

static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
 458:	3a080300 	bcc	201060 <axp2585_set_usb_vhold+0x1ffe1c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:617
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, 0x5a, 2, tmp);
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 45c:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:616
static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, 0x5a, 2, tmp);
 460:	00180213 	andseq	r0, r8, r3, lsl r2
 464:	00055300 	andeq	r5, r5, r0, lsl #6
 468:	0b3a0803 	bleq	e8247c <axp2585_set_usb_vhold+0xe81238>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:614
};

static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;
 46c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:617

	axp_regmap_reads(map, 0x5a, 2, tmp);
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 470:	00001702 	andeq	r1, r0, r2, lsl #14
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:616
static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, 0x5a, 2, tmp);
 474:	03003454 	movweq	r3, #1108	; 0x454
 478:	3b0b3a0e 	blcc	2cecb8 <axp2585_set_usb_vhold+0x2cda74>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:617
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 47c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 480:	55000018 	strpl	r0, [r0, #-24]	; 0xffffffe8
 484:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:620
			"acin_vol = %d\n", ((tmp[0] << 4) | (tmp[1] & 0xF))
			* 8);
	axp_regmap_reads(map, 0xbc, 2, tmp);
 488:	0b3b0b3a 	bleq	ec3178 <axp2585_set_usb_vhold+0xec1f34>
 48c:	17021349 	strne	r1, [r2, -r9, asr #6]
 490:	34560000 	ldrbcc	r0, [r6], #-0
 494:	3a080300 	bcc	20109c <axp2585_set_usb_vhold+0x1ffe58>
 498:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:621
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 49c:	00170213 	andseq	r0, r7, r3, lsl r2
 4a0:	00345700 	eorseq	r5, r4, r0, lsl #14
 4a4:	13490e03 	movtne	r0, #40451	; 0x9e03
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:625
			"ocv_vol = %d\n", ((tmp[0] << 4) | (tmp[1] & 0xF))
			* 1200 / 1000);

}
 4a8:	0e1c1934 	mrceq	9, 0, r1, cr12, cr4, {1}
 4ac:	0a580000 	beq	16004b4 <axp2585_set_usb_vhold+0x15ff270>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:617 (discriminator 1)
{
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, 0x5a, 2, tmp);
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 4b0:	3a0e0300 	bcc	3810b8 <axp2585_set_usb_vhold+0x37fe74>
 4b4:	00053b0b 	andeq	r3, r5, fp, lsl #22
 4b8:	010b5900 	tsteq	fp, r0, lsl #18
 4bc:	00001755 	andeq	r1, r0, r5, asr r7
 4c0:	3100345a 	tstcc	r0, sl, asr r4
 4c4:	00180213 	andseq	r0, r8, r3, lsl r2
 4c8:	00345b00 	eorseq	r5, r4, r0, lsl #22
 4cc:	17021331 	smladxne	r2, r1, r3, r1
 4d0:	345c0000 	ldrbcc	r0, [ip], #-0
 4d4:	00133100 	andseq	r3, r3, r0, lsl #2
 4d8:	010b5d00 	tsteq	fp, r0, lsl #26
 4dc:	06120111 			; <UNDEFINED> instruction: 0x06120111
 4e0:	00001301 	andeq	r1, r0, r1, lsl #6
 4e4:	11010b5e 	tstne	r1, lr, asr fp
 4e8:	00061201 	andeq	r1, r6, r1, lsl #4
 4ec:	00345f00 	eorseq	r5, r4, r0, lsl #30
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:621 (discriminator 1)
			"acin_vol = %d\n", ((tmp[0] << 4) | (tmp[1] & 0xF))
			* 8);
	axp_regmap_reads(map, 0xbc, 2, tmp);
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 4f0:	0b3a0e03 	bleq	e83d04 <axp2585_set_usb_vhold+0xe82ac0>
 4f4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 4f8:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
 4fc:	21600000 	cmncs	r0, r0
 500:	61000000 	mrsvs	r0, (UNDEF: 0)
 504:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 508:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 50c:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
 510:	0000193c 	andeq	r1, r0, ip, lsr r9
 514:	03003462 	movweq	r3, #1122	; 0x462
 518:	3b0b3a0e 	blcc	2ced58 <axp2585_set_usb_vhold+0x2cdb14>
 51c:	3f13490b 	svccc	0x0013490b
 520:	00180219 	andseq	r0, r8, r9, lsl r2
 524:	002e6300 	eoreq	r6, lr, r0, lsl #6
 528:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
 52c:	0e030e6e 	cdpeq	14, 0, cr0, cr3, cr14, {3}
 530:	0b3b0b3a 	bleq	ec3220 <axp2585_set_usb_vhold+0xec1fdc>
 534:	2e640000 	cdpcs	0, 6, cr0, cr4, cr0, {0}
 538:	3c193f00 	ldccc	15, cr3, [r9], {-0}
 53c:	030e6e19 	movweq	r6, #60953	; 0xee19
 540:	3b0b3a0e 	blcc	2ced80 <axp2585_set_usb_vhold+0x2cdb3c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:625 (discriminator 1)
			"ocv_vol = %d\n", ((tmp[0] << 4) | (tmp[1] & 0xF))
			* 1200 / 1000);

}
 544:	00000005 	andeq	r0, r0, r5

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
axp2585_set_ac_ihold():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:40
}

static int axp2585_set_ac_ihold(struct axp_charger_dev *cdev, int cur)
{
	return 0;
}
   0:	00000000 	andeq	r0, r0, r0
   4:	00000004 	andeq	r0, r0, r4
axp2585_get_usb_current():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:68
}

static int axp2585_get_usb_current(struct axp_charger_dev *cdev)
{
	return 0;
}
   8:	00500001 	subseq	r0, r0, r1
   c:	00000000 	andeq	r0, r0, r0
axp2585_get_bat_health():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:189
}

static int axp2585_get_bat_health(struct axp_charger_dev *cdev)
{
	return POWER_SUPPLY_HEALTH_GOOD;
}
  10:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
  14:	0c000000 	stceq	0, cr0, [r0], {-0}
axp2585_charger_resume():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:763

	return 0;
}

static int axp2585_charger_resume(struct platform_device *dev)
{
  18:	01000000 	mrseq	r0, (UNDEF: 0)
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:768
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);
	int pre_rest_vol;

	if (axp_suspend_flag == AXP_SUSPEND_WITH_IRQ) {
		axp_suspend_flag = AXP_NOT_SUSPEND;
  1c:	00005000 	andeq	r5, r0, r0
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  20:	00000000 	andeq	r0, r0, r0
axp2585_charger_resume():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:768
  24:	00100000 	andseq	r0, r0, r0
  28:	00140000 	andseq	r0, r4, r0
  2c:	00010000 	andeq	r0, r1, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:774
	//	sunxi_nmi_enable();
	} else {
		axp_suspend_flag = AXP_NOT_SUSPEND;
	}
	pre_rest_vol = chg_dev->rest_vol;
	axp_charger_resume(chg_dev);
  30:	00000050 	andeq	r0, r0, r0, asr r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:773
		axp_suspend_flag = AXP_NOT_SUSPEND;
	//	sunxi_nmi_enable();
	} else {
		axp_suspend_flag = AXP_NOT_SUSPEND;
	}
	pre_rest_vol = chg_dev->rest_vol;
  34:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:774
	axp_charger_resume(chg_dev);
  38:	00001400 	andeq	r1, r0, r0, lsl #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:776

	if (chg_dev->rest_vol - pre_rest_vol) {
  3c:	00002000 	andeq	r2, r0, r0
  40:	50000100 	andpl	r0, r0, r0, lsl #2
  44:	00000020 	andeq	r0, r0, r0, lsr #32
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:783
				pre_rest_vol, chg_dev->rest_vol);
		/*axp_regmap_write(map, 0x05, chg_dev->rest_vol | 0x80);*/
	}

	return 0;
}
  48:	00000033 	andeq	r0, r0, r3, lsr r0
  4c:	3c520001 	mrrccc	0, 0, r0, r2, cr1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:777
	}
	pre_rest_vol = chg_dev->rest_vol;
	axp_charger_resume(chg_dev);

	if (chg_dev->rest_vol - pre_rest_vol) {
		pr_info("battery vol change: %d->%d\n",
  50:	40000000 	andmi	r0, r0, r0
  54:	01000000 	mrseq	r0, (UNDEF: 0)
  58:	00005000 	andeq	r5, r0, r0
  5c:	00000000 	andeq	r0, r0, r0
  60:	00180000 	andseq	r0, r8, r0
axp2585_charger_suspend():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
static int axp2585_charger_suspend(struct platform_device *dev,
				pm_message_t state)
{
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_suspend_flag = AXP_WAS_SUSPEND;
  64:	00340000 	eorseq	r0, r4, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:753
	return 0;
}

static int axp2585_charger_suspend(struct platform_device *dev,
				pm_message_t state)
{
  68:	00010000 	andeq	r0, r1, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_suspend_flag = AXP_WAS_SUSPEND;
  6c:	00000050 	andeq	r0, r0, r0, asr r0
  70:	00000000 	andeq	r0, r0, r0
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  74:	00006400 	andeq	r6, r0, r0, lsl #8
axp2585_charger_suspend():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
  78:	00007800 	andeq	r7, r0, r0, lsl #16
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:757
	axp_charger_suspend(chg_dev);
  7c:	50000100 	andpl	r0, r0, r0, lsl #2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:760

	return 0;
}
  80:	00000000 	andeq	r0, r0, r0
  84:	00000000 	andeq	r0, r0, r0
axp2585_charger_shutdown():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:789

static void axp2585_charger_shutdown(struct platform_device *dev)
{
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_charger_shutdown(chg_dev);
  88:	00000064 	andeq	r0, r0, r4, rrx
  8c:	0000007f 	andeq	r0, r0, pc, ror r0
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:734
fail:
	return -1;
}

static int axp2585_charger_remove(struct platform_device *pdev)
{
  90:	00510001 	subseq	r0, r1, r1
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  94:	00000000 	andeq	r0, r0, r0
  98:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:734
  9c:	8c000000 	stchi	0, cr0, [r0], {-0}
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  a0:	01000000 	mrseq	r0, (UNDEF: 0)
  a4:	00005000 	andeq	r5, r0, r0
  a8:	00000000 	andeq	r0, r0, r0
  ac:	00900000 	addseq	r0, r0, r0
  b0:	00b80000 	adcseq	r0, r8, r0
  b4:	00010000 	andeq	r0, r1, r0
  b8:	0000b850 	andeq	fp, r0, r0, asr r8
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:740
	int i, irq;
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
  bc:	0000f400 	andeq	pc, r0, r0, lsl #8
  c0:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
  c4:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:741
		if (irq < 0)
  c8:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:743
			continue;
		axp_free_irq(axp_dev, irq);
  cc:	000000b8 	strheq	r0, [r0], -r8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:741
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
		if (irq < 0)
  d0:	000000bc 	strheq	r0, [r0], -ip
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:743
			continue;
		axp_free_irq(axp_dev, irq);
  d4:	cc510001 	mrrcgt	0, 0, r0, r1, cr1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:739 (discriminator 2)
{
	int i, irq;
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
  d8:	d7000000 	strle	r0, [r0, -r0]
  dc:	01000000 	mrseq	r0, (UNDEF: 0)
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:746
		if (irq < 0)
			continue;
		axp_free_irq(axp_dev, irq);
	}

	axp_power_supply_unregister(chg_dev);
  e0:	00d85100 	sbcseq	r5, r8, r0, lsl #2
  e4:	00e70000 	rsceq	r0, r7, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:749

	return 0;
}
  e8:	00010000 	andeq	r0, r1, r0
  ec:	00000051 	andeq	r0, r0, r1, asr r0
  f0:	00000000 	andeq	r0, r0, r0
show_boost_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:554
	return count;
}

static ssize_t show_boost_mode(struct device *dev,
			struct device_attribute *attr, char *buf)
{
  f4:	0000f400 	andeq	pc, r0, r0, lsl #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:558
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "1: open  0: close");
  f8:	00010800 	andeq	r0, r1, r0, lsl #16
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:554
	return count;
}

static ssize_t show_boost_mode(struct device *dev,
			struct device_attribute *attr, char *buf)
{
  fc:	50000100 	andpl	r0, r0, r0, lsl #2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:558
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "1: open  0: close");
 100:	00000000 	andeq	r0, r0, r0
 104:	00000000 	andeq	r0, r0, r0
 108:	000000f4 	strdeq	r0, [r0], -r4
 10c:	00000114 	andeq	r0, r0, r4, lsl r1
 110:	00510001 	subseq	r0, r1, r1
 114:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:559
	s += scnprintf(s, end - s, "boost_mode=%d\n", boost_mode);
 118:	f4000000 	vst4.8	{d0-d3}, [r0], r0
 11c:	04000000 	streq	r0, [r0], #-0
 120:	01000001 	tsteq	r0, r1
 124:	01045200 	mrseq	r5, R12_usr
 128:	01480000 	mrseq	r0, (UNDEF: 72)
 12c:	00010000 	andeq	r0, r1, r0
 130:	00000055 	andeq	r0, r0, r5, asr r0
 134:	00000000 	andeq	r0, r0, r0
 138:	00014800 	andeq	r4, r1, r0, lsl #16
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:560
	return s - buf;
 13c:	00015c00 	andeq	r5, r1, r0, lsl #24
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:561
}
 140:	50000100 	andpl	r0, r0, r0, lsl #2
 144:	00000000 	andeq	r0, r0, r0
show_tc_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:526
static int tc_mode = 1;
static int boost_mode = 1;
static int power = 1;
static ssize_t show_tc_mode(struct device *dev,
			    struct device_attribute *attr, char *buf)
{
 148:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:530
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "0: close 1: sink 2: source 3: drp");
 14c:	00000148 	andeq	r0, r0, r8, asr #2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:526
static int tc_mode = 1;
static int boost_mode = 1;
static int power = 1;
static ssize_t show_tc_mode(struct device *dev,
			    struct device_attribute *attr, char *buf)
{
 150:	00000168 	andeq	r0, r0, r8, ror #2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:530
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "0: close 1: sink 2: source 3: drp");
 154:	00510001 	subseq	r0, r1, r1
 158:	00000000 	andeq	r0, r0, r0
 15c:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
 160:	58000001 	stmdapl	r0, {r0}
 164:	01000001 	tsteq	r0, r1
 168:	01585200 	cmpeq	r8, r0, lsl #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:531
	s += scnprintf(s, end - s, "tc_mode=%d\n", tc_mode);
 16c:	019c0000 	orrseq	r0, ip, r0
 170:	00010000 	andeq	r0, r1, r0
 174:	00000055 	andeq	r0, r0, r5, asr r0
 178:	00000000 	andeq	r0, r0, r0
 17c:	00019c00 	andeq	r9, r1, r0, lsl #24
 180:	0001a800 	andeq	sl, r1, r0, lsl #16
 184:	50000100 	andpl	r0, r0, r0, lsl #2
 188:	00000000 	andeq	r0, r0, r0
 18c:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:532
	return s - buf;
 190:	000001f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:533
}
 194:	000001fc 	strdeq	r0, [r0], -ip
 198:	00500001 	subseq	r0, r0, r1
axp2585_get_vbat():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:197
{
	return ((int)(((reg >> 8) << 4) | (reg & 0x000F))) * 1200 / 1000;
}

static int axp2585_get_vbat(struct axp_charger_dev *cdev)
{
 19c:	00000000 	andeq	r0, r0, r0
 1a0:	2c000000 	stccs	0, cr0, [r0], {-0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:200
	u8 tmp[2];
	u32 res;
	struct axp_regmap *map = cdev->chip->regmap;
 1a4:	3c000002 	stccc	0, cr0, [r0], {2}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:202

	axp_regmap_reads(map, AXP2585_VBATH_RES, 2, tmp);
 1a8:	01000002 	tsteq	r0, r2
 1ac:	00005000 	andeq	r5, r0, r0
 1b0:	00000000 	andeq	r0, r0, r0
 1b4:	022c0000 	eoreq	r0, ip, #0
 1b8:	023f0000 	eorseq	r0, pc, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:203
	res = (tmp[0] << 8) | tmp[1];
 1bc:	00010000 	andeq	r0, r1, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:205

	return axp2585_vbat_to_mV(res);
 1c0:	00000051 	andeq	r0, r0, r1, asr r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:203
	u8 tmp[2];
	u32 res;
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, AXP2585_VBATH_RES, 2, tmp);
	res = (tmp[0] << 8) | tmp[1];
 1c4:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:205

	return axp2585_vbat_to_mV(res);
 1c8:	00022c00 	andeq	r2, r2, r0, lsl #24
 1cc:	00023f00 	andeq	r3, r2, r0, lsl #30
 1d0:	52000100 	andpl	r0, r0, #0, 2
 1d4:	0000023f 	andeq	r0, r0, pc, lsr r2
 1d8:	00000278 	andeq	r0, r0, r8, ror r2
 1dc:	00560001 	subseq	r0, r6, r1
 1e0:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:206
}
 1e4:	44000000 	strmi	r0, [r0], #-0
 1e8:	54000002 	strpl	r0, [r0], #-2
 1ec:	01000002 	tsteq	r0, r2
axp2585_get_disibat():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:231

	return axp2585_icharge_to_mA(res);
}

static int axp2585_get_disibat(struct axp_charger_dev *cdev)
{
 1f0:	00005400 	andeq	r5, r0, r0, lsl #8
 1f4:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:234
	u8 tmp[2];
	u32 dis_res;
	struct axp_regmap *map = cdev->chip->regmap;
 1f8:	027c0000 	rsbseq	r0, ip, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:236

	axp_regmap_reads(map, AXP2585_DISIBATH_REG, 2, tmp);
 1fc:	02880000 	addeq	r0, r8, #0
 200:	00010000 	andeq	r0, r1, r0
 204:	00000050 	andeq	r0, r0, r0, asr r0
 208:	00000000 	andeq	r0, r0, r0
 20c:	0002b800 	andeq	fp, r2, r0, lsl #16
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:237
	dis_res = (tmp[0] << 8) | tmp[1];
 210:	0002cc00 	andeq	ip, r2, r0, lsl #24
 214:	50000100 	andpl	r0, r0, r0, lsl #2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:239

	return axp2585_ibat_to_mA(dis_res);
 218:	00000000 	andeq	r0, r0, r0
 21c:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:240
}
 220:	000002b8 			; <UNDEFINED> instruction: 0x000002b8
 224:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 228:	00510001 	subseq	r0, r1, r1
axp2585_power_show():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:585
	return count;
}

static ssize_t axp2585_power_show(struct device *dev,
			    struct device_attribute *attr, char *buf)
{
 22c:	00000000 	andeq	r0, r0, r0
 230:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
 234:	d4000002 	strle	r0, [r0], #-2
axp2585_power_show():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:590
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);
	int vbat, ibat;
	vbat = axp2585_get_vbat(chg_dev);
 238:	01000002 	tsteq	r0, r2
 23c:	00005200 	andeq	r5, r0, r0, lsl #4
 240:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:591
	ibat = axp2585_get_disibat(chg_dev);
 244:	02b80000 	adcseq	r0, r8, #0
 248:	02d80000 	sbcseq	r0, r8, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:593
	power = vbat*ibat/1000;
	s += scnprintf(s, end - s, "%dmV\n", power);
 24c:	00010000 	andeq	r0, r1, r0
 250:	0002d853 	andeq	sp, r2, r3, asr r8
 254:	00034400 	andeq	r4, r3, r0, lsl #8
 258:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
 25c:	00000000 	andeq	r0, r0, r0
 260:	00000000 	andeq	r0, r0, r0
 264:	000002ec 	andeq	r0, r0, ip, ror #5
 268:	00000324 	andeq	r0, r0, r4, lsr #6
 26c:	64910002 	ldrvs	r0, [r1], #2
 270:	00000324 	andeq	r0, r0, r4, lsr #6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:595
	return s - buf;
}
 274:	0000033f 	andeq	r0, r0, pc, lsr r3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:593
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);
	int vbat, ibat;
	vbat = axp2585_get_vbat(chg_dev);
	ibat = axp2585_get_disibat(chg_dev);
	power = vbat*ibat/1000;
	s += scnprintf(s, end - s, "%dmV\n", power);
 278:	3f5c0001 	svccc	0x005c0001
axp2585_get_ibat():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:219
{
	return (int)((((reg >> 8) << 4) | (reg & 0x000F)) << 1);
}

static int axp2585_get_ibat(struct axp_charger_dev *cdev)
{
 27c:	44000003 	strmi	r0, [r0], #-3
 280:	02000003 	andeq	r0, r0, #3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:222
	u8 tmp[2];
	u32 res;
	struct axp_regmap *map = cdev->chip->regmap;
 284:	00649100 	rsbeq	r9, r4, r0, lsl #2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:224

	axp_regmap_reads(map, AXP2585_IBATH_REG, 2, tmp);
 288:	00000000 	andeq	r0, r0, r0
 28c:	e4000000 	str	r0, [r0], #-0
 290:	17000002 	strne	r0, [r0, -r2]
 294:	01000003 	tsteq	r0, r3
 298:	031c5300 	tsteq	ip, #0, 6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:225
	res = (tmp[0] << 8) | tmp[1];
 29c:	03280000 	teqeq	r8, #0
 2a0:	00010000 	andeq	r0, r1, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:227

	return axp2585_icharge_to_mA(res);
 2a4:	00000053 	andeq	r0, r0, r3, asr r0
 2a8:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:228
}
 2ac:	00034400 	andeq	r4, r3, r0, lsl #8
 2b0:	00035800 	andeq	r5, r3, r0, lsl #16
 2b4:	50000100 	andpl	r0, r0, r0, lsl #2
store_boost_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:565
	return s - buf;
}

static ssize_t store_boost_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
 2b8:	00000000 	andeq	r0, r0, r0
 2bc:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:568
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;
 2c0:	00000344 	andeq	r0, r0, r4, asr #6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:565
	return s - buf;
}

static ssize_t store_boost_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
 2c4:	0000035c 	andeq	r0, r0, ip, asr r3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:570
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;

	err = kstrtoint(buf, 16, &val);
 2c8:	00510001 	subseq	r0, r1, r1
 2cc:	00000000 	andeq	r0, r0, r0
 2d0:	44000000 	strmi	r0, [r0], #-0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:568
static ssize_t store_boost_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;
 2d4:	60000003 	andvs	r0, r0, r3
 2d8:	01000003 	tsteq	r0, r3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:570

	err = kstrtoint(buf, 16, &val);
 2dc:	00005200 	andeq	r5, r0, r0, lsl #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:571
	if (err)
 2e0:	00000000 	andeq	r0, r0, r0
 2e4:	03440000 	movteq	r0, #16384	; 0x4000
 2e8:	03640000 	cmneq	r4, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:573
		return err;
	if (val != 1)
 2ec:	00010000 	andeq	r0, r1, r0
 2f0:	00036453 	andeq	r6, r3, r3, asr r4
 2f4:	0003b800 	andeq	fp, r3, r0, lsl #16
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
		val = 0;
	boost_mode = val;
 2f8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:579
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
	else
		axp_regmap_clr_bits(map, 0x12, 0x80);
 2fc:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
	boost_mode = val;
 300:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:579
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
	else
		axp_regmap_clr_bits(map, 0x12, 0x80);
 304:	00000370 	andeq	r0, r0, r0, ror r3
 308:	00000384 	andeq	r0, r0, r4, lsl #7
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:574

	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
 30c:	b0500001 	subslt	r0, r0, r1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	boost_mode = val;
 310:	b0000003 	andlt	r0, r0, r3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:579
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
	else
		axp_regmap_clr_bits(map, 0x12, 0x80);
 314:	01000003 	tsteq	r0, r3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:580
	return count;
 318:	00005000 	andeq	r5, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:581
}
 31c:	00000000 	andeq	r0, r0, r0
 320:	03b80000 			; <UNDEFINED> instruction: 0x03b80000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
	boost_mode = val;
 324:	03c80000 	biceq	r0, r8, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:577
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
 328:	00010000 	andeq	r0, r1, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
	boost_mode = val;
 32c:	00000050 	andeq	r0, r0, r0, asr r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:577
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
 330:	00000000 	andeq	r0, r0, r0
 334:	0003b800 	andeq	fp, r3, r0, lsl #16
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
	boost_mode = val;
 338:	0003f400 	andeq	pc, r3, r0, lsl #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:577
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
 33c:	51000100 	mrspl	r0, (UNDEF: 16)
 340:	00000400 	andeq	r0, r0, r0, lsl #8
store_tc_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:537
	return s - buf;
}

static ssize_t store_tc_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
 344:	0000040b 	andeq	r0, r0, fp, lsl #8
 348:	00510001 	subseq	r0, r1, r1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:540
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;
 34c:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:537
	return s - buf;
}

static ssize_t store_tc_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
 350:	e0000000 	and	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:542
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;

	err = kstrtoint(buf, 16, &val);
 354:	e4000003 	str	r0, [r0], #-3
 358:	01000003 	tsteq	r0, r3
 35c:	04105200 	ldreq	r5, [r0], #-512	; 0xfffffe00
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:540
static ssize_t store_tc_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;
 360:	04140000 	ldreq	r0, [r4], #-0
 364:	00010000 	andeq	r0, r1, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:542

	err = kstrtoint(buf, 16, &val);
 368:	00000052 	andeq	r0, r0, r2, asr r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:543
	if (err)
 36c:	00000000 	andeq	r0, r0, r0
 370:	00041400 	andeq	r1, r4, r0, lsl #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:545
		return err;
	if (val > 3)
 374:	00042400 	andeq	r2, r4, r0, lsl #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:547
		val = 1;
	tc_mode = val;
 378:	50000100 	andpl	r0, r0, r0, lsl #2
 37c:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:548
		axp_regmap_update(map, 0x33, tc_mode, 0x03);
 380:	00000000 	andeq	r0, r0, r0
 384:	00000414 	andeq	r0, r0, r4, lsl r4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:545
	struct axp_regmap *map = chg_dev->chip->regmap;

	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val > 3)
 388:	00000434 	andeq	r0, r0, r4, lsr r4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:546
		val = 1;
 38c:	00510001 	subseq	r0, r1, r1
 390:	00000000 	andeq	r0, r0, r0
 394:	4c000000 	stcmi	0, cr0, [r0], {-0}
 398:	58000004 	stmdapl	r0, {r2}
 39c:	01000004 	tsteq	r0, r4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:548
	tc_mode = val;
		axp_regmap_update(map, 0x33, tc_mode, 0x03);
 3a0:	04585000 	ldrbeq	r5, [r8], #-0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:547
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val > 3)
		val = 1;
	tc_mode = val;
 3a4:	054c0000 	strbeq	r0, [ip, #-0]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:548
		axp_regmap_update(map, 0x33, tc_mode, 0x03);
 3a8:	00010000 	andeq	r0, r1, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:549
	return count;
 3ac:	00000056 	andeq	r0, r0, r6, asr r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:550
}
 3b0:	00000000 	andeq	r0, r0, r0
 3b4:	00054c00 	andeq	r4, r5, r0, lsl #24
axp2585_set_chg_vol():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:264
static int axp2585_set_chg_vol(struct axp_charger_dev *cdev, int vol)
{
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;

	if (vol > 3840 && vol < 4608)
 3b8:	00056c00 	andeq	r6, r5, r0, lsl #24
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:260
	axp_regmap_update(map, 0x8b, tmp, 0x3F);
	return 0;
}

static int axp2585_set_chg_vol(struct axp_charger_dev *cdev, int vol)
{
 3bc:	50000100 	andpl	r0, r0, r0, lsl #2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:264
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;

	if (vol > 3840 && vol < 4608)
 3c0:	0000056c 	andeq	r0, r0, ip, ror #10
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:262
}

static int axp2585_set_chg_vol(struct axp_charger_dev *cdev, int vol)
{
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;
 3c4:	00000614 	andeq	r0, r0, r4, lsl r6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:264

	if (vol > 3840 && vol < 4608)
 3c8:	64560001 	ldrbvs	r0, [r6], #-1
 3cc:	bc000006 	stclt	0, cr0, [r0], {6}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:262
}

static int axp2585_set_chg_vol(struct axp_charger_dev *cdev, int vol)
{
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;
 3d0:	01000007 	tsteq	r0, r7
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:264

	if (vol > 3840 && vol < 4608)
 3d4:	00005600 	andeq	r5, r0, r0, lsl #12
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:265
		tmp = (vol - 3840)/16;
 3d8:	00000000 	andeq	r0, r0, r0
 3dc:	05800000 	streq	r0, [r0]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:270
	else {
		pr_warn("unsupported voltage: %dmv, use default 4200mv\n", vol);
		tmp = (4200 - 3840)/16;
	}
	axp_regmap_update(map, 0x8c, tmp << 2, 0xfc);
 3e0:	05880000 	streq	r0, [r8]
 3e4:	00010000 	andeq	r0, r1, r0
 3e8:	0005d058 	andeq	sp, r5, r8, asr r0
 3ec:	00066400 	andeq	r6, r6, r0, lsl #8
 3f0:	58000100 	stmdapl	r0, {r8}
 3f4:	0000066c 	andeq	r0, r0, ip, ror #12
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:272
	return 0;
}
 3f8:	000007a4 	andeq	r0, r0, r4, lsr #15
 3fc:	b4580001 	ldrblt	r0, [r8], #-1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:267
	struct axp_regmap *map = cdev->chip->regmap;

	if (vol > 3840 && vol < 4608)
		tmp = (vol - 3840)/16;
	else {
		pr_warn("unsupported voltage: %dmv, use default 4200mv\n", vol);
 400:	bc000007 	stclt	0, cr0, [r0], {7}
 404:	01000007 	tsteq	r0, r7
 408:	00005800 	andeq	r5, r0, r0, lsl #16
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:268
		tmp = (4200 - 3840)/16;
 40c:	00000000 	andeq	r0, r0, r0
 410:	05800000 	streq	r0, [r0]
axp2585_set_chg_cur():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:252
	if (cur == 0)
		axp_regmap_clr_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
	else
		axp_regmap_set_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
*/
	tmp = (cur) / 64;
 414:	05880000 	streq	r0, [r8]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:243

	return axp2585_ibat_to_mA(dis_res);
}

static int axp2585_set_chg_cur(struct axp_charger_dev *cdev, int cur)
{
 418:	00010000 	andeq	r0, r1, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:252
	if (cur == 0)
		axp_regmap_clr_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
	else
		axp_regmap_set_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
*/
	tmp = (cur) / 64;
 41c:	0005d05a 	andeq	sp, r5, sl, asr r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:245
}

static int axp2585_set_chg_cur(struct axp_charger_dev *cdev, int cur)
{
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;
 420:	00066400 	andeq	r6, r6, r0, lsl #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:252
	if (cur == 0)
		axp_regmap_clr_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
	else
		axp_regmap_set_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
*/
	tmp = (cur) / 64;
 424:	5a000100 	bpl	82c <axp2585_charger_probe+0x8>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:255
	if (tmp > 0x3f)
		tmp = 0x3f;
	axp_regmap_update(map, 0x8b, tmp, 0x3F);
 428:	00000698 	muleq	r0, r8, r6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:252
	if (cur == 0)
		axp_regmap_clr_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
	else
		axp_regmap_set_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
*/
	tmp = (cur) / 64;
 42c:	00000734 	andeq	r0, r0, r4, lsr r7
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:255
	if (tmp > 0x3f)
		tmp = 0x3f;
	axp_regmap_update(map, 0x8b, tmp, 0x3F);
 430:	445a0001 	ldrbmi	r0, [sl], #-1
 434:	74000007 	strvc	r0, [r0], #-7
 438:	01000007 	tsteq	r0, r7
 43c:	07b05a00 	ldreq	r5, [r0, r0, lsl #20]!
 440:	07bc0000 	ldreq	r0, [ip, r0]!
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:257
	return 0;
}
 444:	00010000 	andeq	r0, r1, r0
 448:	0000005a 	andeq	r0, r0, sl, asr r0
axp2585_private_debug():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:612
	.name = "bmu_control",
	.attrs = bmu_control_attrs,
};

static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
 44c:	00000000 	andeq	r0, r0, r0
 450:	00058000 	andeq	r8, r5, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:614
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;
 454:	00058800 	andeq	r8, r5, r0, lsl #16
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:612
	.name = "bmu_control",
	.attrs = bmu_control_attrs,
};

static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
 458:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:617
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, 0x5a, 2, tmp);
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 45c:	00000598 	muleq	r0, r8, r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:616
static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, 0x5a, 2, tmp);
 460:	000007bc 			; <UNDEFINED> instruction: 0x000007bc
 464:	00540001 	subseq	r0, r4, r1
 468:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:614
};

static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;
 46c:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:617

	axp_regmap_reads(map, 0x5a, 2, tmp);
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 470:	10000005 	andne	r0, r0, r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:616
static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, 0x5a, 2, tmp);
 474:	01000006 	tsteq	r0, r6
 478:	06645500 	strbteq	r5, [r4], -r0, lsl #10
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:617
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 47c:	07bc0000 	ldreq	r0, [ip, r0]!
 480:	00010000 	andeq	r0, r1, r0
 484:	00000055 	andeq	r0, r0, r5, asr r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:620
			"acin_vol = %d\n", ((tmp[0] << 4) | (tmp[1] & 0xF))
			* 8);
	axp_regmap_reads(map, 0xbc, 2, tmp);
 488:	00000000 	andeq	r0, r0, r0
 48c:	0007bc00 	andeq	fp, r7, r0, lsl #24
 490:	0007d400 	andeq	sp, r7, r0, lsl #8
 494:	50000100 	andpl	r0, r0, r0, lsl #2
 498:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:621
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 49c:	00000000 	andeq	r0, r0, r0
 4a0:	000007f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 4a4:	00000808 	andeq	r0, r0, r8, lsl #16
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:625
			"ocv_vol = %d\n", ((tmp[0] << 4) | (tmp[1] & 0xF))
			* 1200 / 1000);

}
 4a8:	00500001 	subseq	r0, r0, r1
 4ac:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:617 (discriminator 1)
{
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, 0x5a, 2, tmp);
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 4b0:	24000000 	strcs	r0, [r0], #-0
 4b4:	38000008 	stmdacc	r0, {r3}
 4b8:	01000008 	tsteq	r0, r8
 4bc:	08385000 	ldmdaeq	r8!, {ip, lr}
 4c0:	11a00000 	movne	r0, r0
 4c4:	00010000 	andeq	r0, r1, r0
 4c8:	00000056 	andeq	r0, r0, r6, asr r0
 4cc:	00000000 	andeq	r0, r0, r0
 4d0:	000de800 	andeq	lr, sp, r0, lsl #16
 4d4:	000e8000 	andeq	r8, lr, r0
 4d8:	59000100 	stmdbpl	r0, {r8}
 4dc:	00000f68 	andeq	r0, r0, r8, ror #30
 4e0:	0000109c 	muleq	r0, ip, r0
 4e4:	4c590001 	mrrcmi	0, 0, r0, r9, cr1
 4e8:	78000011 	stmdavc	r0, {r0, r4}
 4ec:	01000011 	tsteq	r0, r1, lsl r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:621 (discriminator 1)
			"acin_vol = %d\n", ((tmp[0] << 4) | (tmp[1] & 0xF))
			* 8);
	axp_regmap_reads(map, 0xbc, 2, tmp);
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 4f0:	00005900 	andeq	r5, r0, r0, lsl #18
 4f4:	00000000 	andeq	r0, r0, r0
 4f8:	08880000 	stmeq	r8, {}	; <UNPREDICTABLE>
 4fc:	0a480000 	beq	1200008 <axp2585_set_usb_vhold+0x11fedc4>
 500:	00030000 	andeq	r0, r3, r0
 504:	487eff91 	ldmdami	lr!, {r0, r4, r7, r8, r9, sl, fp, ip, sp, lr, pc}^
 508:	4c00000a 	stcmi	0, cr0, [r0], {10}
 50c:	0100000a 	tsteq	r0, sl
 510:	0a4c5200 	beq	1314808 <axp2585_set_usb_vhold+0x13135c4>
 514:	0c700000 	ldcleq	0, cr0, [r0], #-0
 518:	00030000 	andeq	r0, r3, r0
 51c:	707eff91 			; <UNDEFINED> instruction: 0x707eff91
 520:	7c00000c 	stcvc	0, cr0, [r0], {12}
 524:	0100000c 	tsteq	r0, ip
 528:	0c7c5200 	lfmeq	f5, 2, [ip], #-0
 52c:	0e840000 	cdpeq	0, 8, cr0, cr4, cr0, {0}
 530:	00030000 	andeq	r0, r3, r0
 534:	847eff91 	ldrbthi	pc, [lr], #-3985	; 0xfffff06f	; <UNPREDICTABLE>
 538:	9400000e 	strls	r0, [r0], #-14
 53c:	0100000e 	tsteq	r0, lr
 540:	0ed05300 	cdpeq	3, 13, cr5, cr0, cr0, {0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:625 (discriminator 1)
			"ocv_vol = %d\n", ((tmp[0] << 4) | (tmp[1] & 0xF))
			* 1200 / 1000);

}
 544:	10a40000 	adcne	r0, r4, r0
 548:	00030000 	andeq	r0, r3, r0
axp2585_get_rest_cap():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:142
	.set_usb_ihold   = axp2585_set_usb_ihold,
	.get_usb_ihold   = axp2585_get_usb_ihold,
};

static int axp2585_get_rest_cap(struct axp_charger_dev *cdev)
{
 54c:	a47eff91 	ldrbtge	pc, [lr], #-3985	; 0xfffff06f	; <UNPREDICTABLE>
 550:	a8000010 	stmdage	r0, {r4}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:148
	u8 val, temp_val[2], tmp[2];
	u8 ocv_percent = 0;
	u8 coulomb_percent = 0;
	int batt_max_cap, coulumb_counter;
	int rest_vol;
	struct axp_regmap *map = cdev->chip->regmap;
 554:	01000010 	tsteq	r0, r0, lsl r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:142
	.set_usb_ihold   = axp2585_set_usb_ihold,
	.get_usb_ihold   = axp2585_get_usb_ihold,
};

static int axp2585_get_rest_cap(struct axp_charger_dev *cdev)
{
 558:	10a85200 	adcne	r5, r8, r0, lsl #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:150
	u8 coulomb_percent = 0;
	int batt_max_cap, coulumb_counter;
	int rest_vol;
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_read(map, AXP2585_CAP, &val);
 55c:	10b40000 	adcsne	r0, r4, r0
 560:	00030000 	andeq	r0, r3, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:148
	u8 val, temp_val[2], tmp[2];
	u8 ocv_percent = 0;
	u8 coulomb_percent = 0;
	int batt_max_cap, coulumb_counter;
	int rest_vol;
	struct axp_regmap *map = cdev->chip->regmap;
 564:	b47eff91 	ldrbtlt	pc, [lr], #-3985	; 0xfffff06f	; <UNPREDICTABLE>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:150

	axp_regmap_read(map, AXP2585_CAP, &val);
 568:	b8000010 	stmdalt	r0, {r4}
 56c:	01000010 	tsteq	r0, r0, lsl r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:151
	if (!(val & 0x80))
 570:	10b85200 	adcsne	r5, r8, r0, lsl #4
 574:	10c40000 	sbcne	r0, r4, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:152
		return 0;
 578:	00030000 	andeq	r0, r3, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:151
	int batt_max_cap, coulumb_counter;
	int rest_vol;
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_read(map, AXP2585_CAP, &val);
	if (!(val & 0x80))
 57c:	c47eff91 	ldrbtgt	pc, [lr], #-3985	; 0xfffff06f	; <UNPREDICTABLE>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:184
						* 1456 / 1000;

	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
			"batt_max_cap = %d\n", batt_max_cap);
	return rest_vol;
}
 580:	c8000010 	stmdagt	r0, {r4}
 584:	01000010 	tsteq	r0, r0, lsl r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:154

	axp_regmap_read(map, AXP2585_CAP, &val);
	if (!(val & 0x80))
		return 0;
	rest_vol = (int) (val & 0x7F);
	axp_regmap_read(map, 0xe4, &tmp[0]);
 588:	10c85200 	sbcne	r5, r8, r0, lsl #4
 58c:	10d00000 	sbcsne	r0, r0, r0
 590:	00030000 	andeq	r0, r3, r0
 594:	d07eff91 			; <UNDEFINED> instruction: 0xd07eff91
 598:	d8000010 	stmdale	r0, {r4}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:155
	if (tmp[0] & 0x80) {
 59c:	01000010 	tsteq	r0, r0, lsl r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:153
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_read(map, AXP2585_CAP, &val);
	if (!(val & 0x80))
		return 0;
	rest_vol = (int) (val & 0x7F);
 5a0:	11185200 	tstne	r8, r0, lsl #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:155
	axp_regmap_read(map, 0xe4, &tmp[0]);
	if (tmp[0] & 0x80) {
 5a4:	112c0000 	teqne	ip, r0
 5a8:	00030000 	andeq	r0, r3, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:160
		ocv_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
 5ac:	447eff91 	ldrbtmi	pc, [lr], #-3985	; 0xfffff06f	; <UNPREDICTABLE>
 5b0:	78000011 	stmdavc	r0, {r0, r4}
 5b4:	03000011 	movweq	r0, #17
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:163
	if (tmp[0] & 0x80) {
		coulomb_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 5b8:	7eff9100 	nrmvce	f1, f0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:160
	if (tmp[0] & 0x80) {
		ocv_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
 5bc:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:161
	if (tmp[0] & 0x80) {
 5c0:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:163
		coulomb_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 5c4:	00000900 	andeq	r0, r0, r0, lsl #18
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:161
		ocv_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
	if (tmp[0] & 0x80) {
 5c8:	00000e38 	andeq	r0, r0, r8, lsr lr
 5cc:	80550001 	subshi	r0, r5, r1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:173
		axp_regmap_clr_bits(map, AXP2585_COULOMB_CTL, 0x80);
		axp_regmap_set_bits(map, AXP2585_COULOMB_CTL, 0x80);
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num, "Reset coulumb\n");
		rest_vol = 100;
	}
	axp_regmap_reads(map, 0xe2, 2, temp_val);
 5d0:	6800000e 	stmdavs	r0, {r1, r2, r3}
 5d4:	0100000f 	tsteq	r0, pc
 5d8:	10905500 	addsne	r5, r0, r0, lsl #10
 5dc:	112c0000 	teqne	ip, r0
 5e0:	00010000 	andeq	r0, r1, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:177
	coulumb_counter = (((temp_val[0] & 0x7f) << 8) + temp_val[1])
						* 1456 / 1000;

	axp_regmap_reads(map, 0xe0, 2, temp_val);
 5e4:	00114455 	andseq	r4, r1, r5, asr r4
 5e8:	00114c00 	andseq	r4, r1, r0, lsl #24
 5ec:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
 5f0:	00000000 	andeq	r0, r0, r0
 5f4:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:181
	batt_max_cap = (((temp_val[0] & 0x7f) << 8) + temp_val[1])
						* 1456 / 1000;

	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 5f8:	000011a0 	andeq	r1, r0, r0, lsr #3
 5fc:	000011cc 	andeq	r1, r0, ip, asr #3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:183
			"batt_max_cap = %d\n", batt_max_cap);
	return rest_vol;
 600:	f0500001 			; <UNDEFINED> instruction: 0xf0500001
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:181

	axp_regmap_reads(map, 0xe0, 2, temp_val);
	batt_max_cap = (((temp_val[0] & 0x7f) << 8) + temp_val[1])
						* 1456 / 1000;

	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 604:	f4000011 	vst4.8	{d0-d3}, [r0 :64], r1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:181 (discriminator 1)
 608:	01000011 	tsteq	r0, r1, lsl r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:178 (discriminator 1)
	axp_regmap_reads(map, 0xe2, 2, temp_val);
	coulumb_counter = (((temp_val[0] & 0x7f) << 8) + temp_val[1])
						* 1456 / 1000;

	axp_regmap_reads(map, 0xe0, 2, temp_val);
	batt_max_cap = (((temp_val[0] & 0x7f) << 8) + temp_val[1])
 60c:	11f85000 	mvnsne	r5, r0
 610:	12000000 	andne	r0, r0, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:181 (discriminator 1)
						* 1456 / 1000;

	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 614:	00010000 	andeq	r0, r1, r0
 618:	00000050 	andeq	r0, r0, r0, asr r0
 61c:	00000000 	andeq	r0, r0, r0
 620:	0011a000 	andseq	sl, r1, r0
 624:	0011c000 	andseq	ip, r1, r0
 628:	51000100 	mrspl	r0, (UNDEF: 16)
 62c:	000011f0 	strdeq	r1, [r0], -r0
 630:	0000120c 	andeq	r1, r0, ip, lsl #4
 634:	00510001 	subseq	r0, r1, r1
 638:	00000000 	andeq	r0, r0, r0
 63c:	44000000 	strmi	r0, [r0], #-0
 640:	70000012 	andvc	r0, r0, r2, lsl r0
 644:	01000012 	tsteq	r0, r2, lsl r0
 648:	12945000 	addsne	r5, r4, #0
 64c:	12980000 	addsne	r0, r8, #0
 650:	00010000 	andeq	r0, r1, r0
 654:	00129c50 	andseq	r9, r2, r0, asr ip
 658:	0012a400 	andseq	sl, r2, r0, lsl #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:183 (discriminator 1)
			"batt_max_cap = %d\n", batt_max_cap);
	return rest_vol;
 65c:	50000100 	andpl	r0, r0, r0, lsl #2
 660:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:157
		return 0;
	rest_vol = (int) (val & 0x7F);
	axp_regmap_read(map, 0xe4, &tmp[0]);
	if (tmp[0] & 0x80) {
		ocv_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 664:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:156
	if (!(val & 0x80))
		return 0;
	rest_vol = (int) (val & 0x7F);
	axp_regmap_read(map, 0xe4, &tmp[0]);
	if (tmp[0] & 0x80) {
		ocv_percent = tmp[0] & 0x7f;
 668:	00001244 	andeq	r1, r0, r4, asr #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:157
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 66c:	00001264 	andeq	r1, r0, r4, ror #4
 670:	94510001 	ldrbls	r0, [r1], #-1
 674:	b0000012 	andlt	r0, r0, r2, lsl r0
 678:	01000012 	tsteq	r0, r2, lsl r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:160
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
 67c:	00005100 	andeq	r5, r0, r0, lsl #2
 680:	00000000 	andeq	r0, r0, r0
 684:	地址 0x0000000000000684 越界。


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
axp2585_set_ac_ihold():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:40
}

static int axp2585_set_ac_ihold(struct axp_charger_dev *cdev, int cur)
{
	return 0;
}
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
axp2585_get_usb_current():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:68
}

static int axp2585_get_usb_current(struct axp_charger_dev *cdev)
{
	return 0;
}
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
axp2585_get_bat_health():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:189
}

static int axp2585_get_bat_health(struct axp_charger_dev *cdev)
{
	return POWER_SUPPLY_HEALTH_GOOD;
}
  10:	00000000 	andeq	r0, r0, r0
  14:	000012b8 			; <UNDEFINED> instruction: 0x000012b8
axp2585_charger_resume():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:763

	return 0;
}

static int axp2585_charger_resume(struct platform_device *dev)
{
  18:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:768
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);
	int pre_rest_vol;

	if (axp_suspend_flag == AXP_SUSPEND_WITH_IRQ) {
		axp_suspend_flag = AXP_NOT_SUSPEND;
  1c:	00000044 	andeq	r0, r0, r4, asr #32
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  20:	00000000 	andeq	r0, r0, r0
axp2585_charger_resume():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:768
  24:	00000000 	andeq	r0, r0, r0

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
axp2585_set_ac_ihold():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:40
}

static int axp2585_set_ac_ihold(struct axp_charger_dev *cdev, int cur)
{
	return 0;
}
   0:	00000094 	muleq	r0, r4, r0
   4:	0000009c 	muleq	r0, ip, r0
axp2585_get_usb_current():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:68
}

static int axp2585_get_usb_current(struct axp_charger_dev *cdev)
{
	return 0;
}
   8:	000000a0 	andeq	r0, r0, r0, lsr #1
   c:	000000a8 	andeq	r0, r0, r8, lsr #1
axp2585_get_bat_health():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:189
}

static int axp2585_get_bat_health(struct axp_charger_dev *cdev)
{
	return POWER_SUPPLY_HEALTH_GOOD;
}
  10:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
  14:	000000bc 	strheq	r0, [r0], -ip
axp2585_charger_resume():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:763

	return 0;
}

static int axp2585_charger_resume(struct platform_device *dev)
{
  18:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:768
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);
	int pre_rest_vol;

	if (axp_suspend_flag == AXP_SUSPEND_WITH_IRQ) {
		axp_suspend_flag = AXP_NOT_SUSPEND;
  1c:	00000000 	andeq	r0, r0, r0
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  20:	0000084c 	andeq	r0, r0, ip, asr #16
axp2585_charger_resume():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:768
  24:	00000850 	andeq	r0, r0, r0, asr r8
  28:	00000854 	andeq	r0, r0, r4, asr r8
  2c:	00000858 	andeq	r0, r0, r8, asr r8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:774
	//	sunxi_nmi_enable();
	} else {
		axp_suspend_flag = AXP_NOT_SUSPEND;
	}
	pre_rest_vol = chg_dev->rest_vol;
	axp_charger_resume(chg_dev);
  30:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:773
		axp_suspend_flag = AXP_NOT_SUSPEND;
	//	sunxi_nmi_enable();
	} else {
		axp_suspend_flag = AXP_NOT_SUSPEND;
	}
	pre_rest_vol = chg_dev->rest_vol;
  34:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:774
	axp_charger_resume(chg_dev);
  38:	00000884 	andeq	r0, r0, r4, lsl #17
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:776

	if (chg_dev->rest_vol - pre_rest_vol) {
  3c:	00000888 	andeq	r0, r0, r8, lsl #17
  40:	00000890 	muleq	r0, r0, r8
  44:	0000089c 	muleq	r0, ip, r8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:783
				pre_rest_vol, chg_dev->rest_vol);
		/*axp_regmap_write(map, 0x05, chg_dev->rest_vol | 0x80);*/
	}

	return 0;
}
  48:	000008b4 			; <UNDEFINED> instruction: 0x000008b4
  4c:	000008b8 			; <UNDEFINED> instruction: 0x000008b8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:777
	}
	pre_rest_vol = chg_dev->rest_vol;
	axp_charger_resume(chg_dev);

	if (chg_dev->rest_vol - pre_rest_vol) {
		pr_info("battery vol change: %d->%d\n",
  50:	000008ec 	andeq	r0, r0, ip, ror #17
  54:	000008f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
  58:	000008f8 	strdeq	r0, [r0], -r8
  5c:	00000dac 	andeq	r0, r0, ip, lsr #27
  60:	00000e80 	andeq	r0, r0, r0, lsl #29
axp2585_charger_suspend():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
static int axp2585_charger_suspend(struct platform_device *dev,
				pm_message_t state)
{
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_suspend_flag = AXP_WAS_SUSPEND;
  64:	00000f68 	andeq	r0, r0, r8, ror #30
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:753
	return 0;
}

static int axp2585_charger_suspend(struct platform_device *dev,
				pm_message_t state)
{
  68:	000010a4 	andeq	r1, r0, r4, lsr #1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_suspend_flag = AXP_WAS_SUSPEND;
  6c:	0000112c 	andeq	r1, r0, ip, lsr #2
  70:	00001144 	andeq	r1, r0, r4, asr #2
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  74:	0000114c 	andeq	r1, r0, ip, asr #2
axp2585_charger_suspend():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
  78:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:757
	axp_charger_suspend(chg_dev);
  7c:	00000000 	andeq	r0, r0, r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:760

	return 0;
}
  80:	00000000 	andeq	r0, r0, r0
  84:	000012b8 			; <UNDEFINED> instruction: 0x000012b8
axp2585_charger_shutdown():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:789

static void axp2585_charger_shutdown(struct platform_device *dev)
{
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_charger_shutdown(chg_dev);
  88:	00000000 	andeq	r0, r0, r0
  8c:	00000044 	andeq	r0, r0, r4, asr #32
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:734
fail:
	return -1;
}

static int axp2585_charger_remove(struct platform_device *pdev)
{
  90:	00000000 	andeq	r0, r0, r0
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  94:	00000000 	andeq	r0, r0, r0

Disassembly of section .debug_line:

00000000 <.debug_line>:
axp2585_set_ac_ihold():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:40
}

static int axp2585_set_ac_ihold(struct axp_charger_dev *cdev, int cur)
{
	return 0;
}
   0:	0000083f 	andeq	r0, r0, pc, lsr r8
   4:	04660002 	strbteq	r0, [r6], #-2
axp2585_get_usb_current():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:68
}

static int axp2585_get_usb_current(struct axp_charger_dev *cdev)
{
	return 0;
}
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
axp2585_get_bat_health():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:189
}

static int axp2585_get_bat_health(struct axp_charger_dev *cdev)
{
	return POWER_SUPPLY_HEALTH_GOOD;
}
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
axp2585_charger_resume():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:763

	return 0;
}

static int axp2585_charger_resume(struct platform_device *dev)
{
  18:	64010000 	strvs	r0, [r1], #-0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:768
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);
	int pre_rest_vol;

	if (axp_suspend_flag == AXP_SUSPEND_WITH_IRQ) {
		axp_suspend_flag = AXP_NOT_SUSPEND;
  1c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  20:	702f7372 	eorvc	r7, pc, r2, ror r3	; <UNPREDICTABLE>
axp2585_charger_resume():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:768
  24:	7265776f 	rsbvc	r7, r5, #29097984	; 0x1bc0000
  28:	7078612f 	rsbsvc	r6, r8, pc, lsr #2
  2c:	7078612f 	rsbsvc	r6, r8, pc, lsr #2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:774
	//	sunxi_nmi_enable();
	} else {
		axp_suspend_flag = AXP_NOT_SUSPEND;
	}
	pre_rest_vol = chg_dev->rest_vol;
	axp_charger_resume(chg_dev);
  30:	35383532 	ldrcc	r3, [r8, #-1330]!	; 0xffffface
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:773
		axp_suspend_flag = AXP_NOT_SUSPEND;
	//	sunxi_nmi_enable();
	} else {
		axp_suspend_flag = AXP_NOT_SUSPEND;
	}
	pre_rest_vol = chg_dev->rest_vol;
  34:	636e6900 	cmnvs	lr, #0, 18
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:774
	axp_charger_resume(chg_dev);
  38:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:776

	if (chg_dev->rest_vol - pre_rest_vol) {
  3c:	6e696c2f 	cdpvs	12, 6, cr6, cr9, cr15, {1}
  40:	69007875 	stmdbvs	r0, {r0, r2, r4, r5, r6, fp, ip, sp, lr}
  44:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:783
				pre_rest_vol, chg_dev->rest_vol);
		/*axp_regmap_write(map, 0x05, chg_dev->rest_vol | 0x80);*/
	}

	return 0;
}
  48:	752f6564 	strvc	r6, [pc, #-1380]!	; fffffaec <axp2585_set_usb_vhold+0xffffe8a8>
  4c:	2f697061 	svccs	0x00697061
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:777
	}
	pre_rest_vol = chg_dev->rest_vol;
	axp_charger_resume(chg_dev);

	if (chg_dev->rest_vol - pre_rest_vol) {
		pr_info("battery vol change: %d->%d\n",
  50:	2d6d7361 	stclcs	3, cr7, [sp, #-388]!	; 0xfffffe7c
  54:	656e6567 	strbvs	r6, [lr, #-1383]!	; 0xfffffa99
  58:	00636972 	rsbeq	r6, r3, r2, ror r9
  5c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
  60:	2f656475 	svccs	0x00656475
axp2585_charger_suspend():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
static int axp2585_charger_suspend(struct platform_device *dev,
				pm_message_t state)
{
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_suspend_flag = AXP_WAS_SUSPEND;
  64:	2d6d7361 	stclcs	3, cr7, [sp, #-388]!	; 0xfffffe7c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:753
	return 0;
}

static int axp2585_charger_suspend(struct platform_device *dev,
				pm_message_t state)
{
  68:	656e6567 	strbvs	r6, [lr, #-1383]!	; 0xfffffa99
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_suspend_flag = AXP_WAS_SUSPEND;
  6c:	00636972 	rsbeq	r6, r3, r2, ror r9
  70:	6e692f2e 	cdpvs	15, 6, cr2, cr9, cr14, {1}
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  74:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
axp2585_charger_suspend():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
  78:	61752f65 	cmnvs	r5, r5, ror #30
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:757
	axp_charger_suspend(chg_dev);
  7c:	612f6970 	teqvs	pc, r0, ror r9	; <UNPREDICTABLE>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:760

	return 0;
}
  80:	672d6d73 			; <UNDEFINED> instruction: 0x672d6d73
  84:	72656e65 	rsbvc	r6, r5, #1616	; 0x650
axp2585_charger_shutdown():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:789

static void axp2585_charger_shutdown(struct platform_device *dev)
{
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_charger_shutdown(chg_dev);
  88:	2e006369 	cdpcs	3, 0, cr6, cr0, cr9, {3}
  8c:	6372612f 	cmnvs	r2, #-1073741813	; 0xc000000b
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:734
fail:
	return -1;
}

static int axp2585_charger_remove(struct platform_device *pdev)
{
  90:	72612f68 	rsbvc	r2, r1, #104, 30	; 0x1a0
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  94:	6e692f6d 	cdpvs	15, 6, cr2, cr9, cr13, {3}
  98:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:734
  9c:	73612f65 	cmnvc	r1, #404	; 0x194
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  a0:	6e69006d 	cdpvs	0, 6, cr0, cr9, cr13, {3}
  a4:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
  a8:	696c2f65 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
  ac:	2f78756e 	svccs	0x0078756e
  b0:	636e6970 	cmnvs	lr, #112, 18	; 0x1c0000
  b4:	006c7274 	rsbeq	r7, ip, r4, ror r2
  b8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:740
	int i, irq;
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
  bc:	2f656475 	svccs	0x00656475
  c0:	69706175 	ldmdbvs	r0!, {r0, r2, r4, r5, r6, r8, sp, lr}^
  c4:	6e696c2f 	cdpvs	12, 6, cr6, cr9, cr15, {1}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:741
		if (irq < 0)
  c8:	64007875 	strvs	r7, [r0], #-2165	; 0xfffff78b
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:743
			continue;
		axp_free_irq(axp_dev, irq);
  cc:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:741
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
		if (irq < 0)
  d0:	702f7372 	eorvc	r7, pc, r2, ror r3	; <UNPREDICTABLE>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:743
			continue;
		axp_free_irq(axp_dev, irq);
  d4:	7265776f 	rsbvc	r7, r5, #29097984	; 0x1bc0000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:739 (discriminator 2)
{
	int i, irq;
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
  d8:	7078612f 	rsbsvc	r6, r8, pc, lsr #2
  dc:	7078612f 	rsbsvc	r6, r8, pc, lsr #2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:746
		if (irq < 0)
			continue;
		axp_free_irq(axp_dev, irq);
	}

	axp_power_supply_unregister(chg_dev);
  e0:	35383532 	ldrcc	r3, [r8, #-1330]!	; 0xffffface
  e4:	002e2e2f 	eoreq	r2, lr, pc, lsr #28
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:749

	return 0;
}
  e8:	70786100 	rsbsvc	r6, r8, r0, lsl #2
  ec:	35383532 	ldrcc	r3, [r8, #-1330]!	; 0xffffface
  f0:	6168632d 	cmnvs	r8, sp, lsr #6
show_boost_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:554
	return count;
}

static ssize_t show_boost_mode(struct device *dev,
			struct device_attribute *attr, char *buf)
{
  f4:	72656772 	rsbvc	r6, r5, #29884416	; 0x1c80000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:558
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "1: open  0: close");
  f8:	0100632e 	tsteq	r0, lr, lsr #6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:554
	return count;
}

static ssize_t show_boost_mode(struct device *dev,
			struct device_attribute *attr, char *buf)
{
  fc:	65640000 	strbvs	r0, [r4, #-0]!
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:558
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "1: open  0: close");
 100:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 104:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
 108:	72650000 	rsbvc	r0, r5, #0
 10c:	00682e72 	rsbeq	r2, r8, r2, ror lr
 110:	69000002 	stmdbvs	r0, {r1}
 114:	6c2d746e 	cfstrsvs	mvf7, [sp], #-440	; 0xfffffe48
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:559
	s += scnprintf(s, end - s, "boost_mode=%d\n", boost_mode);
 118:	2e34366c 	cfmsuba32cs	mvax3, mvax3, mvfx4, mvfx12
 11c:	00030068 	andeq	r0, r3, r8, rrx
 120:	746e6900 	strbtvc	r6, [lr], #-2304	; 0xfffff700
 124:	366c6c2d 	strbtcc	r6, [ip], -sp, lsr #24
 128:	00682e34 	rsbeq	r2, r8, r4, lsr lr
 12c:	70000004 	andvc	r0, r0, r4
 130:	7869736f 	stmdavc	r9!, {r0, r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
 134:	7079745f 	rsbsvc	r7, r9, pc, asr r4
 138:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:560
	return s - buf;
 13c:	00000500 	andeq	r0, r0, r0, lsl #10
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:561
}
 140:	6f707865 	svcvs	0x00707865
 144:	682e7472 	stmdavs	lr!, {r1, r4, r5, r6, sl, ip, sp, lr}
show_tc_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:526
static int tc_mode = 1;
static int boost_mode = 1;
static int power = 1;
static ssize_t show_tc_mode(struct device *dev,
			    struct device_attribute *attr, char *buf)
{
 148:	00000200 	andeq	r0, r0, r0, lsl #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:530
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "0: close 1: sink 2: source 3: drp");
 14c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:526
static int tc_mode = 1;
static int boost_mode = 1;
static int power = 1;
static ssize_t show_tc_mode(struct device *dev,
			    struct device_attribute *attr, char *buf)
{
 150:	00682e73 	rsbeq	r2, r8, r3, ror lr
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:530
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "0: close 1: sink 2: source 3: drp");
 154:	69000002 	stmdbvs	r0, {r1}
 158:	2e74696e 	cdpcs	9, 7, cr6, cr4, cr14, {3}
 15c:	00020068 	andeq	r0, r2, r8, rrx
 160:	67756200 	ldrbvs	r6, [r5, -r0, lsl #4]!
 164:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
 168:	65640000 	strbvs	r0, [r4, #-0]!
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:531
	s += scnprintf(s, end - s, "tc_mode=%d\n", tc_mode);
 16c:	2e79616c 	rpwcsez	f6, f1, #4.0
 170:	00060068 	andeq	r0, r6, r8, rrx
 174:	706f6900 	rsbvc	r6, pc, r0, lsl #18
 178:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 17c:	00020068 	andeq	r0, r2, r8, rrx
 180:	69707300 	ldmdbvs	r0!, {r8, r9, ip, sp, lr}^
 184:	636f6c6e 	cmnvs	pc, #28160	; 0x6e00
 188:	79745f6b 	ldmdbvc	r4!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 18c:	5f736570 	svcpl	0x00736570
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:532
	return s - buf;
 190:	682e7075 	stmdavs	lr!, {r0, r2, r4, r5, r6, ip, sp, lr}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:533
}
 194:	00000200 	andeq	r0, r0, r0, lsl #4
 198:	6e697073 	mcrvs	0, 3, r7, cr9, cr3, {3}
axp2585_get_vbat():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:197
{
	return ((int)(((reg >> 8) << 4) | (reg & 0x000F))) * 1200 / 1000;
}

static int axp2585_get_vbat(struct axp_charger_dev *cdev)
{
 19c:	6b636f6c 	blvs	18dbf54 <axp2585_set_usb_vhold+0x18dad10>
 1a0:	7079745f 	rsbsvc	r7, r9, pc, asr r4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:200
	u8 tmp[2];
	u32 res;
	struct axp_regmap *map = cdev->chip->regmap;
 1a4:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:202

	axp_regmap_reads(map, AXP2585_VBATH_RES, 2, tmp);
 1a8:	00000200 	andeq	r0, r0, r0, lsl #4
 1ac:	6f6c7772 	svcvs	0x006c7772
 1b0:	745f6b63 	ldrbvc	r6, [pc], #-2915	; 1b8 <.debug_line+0x1b8>
 1b4:	73657079 	cmnvc	r5, #121	; 0x79
 1b8:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:203
	res = (tmp[0] << 8) | tmp[1];
 1bc:	74610000 	strbtvc	r0, [r1], #-0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:205

	return axp2585_vbat_to_mV(res);
 1c0:	63696d6f 	cmnvs	r9, #7104	; 0x1bc0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:203
	u8 tmp[2];
	u32 res;
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, AXP2585_VBATH_RES, 2, tmp);
	res = (tmp[0] << 8) | tmp[1];
 1c4:	6e6f6c2d 	cdpvs	12, 6, cr6, cr15, cr13, {1}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:205

	return axp2585_vbat_to_mV(res);
 1c8:	00682e67 	rsbeq	r2, r8, r7, ror #28
 1cc:	6d000004 	stcvs	0, cr0, [r0, #-16]
 1d0:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
 1d4:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
 1d8:	70630000 	rsbvc	r0, r3, r0
 1dc:	73616d75 	cmnvc	r1, #7488	; 0x1d40
 1e0:	00682e6b 	rsbeq	r2, r8, fp, ror #28
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:206
}
 1e4:	77000002 	strvc	r0, [r0, -r2]
 1e8:	2e746961 	cdpcs	9, 7, cr6, cr4, cr1, {3}
 1ec:	00020068 	andeq	r0, r2, r8, rrx
axp2585_get_disibat():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:231

	return axp2585_icharge_to_mA(res);
}

static int axp2585_get_disibat(struct axp_charger_dev *cdev)
{
 1f0:	6d6f6300 	stclvs	3, cr6, [pc, #-0]	; 1f8 <.debug_line+0x1f8>
 1f4:	74656c70 	strbtvc	r6, [r5], #-3184	; 0xfffff390
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:234
	u8 tmp[2];
	u32 dis_res;
	struct axp_regmap *map = cdev->chip->regmap;
 1f8:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:236

	axp_regmap_reads(map, AXP2585_DISIBATH_REG, 2, tmp);
 1fc:	00020068 	andeq	r0, r2, r8, rrx
 200:	69746b00 	ldmdbvs	r4!, {r8, r9, fp, sp, lr}^
 204:	682e656d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
 208:	00000200 	andeq	r0, r0, r0, lsl #4
 20c:	2e726469 	cdpcs	4, 7, cr6, cr2, cr9, {3}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:237
	dis_res = (tmp[0] << 8) | tmp[1];
 210:	00020068 	andeq	r0, r2, r8, rrx
 214:	74627200 	strbtvc	r7, [r2], #-512	; 0xfffffe00
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:239

	return axp2585_ibat_to_mA(dis_res);
 218:	2e656572 	mcrcs	5, 3, r6, cr5, cr2, {3}
 21c:	00020068 	andeq	r0, r2, r8, rrx
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:240
}
 220:	72656b00 	rsbvc	r6, r5, #0, 22
 224:	2e73666e 	cdpcs	6, 7, cr6, cr3, cr14, {3}
 228:	00020068 	andeq	r0, r2, r8, rrx
axp2585_power_show():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:585
	return count;
}

static ssize_t axp2585_power_show(struct device *dev,
			    struct device_attribute *attr, char *buf)
{
 22c:	71657300 	cmnvc	r5, r0, lsl #6
 230:	6c69665f 	stclvs	6, cr6, [r9], #-380	; 0xfffffe84
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
 234:	00682e65 	rsbeq	r2, r8, r5, ror #28
axp2585_power_show():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:590
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);
	int vbat, ibat;
	vbat = axp2585_get_vbat(chg_dev);
 238:	6b000002 	blvs	248 <.debug_line+0x248>
 23c:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
 240:	6e5f7463 	cdpvs	4, 5, cr7, cr15, cr3, {3}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:591
	ibat = axp2585_get_disibat(chg_dev);
 244:	00682e73 	rsbeq	r2, r8, r3, ror lr
 248:	75000002 	strvc	r0, [r0, #-2]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:593
	power = vbat*ibat/1000;
	s += scnprintf(s, end - s, "%dmV\n", power);
 24c:	69676469 	stmdbvs	r7!, {r0, r3, r5, r6, sl, sp, lr}^
 250:	00682e64 	rsbeq	r2, r8, r4, ror #28
 254:	73000002 	movwvc	r0, #2
 258:	73667379 	cmnvc	r6, #-469762047	; 0xe4000001
 25c:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
 260:	6f6b0000 	svcvs	0x006b0000
 264:	63656a62 	cmnvs	r5, #401408	; 0x62000
 268:	00682e74 	rsbeq	r2, r8, r4, ror lr
 26c:	6b000002 	blvs	27c <.debug_line+0x27c>
 270:	2e666572 	mcrcs	5, 3, r6, cr6, cr2, {3}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:595
	return s - buf;
}
 274:	00020068 	andeq	r0, r2, r8, rrx
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:593
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);
	int vbat, ibat;
	vbat = axp2585_get_vbat(chg_dev);
	ibat = axp2585_get_disibat(chg_dev);
	power = vbat*ibat/1000;
	s += scnprintf(s, end - s, "%dmV\n", power);
 278:	6d697400 	cfstrdvs	mvd7, [r9, #-0]
axp2585_get_ibat():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:219
{
	return (int)((((reg >> 8) << 4) | (reg & 0x000F)) << 1);
}

static int axp2585_get_ibat(struct axp_charger_dev *cdev)
{
 27c:	682e7265 	stmdavs	lr!, {r0, r2, r5, r6, r9, ip, sp, lr}
 280:	00000200 	andeq	r0, r0, r0, lsl #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:222
	u8 tmp[2];
	u32 res;
	struct axp_regmap *map = cdev->chip->regmap;
 284:	6b726f77 	blvs	1c9c068 <axp2585_set_usb_vhold+0x1c9ae24>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:224

	axp_regmap_reads(map, AXP2585_IBATH_REG, 2, tmp);
 288:	75657571 	strbvc	r7, [r5, #-1393]!	; 0xfffffa8f
 28c:	00682e65 	rsbeq	r2, r8, r5, ror #28
 290:	6b000002 	blvs	2a0 <.debug_line+0x2a0>
 294:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 298:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:225
	res = (tmp[0] << 8) | tmp[1];
 29c:	6f6e0000 	svcvs	0x006e0000
 2a0:	616d6564 	cmnvs	sp, r4, ror #10
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:227

	return axp2585_icharge_to_mA(res);
 2a4:	682e6b73 	stmdavs	lr!, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}
 2a8:	00000200 	andeq	r0, r0, r0, lsl #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:228
}
 2ac:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 2b0:	2e6f666e 	cdpcs	6, 6, cr6, cr15, cr14, {3}
 2b4:	00070068 	andeq	r0, r7, r8, rrx
store_boost_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:565
	return s - buf;
}

static ssize_t store_boost_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
 2b8:	2e6d7000 	cdpcs	0, 6, cr7, cr13, cr0, {0}
 2bc:	00020068 	andeq	r0, r2, r8, rrx
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:568
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;
 2c0:	5f6d7000 	svcpl	0x006d7000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:565
	return s - buf;
}

static ssize_t store_boost_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
 2c4:	656b6177 	strbvs	r6, [fp, #-375]!	; 0xfffffe89
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:570
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;

	err = kstrtoint(buf, 16, &val);
 2c8:	682e7075 	stmdavs	lr!, {r0, r2, r4, r5, r6, ip, sp, lr}
 2cc:	00000200 	andeq	r0, r0, r0, lsl #4
 2d0:	6f7a6d6d 	svcvs	0x007a6d6d
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:568
static ssize_t store_boost_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;
 2d4:	682e656e 	stmdavs	lr!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}
 2d8:	00000200 	andeq	r0, r0, r0, lsl #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:570

	err = kstrtoint(buf, 16, &val);
 2dc:	65737772 	ldrbvs	r7, [r3, #-1906]!	; 0xfffff88e
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:571
	if (err)
 2e0:	00682e6d 	rsbeq	r2, r8, sp, ror #28
 2e4:	70000002 	andvc	r0, r0, r2
 2e8:	70637265 	rsbvc	r7, r3, r5, ror #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:573
		return err;
	if (val != 1)
 2ec:	00682e75 	rsbeq	r2, r8, r5, ror lr
 2f0:	64000002 	strvs	r0, [r0], #-2
 2f4:	63697665 	cmnvs	r9, #105906176	; 0x6500000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
		val = 0;
	boost_mode = val;
 2f8:	00682e65 	rsbeq	r2, r8, r5, ror #28
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:579
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
	else
		axp_regmap_clr_bits(map, 0x12, 0x80);
 2fc:	6d000006 	stcvs	0, cr0, [r0, #-24]	; 0xffffffe8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
	boost_mode = val;
 300:	6c75646f 	cfldrdvs	mvd6, [r5], #-444	; 0xfffffe44
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:579
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
	else
		axp_regmap_clr_bits(map, 0x12, 0x80);
 304:	00682e65 	rsbeq	r2, r8, r5, ror #28
 308:	6d000002 	stcvs	0, cr0, [r0, #-8]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:574

	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
 30c:	645f646f 	ldrbvs	r6, [pc], #-1135	; 314 <.debug_line+0x314>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	boost_mode = val;
 310:	63697665 	cmnvs	r9, #105906176	; 0x6500000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:579
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
	else
		axp_regmap_clr_bits(map, 0x12, 0x80);
 314:	62617465 	rsbvs	r7, r1, #1694498816	; 0x65000000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:580
	return count;
 318:	682e656c 	stmdavs	lr!, {r2, r3, r5, r6, r8, sl, sp, lr}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:581
}
 31c:	00000200 	andeq	r0, r0, r0, lsl #4
 320:	2e666c65 	cdpcs	12, 6, cr6, cr6, cr5, {3}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
	boost_mode = val;
 324:	00080068 	andeq	r0, r8, r8, rrx
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:577
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
 328:	646f6d00 	strbtvs	r6, [pc], #-3328	; 330 <.debug_line+0x330>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
	boost_mode = val;
 32c:	70656c75 	rsbvc	r6, r5, r5, ror ip
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:577
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
 330:	6d617261 	sfmvs	f7, 2, [r1, #-388]!	; 0xfffffe7c
 334:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
	boost_mode = val;
 338:	756a0000 	strbvc	r0, [sl, #-0]!
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:577
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
 33c:	6c5f706d 	mrrcvs	0, 6, r7, pc, cr13	; <UNPREDICTABLE>
 340:	6c656261 	sfmvs	f6, 2, [r5], #-388	; 0xfffffe7c
store_tc_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:537
	return s - buf;
}

static ssize_t store_tc_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
 344:	0600682e 	streq	r6, [r0], -lr, lsr #16
 348:	62720000 	rsbsvs	r0, r2, #0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:540
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;
 34c:	65657274 	strbvs	r7, [r5, #-628]!	; 0xfffffd8c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:537
	return s - buf;
}

static ssize_t store_tc_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
 350:	74616c5f 	strbtvc	r6, [r1], #-3167	; 0xfffff3a1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:542
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;

	err = kstrtoint(buf, 16, &val);
 354:	682e6863 	stmdavs	lr!, {r0, r1, r5, r6, fp, sp, lr}
 358:	00000200 	andeq	r0, r0, r0, lsl #4
 35c:	75646f6d 	strbvc	r6, [r4, #-3949]!	; 0xfffff093
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:540
static ssize_t store_tc_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;
 360:	682e656c 	stmdavs	lr!, {r2, r3, r5, r6, r8, sl, sp, lr}
 364:	00000600 	andeq	r0, r0, r0, lsl #12
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:542

	err = kstrtoint(buf, 16, &val);
 368:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:543
	if (err)
 36c:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	; 0xfffffe68
 370:	7665645f 			; <UNDEFINED> instruction: 0x7665645f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:545
		return err;
	if (val > 3)
 374:	2e656369 	cdpcs	3, 6, cr6, cr5, cr9, {3}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:547
		val = 1;
	tc_mode = val;
 378:	00020068 	andeq	r0, r2, r8, rrx
 37c:	71726900 	cmnvc	r2, r0, lsl #18
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:548
		axp_regmap_update(map, 0x33, tc_mode, 0x03);
 380:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 384:	682e6e72 	stmdavs	lr!, {r1, r4, r5, r6, r9, sl, fp, sp, lr}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:545
	struct axp_regmap *map = chg_dev->chip->regmap;

	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val > 3)
 388:	00000200 	andeq	r0, r0, r0, lsl #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:546
		val = 1;
 38c:	69747268 	ldmdbvs	r4!, {r3, r5, r6, r9, ip, sp, lr}^
 390:	2e72656d 	cdpcs	5, 7, cr6, cr2, cr13, {3}
 394:	00020068 	andeq	r0, r2, r8, rrx
 398:	746e6900 	strbtvc	r6, [lr], #-2304	; 0xfffff700
 39c:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0xfffffd9b
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:548
	tc_mode = val;
		axp_regmap_update(map, 0x33, tc_mode, 0x03);
 3a0:	682e7470 	stmdavs	lr!, {r4, r5, r6, sl, ip, sp, lr}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:547
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val > 3)
		val = 1;
	tc_mode = val;
 3a4:	00000200 	andeq	r0, r0, r0, lsl #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:548
		axp_regmap_update(map, 0x33, tc_mode, 0x03);
 3a8:	7364656c 	cmnvc	r4, #108, 10	; 0x1b000000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:549
	return count;
 3ac:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:550
}
 3b0:	6f700000 	svcvs	0x00700000
 3b4:	5f726577 	svcpl	0x00726577
axp2585_set_chg_vol():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:264
static int axp2585_set_chg_vol(struct axp_charger_dev *cdev, int vol)
{
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;

	if (vol > 3840 && vol < 4608)
 3b8:	70707573 	rsbsvc	r7, r0, r3, ror r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:260
	axp_regmap_update(map, 0x8b, tmp, 0x3F);
	return 0;
}

static int axp2585_set_chg_vol(struct axp_charger_dev *cdev, int vol)
{
 3bc:	682e796c 	stmdavs	lr!, {r2, r3, r5, r6, r8, fp, ip, sp, lr}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:264
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;

	if (vol > 3840 && vol < 4608)
 3c0:	00000200 	andeq	r0, r0, r0, lsl #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:262
}

static int axp2585_set_chg_vol(struct axp_charger_dev *cdev, int vol)
{
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;
 3c4:	5f707861 	svcpl	0x00707861
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:264

	if (vol > 3840 && vol < 4608)
 3c8:	65706564 	ldrbvs	r6, [r0, #-1380]!	; 0xfffffa9c
 3cc:	682e646e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, sp, lr}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:262
}

static int axp2585_set_chg_vol(struct axp_charger_dev *cdev, int vol)
{
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;
 3d0:	00000900 	andeq	r0, r0, r0, lsl #18
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:264

	if (vol > 3840 && vol < 4608)
 3d4:	2d707861 	ldclcs	8, cr7, [r0, #-388]!	; 0xfffffe7c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:265
		tmp = (vol - 3840)/16;
 3d8:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
 3dc:	2e726567 	cdpcs	5, 7, cr6, cr2, cr7, {3}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:270
	else {
		pr_warn("unsupported voltage: %dmv, use default 4200mv\n", vol);
		tmp = (4200 - 3840)/16;
	}
	axp_regmap_update(map, 0x8c, tmp << 2, 0xfc);
 3e0:	00090068 	andeq	r0, r9, r8, rrx
 3e4:	70786100 	rsbsvc	r6, r8, r0, lsl #2
 3e8:	726f632d 	rsbvc	r6, pc, #-1275068416	; 0xb4000000
 3ec:	00682e65 	rsbeq	r2, r8, r5, ror #28
 3f0:	61000009 	tstvs	r0, r9
 3f4:	35327078 	ldrcc	r7, [r2, #-120]!	; 0xffffff88
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:272
	return 0;
}
 3f8:	682e3538 	stmdavs	lr!, {r3, r4, r5, r8, sl, ip, sp}
 3fc:	00000100 	andeq	r0, r0, r0, lsl #2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:267
	struct axp_regmap *map = cdev->chip->regmap;

	if (vol > 3840 && vol < 4608)
		tmp = (vol - 3840)/16;
	else {
		pr_warn("unsupported voltage: %dmv, use default 4200mv\n", vol);
 400:	61637768 	cmnvs	r3, r8, ror #14
 404:	00682e70 	rsbeq	r2, r8, r0, ror lr
 408:	70000006 	andvc	r0, r0, r6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:268
		tmp = (4200 - 3840)/16;
 40c:	746e6972 	strbtvc	r6, [lr], #-2418	; 0xfffff68e
 410:	00682e6b 	rsbeq	r2, r8, fp, ror #28
axp2585_set_chg_cur():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:252
	if (cur == 0)
		axp_regmap_clr_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
	else
		axp_regmap_set_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
*/
	tmp = (cur) / 64;
 414:	6b000002 	blvs	424 <.debug_line+0x424>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:243

	return axp2585_ibat_to_mA(dis_res);
}

static int axp2585_set_chg_cur(struct axp_charger_dev *cdev, int cur)
{
 418:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:252
	if (cur == 0)
		axp_regmap_clr_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
	else
		axp_regmap_set_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
*/
	tmp = (cur) / 64;
 41c:	00682e6c 	rsbeq	r2, r8, ip, ror #28
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:245
}

static int axp2585_set_chg_cur(struct axp_charger_dev *cdev, int cur)
{
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;
 420:	6d000002 	stcvs	0, cr0, [r0, #-8]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:252
	if (cur == 0)
		axp_regmap_clr_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
	else
		axp_regmap_set_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
*/
	tmp = (cur) / 64;
 424:	726f6d65 	rsbvc	r6, pc, #6464	; 0x1940
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:255
	if (tmp > 0x3f)
		tmp = 0x3f;
	axp_regmap_update(map, 0x8b, tmp, 0x3F);
 428:	00682e79 	rsbeq	r2, r8, r9, ror lr
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:252
	if (cur == 0)
		axp_regmap_clr_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
	else
		axp_regmap_set_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
*/
	tmp = (cur) / 64;
 42c:	74000006 	strvc	r0, [r0], #-6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:255
	if (tmp > 0x3f)
		tmp = 0x3f;
	axp_regmap_update(map, 0x8b, tmp, 0x3F);
 430:	61657268 	cmnvs	r5, r8, ror #4
 434:	6e695f64 	cdpvs	15, 6, cr5, cr9, cr4, {3}
 438:	682e6f66 	stmdavs	lr!, {r1, r2, r5, r6, r8, r9, sl, fp, sp, lr}
 43c:	00000600 	andeq	r0, r0, r0, lsl #12
 440:	68676968 	stmdavs	r7!, {r3, r5, r6, r8, fp, sp, lr}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:257
	return 0;
}
 444:	2e646975 	mcrcs	9, 3, r6, cr4, cr5, {3}
 448:	00020068 	andeq	r0, r2, r8, rrx
axp2585_private_debug():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:612
	.name = "bmu_control",
	.attrs = bmu_control_attrs,
};

static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
 44c:	616c7300 	cmnvs	ip, r0, lsl #6
 450:	00682e62 	rsbeq	r2, r8, r2, ror #28
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:614
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;
 454:	63000002 	movwvs	r0, #2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:612
	.name = "bmu_control",
	.attrs = bmu_control_attrs,
};

static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
 458:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:617
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, 0x5a, 2, tmp);
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 45c:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:616
static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, 0x5a, 2, tmp);
 460:	6f6c0000 	svcvs	0x006c0000
 464:	65646b63 	strbvs	r6, [r4, #-2915]!	; 0xfffff49d
 468:	00682e70 	rsbeq	r2, r8, r0, ror lr
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:614
};

static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;
 46c:	00000002 	andeq	r0, r0, r2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:617

	axp_regmap_reads(map, 0x5a, 2, tmp);
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 470:	00020500 	andeq	r0, r2, r0, lsl #10
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:616
static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, 0x5a, 2, tmp);
 474:	03000000 	movweq	r0, #0
 478:	03140125 	tsteq	r4, #1073741833	; 0x40000009
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:617
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 47c:	03144a1a 	tsteq	r4, #106496	; 0x1a000
 480:	144a00f7 	strbne	r0, [sl], #-247	; 0xffffff09
 484:	4a04be03 	bmi	12fc98 <axp2585_set_usb_vhold+0x12ea54>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:620
			"acin_vol = %d\n", ((tmp[0] << 4) | (tmp[1] & 0xF))
			* 8);
	axp_regmap_reads(map, 0xbc, 2, tmp);
 488:	03020433 	movweq	r0, #9267	; 0x2433
 48c:	042e0182 	strteq	r0, [lr], #-386	; 0xfffffe7e
 490:	7efe0301 	cdpvc	3, 15, cr0, cr14, cr1, {0}
 494:	2f2d6c2e 	svccs	0x002d6c2e
 498:	7a036d30 	bvc	db960 <axp2585_set_usb_vhold+0xda71c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:621
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 49c:	9e68034a 	cdpls	3, 6, cr0, cr8, cr10, {2}
 4a0:	04312b15 	ldrteq	r2, [r1], #-2837	; 0xfffff4eb
 4a4:	018e0302 	orreq	r0, lr, r2, lsl #6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:625
			"ocv_vol = %d\n", ((tmp[0] << 4) | (tmp[1] & 0xF))
			* 1200 / 1000);

}
 4a8:	0301044a 	movweq	r0, #5194	; 0x144a
 4ac:	2f2e7ef2 	svccs	0x002e7ef2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:617 (discriminator 1)
{
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, 0x5a, 2, tmp);
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 4b0:	4a1a0331 	bmi	68117c <axp2585_set_usb_vhold+0x67ff38>
 4b4:	4a490315 	bmi	1241110 <axp2585_set_usb_vhold+0x123fecc>
 4b8:	a4030204 	strge	r0, [r3], #-516	; 0xfffffdfc
 4bc:	01042e01 	tsteq	r4, r1, lsl #28
 4c0:	4a7edc03 	bmi	1fb74d4 <axp2585_set_usb_vhold+0x1fb6290>
 4c4:	a4030204 	strge	r0, [r3], #-516	; 0xfffffdfc
 4c8:	01042e01 	tsteq	r4, r1, lsl #28
 4cc:	d67ee203 	ldrbtle	lr, [lr], -r3, lsl #4
 4d0:	302c3067 	eorcc	r3, ip, r7, rrx
 4d4:	02040200 	andeq	r0, r4, #0, 4
 4d8:	034d512a 	movteq	r5, #53546	; 0xd12a
 4dc:	32667ebd 	rsbcc	r7, r6, #3024	; 0xbd0
 4e0:	08bb322a 	ldmeq	fp!, {r1, r3, r5, r9, ip, sp}
 4e4:	5d032f21 	stcpl	15, cr2, [r3, #-132]	; 0xffffff7c
 4e8:	322a324a 	eorcc	r3, sl, #-1610612732	; 0xa0000004
 4ec:	2f2108bb 	svccs	0x002108bb
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:621 (discriminator 1)
			"acin_vol = %d\n", ((tmp[0] << 4) | (tmp[1] & 0xF))
			* 8);
	axp_regmap_reads(map, 0xbc, 2, tmp);
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 4f0:	4a7db003 	bmi	1f6c504 <axp2585_set_usb_vhold+0x1f6b2c0>
 4f4:	309f304d 	addscc	r3, pc, sp, asr #32
 4f8:	03d7302c 	bicseq	r3, r7, #44	; 0x2c
 4fc:	304d6619 	subcc	r6, sp, r9, lsl r6
 500:	034b4c9f 	movteq	r4, #48287	; 0xbc9f
 504:	2e6602d9 	mcrcs	2, 3, r0, cr6, cr9, {6}
 508:	b9030204 	stmdblt	r3, {r2, r9}
 50c:	01042e02 	tsteq	r4, r2, lsl #28
 510:	2e7dcc03 	cdpcs	12, 7, cr12, cr13, cr3, {0}
 514:	3e084c67 	cdpcc	12, 0, cr4, cr8, cr7, {3}
 518:	7d8a032c 	stcvc	3, cr0, [sl, #176]	; 0xb0
 51c:	9f304d2e 	svcls	0x00304d2e
 520:	d1034b4c 	tstle	r3, ip, asr #22
 524:	2b4d6602 	blcs	1359d34 <axp2585_set_usb_vhold+0x1358af0>
 528:	2f4c6433 	svccs	0x004c6433
 52c:	2a326868 	bcs	c9a6d4 <axp2585_set_usb_vhold+0xc99490>
 530:	322f4532 	eorcc	r4, pc, #209715200	; 0xc800000
 534:	7a032f2f 	bvc	cc1f8 <axp2585_set_usb_vhold+0xcafb4>
 538:	302c304a 	eorcc	r3, ip, sl, asr #32
 53c:	58033048 	stmdapl	r3, {r3, r6, ip, sp}
 540:	332b4d4a 	teqcc	fp, #4736	; 0x1280
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:625 (discriminator 1)
			"ocv_vol = %d\n", ((tmp[0] << 4) | (tmp[1] & 0xF))
			* 1200 / 1000);

}
 544:	4c2f4c64 	stcmi	12, cr4, [pc], #-400	; 3bc <.debug_line+0x3bc>
 548:	2f474b30 	svccs	0x00474b30
axp2585_get_rest_cap():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:142
	.set_usb_ihold   = axp2585_set_usb_ihold,
	.get_usb_ihold   = axp2585_get_usb_ihold,
};

static int axp2585_get_rest_cap(struct axp_charger_dev *cdev)
{
 54c:	2f2f2da0 	svccs	0x002f2da0
 550:	7dde032f 	ldclvc	3, cr0, [lr, #188]	; 0xbc
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:148
	u8 val, temp_val[2], tmp[2];
	u8 ocv_percent = 0;
	u8 coulomb_percent = 0;
	int batt_max_cap, coulumb_counter;
	int rest_vol;
	struct axp_regmap *map = cdev->chip->regmap;
 554:	322a164a 	eorcc	r1, sl, #77594624	; 0x4a00000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:142
	.set_usb_ihold   = axp2585_set_usb_ihold,
	.get_usb_ihold   = axp2585_get_usb_ihold,
};

static int axp2585_get_rest_cap(struct axp_charger_dev *cdev)
{
 558:	3048302c 	subcc	r3, r8, ip, lsr #32
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:150
	u8 coulomb_percent = 0;
	int batt_max_cap, coulumb_counter;
	int rest_vol;
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_read(map, AXP2585_CAP, &val);
 55c:	45bc4f2f 	ldrmi	r4, [ip, #3887]!	; 0xf2f
 560:	4a670367 	bmi	19c1304 <axp2585_set_usb_vhold+0x19c00c0>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:148
	u8 val, temp_val[2], tmp[2];
	u8 ocv_percent = 0;
	u8 coulomb_percent = 0;
	int batt_max_cap, coulumb_counter;
	int rest_vol;
	struct axp_regmap *map = cdev->chip->regmap;
 564:	03010903 	movweq	r0, #6403	; 0x1903
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:150

	axp_regmap_read(map, AXP2585_CAP, &val);
 568:	09032e77 	stmdbeq	r3, {r0, r1, r2, r4, r5, r6, r9, sl, fp, sp}
 56c:	2e79032e 	cdpcs	3, 7, cr0, cr9, cr14, {1}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:151
	if (!(val & 0x80))
 570:	312b3135 	teqcc	fp, r5, lsr r1
 574:	02e303a0 	rsceq	r0, r3, #160, 6	; 0x80000002
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:152
		return 0;
 578:	332c4c4a 	teqcc	ip, #18944	; 0x4a00
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:151
	int batt_max_cap, coulumb_counter;
	int rest_vol;
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_read(map, AXP2585_CAP, &val);
	if (!(val & 0x80))
 57c:	2d31642d 	cfldrscs	mvf6, [r1, #-180]!	; 0xffffff4c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:184
						* 1456 / 1000;

	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
			"batt_max_cap = %d\n", batt_max_cap);
	return rest_vol;
}
 580:	6a9f694b 	bvs	fe7daab4 <axp2585_set_usb_vhold+0xfe7d9870>
 584:	01040200 	mrseq	r0, R12_usr
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:154

	axp_regmap_read(map, AXP2585_CAP, &val);
	if (!(val & 0x80))
		return 0;
	rest_vol = (int) (val & 0x7F);
	axp_regmap_read(map, 0xe4, &tmp[0]);
 588:	004a7803 	subeq	r7, sl, r3, lsl #16
 58c:	08010402 	stmdaeq	r1, {r1, sl}
 590:	040200e8 	streq	r0, [r2], #-232	; 0xffffff18
 594:	162a0201 	strtne	r0, [sl], -r1, lsl #4
 598:	4a7c9d03 	bmi	1f279ac <axp2585_set_usb_vhold+0x1f26768>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:155
	if (tmp[0] & 0x80) {
 59c:	2e7a0350 	mrccs	3, 3, r0, cr10, cr0, {2}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:153
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_read(map, AXP2585_CAP, &val);
	if (!(val & 0x80))
		return 0;
	rest_vol = (int) (val & 0x7F);
 5a0:	4b304836 	blmi	c12680 <axp2585_set_usb_vhold+0xc1143c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:155
	axp_regmap_read(map, 0xe4, &tmp[0]);
	if (tmp[0] & 0x80) {
 5a4:	21032d4b 	tstcs	r3, fp, asr #26
 5a8:	4a62032e 	bmi	1881268 <axp2585_set_usb_vhold+0x1880024>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:160
		ocv_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
 5ac:	4f302c9f 	svcmi	0x00302c9f
 5b0:	302f2b69 	eorcc	r2, pc, r9, ror #22
 5b4:	4a0c032c 	bmi	30126c <axp2585_set_usb_vhold+0x300028>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:163
	if (tmp[0] & 0x80) {
		coulomb_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 5b8:	2c4ca2a2 	sfmcs	f2, 3, [ip], {162}	; 0xa2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:160
	if (tmp[0] & 0x80) {
		ocv_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
 5bc:	01040200 	mrseq	r0, R12_usr
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:161
	if (tmp[0] & 0x80) {
 5c0:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:163
		coulomb_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 5c4:	2b060104 	blcs	1809dc <axp2585_set_usb_vhold+0x17f798>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:161
		ocv_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
	if (tmp[0] & 0x80) {
 5c8:	01040200 	mrseq	r0, R12_usr
 5cc:	0402004d 	streq	r0, [r2], #-77	; 0xffffffb3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:173
		axp_regmap_clr_bits(map, AXP2585_COULOMB_CTL, 0x80);
		axp_regmap_set_bits(map, AXP2585_COULOMB_CTL, 0x80);
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num, "Reset coulumb\n");
		rest_vol = 100;
	}
	axp_regmap_reads(map, 0xe2, 2, temp_val);
 5d0:	14240201 	strtne	r0, [r4], #-513	; 0xfffffdff
 5d4:	2d4a6603 	stclcs	6, cr6, [sl, #-12]
 5d8:	6b83852f 	blvs	fe0e1a9c <axp2585_set_usb_vhold+0xfe0e0858>
 5dc:	01040200 	mrseq	r0, R12_usr
 5e0:	bb064a06 	bllt	192e00 <axp2585_set_usb_vhold+0x191bbc>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:177
	coulumb_counter = (((temp_val[0] & 0x7f) << 8) + temp_val[1])
						* 1456 / 1000;

	axp_regmap_reads(map, 0xe0, 2, temp_val);
 5e4:	01040200 	mrseq	r0, R12_usr
 5e8:	83066606 	movwhi	r6, #26118	; 0x6606
 5ec:	2d4b8383 	stclcs	3, cr8, [fp, #-524]	; 0xfffffdf4
 5f0:	01040200 	mrseq	r0, R12_usr
 5f4:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:181
	batt_max_cap = (((temp_val[0] & 0x7f) << 8) + temp_val[1])
						* 1456 / 1000;

	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 5f8:	2f060104 	svccs	0x00060104
 5fc:	01040200 	mrseq	r0, R12_usr
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:183
			"batt_max_cap = %d\n", batt_max_cap);
	return rest_vol;
 600:	0879032d 	ldmdaeq	r9!, {r0, r2, r3, r5, r8, r9}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:181

	axp_regmap_reads(map, 0xe0, 2, temp_val);
	batt_max_cap = (((temp_val[0] & 0x7f) << 8) + temp_val[1])
						* 1456 / 1000;

	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 604:	0200653c 	andeq	r6, r0, #60, 10	; 0xf000000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:181 (discriminator 1)
 608:	002f0104 	eoreq	r0, pc, r4, lsl #2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:178 (discriminator 1)
	axp_regmap_reads(map, 0xe2, 2, temp_val);
	coulumb_counter = (((temp_val[0] & 0x7f) << 8) + temp_val[1])
						* 1456 / 1000;

	axp_regmap_reads(map, 0xe0, 2, temp_val);
	batt_max_cap = (((temp_val[0] & 0x7f) << 8) + temp_val[1])
 60c:	03010402 	movweq	r0, #5122	; 0x1402
 610:	0874087a 	ldmdaeq	r4!, {r1, r3, r4, r5, r6, fp}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:181 (discriminator 1)
						* 1456 / 1000;

	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 614:	6e03497a 	mcrvs	9, 0, r4, cr3, cr10, {3}
 618:	2e13032e 	cdpcs	3, 1, cr0, cr3, cr14, {1}
 61c:	4c4a5503 	cfstr64mi	mvdx5, [sl], {3}
 620:	03678330 	cmneq	r7, #48, 6	; 0xc0000000
 624:	304c665d 	subcc	r6, ip, sp, asr r6
 628:	93036783 	movwls	r6, #14211	; 0x3783
 62c:	2d2f6604 	stccs	6, cr6, [pc, #-16]!	; 624 <.debug_line+0x624>
 630:	6b2f492f 	blvs	bd2af4 <axp2585_set_usb_vhold+0xbd18b0>
 634:	88030204 	stmdahi	r3, {r2, r9}
 638:	01042e02 	tsteq	r4, r2, lsl #28
 63c:	2e7df803 	cdpcs	8, 7, cr15, cr13, cr3, {0}
 640:	88030204 	stmdahi	r3, {r2, r9}
 644:	01042e02 	tsteq	r4, r2, lsl #28
 648:	2e7df803 	cdpcs	8, 7, cr15, cr13, cr3, {0}
 64c:	14038330 	strne	r8, [r3], #-816	; 0xfffffcd0
 650:	2e75034a 	cdpcs	3, 7, cr0, cr5, cr10, {2}
 654:	032e0903 	teqeq	lr, #49152	; 0xc000
 658:	b6032e77 			; <UNDEFINED> instruction: 0xb6032e77
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:183 (discriminator 1)
			"batt_max_cap = %d\n", batt_max_cap);
	return rest_vol;
 65c:	d3032e7d 	movwle	r2, #15997	; 0x3e7d
 660:	79032e02 	stmdbvc	r3, {r1, r9, sl, fp, sp}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:157
		return 0;
	rest_vol = (int) (val & 0x7F);
	axp_regmap_read(map, 0xe4, &tmp[0]);
	if (tmp[0] & 0x80) {
		ocv_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 664:	7db7032e 	ldcvc	3, cr0, [r7, #184]!	; 0xb8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:156
	if (!(val & 0x80))
		return 0;
	rest_vol = (int) (val & 0x7F);
	axp_regmap_read(map, 0xe4, &tmp[0]);
	if (tmp[0] & 0x80) {
		ocv_percent = tmp[0] & 0x7f;
 668:	02d0032e 	sbcseq	r0, r0, #-1207959552	; 0xb8000000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:157
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 66c:	2e790366 	cdpcs	3, 7, cr0, cr9, cr6, {3}
 670:	2a2e0903 	bcs	b82a84 <axp2585_set_usb_vhold+0xb81840>
 674:	b103342a 	tstlt	r3, sl, lsr #8
 678:	cd032e7d 	stcgt	14, cr2, [r3, #-500]	; 0xfffffe0c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:160
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
 67c:	332a2e02 	teqcc	sl, #2, 28
 680:	2c2b332c 	stccs	3, cr3, [fp], #-176	; 0xffffff50
 684:	0d032d29 	stceq	13, cr2, [r3, #-164]	; 0xffffff5c
 688:	2e74032e 	cdpcs	3, 7, cr0, cr4, cr14, {1}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:161
	if (tmp[0] & 0x80) {
 68c:	ad033632 	stcge	6, cr3, [r3, #-200]	; 0xffffff38
 690:	c6032e7d 			; <UNDEFINED> instruction: 0xc6032e7d
 694:	03322e02 	teqeq	r2, #2, 28
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:166
		coulomb_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
			"coulomb_percent = %d\n", coulomb_percent);
	}
	if (ocv_percent == 100 && cdev->charging == 0 && rest_vol == 99
 698:	2d2e7db5 	stccs	13, cr7, [lr, #-724]!	; 0xfffffd2c
 69c:	302c3030 	eorcc	r3, ip, r0, lsr r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:166 (discriminator 1)
 6a0:	6b2f4c2c 	blvs	bd3758 <axp2585_set_usb_vhold+0xbd2514>
 6a4:	d82f2f81 	stmdale	pc!, {r0, r7, r8, r9, sl, fp, sp}	; <UNPREDICTABLE>
 6a8:	816d6884 	cmnhi	sp, r4, lsl #17
 6ac:	4d2d312f 	stfmis	f3, [sp, #-188]!	; 0xffffff44
 6b0:	4b2d3048 	blmi	b4c7d8 <axp2585_set_usb_vhold+0xb4b594>
 6b4:	63038333 	movwvs	r8, #13107	; 0x3333
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:167
		&& (cdev->ac_valid == 1 || cdev->usb_valid == 1)) {
 6b8:	9f012402 	svcls	0x00012402
 6bc:	50ba2903 	adcspl	r2, sl, r3, lsl #18
 6c0:	4b2f4830 	blmi	bd2788 <axp2585_set_usb_vhold+0xbd1544>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:167 (discriminator 1)
 6c4:	6b67f631 	blvs	19fdf90 <axp2585_set_usb_vhold+0x19fcd4c>
 6c8:	2e160381 	cdpcs	3, 1, cr0, cr6, cr1, {4}
 6cc:	2f2e6b03 	svccs	0x002e6b03
 6d0:	2e2003d8 	mcrcs	3, 1, r0, cr0, cr8, {6}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:168
		axp_regmap_clr_bits(map, AXP2585_COULOMB_CTL, 0x80);
 6d4:	032e6103 	teqeq	lr, #-1073741824	; 0xc0000000
 6d8:	62032e1f 	andvs	r2, r3, #496	; 0x1f0
 6dc:	2f2b2f2e 	svccs	0x002b2f2e
 6e0:	2f2b2f31 	svccs	0x002b2f31
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:169
		axp_regmap_set_bits(map, AXP2585_COULOMB_CTL, 0x80);
 6e4:	2f2b2f31 	svccs	0x002b2f31
 6e8:	2f2b2f31 	svccs	0x002b2f31
 6ec:	2f2b2f31 	svccs	0x002b2f31
 6f0:	2b2f312f 	blcs	bccbb4 <axp2585_set_usb_vhold+0xbcb970>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:170
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num, "Reset coulumb\n");
 6f4:	032c312f 	teqeq	ip, #-1073741813	; 0xc000000b
 6f8:	6e032e13 	mcrvs	14, 0, r2, cr3, cr3, {0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:171
		rest_vol = 100;
 6fc:	2e12032e 	cdpcs	3, 1, cr0, cr2, cr14, {1}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:170
	}
	if (ocv_percent == 100 && cdev->charging == 0 && rest_vol == 99
		&& (cdev->ac_valid == 1 || cdev->usb_valid == 1)) {
		axp_regmap_clr_bits(map, AXP2585_COULOMB_CTL, 0x80);
		axp_regmap_set_bits(map, AXP2585_COULOMB_CTL, 0x80);
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num, "Reset coulumb\n");
 700:	312e6c03 	teqcc	lr, r3, lsl #24
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:170 (discriminator 1)
 704:	2d302d31 	ldccs	13, cr2, [r0, #-196]!	; 0xffffff3c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:171 (discriminator 1)
		rest_vol = 100;
 708:	2d302d30 	ldccs	13, cr2, [r0, #-192]!	; 0xffffff40
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:170 (discriminator 1)
	}
	if (ocv_percent == 100 && cdev->charging == 0 && rest_vol == 99
		&& (cdev->ac_valid == 1 || cdev->usb_valid == 1)) {
		axp_regmap_clr_bits(map, AXP2585_COULOMB_CTL, 0x80);
		axp_regmap_set_bits(map, AXP2585_COULOMB_CTL, 0x80);
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num, "Reset coulumb\n");
 70c:	2d302d30 	ldccs	13, cr2, [r0, #-192]!	; 0xffffff40
 710:	2d302d30 	ldccs	13, cr2, [r0, #-192]!	; 0xffffff40
 714:	2d302d30 	ldccs	13, cr2, [r0, #-192]!	; 0xffffff40
 718:	2d302d30 	ldccs	13, cr2, [r0, #-192]!	; 0xffffff40
 71c:	03302d30 	teqeq	r0, #48, 26	; 0xc00
 720:	0e032e71 	mcreq	14, 0, r2, cr3, cr1, {3}
 724:	312f2f2e 	teqcc	pc, lr, lsr #30
 728:	034b652f 	movteq	r6, #46383	; 0xb52f
 72c:	2fa12e0a 	svccs	0x00a12e0a
 730:	2f334b65 	svccs	0x00334b65
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:163
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
	if (tmp[0] & 0x80) {
		coulomb_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 734:	83334b65 	teqhi	r3, #103424	; 0x19400
 738:	836e83c0 	cmnhi	lr, #192, 6
 73c:	30484d85 	subcc	r4, r8, r5, lsl #27
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:162
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
	if (tmp[0] & 0x80) {
		coulomb_percent = tmp[0] & 0x7f;
 740:	0b03322c 	bleq	ccff8 <axp2585_set_usb_vhold+0xcbdb4>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:163 (discriminator 1)
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 744:	08a0a066 	stmiaeq	r0!, {r1, r2, r5, r6, sp, pc}
 748:	08856a1f 	stmeq	r5, {r0, r1, r2, r3, r4, r9, fp, sp, lr}
 74c:	834e2f73 	movthi	r2, #61299	; 0xef73
 750:	d601a003 	strle	sl, [r1], -r3
 754:	030304d8 	movweq	r0, #13528	; 0x34d8
 758:	04d67b90 	ldrbeq	r7, [r6], #2960	; 0xb90
 75c:	04f60301 	ldrbteq	r0, [r6], #769	; 0x301
 760:	4b4b2c82 	blmi	12cb970 <axp2585_set_usb_vhold+0x12ca72c>
 764:	0350302c 	cmpeq	r0, #44	; 0x2c
 768:	69032e17 	stmdbvs	r3, {r0, r1, r2, r4, r9, sl, fp, sp}
 76c:	2e7a032e 	cdpcs	3, 7, cr0, cr10, cr14, {1}
 770:	2e7a0334 	mrccs	3, 3, r0, cr10, cr4, {1}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:157 (discriminator 1)
		return 0;
	rest_vol = (int) (val & 0x7F);
	axp_regmap_read(map, 0xe4, &tmp[0]);
	if (tmp[0] & 0x80) {
		ocv_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 774:	032e1d03 	teqeq	lr, #3, 26	; 0xc0
 778:	4b694a63 	blmi	1a5310c <axp2585_set_usb_vhold+0x1a51ec8>
 77c:	03020448 	movweq	r0, #9288	; 0x2448
 780:	046601e7 	strbteq	r0, [r6], #-487	; 0xfffffe19
 784:	7ec50301 	cdpvc	3, 12, cr0, cr5, cr1, {0}
 788:	0e03672e 	cdpeq	7, 0, cr6, cr3, cr14, {1}
 78c:	7df0034a 	ldclvc	3, cr0, [r0, #296]!	; 0x128
 790:	4983684a 	stmibmi	r3, {r1, r3, r6, fp, sp, lr}
 794:	5c036867 	stcpl	8, cr6, [r3], {103}	; 0x67
 798:	4a14039e 	bmi	501618 <axp2585_set_usb_vhold+0x5003d4>
 79c:	034a7a03 	movteq	r7, #43523	; 0xaa03
 7a0:	034b4a45 	movteq	r4, #47685	; 0xba45
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:163
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
	if (tmp[0] & 0x80) {
		coulomb_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 7a4:	bc9e00dd 	ldclt	0, cr0, [lr], {221}	; 0xdd
 7a8:	eb03bcbc 	bl	efaa0 <axp2585_set_usb_vhold+0xee85c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:162
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
	if (tmp[0] & 0x80) {
		coulomb_percent = tmp[0] & 0x7f;
 7ac:	0384d601 	orreq	sp, r4, #1048576	; 0x100000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:144
};

static int axp2585_get_rest_cap(struct axp_charger_dev *cdev)
{
	u8 val, temp_val[2], tmp[2];
	u8 ocv_percent = 0;
 7b0:	49032e0b 	stmdbmi	r3, {r0, r1, r3, r9, sl, fp, sp}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:163
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
	if (tmp[0] & 0x80) {
		coulomb_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
 7b4:	9f68d94a 	svcls	0x0068d94a
 7b8:	692b3168 	stmdbvs	fp!, {r3, r5, r6, r8, ip, sp}
axp2585_get_usb_ihold():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:120
	}
	return 0;
}

static int axp2585_get_usb_ihold(struct axp_charger_dev *cdev)
{
 7bc:	67a46888 	strvs	r6, [r4, r8, lsl #17]!
 7c0:	12034ba0 	andne	r4, r3, #160, 22	; 0x28000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:122
	u8 tmp;
	struct axp_regmap *map = cdev->chip->regmap;
 7c4:	2e6e039e 	mcrcs	3, 3, r0, cr14, cr14, {4}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:124

	axp_regmap_read(map, 0x10, &tmp);
 7c8:	4b661203 	blmi	1984fdc <axp2585_set_usb_vhold+0x1983d98>
 7cc:	302f2f65 	eorcc	r2, pc, r5, ror #30
 7d0:	0200302c 	andeq	r3, r0, #44	; 0x2c
 7d4:	512a0204 	teqpl	sl, r4, lsl #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:125
	return (tmp*50 + 100);
 7d8:	7d90032f 	ldcvc	3, cr0, [r0, #188]	; 0xbc
 7dc:	037e7e82 	cmneq	lr, #2080	; 0x820
 7e0:	9f6600e2 	svcls	0x006600e2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:126
}
 7e4:	4b2d2f2d 	blmi	b4c4a0 <axp2585_set_usb_vhold+0xb4b25c>
 7e8:	9e290367 	cdpls	3, 2, cr0, cr9, cr7, {3}
 7ec:	01930361 	orrseq	r0, r3, r1, ror #6
axp2585_get_usb_vhold():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:91
	}
	return 0;
}

static int axp2585_get_usb_vhold(struct axp_charger_dev *cdev)
{
 7f0:	f203834a 	vcgt.s8	q4, <illegal reg q1.5>, q5
 7f4:	ca034a7e 	bgt	d31f4 <axp2585_set_usb_vhold+0xd1fb0>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:93
	u8 tmp;
	struct axp_regmap *map = cdev->chip->regmap;
 7f8:	78034a01 	stmdavc	r3, {r0, r9, fp, lr}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:95

	axp_regmap_read(map, 0x11, &tmp);
 7fc:	ba4f039e 	blt	13c167c <axp2585_set_usb_vhold+0x13c0438>
 800:	7be10367 	blvc	ff8415a4 <axp2585_set_usb_vhold+0xff840360>
 804:	344616d6 	strbcc	r1, [r6], #-1750	; 0xfffff92a
 808:	667a0384 	ldrbtvs	r0, [sl], -r4, lsl #7
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:96
	return (tmp*80 + 3880);
 80c:	d6090334 			; <UNDEFINED> instruction: 0xd6090334
 810:	03825c03 	orreq	r5, r2, #768	; 0x300
 814:	01260276 	teqeq	r6, r6, ror r2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:97
}
 818:	84344616 	ldrthi	r4, [r4], #-1558	; 0xfffff9ea
 81c:	34667a03 	strbtcc	r7, [r6], #-2563	; 0xfffff5fd
 820:	03d60903 	bicseq	r0, r6, #49152	; 0xc000
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:628
			* 1200 / 1000);

}

static int axp2585_charger_probe(struct platform_device *pdev)
{
 824:	0e028279 	mcreq	2, 0, r8, cr2, cr9, {3}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:629
    printk("[axp2585]Entering %s\n",__func__);
 828:	00010100 	andeq	r0, r1, r0, lsl #2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:628
			* 1200 / 1000);

}

static int axp2585_charger_probe(struct platform_device *pdev)
{
 82c:	00000205 	andeq	r0, r0, r5, lsl #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:629
    printk("[axp2585]Entering %s\n",__func__);
 830:	aa030000 	bge	c0838 <axp2585_set_usb_vhold+0xbf5f4>
 834:	2b150106 	blcs	540c54 <axp2585_set_usb_vhold+0x53fa10>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:628
			* 1200 / 1000);

}

static int axp2585_charger_probe(struct platform_device *pdev)
{
 838:	9f676731 	svcls	0x00676731
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:629
    printk("[axp2585]Entering %s\n",__func__);
 83c:	02022f4d 	andeq	r2, r2, #308	; 0x134
 840:	地址 0x0000000000000840 越界。


Disassembly of section .debug_str:

00000000 <.debug_str>:
axp2585_set_ac_ihold():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:40
}

static int axp2585_set_ac_ihold(struct axp_charger_dev *cdev, int cur)
{
	return 0;
}
       0:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
       4:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
axp2585_get_usb_current():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:68
}

static int axp2585_get_usb_current(struct axp_charger_dev *cdev)
{
	return 0;
}
       8:	6e692067 	cdpvs	0, 6, cr2, cr9, cr7, {3}
       c:	524e0074 	subpl	r0, lr, #116	; 0x74
axp2585_get_bat_health():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:189
}

static int axp2585_get_bat_health(struct axp_charger_dev *cdev)
{
	return POWER_SUPPLY_HEALTH_GOOD;
}
      10:	4c49465f 	mcrrmi	6, 5, r4, r9, cr15
      14:	41505f45 	cmpmi	r0, r5, asr #30
axp2585_charger_resume():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:763

	return 0;
}

static int axp2585_charger_resume(struct platform_device *dev)
{
      18:	00534547 	subseq	r4, r3, r7, asr #10
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:768
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);
	int pre_rest_vol;

	if (axp_suspend_flag == AXP_SUSPEND_WITH_IRQ) {
		axp_suspend_flag = AXP_NOT_SUSPEND;
      1c:	45574f50 	ldrbmi	r4, [r7, #-3920]	; 0xfffff0b0
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
      20:	55535f52 	ldrbpl	r5, [r3, #-3922]	; 0xfffff0ae
axp2585_charger_resume():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:768
      24:	594c5050 	stmdbpl	ip, {r4, r6, ip, lr}^
      28:	4f52505f 	svcmi	0x0052505f
      2c:	45545f50 	ldrbmi	r5, [r4, #-3920]	; 0xfffff0b0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:774
	//	sunxi_nmi_enable();
	} else {
		axp_suspend_flag = AXP_NOT_SUSPEND;
	}
	pre_rest_vol = chg_dev->rest_vol;
	axp_charger_resume(chg_dev);
      30:	415f504d 	cmpmi	pc, sp, asr #32
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:773
		axp_suspend_flag = AXP_NOT_SUSPEND;
	//	sunxi_nmi_enable();
	} else {
		axp_suspend_flag = AXP_NOT_SUSPEND;
	}
	pre_rest_vol = chg_dev->rest_vol;
      34:	4549424d 	strbmi	r4, [r9, #-589]	; 0xfffffdb3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:774
	axp_charger_resume(chg_dev);
      38:	415f544e 	cmpmi	pc, lr, asr #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:776

	if (chg_dev->rest_vol - pre_rest_vol) {
      3c:	5452454c 	ldrbpl	r4, [r2], #-1356	; 0xfffffab4
      40:	58414d5f 	stmdapl	r1, {r0, r1, r2, r3, r4, r6, r8, sl, fp, lr}^
      44:	574f5000 	strbpl	r5, [pc, -r0]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:783
				pre_rest_vol, chg_dev->rest_vol);
		/*axp_regmap_write(map, 0x05, chg_dev->rest_vol | 0x80);*/
	}

	return 0;
}
      48:	535f5245 	cmppl	pc, #1342177284	; 0x50000004
      4c:	4c505055 	mrrcmi	0, 5, r5, r0, cr5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:777
	}
	pre_rest_vol = chg_dev->rest_vol;
	axp_charger_resume(chg_dev);

	if (chg_dev->rest_vol - pre_rest_vol) {
		pr_info("battery vol change: %d->%d\n",
      50:	52505f59 	subspl	r5, r0, #356	; 0x164
      54:	535f504f 	cmppl	pc, #79	; 0x4f
      58:	45504f43 	ldrbmi	r4, [r0, #-3907]	; 0xfffff0bd
      5c:	6e6f7a00 	vmulvs.f32	s15, s30, s0
      60:	74735f65 	ldrbtvc	r5, [r3], #-3941	; 0xfffff09b
axp2585_charger_suspend():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
static int axp2585_charger_suspend(struct platform_device *dev,
				pm_message_t state)
{
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_suspend_flag = AXP_WAS_SUSPEND;
      64:	695f7461 	ldmdbvs	pc, {r0, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:753
	return 0;
}

static int axp2585_charger_suspend(struct platform_device *dev,
				pm_message_t state)
{
      68:	006d6574 	rsbeq	r6, sp, r4, ror r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_suspend_flag = AXP_WAS_SUSPEND;
      6c:	736e6f63 	cmnvc	lr, #396	; 0x18c
      70:	5f656c6f 	svcpl	0x00656c6f
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
      74:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
axp2585_charger_suspend():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:756
      78:	61006b74 	tstvs	r0, r4, ror fp
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:757
	axp_charger_suspend(chg_dev);
      7c:	735f7078 	cmpvc	pc, #120	; 0x78
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:760

	return 0;
}
      80:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
      84:	665f646e 	ldrbvs	r6, [pc], -lr, ror #8
axp2585_charger_shutdown():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:789

static void axp2585_charger_shutdown(struct platform_device *dev)
{
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);

	axp_charger_shutdown(chg_dev);
      88:	0067616c 	rsbeq	r6, r7, ip, ror #2
      8c:	5f756d70 	svcpl	0x00756d70
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:734
fail:
	return -1;
}

static int axp2585_charger_remove(struct platform_device *pdev)
{
      90:	6b776f70 	blvs	1ddbe58 <axp2585_set_usb_vhold+0x1ddac14>
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
      94:	6f5f7965 	svcvs	0x005f7965
      98:	745f6666 	ldrbvc	r6, [pc], #-1638	; a0 <.debug_str+0xa0>
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:734
      9c:	00656d69 	rsbeq	r6, r5, r9, ror #26
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
      a0:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
      a4:	70786100 	rsbsvc	r6, r8, r0, lsl #2
      a8:	35383532 	ldrcc	r3, [r8, #-1330]!	; 0xffffface
      ac:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
      b0:	6273755f 	rsbsvs	r7, r3, #398458880	; 0x17c00000
      b4:	6f68765f 	svcvs	0x0068765f
      b8:	6200646c 	andvs	r6, r0, #108, 8	; 0x6c000000
axp2585_charger_remove():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:740
	int i, irq;
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
      bc:	6b6e696c 	blvs	1b9a674 <axp2585_set_usb_vhold+0x1b99430>
      c0:	6c65645f 	cfstrdvs	mvd6, [r5], #-380	; 0xfffffe84
      c4:	6f5f7961 	svcvs	0x005f7961
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:741
		if (irq < 0)
      c8:	6567006e 	strbvs	r0, [r7, #-110]!	; 0xffffff92
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:743
			continue;
		axp_free_irq(axp_dev, irq);
      cc:	73755f74 	cmnvc	r5, #116, 30	; 0x1d0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:741
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
		if (irq < 0)
      d0:	68765f62 	ldmdavs	r6!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:743
			continue;
		axp_free_irq(axp_dev, irq);
      d4:	00646c6f 	rsbeq	r6, r4, pc, ror #24
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:739 (discriminator 2)
{
	int i, irq;
	struct axp_charger_dev *chg_dev = platform_get_drvdata(pdev);
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
      d8:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
      dc:	736e7520 	cmnvc	lr, #32, 10	; 0x8000000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:746
		if (irq < 0)
			continue;
		axp_free_irq(axp_dev, irq);
	}

	axp_power_supply_unregister(chg_dev);
      e0:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
      e4:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:749

	return 0;
}
      e8:	6e690074 	mcrvs	0, 3, r0, cr9, cr4, {3}
      ec:	64695f6f 	strbtvs	r5, [r9], #-3951	; 0xfffff091
      f0:	6f630061 	svcvs	0x00630061
show_boost_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:554
	return count;
}

static ssize_t show_boost_mode(struct device *dev,
			struct device_attribute *attr, char *buf)
{
      f4:	6361706d 	cmnvs	r1, #109	; 0x6d
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:558
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "1: open  0: close");
      f8:	61635f74 	smcvs	13812	; 0x35f4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:554
	return count;
}

static ssize_t show_boost_mode(struct device *dev,
			struct device_attribute *attr, char *buf)
{
      fc:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:558
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "1: open  0: close");
     100:	67696d5f 			; <UNDEFINED> instruction: 0x67696d5f
     104:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0xfffffe8e
     108:	6e66705f 	mcrvs	0, 3, r7, cr6, cr15, {2}
     10c:	5f524e00 	svcpl	0x00524e00
     110:	4e52454b 	cdpmi	5, 5, cr4, cr2, cr11, {2}
     114:	535f4c45 	cmppl	pc, #17664	; 0x4500
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:559
	s += scnprintf(s, end - s, "boost_mode=%d\n", boost_mode);
     118:	4b434154 	blmi	10d0670 <axp2585_set_usb_vhold+0x10cf42c>
     11c:	55524c00 	ldrbpl	r4, [r2, #-3072]	; 0xfffff400
     120:	454e555f 	strbmi	r5, [lr, #-1375]	; 0xfffffaa1
     124:	54434956 	strbpl	r4, [r3], #-2390	; 0xfffff6aa
     128:	454c4241 	strbmi	r4, [ip, #-577]	; 0xfffffdbf
     12c:	574f5000 	strbpl	r5, [pc, -r0]
     130:	535f5245 	cmppl	pc, #1342177284	; 0x50000004
     134:	4c505055 	mrrcmi	0, 5, r5, r0, cr5
     138:	52505f59 	subspl	r5, r0, #356	; 0x164
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:560
	return s - buf;
     13c:	435f504f 	cmpmi	pc, #79	; 0x4f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:561
}
     140:	54534e4f 	ldrbpl	r4, [r3], #-3663	; 0xfffff1b1
     144:	5f544e41 	svcpl	0x00544e41
show_tc_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:526
static int tc_mode = 1;
static int boost_mode = 1;
static int power = 1;
static ssize_t show_tc_mode(struct device *dev,
			    struct device_attribute *attr, char *buf)
{
     148:	52414843 	subpl	r4, r1, #4390912	; 0x430000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:530
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "0: close 1: sink 2: source 3: drp");
     14c:	565f4547 	ldrbpl	r4, [pc], -r7, asr #10
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:526
static int tc_mode = 1;
static int boost_mode = 1;
static int power = 1;
static ssize_t show_tc_mode(struct device *dev,
			    struct device_attribute *attr, char *buf)
{
     150:	41544c4f 	cmpmi	r4, pc, asr #24
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:530
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);

	s += scnprintf(s, end - s, "%s\n", "0: close 1: sink 2: source 3: drp");
     154:	70004547 	andvc	r4, r0, r7, asr #10
     158:	61766972 	cmnvs	r6, r2, ror r9
     15c:	6c006574 	cfstr32vs	mvfx6, [r0], {116}	; 0x74
     160:	656d776f 	strbvs	r7, [sp, #-1903]!	; 0xfffff891
     164:	65725f6d 	ldrbvs	r5, [r2, #-3949]!	; 0xfffff093
     168:	76726573 			; <UNDEFINED> instruction: 0x76726573
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:531
	s += scnprintf(s, end - s, "tc_mode=%d\n", tc_mode);
     16c:	74730065 	ldrbtvc	r0, [r3], #-101	; 0xffffff9b
     170:	5f657461 	svcpl	0x00657461
     174:	6f6d6572 	svcvs	0x006d6572
     178:	755f6576 	ldrbvc	r6, [pc, #-1398]	; fffffc0a <axp2585_set_usb_vhold+0xffffe9c6>
     17c:	6e657665 	cdpvs	6, 6, cr7, cr5, cr5, {3}
     180:	65735f74 	ldrbvs	r5, [r3, #-3956]!	; 0xfffff08c
     184:	6700746e 	strvs	r7, [r0, -lr, ror #8]
     188:	755f7465 	ldrbvc	r7, [pc, #-1125]	; fffffd2b <axp2585_set_usb_vhold+0xffffeae7>
     18c:	695f6273 	ldmdbvs	pc, {r0, r1, r4, r5, r6, r9, sp, lr}^	; <UNPREDICTABLE>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:532
	return s - buf;
     190:	646c6f68 	strbtvs	r6, [ip], #-3944	; 0xfffff098
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:533
}
     194:	5f524e00 	svcpl	0x00524e00
     198:	4c4f5349 	mcrrmi	3, 4, r5, pc, cr9
axp2585_get_vbat():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:197
{
	return ((int)(((reg >> 8) << 4) | (reg & 0x000F))) * 1200 / 1000;
}

static int axp2585_get_vbat(struct axp_charger_dev *cdev)
{
     19c:	44455441 	strbmi	r5, [r5], #-1089	; 0xfffffbbf
     1a0:	4c49465f 	mcrrmi	6, 5, r4, r9, cr15
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:200
	u8 tmp[2];
	u32 res;
	struct axp_regmap *map = cdev->chip->regmap;
     1a4:	61700045 	cmnvs	r0, r5, asr #32
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:202

	axp_regmap_reads(map, AXP2585_VBATH_RES, 2, tmp);
     1a8:	5f6d6172 	svcpl	0x006d6172
     1ac:	6b636f6c 	blvs	18dbf64 <axp2585_set_usb_vhold+0x18dad20>
     1b0:	756d7000 	strbvc	r7, [sp, #-0]!
     1b4:	0064695f 	rsbeq	r6, r4, pc, asr r9
     1b8:	5f756d70 	svcpl	0x00756d70
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:203
	res = (tmp[0] << 8) | tmp[1];
     1bc:	74746162 	ldrbtvc	r6, [r4], #-354	; 0xfffffe9e
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:205

	return axp2585_vbat_to_mV(res);
     1c0:	5f797265 	svcpl	0x00797265
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:203
	u8 tmp[2];
	u32 res;
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, AXP2585_VBATH_RES, 2, tmp);
	res = (tmp[0] << 8) | tmp[1];
     1c4:	00706163 	rsbseq	r6, r0, r3, ror #2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:205

	return axp2585_vbat_to_mV(res);
     1c8:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     1cc:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     1d0:	67726174 			; <UNDEFINED> instruction: 0x67726174
     1d4:	6b5f7465 	blvs	17dd370 <axp2585_set_usb_vhold+0x17dc12c>
     1d8:	5241006e 	subpl	r0, r1, #110	; 0x6e
     1dc:	45535f4d 	ldrbmi	r5, [r3, #-3917]	; 0xfffff0b3
     1e0:	58455f43 	stmdapl	r5, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:206
}
     1e4:	72005449 	andvc	r5, r0, #1224736768	; 0x49000000
     1e8:	61656c65 	cmnvs	r5, r5, ror #24
     1ec:	70006573 	andvc	r6, r0, r3, ror r5
axp2585_get_disibat():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:231

	return axp2585_icharge_to_mA(res);
}

static int axp2585_get_disibat(struct axp_charger_dev *cdev)
{
     1f0:	74636e69 	strbtvc	r6, [r3], #-3689	; 0xfffff197
     1f4:	735f6c72 	cmpvc	pc, #29184	; 0x7200
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:234
	u8 tmp[2];
	u32 dis_res;
	struct axp_regmap *map = cdev->chip->regmap;
     1f8:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:236

	axp_regmap_reads(map, AXP2585_DISIBATH_REG, 2, tmp);
     1fc:	62697300 	rsbvs	r7, r9, #0, 6
     200:	676e696c 	strbvs	r6, [lr, -ip, ror #18]!
     204:	79616c00 	stmdbvc	r1!, {sl, fp, sp, lr}^
     208:	6d007265 	sfmvs	f7, 4, [r0, #-404]	; 0xfffffe6c
     20c:	6b5f646f 	blvs	17d93d0 <axp2585_set_usb_vhold+0x17d818c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:237
	dis_res = (tmp[0] << 8) | tmp[1];
     210:	736c6c61 	cmnvc	ip, #24832	; 0x6100
     214:	00736d79 	rsbseq	r6, r3, r9, ror sp
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:239

	return axp2585_ibat_to_mA(dis_res);
     218:	66737973 			; <UNDEFINED> instruction: 0x66737973
     21c:	72635f73 	rsbvc	r5, r3, #460	; 0x1cc
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:240
}
     220:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
     224:	6f72675f 	svcvs	0x0072675f
     228:	74007075 	strvc	r7, [r0], #-117	; 0xffffff8b
axp2585_power_show():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:585
	return count;
}

static ssize_t axp2585_power_show(struct device *dev,
			    struct device_attribute *attr, char *buf)
{
     22c:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
     230:	7078655f 	rsbsvc	r6, r8, pc, asr r5
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
     234:	73657269 	cmnvc	r5, #-1879048186	; 0x90000006
axp2585_power_show():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:590
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	char *s = buf;
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);
	int vbat, ibat;
	vbat = axp2585_get_vbat(chg_dev);
     238:	71657200 	cmnvc	r5, r0, lsl #4
     23c:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
     240:	6e65705f 	mcrvs	0, 3, r7, cr5, cr15, {2}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:591
	ibat = axp2585_get_disibat(chg_dev);
     244:	676e6964 	strbvs	r6, [lr, -r4, ror #18]!
     248:	74616200 	strbtvc	r6, [r1], #-512	; 0xfffffe00
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:593
	power = vbat*ibat/1000;
	s += scnprintf(s, end - s, "%dmV\n", power);
     24c:	7369645f 	cmnvc	r9, #1593835520	; 0x5f000000
     250:	00727563 	rsbseq	r7, r2, r3, ror #10
     254:	656b5f5f 	strbvs	r5, [fp, #-3935]!	; 0xfffff0a1
     258:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
     25c:	6469675f 	strbtvs	r6, [r9], #-1887	; 0xfffff8a1
     260:	745f3233 	ldrbvc	r3, [pc], #-563	; 268 <.debug_str+0x268>
     264:	55524c00 	ldrbpl	r4, [r2, #-3072]	; 0xfffff400
     268:	5443415f 	strbpl	r4, [r3], #-351	; 0xfffffea1
     26c:	5f455649 	svcpl	0x00455649
     270:	4e4f4e41 	cdpmi	14, 4, cr4, cr15, cr1, {2}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:595
	return s - buf;
}
     274:	72656b00 	rsbvc	r6, r5, #0, 22
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:593
	char *end = (char *)((ptrdiff_t)buf + (ptrdiff_t)PAGE_SIZE);
	int vbat, ibat;
	vbat = axp2585_get_vbat(chg_dev);
	ibat = axp2585_get_disibat(chg_dev);
	power = vbat*ibat/1000;
	s += scnprintf(s, end - s, "%dmV\n", power);
     278:	5f73666e 	svcpl	0x0073666e
axp2585_get_ibat():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:219
{
	return (int)((((reg >> 8) << 4) | (reg & 0x000F)) << 1);
}

static int axp2585_get_ibat(struct axp_charger_dev *cdev)
{
     27c:	6d656c65 	stclvs	12, cr6, [r5, #-404]!	; 0xfffffe6c
     280:	6d79735f 	ldclvs	3, cr7, [r9, #-380]!	; 0xfffffe84
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:222
	u8 tmp[2];
	u32 res;
	struct axp_regmap *map = cdev->chip->regmap;
     284:	6b6e696c 	blvs	1b9a83c <axp2585_set_usb_vhold+0x1b995f8>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:224

	axp_regmap_reads(map, AXP2585_IBATH_REG, 2, tmp);
     288:	616c6600 	cmnvs	ip, r0, lsl #12
     28c:	725f6873 	subsvc	r6, pc, #7536640	; 0x730000
     290:	6d757365 	ldclvs	3, cr7, [r5, #-404]!	; 0xfffffe6c
     294:	78610065 	stmdavc	r1!, {r0, r2, r5, r6}^
     298:	38353270 	ldmdacc	r5!, {r4, r5, r6, r9, ip, sp}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:225
	res = (tmp[0] << 8) | tmp[1];
     29c:	65675f35 	strbvs	r5, [r7, #-3893]!	; 0xfffff0cb
     2a0:	73755f74 	cmnvc	r5, #116, 30	; 0x1d0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:227

	return axp2585_icharge_to_mA(res);
     2a4:	75635f62 	strbvc	r5, [r3, #-3938]!	; 0xfffff09e
     2a8:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:228
}
     2ac:	70630074 	rsbvc	r0, r3, r4, ror r0
     2b0:	6e6f5f75 	mcrvs	15, 3, r5, cr15, cr5, {3}
     2b4:	656e696c 	strbvs	r6, [lr, #-2412]!	; 0xfffff694
store_boost_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:565
	return s - buf;
}

static ssize_t store_boost_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
     2b8:	73616d5f 	cmnvc	r1, #6080	; 0x17c0
     2bc:	6d75006b 	ldclvs	0, cr0, [r5, #-428]!	; 0xfffffe54
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:568
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;
     2c0:	5f65646f 	svcpl	0x0065646f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:565
	return s - buf;
}

static ssize_t store_boost_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
     2c4:	666f0074 			; <UNDEFINED> instruction: 0x666f0074
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:570
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;

	err = kstrtoint(buf, 16, &val);
     2c8:	6e696c66 	cdpvs	12, 6, cr6, cr9, cr6, {3}
     2cc:	756a0065 	strbvc	r0, [sl, #-101]!	; 0xffffff9b
     2d0:	6c5f706d 	mrrcvs	0, 6, r7, pc, cr13	; <UNPREDICTABLE>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:568
static ssize_t store_boost_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;
     2d4:	6c656261 	sfmvs	f6, 2, [r5], #-388	; 0xfffffe7c
     2d8:	7300745f 	movwvc	r7, #1119	; 0x45f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:570

	err = kstrtoint(buf, 16, &val);
     2dc:	616e5f74 	smcvs	58868	; 0xe5f4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:571
	if (err)
     2e0:	6600656d 	strvs	r6, [r0], -sp, ror #10
     2e4:	646f6e77 	strbtvs	r6, [pc], #-3703	; 2ec <.debug_str+0x2ec>
     2e8:	61685f65 	cmnvs	r8, r5, ror #30
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:573
		return err;
	if (val != 1)
     2ec:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     2f0:	5f6e6900 	svcpl	0x006e6900
     2f4:	726f6873 	rsbvc	r6, pc, #7536640	; 0x730000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
		val = 0;
	boost_mode = val;
     2f8:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:579
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
	else
		axp_regmap_clr_bits(map, 0x12, 0x80);
     2fc:	696c0074 	stmdbvs	ip!, {r2, r4, r5, r6}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
	boost_mode = val;
     300:	6e007473 	mcrvs	4, 0, r7, cr0, cr3, {3}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:579
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
	else
		axp_regmap_clr_bits(map, 0x12, 0x80);
     304:	00656d61 	rsbeq	r6, r5, r1, ror #26
     308:	5f746567 	svcpl	0x00746567
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:574

	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
     30c:	695f6361 	ldmdbvs	pc, {r0, r5, r6, r8, r9, sp, lr}^	; <UNPREDICTABLE>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	boost_mode = val;
     310:	646c6f68 	strbtvs	r6, [ip], #-3944	; 0xfffff098
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:579
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
	else
		axp_regmap_clr_bits(map, 0x12, 0x80);
     314:	54524800 	ldrbpl	r4, [r2], #-2048	; 0xfffff800
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:580
	return count;
     318:	52454d49 	subpl	r4, r5, #4672	; 0x1240
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:581
}
     31c:	58414d5f 	stmdapl	r1, {r0, r1, r2, r3, r4, r6, r8, sl, fp, lr}^
     320:	4f4c435f 	svcmi	0x004c435f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
	boost_mode = val;
     324:	425f4b43 	subsmi	r4, pc, #68608	; 0x10c00
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:577
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
     328:	53455341 	movtpl	r5, #21313	; 0x5341
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
	boost_mode = val;
     32c:	63616900 	cmnvs	r1, #0, 18
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:577
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
     330:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
     334:	74656700 	strbtvc	r6, [r5], #-1792	; 0xfffff900
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:575
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val != 1)
		val = 0;
	boost_mode = val;
     338:	5f63615f 	svcpl	0x0063615f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:577
	if (boost_mode == 1)
		axp_regmap_set_bits(map, 0x12, 0x80);
     33c:	6c6f6876 	stclvs	8, cr6, [pc], #-472	; 16c <.debug_str+0x16c>
     340:	73610064 	cmnvc	r1, #100	; 0x64
store_tc_mode():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:537
	return s - buf;
}

static ssize_t store_tc_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
     344:	5f636e79 	svcpl	0x00636e79
     348:	626f7270 	rsbvs	r7, pc, #112, 4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:540
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;
     34c:	65725f65 	ldrbvs	r5, [r2, #-3941]!	; 0xfffff09b
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:537
	return s - buf;
}

static ssize_t store_tc_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
     350:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:542
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;

	err = kstrtoint(buf, 16, &val);
     354:	00646574 	rsbeq	r6, r4, r4, ror r5
     358:	64627573 	strbtvs	r7, [r2], #-1395	; 0xfffffa8d
     35c:	00737269 	rsbseq	r7, r3, r9, ror #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:540
static ssize_t store_tc_mode(struct device *dev,
		struct device_attribute *attr, const char *buf, size_t count)
{
	int val, err;
	struct axp_charger_dev *chg_dev = dev_get_drvdata(dev);
	struct axp_regmap *map = chg_dev->chip->regmap;
     360:	6b736174 	blvs	1cd8938 <axp2585_set_usb_vhold+0x1cd76f4>
     364:	73696c5f 	cmnvc	r9, #24320	; 0x5f00
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:542

	err = kstrtoint(buf, 16, &val);
     368:	524e0074 	subpl	r0, lr, #116	; 0x74
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:543
	if (err)
     36c:	4952575f 	ldmdbmi	r2, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, lr}^
     370:	41424554 	cmpmi	r2, r4, asr r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:545
		return err;
	if (val > 3)
     374:	545f4b43 	ldrbpl	r4, [pc], #-2883	; 37c <.debug_str+0x37c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:547
		val = 1;
	tc_mode = val;
     378:	00504d45 	subseq	r4, r0, r5, asr #26
     37c:	66666f6c 	strbtvs	r6, [r6], -ip, ror #30
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:548
		axp_regmap_update(map, 0x33, tc_mode, 0x03);
     380:	6500745f 	strvs	r7, [r0, #-1119]	; 0xfffffba1
     384:	6772656e 	ldrbvs	r6, [r2, -lr, ror #10]!
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:545
	struct axp_regmap *map = chg_dev->chip->regmap;

	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val > 3)
     388:	6d655f79 	stclvs	15, cr5, [r5, #-484]!	; 0xfffffe1c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:546
		val = 1;
     38c:	5f797470 	svcpl	0x00797470
     390:	69736564 	ldmdbvs	r3!, {r2, r5, r6, r8, sl, sp, lr}^
     394:	6f006e67 	svcvs	0x00006e67
     398:	66726576 			; <UNDEFINED> instruction: 0x66726576
     39c:	67776f6c 	ldrbvs	r6, [r7, -ip, ror #30]!
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:548
	tc_mode = val;
		axp_regmap_update(map, 0x33, tc_mode, 0x03);
     3a0:	4e006469 	cdpmi	4, 0, cr6, cr0, cr9, {3}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:547
	err = kstrtoint(buf, 16, &val);
	if (err)
		return err;
	if (val > 3)
		val = 1;
	tc_mode = val;
     3a4:	49465f52 	stmdbmi	r6, {r1, r4, r6, r8, r9, sl, fp, ip, lr}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:548
		axp_regmap_update(map, 0x33, tc_mode, 0x03);
     3a8:	445f454c 	ldrbmi	r4, [pc], #-1356	; 3b0 <.debug_str+0x3b0>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:549
	return count;
     3ac:	59545249 	ldmdbpl	r4, {r0, r3, r6, r9, ip, lr}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:550
}
     3b0:	6d726100 	ldfvse	f6, [r2, #-0]
     3b4:	6c65645f 	cfstrdvs	mvd6, [r5], #-380	; 0xfffffe84
axp2585_set_chg_vol():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:264
static int axp2585_set_chg_vol(struct axp_charger_dev *cdev, int vol)
{
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;

	if (vol > 3840 && vol < 4608)
     3b8:	6f5f7961 	svcvs	0x005f7961
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:260
	axp_regmap_update(map, 0x8b, tmp, 0x3F);
	return 0;
}

static int axp2585_set_chg_vol(struct axp_charger_dev *cdev, int vol)
{
     3bc:	50007370 	andpl	r7, r0, r0, ror r3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:264
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;

	if (vol > 3840 && vol < 4608)
     3c0:	5245574f 	subpl	r5, r5, #20709376	; 0x13c0000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:262
}

static int axp2585_set_chg_vol(struct axp_charger_dev *cdev, int vol)
{
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;
     3c4:	5055535f 	subspl	r5, r5, pc, asr r3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:264

	if (vol > 3840 && vol < 4608)
     3c8:	5f594c50 	svcpl	0x00594c50
     3cc:	504f5250 	subpl	r5, pc, r0, asr r2	; <UNPREDICTABLE>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:262
}

static int axp2585_set_chg_vol(struct axp_charger_dev *cdev, int vol)
{
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;
     3d0:	5041435f 	subpl	r4, r1, pc, asr r3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:264

	if (vol > 3840 && vol < 4608)
     3d4:	54494341 	strbpl	r4, [r9], #-833	; 0xfffffcbf
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:265
		tmp = (vol - 3840)/16;
     3d8:	4c415f59 	mcrrmi	15, 5, r5, r1, cr9
     3dc:	5f545245 	svcpl	0x00545245
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:270
	else {
		pr_warn("unsupported voltage: %dmv, use default 4200mv\n", vol);
		tmp = (4200 - 3840)/16;
	}
	axp_regmap_update(map, 0x8c, tmp << 2, 0xfc);
     3e0:	004e494d 	subeq	r4, lr, sp, asr #18
     3e4:	65725f6e 	ldrbvs	r5, [r2, #-3950]!	; 0xfffff092
     3e8:	65640066 	strbvs	r0, [r4, #-102]!	; 0xffffff9a
     3ec:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
     3f0:	7474615f 	ldrbtvc	r6, [r4], #-351	; 0xfffffea1
     3f4:	75626972 	strbvc	r6, [r2, #-2418]!	; 0xfffff68e
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:272
	return 0;
}
     3f8:	64006574 	strvs	r6, [r0], #-1396	; 0xfffffa8c
     3fc:	675f7665 	ldrbvs	r7, [pc, -r5, ror #12]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:267
	struct axp_regmap *map = cdev->chip->regmap;

	if (vol > 3840 && vol < 4608)
		tmp = (vol - 3840)/16;
	else {
		pr_warn("unsupported voltage: %dmv, use default 4200mv\n", vol);
     400:	70756f72 	rsbsvc	r6, r5, r2, ror pc
     404:	78610073 	stmdavc	r1!, {r0, r1, r4, r5, r6}^
     408:	38353270 	ldmdacc	r5!, {r4, r5, r6, r9, ip, sp}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:268
		tmp = (4200 - 3840)/16;
     40c:	65675f35 	strbvs	r5, [r7, #-3893]!	; 0xfffff0cb
     410:	69645f74 	stmdbvs	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
axp2585_set_chg_cur():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:252
	if (cur == 0)
		axp_regmap_clr_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
	else
		axp_regmap_set_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
*/
	tmp = (cur) / 64;
     414:	61626973 	smcvs	9875	; 0x2693
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:243

	return axp2585_ibat_to_mA(dis_res);
}

static int axp2585_set_chg_cur(struct axp_charger_dev *cdev, int cur)
{
     418:	6d700074 	ldclvs	0, cr0, [r0, #-464]!	; 0xfffffe30
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:252
	if (cur == 0)
		axp_regmap_clr_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
	else
		axp_regmap_set_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
*/
	tmp = (cur) / 64;
     41c:	65725f75 	ldrbvs	r5, [r2, #-3957]!	; 0xfffff08b
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:245
}

static int axp2585_set_chg_cur(struct axp_charger_dev *cdev, int cur)
{
	uint8_t tmp = 0;
	struct axp_regmap *map = cdev->chip->regmap;
     420:	00746573 	rsbseq	r6, r4, r3, ror r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:252
	if (cur == 0)
		axp_regmap_clr_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
	else
		axp_regmap_set_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
*/
	tmp = (cur) / 64;
     424:	5f756d70 	svcpl	0x00756d70
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:255
	if (tmp > 0x3f)
		tmp = 0x3f;
	axp_regmap_update(map, 0x8b, tmp, 0x3F);
     428:	5f746162 	svcpl	0x00746162
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:252
	if (cur == 0)
		axp_regmap_clr_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
	else
		axp_regmap_set_bits(map, axp2585_CHARGE_CONTROL1, 0x80);
*/
	tmp = (cur) / 64;
     42c:	74756873 	ldrbtvc	r6, [r5], #-2163	; 0xfffff78d
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:255
	if (tmp > 0x3f)
		tmp = 0x3f;
	axp_regmap_update(map, 0x8b, tmp, 0x3F);
     430:	6e776f64 	cdpvs	15, 7, cr6, cr7, cr4, {3}
     434:	6674685f 			; <UNDEFINED> instruction: 0x6674685f
     438:	69727400 	ldmdbvs	r2!, {sl, ip, sp, lr}^
     43c:	72656767 	rsbvc	r6, r5, #27000832	; 0x19c0000
     440:	73657200 	cmnvc	r5, #0, 4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:257
	return 0;
}
     444:	00656d75 	rsbeq	r6, r5, r5, ror sp
     448:	5f75726c 	svcpl	0x0075726c
axp2585_private_debug():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:612
	.name = "bmu_control",
	.attrs = bmu_control_attrs,
};

static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
     44c:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
     450:	574f5000 	strbpl	r5, [pc, -r0]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:614
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;
     454:	535f5245 	cmppl	pc, #1342177284	; 0x50000004
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:612
	.name = "bmu_control",
	.attrs = bmu_control_attrs,
};

static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
     458:	4c505055 	mrrcmi	0, 5, r5, r0, cr5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:617
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, 0x5a, 2, tmp);
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     45c:	52505f59 	subspl	r5, r0, #356	; 0x164
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:616
static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, 0x5a, 2, tmp);
     460:	545f504f 	ldrbpl	r5, [pc], #-79	; 468 <.debug_str+0x468>
     464:	5f454d49 	svcpl	0x00454d49
     468:	455f4f54 	ldrbmi	r4, [pc, #-3924]	; fffff51c <axp2585_set_usb_vhold+0xffffe2d8>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:614
};

static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;
     46c:	5954504d 	ldmdbpl	r4, {r0, r2, r3, r6, ip, lr}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:617

	axp_regmap_reads(map, 0x5a, 2, tmp);
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     470:	4756415f 			; <UNDEFINED> instruction: 0x4756415f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:616
static void axp2585_private_debug(struct axp_charger_dev *cdev)
{
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, 0x5a, 2, tmp);
     474:	4f4c4200 	svcmi	0x004c4200
     478:	535f4b43 	cmppl	pc, #68608	; 0x10c00
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:617
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     47c:	4954464f 	ldmdbmi	r4, {r0, r1, r2, r3, r6, r9, sl, lr}^
     480:	73005152 	movwvc	r5, #338	; 0x152
     484:	00706f74 	rsbseq	r6, r0, r4, ror pc
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:620
			"acin_vol = %d\n", ((tmp[0] << 4) | (tmp[1] & 0xF))
			* 8);
	axp_regmap_reads(map, 0xbc, 2, tmp);
     488:	74616269 	strbtvc	r6, [r1], #-617	; 0xfffffd97
     48c:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
     490:	72657000 	rsbvc	r7, r5, #0
     494:	7570635f 	ldrbvc	r6, [r0, #-863]!	; 0xfffffca1
     498:	6761705f 			; <UNDEFINED> instruction: 0x6761705f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:621
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     49c:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
     4a0:	65736b00 	ldrbvs	r6, [r3, #-2816]!	; 0xfffff500
     4a4:	65755f74 	ldrbvs	r5, [r5, #-3956]!	; 0xfffff08c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:625
			"ocv_vol = %d\n", ((tmp[0] << 4) | (tmp[1] & 0xF))
			* 1200 / 1000);

}
     4a8:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
     4ac:	73706f5f 	cmnvc	r0, #380	; 0x17c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:617 (discriminator 1)
{
	u8 tmp[2];
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_reads(map, 0x5a, 2, tmp);
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     4b0:	574f5000 	strbpl	r5, [pc, -r0]
     4b4:	535f5245 	cmppl	pc, #1342177284	; 0x50000004
     4b8:	4c505055 	mrrcmi	0, 5, r5, r0, cr5
     4bc:	52505f59 	subspl	r5, r0, #356	; 0x164
     4c0:	545f504f 	ldrbpl	r5, [pc], #-79	; 4c8 <.debug_str+0x4c8>
     4c4:	5f504d45 	svcpl	0x00504d45
     4c8:	49424d41 	stmdbmi	r2, {r0, r6, r8, sl, fp, lr}^
     4cc:	5f544e45 	svcpl	0x00544e45
     4d0:	52454c41 	subpl	r4, r5, #16640	; 0x4100
     4d4:	494d5f54 	stmdbmi	sp, {r2, r4, r6, r8, r9, sl, fp, ip, lr}^
     4d8:	7573004e 	ldrbvc	r0, [r3, #-78]!	; 0xffffffb2
     4dc:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
     4e0:	68630064 	stmdavs	r3!, {r2, r5, r6}^
     4e4:	5f646c69 	svcpl	0x00646c69
     4e8:	745f736e 	ldrbvc	r7, [pc], #-878	; 4f0 <.debug_str+0x4f0>
     4ec:	00657079 	rsbeq	r7, r5, r9, ror r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:621 (discriminator 1)
			"acin_vol = %d\n", ((tmp[0] << 4) | (tmp[1] & 0xF))
			* 8);
	axp_regmap_reads(map, 0xbc, 2, tmp);
	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     4f0:	725f6272 	subsvc	r6, pc, #536870919	; 0x20000007
     4f4:	00746f6f 	rsbseq	r6, r4, pc, ror #30
     4f8:	5f505841 	svcpl	0x00505841
     4fc:	00544e49 	subseq	r4, r4, r9, asr #28
     500:	70657270 	rsbvc	r7, r5, r0, ror r2
     504:	00657261 	rsbeq	r7, r5, r1, ror #4
     508:	68676968 	stmdavs	r7!, {r3, r5, r6, r8, fp, sp, lr}^
     50c:	79736100 	ldmdbvc	r3!, {r8, sp, lr}^
     510:	735f636e 	cmpvc	pc, #-1207959551	; 0xb8000001
     514:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
     518:	7300646e 	movwvc	r6, #1134	; 0x46e
     51c:	635f7465 	cmpvs	pc, #1694498816	; 0x65000000
     520:	765f6768 	ldrbvc	r6, [pc], -r8, ror #14
     524:	70006c6f 	andvc	r6, r0, pc, ror #24
     528:	625f756d 	subsvs	r7, pc, #457179136	; 0x1b400000
     52c:	65747461 	ldrbvs	r7, [r4, #-1121]!	; 0xfffffb9f
     530:	775f7972 			; <UNDEFINED> instruction: 0x775f7972
     534:	696e7261 	stmdbvs	lr!, {r0, r5, r6, r9, ip, sp, lr}^
     538:	6c5f676e 	mrrcvs	7, 6, r6, pc, cr14	; <UNPREDICTABLE>
     53c:	6c657665 	stclvs	6, cr7, [r5], #-404	; 0xfffffe6c
     540:	6d700031 	ldclvs	0, cr0, [r0, #-196]!	; 0xffffff3c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:625 (discriminator 1)
			"ocv_vol = %d\n", ((tmp[0] << 4) | (tmp[1] & 0xF))
			* 1200 / 1000);

}
     544:	61625f75 	smcvs	9717	; 0x25f5
     548:	72657474 	rsbvc	r7, r5, #116, 8	; 0x74000000
axp2585_get_rest_cap():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:142
	.set_usb_ihold   = axp2585_set_usb_ihold,
	.get_usb_ihold   = axp2585_get_usb_ihold,
};

static int axp2585_get_rest_cap(struct axp_charger_dev *cdev)
{
     54c:	61775f79 	cmnvs	r7, r9, ror pc
     550:	6e696e72 	mcrvs	14, 3, r6, cr9, cr2, {3}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:148
	u8 val, temp_val[2], tmp[2];
	u8 ocv_percent = 0;
	u8 coulomb_percent = 0;
	int batt_max_cap, coulumb_counter;
	int rest_vol;
	struct axp_regmap *map = cdev->chip->regmap;
     554:	656c5f67 	strbvs	r5, [ip, #-3943]!	; 0xfffff099
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:142
	.set_usb_ihold   = axp2585_set_usb_ihold,
	.get_usb_ihold   = axp2585_get_usb_ihold,
};

static int axp2585_get_rest_cap(struct axp_charger_dev *cdev)
{
     558:	326c6576 	rsbcc	r6, ip, #494927872	; 0x1d800000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:150
	u8 coulomb_percent = 0;
	int batt_max_cap, coulumb_counter;
	int rest_vol;
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_read(map, AXP2585_CAP, &val);
     55c:	63657200 	cmnvs	r5, #0, 4
     560:	6d69616c 	stfvse	f6, [r9, #-432]!	; 0xfffffe50
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:148
	u8 val, temp_val[2], tmp[2];
	u8 ocv_percent = 0;
	u8 coulomb_percent = 0;
	int batt_max_cap, coulumb_counter;
	int rest_vol;
	struct axp_regmap *map = cdev->chip->regmap;
     564:	6174735f 	cmnvs	r4, pc, asr r3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:150

	axp_regmap_read(map, AXP2585_CAP, &val);
     568:	6f6e0074 	svcvs	0x006e0074
     56c:	695f6564 	ldmdbvs	pc, {r2, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:151
	if (!(val & 0x80))
     570:	44560064 	ldrbmi	r0, [r6], #-100	; 0xffffff9c
     574:	52445f44 	subpl	r5, r4, #68, 30	; 0x110
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:152
		return 0;
     578:	4c504d41 	mrrcmi	13, 4, r4, r0, cr1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:151
	int batt_max_cap, coulumb_counter;
	int rest_vol;
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_read(map, AXP2585_CAP, &val);
	if (!(val & 0x80))
     57c:	49425f4c 	stmdbmi	r2, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:184
						* 1456 / 1000;

	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
			"batt_max_cap = %d\n", batt_max_cap);
	return rest_vol;
}
     580:	72700054 	rsbsvc	r0, r0, #84	; 0x54
     584:	6c6c6165 	stfvse	f6, [ip], #-404	; 0xfffffe6c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:154

	axp_regmap_read(map, AXP2585_CAP, &val);
	if (!(val & 0x80))
		return 0;
	rest_vol = (int) (val & 0x7F);
	axp_regmap_read(map, 0xe4, &tmp[0]);
     588:	7000636f 	andvc	r6, r0, pc, ror #6
     58c:	725f6572 	subsvc	r6, pc, #478150656	; 0x1c800000
     590:	5f747365 	svcpl	0x00747365
     594:	006c6f76 	rsbeq	r6, ip, r6, ror pc
     598:	5f434356 	svcpl	0x00434356
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:155
	if (tmp[0] & 0x80) {
     59c:	5f58414d 	svcpl	0x0058414d
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:153
	struct axp_regmap *map = cdev->chip->regmap;

	axp_regmap_read(map, AXP2585_CAP, &val);
	if (!(val & 0x80))
		return 0;
	rest_vol = (int) (val & 0x7F);
     5a0:	45444e49 	strbmi	r4, [r4, #-3657]	; 0xfffff1b7
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:155
	axp_regmap_read(map, 0xe4, &tmp[0]);
	if (tmp[0] & 0x80) {
     5a4:	656b0058 	strbvs	r0, [fp, #-88]!	; 0xffffffa8
     5a8:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:160
		ocv_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
     5ac:	7261705f 	rsbvc	r7, r1, #95	; 0x5f
     5b0:	6f5f6d61 	svcvs	0x005f6d61
     5b4:	70007370 	andvc	r7, r0, r0, ror r3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:163
	if (tmp[0] & 0x80) {
		coulomb_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     5b8:	695f756d 	ldmdbvs	pc, {r0, r2, r3, r5, r6, r8, sl, ip, sp, lr}^	; <UNPREDICTABLE>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:160
	if (tmp[0] & 0x80) {
		ocv_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
     5bc:	5f74696e 	svcpl	0x0074696e
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:161
	if (tmp[0] & 0x80) {
     5c0:	5f636461 	svcpl	0x00636461
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:163
		coulomb_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     5c4:	71657266 	cmnvc	r5, r6, ror #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:161
		ocv_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
	if (tmp[0] & 0x80) {
     5c8:	44445600 	strbmi	r5, [r4], #-1536	; 0xfffffa00
     5cc:	5550435f 	ldrbpl	r4, [r0, #-863]	; 0xfffffca1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:173
		axp_regmap_clr_bits(map, AXP2585_COULOMB_CTL, 0x80);
		axp_regmap_set_bits(map, AXP2585_COULOMB_CTL, 0x80);
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num, "Reset coulumb\n");
		rest_vol = 100;
	}
	axp_regmap_reads(map, 0xe2, 2, temp_val);
     5d0:	49425f53 	stmdbmi	r2, {r0, r1, r4, r6, r8, r9, sl, fp, ip, lr}^
     5d4:	6d700054 	ldclvs	0, cr0, [r0, #-336]!	; 0xfffffeb0
     5d8:	61625f75 	smcvs	9717	; 0x25f5
     5dc:	74656474 	strbtvc	r6, [r5], #-1140	; 0xfffffb8c
     5e0:	61006e65 	tstvs	r0, r5, ror #28
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:177
	coulumb_counter = (((temp_val[0] & 0x7f) << 8) + temp_val[1])
						* 1456 / 1000;

	axp_regmap_reads(map, 0xe0, 2, temp_val);
     5e4:	35327078 	ldrcc	r7, [r2, #-120]!	; 0xffffff88
     5e8:	635f3538 	cmpvs	pc, #56, 10	; 0xe000000
     5ec:	67726168 	ldrbvs	r6, [r2, -r8, ror #2]!
     5f0:	725f7265 	subsvc	r7, pc, #1342177286	; 0x50000006
     5f4:	766f6d65 	strbtvc	r6, [pc], -r5, ror #26
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:181
	batt_max_cap = (((temp_val[0] & 0x7f) << 8) + temp_val[1])
						* 1456 / 1000;

	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     5f8:	6e650065 	cdpvs	0, 6, cr0, cr5, cr5, {3}
     5fc:	79677265 	stmdbvc	r7!, {r0, r2, r5, r6, r9, ip, sp, lr}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:183
			"batt_max_cap = %d\n", batt_max_cap);
	return rest_vol;
     600:	6c75665f 	ldclvs	6, cr6, [r5], #-380	; 0xfffffe84
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:181

	axp_regmap_reads(map, 0xe0, 2, temp_val);
	batt_max_cap = (((temp_val[0] & 0x7f) << 8) + temp_val[1])
						* 1456 / 1000;

	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     604:	65645f6c 	strbvs	r5, [r4, #-3948]!	; 0xfffff094
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:181 (discriminator 1)
     608:	6e676973 	mcrvs	9, 3, r6, cr7, cr3, {3}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:178 (discriminator 1)
	axp_regmap_reads(map, 0xe2, 2, temp_val);
	coulumb_counter = (((temp_val[0] & 0x7f) << 8) + temp_val[1])
						* 1456 / 1000;

	axp_regmap_reads(map, 0xe0, 2, temp_val);
	batt_max_cap = (((temp_val[0] & 0x7f) << 8) + temp_val[1])
     60c:	574f5000 	strbpl	r5, [pc, -r0]
     610:	535f5245 	cmppl	pc, #1342177284	; 0x50000004
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:181 (discriminator 1)
						* 1456 / 1000;

	AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     614:	4c505055 	mrrcmi	0, 5, r5, r0, cr5
     618:	52505f59 	subspl	r5, r0, #356	; 0x164
     61c:	435f504f 	cmpmi	pc, #79	; 0x4f
     620:	43415041 	movtmi	r5, #4161	; 0x1041
     624:	5f595449 	svcpl	0x00595449
     628:	4556454c 	ldrbmi	r4, [r6, #-1356]	; 0xfffffab4
     62c:	6d72004c 	ldclvs	0, cr0, [r2, #-304]!	; 0xfffffed0
     630:	00726964 	rsbseq	r6, r2, r4, ror #18
     634:	745f6369 	ldrbvc	r6, [pc], #-873	; 63c <.debug_str+0x63c>
     638:	00706d65 	rsbseq	r6, r0, r5, ror #26
     63c:	6d676573 	cfstr64vs	mvdx6, [r7, #-460]!	; 0xfffffe34
     640:	5f746e65 	svcpl	0x00746e65
     644:	6e756f62 	cdpvs	15, 7, cr6, cr5, cr2, {3}
     648:	79726164 	ldmdbvc	r2!, {r2, r5, r6, r8, sp, lr}^
     64c:	73616d5f 	cmnvc	r1, #6080	; 0x17c0
     650:	6361006b 	cmnvs	r1, #107	; 0x6b
     654:	7465645f 	strbtvc	r6, [r5], #-1119	; 0xfffffba1
     658:	574f5000 	strbpl	r5, [pc, -r0]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:183 (discriminator 1)
			"batt_max_cap = %d\n", batt_max_cap);
	return rest_vol;
     65c:	535f5245 	cmppl	pc, #1342177284	; 0x50000004
     660:	4c505055 	mrrcmi	0, 5, r5, r0, cr5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:157
		return 0;
	rest_vol = (int) (val & 0x7F);
	axp_regmap_read(map, 0xe4, &tmp[0]);
	if (tmp[0] & 0x80) {
		ocv_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     664:	52505f59 	subspl	r5, r0, #356	; 0x164
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:156
	if (!(val & 0x80))
		return 0;
	rest_vol = (int) (val & 0x7F);
	axp_regmap_read(map, 0xe4, &tmp[0]);
	if (tmp[0] & 0x80) {
		ocv_percent = tmp[0] & 0x7f;
     668:	565f504f 	ldrbpl	r5, [pc], -pc, asr #32
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:157
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     66c:	41544c4f 	cmpmi	r4, pc, asr #24
     670:	425f4547 	subsmi	r4, pc, #297795584	; 0x11c00000
     674:	00544f4f 	subseq	r4, r4, pc, asr #30
     678:	77616874 			; <UNDEFINED> instruction: 0x77616874
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:160
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
     67c:	424f4b00 	submi	r4, pc, #0, 22
     680:	534e5f4a 	movtpl	r5, #61258	; 0xef4a
     684:	5059545f 	subspl	r5, r9, pc, asr r4
     688:	77005345 	strvc	r5, [r0, -r5, asr #6]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:161
	if (tmp[0] & 0x80) {
     68c:	5f746961 	svcpl	0x00746961
     690:	6b636f6c 	blvs	18dc448 <axp2585_set_usb_vhold+0x18db204>
     694:	6c6f7600 	stclvs	6, cr7, [pc], #-0	; 69c <.debug_str+0x69c>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:166
		coulomb_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
			"coulomb_percent = %d\n", coulomb_percent);
	}
	if (ocv_percent == 100 && cdev->charging == 0 && rest_vol == 99
     698:	65676174 	strbvs	r6, [r7, #-372]!	; 0xfffffe8c
     69c:	6e696d5f 	mcrvs	13, 3, r6, cr9, cr15, {2}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:166 (discriminator 1)
     6a0:	7365645f 	cmnvc	r5, #1593835520	; 0x5f000000
     6a4:	006e6769 	rsbeq	r6, lr, r9, ror #14
     6a8:	65657266 	strbvs	r7, [r5, #-614]!	; 0xfffffd9a
     6ac:	6c5f657a 	cfldr64vs	mvdx6, [pc], {122}	; 0x7a
     6b0:	00657461 	rsbeq	r7, r5, r1, ror #8
     6b4:	505f524e 	subspl	r5, pc, lr, asr #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:167
		&& (cdev->ac_valid == 1 || cdev->usb_valid == 1)) {
     6b8:	53454741 	movtpl	r4, #22337	; 0x5741
     6bc:	4143535f 	cmpmi	r3, pc, asr r3
     6c0:	44454e4e 	strbmi	r4, [r5], #-3662	; 0xfffff1b2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:167 (discriminator 1)
     6c4:	73656400 	cmnvc	r5, #0, 8
     6c8:	62720063 	rsbsvs	r0, r2, #99	; 0x63
     6cc:	646f6e5f 	strbtvs	r6, [pc], #-3679	; 6d4 <.debug_str+0x6d4>
     6d0:	75730065 	ldrbvc	r0, [r3, #-101]!	; 0xffffff9b
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:168
		axp_regmap_clr_bits(map, AXP2585_COULOMB_CTL, 0x80);
     6d4:	73797362 	cmnvc	r9, #-2013265919	; 0x88000001
     6d8:	7461645f 	strbtvc	r6, [r1], #-1119	; 0xfffffba1
     6dc:	4d570061 	ldclmi	0, cr0, [r7, #-388]	; 0xfffffe7c
     6e0:	5f4b5241 	svcpl	0x004b5241
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:169
		axp_regmap_set_bits(map, AXP2585_COULOMB_CTL, 0x80);
     6e4:	004e494d 	subeq	r4, lr, sp, asr #18
     6e8:	61736964 	cmnvs	r3, r4, ror #18
     6ec:	5f656c62 	svcpl	0x00656c62
     6f0:	74706564 	ldrbtvc	r6, [r0], #-1380	; 0xfffffa9c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:170
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num, "Reset coulumb\n");
     6f4:	6f6d0068 	svcvs	0x006d0068
     6f8:	656c7564 	strbvs	r7, [ip, #-1380]!	; 0xfffffa9c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:171
		rest_vol = 100;
     6fc:	626f6b5f 	rsbvs	r6, pc, #97280	; 0x17c00
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:170
	}
	if (ocv_percent == 100 && cdev->charging == 0 && rest_vol == 99
		&& (cdev->ac_valid == 1 || cdev->usb_valid == 1)) {
		axp_regmap_clr_bits(map, AXP2585_COULOMB_CTL, 0x80);
		axp_regmap_set_bits(map, AXP2585_COULOMB_CTL, 0x80);
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num, "Reset coulumb\n");
     700:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:170 (discriminator 1)
     704:	6f736b00 	svcvs	0x00736b00
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:171 (discriminator 1)
		rest_vol = 100;
     708:	72697466 	rsbvc	r7, r9, #1711276032	; 0x66000000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:170 (discriminator 1)
	}
	if (ocv_percent == 100 && cdev->charging == 0 && rest_vol == 99
		&& (cdev->ac_valid == 1 || cdev->usb_valid == 1)) {
		axp_regmap_clr_bits(map, AXP2585_COULOMB_CTL, 0x80);
		axp_regmap_set_bits(map, AXP2585_COULOMB_CTL, 0x80);
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num, "Reset coulumb\n");
     70c:	72006471 	andvc	r6, r0, #1895825408	; 0x71000000
     710:	69746e75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     714:	725f656d 	subsvc	r6, pc, #457179136	; 0x1b400000
     718:	6d757365 	ldclvs	3, cr7, [r5, #-404]!	; 0xfffffe6c
     71c:	6f700065 	svcvs	0x00700065
     720:	6f726577 	svcvs	0x00726577
     724:	6e5f6666 	cdpvs	6, 5, cr6, cr15, cr6, {3}
     728:	7172696f 	cmnvc	r2, pc, ror #18
     72c:	6e617000 	cdpvs	0, 6, cr7, cr1, cr0, {0}
     730:	745f6369 	ldrbvc	r6, [pc], #-873	; 738 <.debug_str+0x738>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:163
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
	if (tmp[0] & 0x80) {
		coulomb_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     734:	6f656d69 	svcvs	0x00656d69
     738:	75007475 	strvc	r7, [r0, #-1141]	; 0xfffffb8b
     73c:	6e657665 	cdpvs	6, 6, cr7, cr5, cr5, {3}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:162
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
	if (tmp[0] & 0x80) {
		coulomb_percent = tmp[0] & 0x7f;
     740:	75735f74 	ldrbvc	r5, [r3, #-3956]!	; 0xfffff08c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:163 (discriminator 1)
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     744:	65727070 	ldrbvs	r7, [r2, #-112]!	; 0xffffff90
     748:	62007373 	andvs	r7, r0, #-872415231	; 0xcc000001
     74c:	68676972 	stmdavs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
     750:	73656e74 	cmnvc	r5, #116, 28	; 0x740
     754:	65735f73 	ldrbvs	r5, [r3, #-3955]!	; 0xfffff08d
     758:	79735f74 	ldmdbvc	r3!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     75c:	7400636e 	strvc	r6, [r0], #-878	; 0xfffffc92
     760:	746e6961 	strbtvc	r6, [lr], #-2401	; 0xfffff69f
     764:	726c0073 	rsbvc	r0, ip, #115	; 0x73
     768:	63657675 	cmnvs	r5, #122683392	; 0x7500000
     76c:	76656400 	strbtvc	r6, [r5], -r0, lsl #8
     770:	6372615f 	cmnvs	r2, #-1073741801	; 0xc0000017
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:157 (discriminator 1)
		return 0;
	rest_vol = (int) (val & 0x7F);
	axp_regmap_read(map, 0xe4, &tmp[0]);
	if (tmp[0] & 0x80) {
		ocv_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     774:	74616468 	strbtvc	r6, [r1], #-1128	; 0xfffffb98
     778:	6f620061 	svcvs	0x00620061
     77c:	69006c6f 	stmdbvs	r0, {r0, r1, r2, r3, r5, r6, sl, fp, sp, lr}
     780:	756d6d6f 	strbvc	r6, [sp, #-3439]!	; 0xfffff291
     784:	70786100 	rsbsvc	r6, r8, r0, lsl #2
     788:	35383532 	ldrcc	r3, [r8, #-1330]!	; 0xffffface
     78c:	6168635f 	cmnvs	r8, pc, asr r3
     790:	72656772 	rsbvc	r6, r5, #29884416	; 0x1c80000
     794:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
     798:	78610074 	stmdavc	r1!, {r2, r4, r5, r6}^
     79c:	6e695f70 	mcrvs	15, 3, r5, cr9, cr0, {3}
     7a0:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:163
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
	if (tmp[0] & 0x80) {
		coulomb_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     7a4:	73747075 	cmnvc	r4, #117	; 0x75
     7a8:	6d697400 	cfstrdvs	mvd7, [r9, #-0]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:162
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
	if (tmp[0] & 0x80) {
		coulomb_percent = tmp[0] & 0x7f;
     7ac:	6c5f7265 	lfmvs	f7, 2, [pc], {101}	; 0x65
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:144
};

static int axp2585_get_rest_cap(struct axp_charger_dev *cdev)
{
	u8 val, temp_val[2], tmp[2];
	u8 ocv_percent = 0;
     7b0:	00747369 	rsbseq	r7, r4, r9, ror #6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:163
			"ocv_percent = %d\n", ocv_percent);
	}
	axp_regmap_read(map, 0xe5, &tmp[0]);
	if (tmp[0] & 0x80) {
		coulomb_percent = tmp[0] & 0x7f;
		AXP_DEBUG(AXP_SPLY, cdev->chip->pmu_num,
     7b4:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
     7b8:	6f697470 	svcvs	0x00697470
axp2585_get_usb_ihold():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:120
	}
	return 0;
}

static int axp2585_get_usb_ihold(struct axp_charger_dev *cdev)
{
     7bc:	61745f6e 	cmnvs	r4, lr, ror #30
     7c0:	5f656c62 	svcpl	0x00656c62
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:122
	u8 tmp;
	struct axp_regmap *map = cdev->chip->regmap;
     7c4:	72746e65 	rsbsvc	r6, r4, #1616	; 0x650
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:124

	axp_regmap_read(map, 0x10, &tmp);
     7c8:	6e690079 	mcrvs	0, 3, r0, cr9, cr9, {3}
     7cc:	735f7469 	cmpvc	pc, #1761607680	; 0x69000000
     7d0:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     7d4:	574f5000 	strbpl	r5, [pc, -r0]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:125
	return (tmp*50 + 100);
     7d8:	535f5245 	cmppl	pc, #1342177284	; 0x50000004
     7dc:	4c505055 	mrrcmi	0, 5, r5, r0, cr5
     7e0:	52505f59 	subspl	r5, r0, #356	; 0x164
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:126
}
     7e4:	435f504f 	cmpmi	pc, #79	; 0x4f
     7e8:	45525255 	ldrbmi	r5, [r2, #-597]	; 0xfffffdab
     7ec:	4d5f544e 	cfldrdmi	mvd5, [pc, #-312]	; 6bc <.debug_str+0x6bc>
axp2585_get_usb_vhold():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:91
	}
	return 0;
}

static int axp2585_get_usb_vhold(struct axp_charger_dev *cdev)
{
     7f0:	6f005841 	svcvs	0x00005841
     7f4:	635f7663 	cmpvs	pc, #103809024	; 0x6300000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:93
	u8 tmp;
	struct axp_regmap *map = cdev->chip->regmap;
     7f8:	615f756f 	cmpvs	pc, pc, ror #10
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:95

	axp_regmap_read(map, 0x11, &tmp);
     7fc:	73756a64 	cmnvc	r5, #100, 20	; 0x64000
     800:	69745f74 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     804:	7400656d 	strvc	r6, [r0], #-1389	; 0xfffffa93
     808:	5f706d65 	svcpl	0x00706d65
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:96
	return (tmp*80 + 3880);
     80c:	006c6176 	rsbeq	r6, ip, r6, ror r1
     810:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
     814:	7865745f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:97
}
     818:	69735f74 	ldmdbvs	r3!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     81c:	4e00657a 	cfrshl64mi	mvdx0, mvdx10, r6
     820:	4c4e4f5f 	mcrrmi	15, 5, r4, lr, cr15
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:628
			* 1200 / 1000);

}

static int axp2585_charger_probe(struct platform_device *pdev)
{
     824:	00454e49 	subeq	r4, r5, r9, asr #28
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:629
    printk("[axp2585]Entering %s\n",__func__);
     828:	434f4c42 	movtmi	r4, #64578	; 0xfc42
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:628
			* 1200 / 1000);

}

static int axp2585_charger_probe(struct platform_device *pdev)
{
     82c:	4f495f4b 	svcmi	0x00495f4b
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:629
    printk("[axp2585]Entering %s\n",__func__);
     830:	4c4c4f50 	mcrrmi	15, 5, r4, ip, cr0
     834:	464f535f 			; <UNDEFINED> instruction: 0x464f535f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:628
			* 1200 / 1000);

}

static int axp2585_charger_probe(struct platform_device *pdev)
{
     838:	51524954 	cmppl	r2, r4, asr r9
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:629
    printk("[axp2585]Entering %s\n",__func__);
     83c:	44445600 	strbmi	r5, [r4], #-1536	; 0xfffffa00
     840:	5550565f 	ldrbpl	r5, [r0, #-1631]	; 0xfffff9a1
     844:	5449425f 	strbpl	r4, [r9], #-607	; 0xfffffda1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:634
	int ret, i, irq;
	struct axp_charger_dev *chg_dev;
	struct axp_dev *axp_dev = dev_get_drvdata(pdev->dev.parent);

	if (pdev->dev.of_node) {
     848:	7a697300 	bvc	1a5d450 <axp2585_set_usb_vhold+0x1a5c20c>
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
     84c:	656c0065 	strbvs	r0, [ip, #-101]!	; 0xffffff9b
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:634
     850:	64635f64 	strbtvs	r5, [r3], #-3940	; 0xfffff09c
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
     854:	00737665 	rsbseq	r7, r3, r5, ror #12
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:634
     858:	45574f50 	ldrbmi	r4, [r7, #-3920]	; 0xfffff0b0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:636
		/* get dt and sysconfig */
		ret = axp_charger_dt_parse(pdev->dev.of_node, &axp2585_config);
     85c:	55535f52 	ldrbpl	r5, [r3, #-3922]	; 0xfffff0ae
     860:	594c5050 	stmdbpl	ip, {r4, r6, ip, lr}^
     864:	4345545f 	movtmi	r5, #21599	; 0x545f
     868:	4c4f4e48 	mcrrmi	14, 4, r4, pc, cr8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:637
		if (ret) {
     86c:	5f59474f 	svcpl	0x0059474f
     870:	6443694e 	strbvs	r6, [r3], #-2382	; 0xfffff6b2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:657
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
	battery_data.voltage_max_design = axp2585_config.pmu_init_chgvol
								* 1000;
	battery_data.voltage_min_design = axp2585_config.pmu_pwroff_vol
     874:	5f747300 	svcpl	0x00747300
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:646
	} else {
		pr_err("axp2585 charger device tree err!\n");
		return -EBUSY;
	}

	axp2585_ac_info.ac_vol = axp2585_config.pmu_ac_vol;
     878:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:655
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
	battery_data.voltage_max_design = axp2585_config.pmu_init_chgvol
     87c:	646f6d00 	strbtvs	r6, [pc], #-3328	; 884 <.debug_str+0x884>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:646
	} else {
		pr_err("axp2585 charger device tree err!\n");
		return -EBUSY;
	}

	axp2585_ac_info.ac_vol = axp2585_config.pmu_ac_vol;
     880:	5f656c75 	svcpl	0x00656c75
axp2585_charger_init():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:316
};

static int axp2585_charger_init(struct axp_dev *axp_dev)
{
	u8 ocv_cap[32];
	u8 val = 0;
     884:	61726170 	cmnvs	r2, r0, ror r1
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:655
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
	battery_data.voltage_max_design = axp2585_config.pmu_init_chgvol
     888:	74615f6d 	strbtvc	r5, [r1], #-3949	; 0xfffff093
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:648
		return -EBUSY;
	}

	axp2585_ac_info.ac_vol = axp2585_config.pmu_ac_vol;
	axp2585_ac_info.ac_cur = axp2585_config.pmu_ac_cur;
	axp2585_usb_info.usb_pc_vol = axp2585_config.pmu_usbpc_vol;
     88c:	00737274 	rsbseq	r7, r3, r4, ror r2
axp2585_charger_init():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:319
{
	u8 ocv_cap[32];
	u8 val = 0;
	int cur_coulomb_counter, rdc;
	struct axp_regmap *map = axp_dev->regmap;
	int i, ocv_cou_adjust_time[4] = {60, 120, 15, 30};
     890:	6d5f6d70 	ldclvs	13, cr6, [pc, #-448]	; 6d8 <.debug_str+0x6d8>
     894:	61737365 	cmnvs	r3, r5, ror #6
     898:	745f6567 	ldrbvc	r6, [pc], #-1383	; 8a0 <.debug_str+0x8a0>
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:655
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
	battery_data.voltage_max_design = axp2585_config.pmu_init_chgvol
     89c:	76656400 	strbtvc	r6, [r5], -r0, lsl #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:648
		return -EBUSY;
	}

	axp2585_ac_info.ac_vol = axp2585_config.pmu_ac_vol;
	axp2585_ac_info.ac_cur = axp2585_config.pmu_ac_cur;
	axp2585_usb_info.usb_pc_vol = axp2585_config.pmu_usbpc_vol;
     8a0:	72700074 	rsbsvc	r0, r0, #116	; 0x74
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:657
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
	battery_data.voltage_max_design = axp2585_config.pmu_init_chgvol
								* 1000;
	battery_data.voltage_min_design = axp2585_config.pmu_pwroff_vol
     8a4:	78696665 	stmdavc	r9!, {r0, r2, r5, r6, r9, sl, sp, lr}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:653
	axp2585_usb_info.usb_pc_vol = axp2585_config.pmu_usbpc_vol;
	axp2585_usb_info.usb_pc_cur = axp2585_config.pmu_usbpc_cur;
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
     8a8:	6d6f6300 	stclvs	3, cr6, [pc, #-0]	; 8b0 <.debug_str+0x8b0>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:649
	}

	axp2585_ac_info.ac_vol = axp2585_config.pmu_ac_vol;
	axp2585_ac_info.ac_cur = axp2585_config.pmu_ac_cur;
	axp2585_usb_info.usb_pc_vol = axp2585_config.pmu_usbpc_vol;
	axp2585_usb_info.usb_pc_cur = axp2585_config.pmu_usbpc_cur;
     8ac:	74636170 	strbtvc	r6, [r3], #-368	; 0xfffffe90
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:655
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
	battery_data.voltage_max_design = axp2585_config.pmu_init_chgvol
     8b0:	6f6c625f 	svcvs	0x006c625f
axp2585_charger_init():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:320
	u8 ocv_cap[32];
	u8 val = 0;
	int cur_coulomb_counter, rdc;
	struct axp_regmap *map = axp_dev->regmap;
	int i, ocv_cou_adjust_time[4] = {60, 120, 15, 30};
	int update_min_times[8] = {30, 60, 120, 164, 0, 5, 10, 20};
     8b4:	6b736b63 	blvs	1cdb648 <axp2585_set_usb_vhold+0x1cda404>
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:653
	axp2585_usb_info.usb_pc_vol = axp2585_config.pmu_usbpc_vol;
	axp2585_usb_info.usb_pc_cur = axp2585_config.pmu_usbpc_cur;
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
     8b8:	665f7069 	ldrbvs	r7, [pc], -r9, rrx
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:649
	}

	axp2585_ac_info.ac_vol = axp2585_config.pmu_ac_vol;
	axp2585_ac_info.ac_cur = axp2585_config.pmu_ac_cur;
	axp2585_usb_info.usb_pc_vol = axp2585_config.pmu_usbpc_vol;
	axp2585_usb_info.usb_pc_cur = axp2585_config.pmu_usbpc_cur;
     8bc:	6873756c 	ldmdavs	r3!, {r2, r3, r5, r6, r8, sl, ip, sp, lr}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:654
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
     8c0:	6e696800 	cdpvs	8, 6, cr6, cr9, cr0, {0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:652
	axp2585_ac_info.ac_cur = axp2585_config.pmu_ac_cur;
	axp2585_usb_info.usb_pc_vol = axp2585_config.pmu_usbpc_vol;
	axp2585_usb_info.usb_pc_cur = axp2585_config.pmu_usbpc_cur;
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
     8c4:	6f7a0074 	svcvs	0x007a0074
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:657
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
	battery_data.voltage_max_design = axp2585_config.pmu_init_chgvol
								* 1000;
	battery_data.voltage_min_design = axp2585_config.pmu_pwroff_vol
     8c8:	725f656e 	subsvc	r6, pc, #461373440	; 0x1b800000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:654
	axp2585_usb_info.usb_pc_cur = axp2585_config.pmu_usbpc_cur;
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
	axp2585_batt_info.suspend_chgcur = axp2585_config.pmu_suspend_chgcur;
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
     8cc:	616c6365 	cmnvs	ip, r5, ror #6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:652
	axp2585_ac_info.ac_cur = axp2585_config.pmu_ac_cur;
	axp2585_usb_info.usb_pc_vol = axp2585_config.pmu_usbpc_vol;
	axp2585_usb_info.usb_pc_cur = axp2585_config.pmu_usbpc_cur;
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
	axp2585_batt_info.runtime_chgcur = axp2585_config.pmu_runtime_chgcur;
     8d0:	735f6d69 	cmpvc	pc, #6720	; 0x1a40
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:647
		pr_err("axp2585 charger device tree err!\n");
		return -EBUSY;
	}

	axp2585_ac_info.ac_vol = axp2585_config.pmu_ac_vol;
	axp2585_ac_info.ac_cur = axp2585_config.pmu_ac_cur;
     8d4:	00746174 	rsbseq	r6, r4, r4, ror r1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:646
	} else {
		pr_err("axp2585 charger device tree err!\n");
		return -EBUSY;
	}

	axp2585_ac_info.ac_vol = axp2585_config.pmu_ac_vol;
     8d8:	665f6469 	ldrbvs	r6, [pc], -r9, ror #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:659
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
	battery_data.voltage_max_design = axp2585_config.pmu_init_chgvol
								* 1000;
	battery_data.voltage_min_design = axp2585_config.pmu_pwroff_vol
								* 1000;
	battery_data.energy_full_design = axp2585_config.pmu_battery_cap;
     8dc:	5f656572 	svcpl	0x00656572
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:647
		pr_err("axp2585 charger device tree err!\n");
		return -EBUSY;
	}

	axp2585_ac_info.ac_vol = axp2585_config.pmu_ac_vol;
	axp2585_ac_info.ac_cur = axp2585_config.pmu_ac_cur;
     8e0:	00746e63 	rsbseq	r6, r4, r3, ror #28
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:651
	axp2585_usb_info.usb_pc_vol = axp2585_config.pmu_usbpc_vol;
	axp2585_usb_info.usb_pc_cur = axp2585_config.pmu_usbpc_cur;
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
	axp2585_usb_info.usb_ad_cur = axp2585_config.pmu_ac_cur;
     8e4:	72656874 	rsbvc	r6, r5, #116, 16	; 0x740000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:659
	axp2585_batt_info.shutdown_chgcur = axp2585_config.pmu_shutdown_chgcur;
	battery_data.voltage_max_design = axp2585_config.pmu_init_chgvol
								* 1000;
	battery_data.voltage_min_design = axp2585_config.pmu_pwroff_vol
								* 1000;
	battery_data.energy_full_design = axp2585_config.pmu_battery_cap;
     8e8:	5f6c616d 	svcpl	0x006c616d
axp2585_charger_init():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:320
	u8 ocv_cap[32];
	u8 val = 0;
	int cur_coulomb_counter, rdc;
	struct axp_regmap *map = axp_dev->regmap;
	int i, ocv_cou_adjust_time[4] = {60, 120, 15, 30};
	int update_min_times[8] = {30, 60, 120, 164, 0, 5, 10, 20};
     8ec:	656e6f7a 	strbvs	r6, [lr, #-3962]!	; 0xfffff086
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:646
	} else {
		pr_err("axp2585 charger device tree err!\n");
		return -EBUSY;
	}

	axp2585_ac_info.ac_vol = axp2585_config.pmu_ac_vol;
     8f0:	7665645f 			; <UNDEFINED> instruction: 0x7665645f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:650
	axp2585_ac_info.ac_cur = axp2585_config.pmu_ac_cur;
	axp2585_usb_info.usb_pc_vol = axp2585_config.pmu_usbpc_vol;
	axp2585_usb_info.usb_pc_cur = axp2585_config.pmu_usbpc_cur;
	axp2585_usb_info.usb_ad_vol = axp2585_config.pmu_ac_vol;
     8f4:	00656369 	rsbeq	r6, r5, r9, ror #6
axp2585_charger_init():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:319
{
	u8 ocv_cap[32];
	u8 val = 0;
	int cur_coulomb_counter, rdc;
	struct axp_regmap *map = axp_dev->regmap;
	int i, ocv_cou_adjust_time[4] = {60, 120, 15, 30};
     8f8:	45574f50 	ldrbmi	r4, [r7, #-3920]	; 0xfffff0b0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:318
static int axp2585_charger_init(struct axp_dev *axp_dev)
{
	u8 ocv_cap[32];
	u8 val = 0;
	int cur_coulomb_counter, rdc;
	struct axp_regmap *map = axp_dev->regmap;
     8fc:	55535f52 	ldrbpl	r5, [r3, #-3922]	; 0xfffff0ae
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:320
	int i, ocv_cou_adjust_time[4] = {60, 120, 15, 30};
	int update_min_times[8] = {30, 60, 120, 164, 0, 5, 10, 20};
     900:	594c5050 	stmdbpl	ip, {r4, r6, ip, lr}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:322
	/*set chg time */
	if (axp2585_config.pmu_init_chg_pretime < 40)
     904:	4f52505f 	svcmi	0x0052505f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:320
	u8 ocv_cap[32];
	u8 val = 0;
	int cur_coulomb_counter, rdc;
	struct axp_regmap *map = axp_dev->regmap;
	int i, ocv_cou_adjust_time[4] = {60, 120, 15, 30};
	int update_min_times[8] = {30, 60, 120, 164, 0, 5, 10, 20};
     908:	49545f50 	ldmdbmi	r4, {r4, r6, r8, r9, sl, fp, ip, lr}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:322
	/*set chg time */
	if (axp2585_config.pmu_init_chg_pretime < 40)
     90c:	545f454d 	ldrbpl	r4, [pc], #-1357	; 914 <.debug_str+0x914>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:320
	u8 ocv_cap[32];
	u8 val = 0;
	int cur_coulomb_counter, rdc;
	struct axp_regmap *map = axp_dev->regmap;
	int i, ocv_cou_adjust_time[4] = {60, 120, 15, 30};
	int update_min_times[8] = {30, 60, 120, 164, 0, 5, 10, 20};
     910:	4d455f4f 	stclmi	15, cr5, [r5, #-316]	; 0xfffffec4
     914:	5f595450 	svcpl	0x00595450
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:322
	/*set chg time */
	if (axp2585_config.pmu_init_chg_pretime < 40)
     918:	00574f4e 	subseq	r4, r7, lr, asr #30
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:323
		axp2585_config.pmu_init_chg_pretime = 40;
     91c:	5f716573 	svcpl	0x00716573
     920:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
     924:	6e776600 	cdpvs	6, 7, cr6, cr7, cr0, {0}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:328
	val = (axp2585_config.pmu_init_chg_pretime - 40)/10;
	if (val >= 3)
		val = 3;
	val = 0x80 + (val<<5);
	axp_regmap_update(map, 0x8e, val, 0xe0);
     928:	0065646f 	rsbeq	r6, r5, pc, ror #8
     92c:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
     930:	0072656c 	rsbseq	r6, r2, ip, ror #10
     934:	55444f4d 	strbpl	r4, [r4, #-3917]	; 0xfffff0b3
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:327
	if (axp2585_config.pmu_init_chg_pretime < 40)
		axp2585_config.pmu_init_chg_pretime = 40;
	val = (axp2585_config.pmu_init_chg_pretime - 40)/10;
	if (val >= 3)
		val = 3;
	val = 0x80 + (val<<5);
     938:	535f454c 	cmppl	pc, #76, 10	; 0x13000000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:328
	axp_regmap_update(map, 0x8e, val, 0xe0);
     93c:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:329
    printk("==%s==line:%d==file:%s==\n",__func__,__LINE__,__FILE__);
     940:	4d4f435f 	stclmi	3, cr4, [pc, #-380]	; 7cc <.debug_str+0x7cc>
     944:	00474e49 	subeq	r4, r7, r9, asr #28
     948:	5f505841 	svcpl	0x00505841
     94c:	55474552 	strbpl	r4, [r7, #-1362]	; 0xfffffaae
     950:	756d7000 	strbvc	r7, [sp, #-0]!
     954:	7375735f 	cmnvc	r5, #2080374785	; 0x7c000001
     958:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:331

	if (axp2585_config.pmu_init_chg_csttime <= 60 * 5)
     95c:	6768635f 			; <UNDEFINED> instruction: 0x6768635f
     960:	00727563 	rsbseq	r7, r2, r3, ror #10
     964:	5f746567 	svcpl	0x00746567
     968:	74616276 	strbtvc	r6, [r1], #-630	; 0xfffffd8a
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:333
		val = 0;
	else if (axp2585_config.pmu_init_chg_csttime <= 60 * 8)
     96c:	70786100 	rsbsvc	r6, r8, r0, lsl #2
     970:	6168635f 	cmnvs	r8, pc, asr r3
     974:	72656772 	rsbvc	r6, r5, #29884416	; 0x1c80000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:335
		val = 1;
	else if (axp2585_config.pmu_init_chg_csttime <= 60 * 12)
     978:	7568735f 	strbvc	r7, [r8, #-863]!	; 0xfffffca1
     97c:	776f6474 			; <UNDEFINED> instruction: 0x776f6474
     980:	6863006e 	stmdavs	r3!, {r1, r2, r3, r5, r6}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:342
	else if (axp2585_config.pmu_init_chg_csttime <= 60 * 20)
		val = 3;
	else
		val = 3;
	val = (val << 1) + 0x01;
	axp_regmap_update(map, 0x8d, val, 0x07);
     984:	61747367 	cmnvs	r4, r7, ror #6
     988:	666f5f74 	uqsub16vs	r5, pc, r4	; <UNPREDICTABLE>
     98c:	74657366 	strbtvc	r7, [r5], #-870	; 0xfffffc9a
     990:	756d7000 	strbvc	r7, [sp, #-0]!
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:341
		val = 2;
	else if (axp2585_config.pmu_init_chg_csttime <= 60 * 20)
		val = 3;
	else
		val = 3;
	val = (val << 1) + 0x01;
     994:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:342
	axp_regmap_update(map, 0x8d, val, 0x07);
     998:	68635f74 	stmdavs	r3!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:345
	/* adc set */
	val = AXP2585_ADC_BATVOL_ENABLE | AXP2585_ADC_BATCUR_ENABLE;
	if (axp2585_config.pmu_bat_temp_enable != 0)
     99c:	72705f67 	rsbsvc	r5, r0, #412	; 0x19c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:344
	else
		val = 3;
	val = (val << 1) + 0x01;
	axp_regmap_update(map, 0x8d, val, 0x07);
	/* adc set */
	val = AXP2585_ADC_BATVOL_ENABLE | AXP2585_ADC_BATCUR_ENABLE;
     9a0:	6d697465 	cfstrdvs	mvd7, [r9, #-404]!	; 0xfffffe6c
     9a4:	69730065 	ldmdbvs	r3!, {r0, r2, r5, r6}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:347
	if (axp2585_config.pmu_bat_temp_enable != 0)
		val = val | AXP2585_ADC_TSVOL_ENABLE;
	axp_regmap_update(map, AXP2585_ADC_CONTROL, val,
     9a8:	745f657a 	ldrbvc	r6, [pc], #-1402	; 9b0 <.debug_str+0x9b0>
     9ac:	70786100 	rsbsvc	r6, r8, r0, lsl #2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:345
		val = 3;
	val = (val << 1) + 0x01;
	axp_regmap_update(map, 0x8d, val, 0x07);
	/* adc set */
	val = AXP2585_ADC_BATVOL_ENABLE | AXP2585_ADC_BATCUR_ENABLE;
	if (axp2585_config.pmu_bat_temp_enable != 0)
     9b0:	35383532 	ldrcc	r3, [r8, #-1330]!	; 0xffffface
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:347
		val = val | AXP2585_ADC_TSVOL_ENABLE;
	axp_regmap_update(map, AXP2585_ADC_CONTROL, val,
     9b4:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:346
	val = (val << 1) + 0x01;
	axp_regmap_update(map, 0x8d, val, 0x07);
	/* adc set */
	val = AXP2585_ADC_BATVOL_ENABLE | AXP2585_ADC_BATCUR_ENABLE;
	if (axp2585_config.pmu_bat_temp_enable != 0)
		val = val | AXP2585_ADC_TSVOL_ENABLE;
     9b8:	7461625f 	strbtvc	r6, [r1], #-607	; 0xfffffda1
     9bc:	6165685f 	cmnvs	r5, pc, asr r8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:347
	axp_regmap_update(map, AXP2585_ADC_CONTROL, val,
     9c0:	0068746c 	rsbeq	r7, r8, ip, ror #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:352
						AXP2585_ADC_BATVOL_ENABLE
						| AXP2585_ADC_BATCUR_ENABLE
						| AXP2585_ADC_TSVOL_ENABLE);

	axp_regmap_read(map, AXP2585_TS_PIN_CONTROL, &val);
     9c4:	6665726b 	strbtvs	r7, [r5], -fp, ror #4
     9c8:	44445600 	strbmi	r5, [r4], #-1536	; 0xfffffa00
     9cc:	5359535f 	cmppl	r9, #2080374785	; 0x7c000001
     9d0:	5449425f 	strbpl	r4, [r9], #-607	; 0xfffffda1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:353
	switch (axp2585_config.pmu_init_adc_freq / 100) {
     9d4:	6d756e00 	ldclvs	14, cr6, [r5, #-0]
     9d8:	6775625f 			; <UNDEFINED> instruction: 0x6775625f
     9dc:	656b0073 	strbvs	r0, [fp, #-115]!	; 0xffffff8d
     9e0:	73666e72 	cmnvc	r6, #1824	; 0x720
     9e4:	7379735f 	cmnvc	r9, #2080374785	; 0x7c000001
     9e8:	6c6c6163 	stfvse	f6, [ip], #-396	; 0xfffffe74
     9ec:	73706f5f 	cmnvc	r0, #380	; 0x17c
     9f0:	4d5f4e00 	ldclmi	14, cr4, [pc, #-0]	; 9f8 <.debug_str+0x9f8>
     9f4:	524f4d45 	subpl	r4, pc, #4416	; 0x1140
     9f8:	75630059 	strbvc	r0, [r3, #-89]!	; 0xffffffa7
     9fc:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
     a00:	616d5f74 	smcvs	54772	; 0xd5f4
     a04:	6f6d5f79 	svcvs	0x006d5f79
     a08:	00746e75 	rsbseq	r6, r4, r5, ror lr
     a0c:	5247494d 	subpl	r4, r7, #1261568	; 0x134000
     a10:	5f455441 	svcpl	0x00455441
     a14:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
     a18:	524e0053 	subpl	r0, lr, #83	; 0x53
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:324
	int i, ocv_cou_adjust_time[4] = {60, 120, 15, 30};
	int update_min_times[8] = {30, 60, 120, 164, 0, 5, 10, 20};
	/*set chg time */
	if (axp2585_config.pmu_init_chg_pretime < 40)
		axp2585_config.pmu_init_chg_pretime = 40;
	val = (axp2585_config.pmu_init_chg_pretime - 40)/10;
     a1c:	414c535f 	cmpmi	ip, pc, asr r3
     a20:	45525f42 	ldrbmi	r5, [r2, #-3906]	; 0xfffff0be
     a24:	49414c43 	stmdbmi	r1, {r0, r1, r6, sl, fp, lr}^
     a28:	4c42414d 	stfmie	f4, [r2], {77}	; 0x4d
     a2c:	76650045 	strbtvc	r0, [r5], -r5, asr #32
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:325
	if (val >= 3)
     a30:	00746e65 	rsbseq	r6, r4, r5, ror #28
     a34:	65766575 	ldrbvs	r6, [r6, #-1397]!	; 0xfffffa8b
     a38:	6f5f746e 	svcvs	0x005f746e
     a3c:	61007370 	tstvs	r0, r0, ror r3
     a40:	35327078 	ldrcc	r7, [r2, #-120]!	; 0xffffff88
     a44:	635f3538 	cmpvs	pc, #56, 10	; 0xe000000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:366
	case 4:
		val &= ~(3 << 5);
		val |= 2 << 5;
		break;
	case 8:
		val |= 3 << 5;
     a48:	67726168 	ldrbvs	r6, [r2, -r8, ror #2]!
     a4c:	735f7265 	cmpvc	pc, #1342177286	; 0x50000006
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:372
		break;
	default:
		break;
	}

	if (axp2585_config.pmu_bat_temp_enable != 0)
     a50:	64747568 	ldrbtvs	r7, [r4], #-1384	; 0xfffffa98
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:374
		val &= (~(1 << 7));
	axp_regmap_write(map, AXP2585_TS_PIN_CONTROL, val);
     a54:	006e776f 	rsbeq	r7, lr, pc, ror #14
     a58:	74697865 	strbtvc	r7, [r9], #-2149	; 0xfffff79b
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:372
		break;
	default:
		break;
	}

	if (axp2585_config.pmu_bat_temp_enable != 0)
     a5c:	6c646900 	stclvs	9, cr6, [r4], #-0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:373
		val &= (~(1 << 7));
     a60:	74735f65 	ldrbtvc	r5, [r3], #-3941	; 0xfffff09b
     a64:	00657461 	rsbeq	r7, r5, r1, ror #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:374
	axp_regmap_write(map, AXP2585_TS_PIN_CONTROL, val);
     a68:	75736572 	ldrbvc	r6, [r3, #-1394]!	; 0xfffffa8e
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:377

	/* bat para */
	axp_regmap_write(map, AXP2585_WARNING_LEVEL,
     a6c:	6e5f656d 	cdpvs	5, 5, cr6, cr15, cr13, {3}
     a70:	7172696f 	cmnvc	r2, pc, ror #18
     a74:	63727300 	cmnvs	r2, #0, 6
     a78:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     a7c:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     a80:	6579616c 	ldrbvs	r6, [r9, #-364]!	; 0xfffffe94
     a84:	64007372 	strvs	r7, [r0], #-882	; 0xfffffc8e
     a88:	735f7665 	cmpvc	pc, #105906176	; 0x6500000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:381
		((axp2585_config.pmu_battery_warning_level1 - 5) << 4)
		+ axp2585_config.pmu_battery_warning_level2);

	if (axp2585_config.pmu_init_chgvol < 3840)
     a8c:	645f7465 	ldrbvs	r7, [pc], #-1125	; a94 <.debug_str+0xa94>
     a90:	61647672 	smcvs	18274	; 0x4762
     a94:	61006174 	tstvs	r0, r4, ror r1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:382
		axp2585_config.pmu_init_chgvol = 3840;
     a98:	725f7078 	subsvc	r7, pc, #120	; 0x78
     a9c:	616d6765 	cmnvs	sp, r5, ror #14
     aa0:	65725f70 	ldrbvs	r5, [r2, #-3952]!	; 0xfffff090
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:387
	val = (axp2585_config.pmu_init_chgvol - 3840)/16;
	if (val > 0x30)
		val = 0x30;
	val <<= 2;
	axp_regmap_update(map, AXP2585_CHARGE_CONTROL2, val, 0xfc);
     aa4:	00736461 	rsbseq	r6, r3, r1, ror #8
     aa8:	45574f50 	ldrbmi	r4, [r7, #-3920]	; 0xfffff0b0
     aac:	55535f52 	ldrbpl	r5, [r3, #-3922]	; 0xfffff0ae
     ab0:	594c5050 	stmdbpl	ip, {r4, r6, ip, lr}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:386
	if (axp2585_config.pmu_init_chgvol < 3840)
		axp2585_config.pmu_init_chgvol = 3840;
	val = (axp2585_config.pmu_init_chgvol - 3840)/16;
	if (val > 0x30)
		val = 0x30;
	val <<= 2;
     ab4:	4f52505f 	svcmi	0x0052505f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:408
	ocv_cap[13] = axp2585_config.pmu_bat_para14;
	ocv_cap[14] = axp2585_config.pmu_bat_para15;
	ocv_cap[15] = axp2585_config.pmu_bat_para16;
	ocv_cap[16] = axp2585_config.pmu_bat_para17;
	ocv_cap[17] = axp2585_config.pmu_bat_para18;
	ocv_cap[18] = axp2585_config.pmu_bat_para19;
     ab8:	48435f50 	stmdami	r3, {r4, r6, r8, r9, sl, fp, ip, lr}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:387
		axp2585_config.pmu_init_chgvol = 3840;
	val = (axp2585_config.pmu_init_chgvol - 3840)/16;
	if (val > 0x30)
		val = 0x30;
	val <<= 2;
	axp_regmap_update(map, AXP2585_CHARGE_CONTROL2, val, 0xfc);
     abc:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:388
    printk("==%s==line:%d==file:%s==\n",__func__,__LINE__,__FILE__);
     ac0:	504d455f 	subpl	r4, sp, pc, asr r5
     ac4:	445f5954 	ldrbmi	r5, [pc], #-2388	; acc <.debug_str+0xacc>
     ac8:	47495345 	strbmi	r5, [r9, -r5, asr #6]
     acc:	7861004e 	stmdavc	r1!, {r1, r2, r3, r6}^
     ad0:	6f635f70 	svcvs	0x00635f70
     ad4:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
     ad8:	666e695f 			; <UNDEFINED> instruction: 0x666e695f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:390

	ocv_cap[0]  = axp2585_config.pmu_bat_para1;
     adc:	6163006f 	cmnvs	r3, pc, rrx
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:422
	ocv_cap[27] = axp2585_config.pmu_bat_para28;
	ocv_cap[28] = axp2585_config.pmu_bat_para29;
	ocv_cap[29] = axp2585_config.pmu_bat_para30;
	ocv_cap[30] = axp2585_config.pmu_bat_para31;
	ocv_cap[31] = axp2585_config.pmu_bat_para32;
	axp_regmap_writes(map, 0xC0, 32, ocv_cap);
     ae0:	61626c6c 	cmnvs	r2, ip, ror #24
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:391
	val <<= 2;
	axp_regmap_update(map, AXP2585_CHARGE_CONTROL2, val, 0xfc);
    printk("==%s==line:%d==file:%s==\n",__func__,__LINE__,__FILE__);

	ocv_cap[0]  = axp2585_config.pmu_bat_para1;
	ocv_cap[1]  = axp2585_config.pmu_bat_para2;
     ae4:	685f6b63 	ldmdavs	pc, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^	; <UNPREDICTABLE>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:422
	ocv_cap[27] = axp2585_config.pmu_bat_para28;
	ocv_cap[28] = axp2585_config.pmu_bat_para29;
	ocv_cap[29] = axp2585_config.pmu_bat_para30;
	ocv_cap[30] = axp2585_config.pmu_bat_para31;
	ocv_cap[31] = axp2585_config.pmu_bat_para32;
	axp_regmap_writes(map, 0xC0, 32, ocv_cap);
     ae8:	00646165 	rsbeq	r6, r4, r5, ror #2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:392
	axp_regmap_update(map, AXP2585_CHARGE_CONTROL2, val, 0xfc);
    printk("==%s==line:%d==file:%s==\n",__func__,__LINE__,__FILE__);

	ocv_cap[0]  = axp2585_config.pmu_bat_para1;
	ocv_cap[1]  = axp2585_config.pmu_bat_para2;
	ocv_cap[2]  = axp2585_config.pmu_bat_para3;
     aec:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:393
	ocv_cap[3]  = axp2585_config.pmu_bat_para4;
     af0:	6d616e5f 	stclvs	14, cr6, [r1, #-380]!	; 0xfffffe84
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:390
		val = 0x30;
	val <<= 2;
	axp_regmap_update(map, AXP2585_CHARGE_CONTROL2, val, 0xfc);
    printk("==%s==line:%d==file:%s==\n",__func__,__LINE__,__FILE__);

	ocv_cap[0]  = axp2585_config.pmu_bat_para1;
     af4:	61707365 	cmnvs	r0, r5, ror #6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:391
	ocv_cap[1]  = axp2585_config.pmu_bat_para2;
     af8:	69006563 	stmdbvs	r0, {r0, r1, r5, r6, r8, sl, sp, lr}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:394
	ocv_cap[2]  = axp2585_config.pmu_bat_para3;
	ocv_cap[3]  = axp2585_config.pmu_bat_para4;
	ocv_cap[4]  = axp2585_config.pmu_bat_para5;
     afc:	7463616e 	strbtvc	r6, [r3], #-366	; 0xfffffe92
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:395
	ocv_cap[5]  = axp2585_config.pmu_bat_para6;
     b00:	5f657669 	svcpl	0x00657669
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:392
	axp_regmap_update(map, AXP2585_CHARGE_CONTROL2, val, 0xfc);
    printk("==%s==line:%d==file:%s==\n",__func__,__LINE__,__FILE__);

	ocv_cap[0]  = axp2585_config.pmu_bat_para1;
	ocv_cap[1]  = axp2585_config.pmu_bat_para2;
	ocv_cap[2]  = axp2585_config.pmu_bat_para3;
     b04:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:393
	ocv_cap[3]  = axp2585_config.pmu_bat_para4;
     b08:	6d6f006f 	stclvs	0, cr0, [pc, #-444]!	; 954 <.debug_str+0x954>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:396
	ocv_cap[4]  = axp2585_config.pmu_bat_para5;
	ocv_cap[5]  = axp2585_config.pmu_bat_para6;
	ocv_cap[6]  = axp2585_config.pmu_bat_para7;
     b0c:	645f7061 	ldrbvs	r7, [pc], #-97	; b14 <.debug_str+0xb14>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:397
	ocv_cap[7]  = axp2585_config.pmu_bat_para8;
     b10:	63697665 	cmnvs	r9, #105906176	; 0x6500000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:394

	ocv_cap[0]  = axp2585_config.pmu_bat_para1;
	ocv_cap[1]  = axp2585_config.pmu_bat_para2;
	ocv_cap[2]  = axp2585_config.pmu_bat_para3;
	ocv_cap[3]  = axp2585_config.pmu_bat_para4;
	ocv_cap[4]  = axp2585_config.pmu_bat_para5;
     b14:	68740065 	ldmdavs	r4!, {r0, r2, r5, r6}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:395
	ocv_cap[5]  = axp2585_config.pmu_bat_para6;
     b18:	616d7265 	cmnvs	sp, r5, ror #4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:398
	ocv_cap[6]  = axp2585_config.pmu_bat_para7;
	ocv_cap[7]  = axp2585_config.pmu_bat_para8;
	ocv_cap[8]  = axp2585_config.pmu_bat_para9;
     b1c:	6f635f6c 	svcvs	0x00635f6c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:399
	ocv_cap[9]  = axp2585_config.pmu_bat_para10;
     b20:	6e696c6f 	cdpvs	12, 6, cr6, cr9, cr15, {3}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:396
	ocv_cap[1]  = axp2585_config.pmu_bat_para2;
	ocv_cap[2]  = axp2585_config.pmu_bat_para3;
	ocv_cap[3]  = axp2585_config.pmu_bat_para4;
	ocv_cap[4]  = axp2585_config.pmu_bat_para5;
	ocv_cap[5]  = axp2585_config.pmu_bat_para6;
	ocv_cap[6]  = axp2585_config.pmu_bat_para7;
     b24:	65645f67 	strbvs	r5, [r4, #-3943]!	; 0xfffff099
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:397
	ocv_cap[7]  = axp2585_config.pmu_bat_para8;
     b28:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:400
	ocv_cap[8]  = axp2585_config.pmu_bat_para9;
	ocv_cap[9]  = axp2585_config.pmu_bat_para10;
	ocv_cap[10] = axp2585_config.pmu_bat_para11;
     b2c:	55435200 	strbpl	r5, [r3, #-512]	; 0xfffffe00
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:401
	ocv_cap[11] = axp2585_config.pmu_bat_para12;
     b30:	464f535f 			; <UNDEFINED> instruction: 0x464f535f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:398
	ocv_cap[3]  = axp2585_config.pmu_bat_para4;
	ocv_cap[4]  = axp2585_config.pmu_bat_para5;
	ocv_cap[5]  = axp2585_config.pmu_bat_para6;
	ocv_cap[6]  = axp2585_config.pmu_bat_para7;
	ocv_cap[7]  = axp2585_config.pmu_bat_para8;
	ocv_cap[8]  = axp2585_config.pmu_bat_para9;
     b34:	51524954 	cmppl	r2, r4, asr r9
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:399
	ocv_cap[9]  = axp2585_config.pmu_bat_para10;
     b38:	65737500 	ldrbvs	r7, [r3, #-1280]!	; 0xfffffb00
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:400
	ocv_cap[10] = axp2585_config.pmu_bat_para11;
     b3c:	7475615f 	ldrbtvc	r6, [r5], #-351	; 0xfffffea1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:403
	ocv_cap[11] = axp2585_config.pmu_bat_para12;
	ocv_cap[12] = axp2585_config.pmu_bat_para13;
	ocv_cap[13] = axp2585_config.pmu_bat_para14;
     b40:	7375736f 	cmnvc	r5, #-1140850687	; 0xbc000001
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:404
	ocv_cap[14] = axp2585_config.pmu_bat_para15;
     b44:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:401
	ocv_cap[6]  = axp2585_config.pmu_bat_para7;
	ocv_cap[7]  = axp2585_config.pmu_bat_para8;
	ocv_cap[8]  = axp2585_config.pmu_bat_para9;
	ocv_cap[9]  = axp2585_config.pmu_bat_para10;
	ocv_cap[10] = axp2585_config.pmu_bat_para11;
	ocv_cap[11] = axp2585_config.pmu_bat_para12;
     b48:	73657200 	cmnvc	r5, #0, 4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:402
	ocv_cap[12] = axp2585_config.pmu_bat_para13;
     b4c:	6f765f74 	svcvs	0x00765f74
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:405
	ocv_cap[13] = axp2585_config.pmu_bat_para14;
	ocv_cap[14] = axp2585_config.pmu_bat_para15;
	ocv_cap[15] = axp2585_config.pmu_bat_para16;
     b50:	6162006c 	cmnvs	r2, ip, rrx
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:403
	ocv_cap[8]  = axp2585_config.pmu_bat_para9;
	ocv_cap[9]  = axp2585_config.pmu_bat_para10;
	ocv_cap[10] = axp2585_config.pmu_bat_para11;
	ocv_cap[11] = axp2585_config.pmu_bat_para12;
	ocv_cap[12] = axp2585_config.pmu_bat_para13;
	ocv_cap[13] = axp2585_config.pmu_bat_para14;
     b54:	75635f74 	strbvc	r5, [r3, #-3956]!	; 0xfffff08c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:422
	ocv_cap[27] = axp2585_config.pmu_bat_para28;
	ocv_cap[28] = axp2585_config.pmu_bat_para29;
	ocv_cap[29] = axp2585_config.pmu_bat_para30;
	ocv_cap[30] = axp2585_config.pmu_bat_para31;
	ocv_cap[31] = axp2585_config.pmu_bat_para32;
	axp_regmap_writes(map, 0xC0, 32, ocv_cap);
     b58:	75720072 	ldrbvc	r0, [r2, #-114]!	; 0xffffff8e
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:404
	ocv_cap[9]  = axp2585_config.pmu_bat_para10;
	ocv_cap[10] = axp2585_config.pmu_bat_para11;
	ocv_cap[11] = axp2585_config.pmu_bat_para12;
	ocv_cap[12] = axp2585_config.pmu_bat_para13;
	ocv_cap[13] = axp2585_config.pmu_bat_para14;
	ocv_cap[14] = axp2585_config.pmu_bat_para15;
     b5c:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:422
	ocv_cap[27] = axp2585_config.pmu_bat_para28;
	ocv_cap[28] = axp2585_config.pmu_bat_para29;
	ocv_cap[29] = axp2585_config.pmu_bat_para30;
	ocv_cap[30] = axp2585_config.pmu_bat_para31;
	ocv_cap[31] = axp2585_config.pmu_bat_para32;
	axp_regmap_writes(map, 0xC0, 32, ocv_cap);
     b60:	75735f65 	ldrbvc	r5, [r3, #-3941]!	; 0xfffff09b
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:402
	ocv_cap[7]  = axp2585_config.pmu_bat_para8;
	ocv_cap[8]  = axp2585_config.pmu_bat_para9;
	ocv_cap[9]  = axp2585_config.pmu_bat_para10;
	ocv_cap[10] = axp2585_config.pmu_bat_para11;
	ocv_cap[11] = axp2585_config.pmu_bat_para12;
	ocv_cap[12] = axp2585_config.pmu_bat_para13;
     b64:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:405
	ocv_cap[13] = axp2585_config.pmu_bat_para14;
	ocv_cap[14] = axp2585_config.pmu_bat_para15;
	ocv_cap[15] = axp2585_config.pmu_bat_para16;
     b68:	65640064 	strbvs	r0, [r4, #-100]!	; 0xffffff9c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:408
	ocv_cap[16] = axp2585_config.pmu_bat_para17;
	ocv_cap[17] = axp2585_config.pmu_bat_para18;
	ocv_cap[18] = axp2585_config.pmu_bat_para19;
     b6c:	6d705f76 	ldclvs	15, cr5, [r0, #-472]!	; 0xfffffe28
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:407
	ocv_cap[12] = axp2585_config.pmu_bat_para13;
	ocv_cap[13] = axp2585_config.pmu_bat_para14;
	ocv_cap[14] = axp2585_config.pmu_bat_para15;
	ocv_cap[15] = axp2585_config.pmu_bat_para16;
	ocv_cap[16] = axp2585_config.pmu_bat_para17;
	ocv_cap[17] = axp2585_config.pmu_bat_para18;
     b70:	6d6f645f 	cfstrdvs	mvd6, [pc, #-380]!	; 9fc <.debug_str+0x9fc>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:409
	ocv_cap[18] = axp2585_config.pmu_bat_para19;
	ocv_cap[19] = axp2585_config.pmu_bat_para20;
     b74:	006e6961 	rsbeq	r6, lr, r1, ror #18
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:408
	ocv_cap[13] = axp2585_config.pmu_bat_para14;
	ocv_cap[14] = axp2585_config.pmu_bat_para15;
	ocv_cap[15] = axp2585_config.pmu_bat_para16;
	ocv_cap[16] = axp2585_config.pmu_bat_para17;
	ocv_cap[17] = axp2585_config.pmu_bat_para18;
	ocv_cap[18] = axp2585_config.pmu_bat_para19;
     b78:	5f737562 	svcpl	0x00737562
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:410
	ocv_cap[19] = axp2585_config.pmu_bat_para20;
	ocv_cap[20] = axp2585_config.pmu_bat_para21;
     b7c:	756f7267 	strbvc	r7, [pc, #-615]!	; 91d <.debug_str+0x91d>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:409
	ocv_cap[14] = axp2585_config.pmu_bat_para15;
	ocv_cap[15] = axp2585_config.pmu_bat_para16;
	ocv_cap[16] = axp2585_config.pmu_bat_para17;
	ocv_cap[17] = axp2585_config.pmu_bat_para18;
	ocv_cap[18] = axp2585_config.pmu_bat_para19;
	ocv_cap[19] = axp2585_config.pmu_bat_para20;
     b80:	63007370 	movwvs	r7, #880	; 0x370
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:411
	ocv_cap[20] = axp2585_config.pmu_bat_para21;
	ocv_cap[21] = axp2585_config.pmu_bat_para22;
     b84:	7373616c 	cmnvc	r3, #108, 2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:410
	ocv_cap[15] = axp2585_config.pmu_bat_para16;
	ocv_cap[16] = axp2585_config.pmu_bat_para17;
	ocv_cap[17] = axp2585_config.pmu_bat_para18;
	ocv_cap[18] = axp2585_config.pmu_bat_para19;
	ocv_cap[19] = axp2585_config.pmu_bat_para20;
	ocv_cap[20] = axp2585_config.pmu_bat_para21;
     b88:	7474615f 	ldrbtvc	r6, [r4], #-351	; 0xfffffea1
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:412
	ocv_cap[21] = axp2585_config.pmu_bat_para22;
	ocv_cap[22] = axp2585_config.pmu_bat_para23;
     b8c:	75626972 	strbvc	r6, [r2, #-2418]!	; 0xfffff68e
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:411
	ocv_cap[16] = axp2585_config.pmu_bat_para17;
	ocv_cap[17] = axp2585_config.pmu_bat_para18;
	ocv_cap[18] = axp2585_config.pmu_bat_para19;
	ocv_cap[19] = axp2585_config.pmu_bat_para20;
	ocv_cap[20] = axp2585_config.pmu_bat_para21;
	ocv_cap[21] = axp2585_config.pmu_bat_para22;
     b90:	70006574 	andvc	r6, r0, r4, ror r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:413
	ocv_cap[22] = axp2585_config.pmu_bat_para23;
	ocv_cap[23] = axp2585_config.pmu_bat_para24;
     b94:	5f656761 	svcpl	0x00656761
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:412
	ocv_cap[17] = axp2585_config.pmu_bat_para18;
	ocv_cap[18] = axp2585_config.pmu_bat_para19;
	ocv_cap[19] = axp2585_config.pmu_bat_para20;
	ocv_cap[20] = axp2585_config.pmu_bat_para21;
	ocv_cap[21] = axp2585_config.pmu_bat_para22;
	ocv_cap[22] = axp2585_config.pmu_bat_para23;
     b98:	756f7267 	strbvc	r7, [pc, #-615]!	; 939 <.debug_str+0x939>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:414
	ocv_cap[23] = axp2585_config.pmu_bat_para24;
	ocv_cap[24] = axp2585_config.pmu_bat_para25;
     b9c:	79625f70 	stmdbvc	r2!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:413
	ocv_cap[18] = axp2585_config.pmu_bat_para19;
	ocv_cap[19] = axp2585_config.pmu_bat_para20;
	ocv_cap[20] = axp2585_config.pmu_bat_para21;
	ocv_cap[21] = axp2585_config.pmu_bat_para22;
	ocv_cap[22] = axp2585_config.pmu_bat_para23;
	ocv_cap[23] = axp2585_config.pmu_bat_para24;
     ba0:	626f6d5f 	rsbvs	r6, pc, #6080	; 0x17c0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:415
	ocv_cap[24] = axp2585_config.pmu_bat_para25;
	ocv_cap[25] = axp2585_config.pmu_bat_para26;
     ba4:	74696c69 	strbtvc	r6, [r9], #-3177	; 0xfffff397
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:414
	ocv_cap[19] = axp2585_config.pmu_bat_para20;
	ocv_cap[20] = axp2585_config.pmu_bat_para21;
	ocv_cap[21] = axp2585_config.pmu_bat_para22;
	ocv_cap[22] = axp2585_config.pmu_bat_para23;
	ocv_cap[23] = axp2585_config.pmu_bat_para24;
	ocv_cap[24] = axp2585_config.pmu_bat_para25;
     ba8:	69645f79 	stmdbvs	r4!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:416
	ocv_cap[25] = axp2585_config.pmu_bat_para26;
	ocv_cap[26] = axp2585_config.pmu_bat_para27;
     bac:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:415
	ocv_cap[20] = axp2585_config.pmu_bat_para21;
	ocv_cap[21] = axp2585_config.pmu_bat_para22;
	ocv_cap[22] = axp2585_config.pmu_bat_para23;
	ocv_cap[23] = axp2585_config.pmu_bat_para24;
	ocv_cap[24] = axp2585_config.pmu_bat_para25;
	ocv_cap[25] = axp2585_config.pmu_bat_para26;
     bb0:	61006465 	tstvs	r0, r5, ror #8
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:417
	ocv_cap[26] = axp2585_config.pmu_bat_para27;
	ocv_cap[27] = axp2585_config.pmu_bat_para28;
     bb4:	00727474 	rsbseq	r7, r2, r4, ror r4
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:416
	ocv_cap[21] = axp2585_config.pmu_bat_para22;
	ocv_cap[22] = axp2585_config.pmu_bat_para23;
	ocv_cap[23] = axp2585_config.pmu_bat_para24;
	ocv_cap[24] = axp2585_config.pmu_bat_para25;
	ocv_cap[25] = axp2585_config.pmu_bat_para26;
	ocv_cap[26] = axp2585_config.pmu_bat_para27;
     bb8:	5f4d5052 	svcpl	0x004d5052
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:418
	ocv_cap[27] = axp2585_config.pmu_bat_para28;
	ocv_cap[28] = axp2585_config.pmu_bat_para29;
     bbc:	50535553 	subspl	r5, r3, r3, asr r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:417
	ocv_cap[22] = axp2585_config.pmu_bat_para23;
	ocv_cap[23] = axp2585_config.pmu_bat_para24;
	ocv_cap[24] = axp2585_config.pmu_bat_para25;
	ocv_cap[25] = axp2585_config.pmu_bat_para26;
	ocv_cap[26] = axp2585_config.pmu_bat_para27;
	ocv_cap[27] = axp2585_config.pmu_bat_para28;
     bc0:	49444e45 	stmdbmi	r4, {r0, r2, r6, r9, sl, fp, lr}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:419
	ocv_cap[28] = axp2585_config.pmu_bat_para29;
	ocv_cap[29] = axp2585_config.pmu_bat_para30;
     bc4:	6600474e 	strvs	r4, [r0], -lr, asr #14
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:418
	ocv_cap[23] = axp2585_config.pmu_bat_para24;
	ocv_cap[24] = axp2585_config.pmu_bat_para25;
	ocv_cap[25] = axp2585_config.pmu_bat_para26;
	ocv_cap[26] = axp2585_config.pmu_bat_para27;
	ocv_cap[27] = axp2585_config.pmu_bat_para28;
	ocv_cap[28] = axp2585_config.pmu_bat_para29;
     bc8:	5f656572 	svcpl	0x00656572
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:420
	ocv_cap[29] = axp2585_config.pmu_bat_para30;
	ocv_cap[30] = axp2585_config.pmu_bat_para31;
     bcc:	6d746962 	ldclvs	9, cr6, [r4, #-392]!	; 0xfffffe78
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:419
	ocv_cap[24] = axp2585_config.pmu_bat_para25;
	ocv_cap[25] = axp2585_config.pmu_bat_para26;
	ocv_cap[26] = axp2585_config.pmu_bat_para27;
	ocv_cap[27] = axp2585_config.pmu_bat_para28;
	ocv_cap[28] = axp2585_config.pmu_bat_para29;
	ocv_cap[29] = axp2585_config.pmu_bat_para30;
     bd0:	69007061 	stmdbvs	r0, {r0, r5, r6, ip, sp, lr}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:421
	ocv_cap[30] = axp2585_config.pmu_bat_para31;
	ocv_cap[31] = axp2585_config.pmu_bat_para32;
     bd4:	5f627375 	svcpl	0x00627375
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:406
	ocv_cap[11] = axp2585_config.pmu_bat_para12;
	ocv_cap[12] = axp2585_config.pmu_bat_para13;
	ocv_cap[13] = axp2585_config.pmu_bat_para14;
	ocv_cap[14] = axp2585_config.pmu_bat_para15;
	ocv_cap[15] = axp2585_config.pmu_bat_para16;
	ocv_cap[16] = axp2585_config.pmu_bat_para17;
     bd8:	00736572 	rsbseq	r6, r3, r2, ror r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:420
	ocv_cap[25] = axp2585_config.pmu_bat_para26;
	ocv_cap[26] = axp2585_config.pmu_bat_para27;
	ocv_cap[27] = axp2585_config.pmu_bat_para28;
	ocv_cap[28] = axp2585_config.pmu_bat_para29;
	ocv_cap[29] = axp2585_config.pmu_bat_para30;
	ocv_cap[30] = axp2585_config.pmu_bat_para31;
     bdc:	5f746567 	svcpl	0x00746567
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:421
	ocv_cap[31] = axp2585_config.pmu_bat_para32;
     be0:	5f746162 	svcpl	0x00746162
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:422
	axp_regmap_writes(map, 0xC0, 32, ocv_cap);
     be4:	6c616568 	cfstr64vs	mvdx6, [r1], #-416	; 0xfffffe60
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:425

	/*Init CHGLED function*/
	if (axp2585_config.pmu_chgled_func)
     be8:	62006874 	andvs	r6, r0, #116, 16	; 0x740000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:426
		axp_regmap_set_bits(map, 0x90, 0x80); /* control by charger */
     bec:	6b6e696c 	blvs	1b9b1a4 <axp2585_set_usb_vhold+0x1b99f60>
     bf0:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
     bf4:	75007265 	strvc	r7, [r0, #-613]	; 0xfffffd9b
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:425
	ocv_cap[30] = axp2585_config.pmu_bat_para31;
	ocv_cap[31] = axp2585_config.pmu_bat_para32;
	axp_regmap_writes(map, 0xC0, 32, ocv_cap);

	/*Init CHGLED function*/
	if (axp2585_config.pmu_chgled_func)
     bf8:	615f6273 	cmpvs	pc, r3, ror r2	; <UNPREDICTABLE>
     bfc:	6f765f64 	svcvs	0x00765f64
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:426
		axp_regmap_set_bits(map, 0x90, 0x80); /* control by charger */
     c00:	4f50006c 	svcmi	0x0050006c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:436
	if (axp2585_config.pmu_chgled_type)
		axp_regmap_set_bits(map, 0x90, 0x01); /* Type B */
	else
		axp_regmap_clr_bits(map, 0x90, 0x07); /* Type A */
#else
	axp_regmap_set_bits(map, 0x90, axp2585_config.pmu_chgled_type & 0x07);
     c04:	5f524557 	svcpl	0x00524557
     c08:	50505553 	subspl	r5, r0, r3, asr r5
     c0c:	505f594c 	subspl	r5, pc, ip, asr #18
     c10:	5f504f52 	svcpl	0x00504f52
     c14:	52454e45 	subpl	r4, r5, #1104	; 0x450
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:439
#endif
	/*Init battery capacity correct function*/
	if (axp2585_config.pmu_batt_cap_correct)
     c18:	455f5947 	ldrbmi	r5, [pc, #-2375]	; 2d9 <.debug_str+0x2d9>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:440
		axp_regmap_set_bits(map, 0xb8, 0x20); /* enable */
     c1c:	5954504d 	ldmdbpl	r4, {r0, r2, r3, r6, ip, lr}^
     c20:	6f687300 	svcvs	0x00687300
     c24:	6f625f77 	svcvs	0x00625f77
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:439
		axp_regmap_clr_bits(map, 0x90, 0x07); /* Type A */
#else
	axp_regmap_set_bits(map, 0x90, axp2585_config.pmu_chgled_type & 0x07);
#endif
	/*Init battery capacity correct function*/
	if (axp2585_config.pmu_batt_cap_correct)
     c28:	5f74736f 	svcpl	0x0074736f
     c2c:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:440
		axp_regmap_set_bits(map, 0xb8, 0x20); /* enable */
     c30:	656c7300 	strbvs	r7, [ip, #-768]!	; 0xfffffd00
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:445
	else
		axp_regmap_clr_bits(map, 0xb8, 0x20); /* disable */

	/*battery detect enable*/
	if (axp2585_config.pmu_batdeten)
     c34:	735f7065 	cmpvc	pc, #101	; 0x65
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:446
		axp_regmap_set_bits(map, 0x8e, 0x08);
     c38:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     c3c:	6c616b00 	stclvs	11, cr6, [r1], #-0
     c40:	6d79736c 	ldclvs	3, cr7, [r9, #-432]!	; 0xfffffe50
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:445
		axp_regmap_set_bits(map, 0xb8, 0x20); /* enable */
	else
		axp_regmap_clr_bits(map, 0xb8, 0x20); /* disable */

	/*battery detect enable*/
	if (axp2585_config.pmu_batdeten)
     c44:	6c650073 	stclvs	0, cr0, [r5], #-460	; 0xfffffe34
     c48:	77685f66 	strbvc	r5, [r8, -r6, ror #30]!
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:446
		axp_regmap_set_bits(map, 0x8e, 0x08);
     c4c:	00706163 	rsbseq	r6, r0, r3, ror #2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:451
	else
		axp_regmap_clr_bits(map, 0x8e, 0x08);

	/* RDC initial */
	axp_regmap_read(map, AXP2585_RDC0, &val);
     c50:	45574f50 	ldrbmi	r4, [r7, #-3920]	; 0xfffff0b0
     c54:	55535f52 	ldrbpl	r5, [r3, #-3922]	; 0xfffff0ae
     c58:	594c5050 	stmdbpl	ip, {r4, r6, ip, lr}^
     c5c:	4f52505f 	svcmi	0x0052505f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:452
	if ((axp2585_config.pmu_battery_rdc) && (!(val & 0x40))) {
     c60:	4f565f50 	svcmi	0x00565f50
     c64:	4741544c 	strbmi	r5, [r1, -ip, asr #8]
     c68:	414d5f45 	cmpmi	sp, r5, asr #30
     c6c:	72640058 	rsbvc	r0, r4, #88	; 0x58
     c70:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     c74:	6f702f73 	svcvs	0x00702f73
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:458
		rdc = (axp2585_config.pmu_battery_rdc * 10000 + 5371) / 10742;
		axp_regmap_write(map, AXP2585_RDC0, ((rdc >> 8) & 0x1F)|0x80);
		axp_regmap_write(map, AXP2585_RDC1, rdc & 0x00FF);
	}

	axp_regmap_read(map, AXP2585_BATCAP0, &val);
     c78:	2f726577 	svccs	0x00726577
     c7c:	2f707861 	svccs	0x00707861
     c80:	32707861 	rsbscc	r7, r0, #6356992	; 0x610000
     c84:	2f353835 	svccs	0x00353835
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:459
	if ((axp2585_config.pmu_battery_cap) && (!(val & 0x80))) {
     c88:	32707861 	rsbscc	r7, r0, #6356992	; 0x610000
     c8c:	2d353835 	ldccs	8, cr3, [r5, #-212]!	; 0xffffff2c
     c90:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:467
		axp_regmap_write(map, AXP2585_BATCAP0,
					((cur_coulomb_counter >> 8) | 0x80));
		axp_regmap_write(map, AXP2585_BATCAP1,
					cur_coulomb_counter & 0x00FF);
	} else if (!axp2585_config.pmu_battery_cap) {
		axp_regmap_write(map, AXP2585_BATCAP0, 0x00);
     c94:	2e726567 	cdpcs	5, 7, cr6, cr2, cr7, {3}
     c98:	64700063 	ldrbtvs	r0, [r0], #-99	; 0xffffff9d
     c9c:	6e007665 	cfmadd32vs	mvax3, mvfx7, mvfx0, mvfx5
     ca0:	675f6d75 			; <UNDEFINED> instruction: 0x675f6d75
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:468
		axp_regmap_write(map, AXP2585_BATCAP1, 0x00);
     ca4:	665f6c70 			; <UNDEFINED> instruction: 0x665f6c70
     ca8:	72757475 	rsbsvc	r7, r5, #1962934272	; 0x75000000
     cac:	79735f65 	ldmdbvc	r3!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
     cb0:	6500736d 	strvs	r7, [r0, #-877]	; 0xfffffc93
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:471
	}

	if (axp2585_config.pmu_bat_unused == 1)
     cb4:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
     cb8:	61625f65 	cmnvs	r2, r5, ror #30
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:474
		axp2585_spy_info.batt->det_unused = 1;
	else
		axp2585_spy_info.batt->det_unused = 0;
     cbc:	6c006573 	cfstr32vs	mvfx6, [r0], {115}	; 0x73
     cc0:	5f6b636f 	svcpl	0x006b636f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:472
		axp_regmap_write(map, AXP2585_BATCAP0, 0x00);
		axp_regmap_write(map, AXP2585_BATCAP1, 0x00);
	}

	if (axp2585_config.pmu_bat_unused == 1)
		axp2585_spy_info.batt->det_unused = 1;
     cc4:	0079656b 	rsbseq	r6, r9, fp, ror #10
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:474
	else
		axp2585_spy_info.batt->det_unused = 0;
     cc8:	5f505841 	svcpl	0x00505841
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:472
		axp_regmap_write(map, AXP2585_BATCAP0, 0x00);
		axp_regmap_write(map, AXP2585_BATCAP1, 0x00);
	}

	if (axp2585_config.pmu_bat_unused == 1)
		axp2585_spy_info.batt->det_unused = 1;
     ccc:	50535553 	subspl	r5, r3, r3, asr r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:476
	else
		axp2585_spy_info.batt->det_unused = 0;

	if (axp2585_config.pmu_bat_temp_enable != 0) {
     cd0:	5f444e45 	svcpl	0x00444e45
     cd4:	48544957 	ldmdami	r4, {r0, r1, r2, r4, r6, r8, fp, lr}^
     cd8:	5152495f 	cmppl	r2, pc, asr r9
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:487
				axp2585_config.pmu_bat_shutdown_ltf * 10 / 128);
		axp_regmap_write(map, AXP2585_VHTF_WORK,
				axp2585_config.pmu_bat_shutdown_htf * 10 / 128);
	}
	/*enable fast charge */
	axp_regmap_update(map, 0x31, 0x04, 0x04);
     cdc:	61686300 	cmnvs	r8, r0, lsl #6
     ce0:	6465676e 	strbtvs	r6, [r5], #-1902	; 0xfffff892
     ce4:	6c617600 	stclvs	6, cr7, [r1], #-0
     ce8:	6f5f6469 	svcvs	0x005f6469
     cec:	65736666 	ldrbvs	r6, [r3, #-1638]!	; 0xfffff99a
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:489
	/*set POR time as 16s*/
	axp_regmap_update(map, AXP2585_POK_SET, 0x30, 0x30);
     cf0:	4f500074 	svcmi	0x00500074
     cf4:	5f524557 	svcpl	0x00524557
     cf8:	50505553 	subspl	r5, r0, r3, asr r5
     cfc:	505f594c 	subspl	r5, pc, ip, asr #18
     d00:	5f504f52 	svcpl	0x00504f52
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:491
	for (i = 0; i < ARRAY_SIZE(update_min_times); i++) {
		if (update_min_times[i] == axp2585_config.pmu_update_min_time)
     d04:	4c435943 	mcrrmi	9, 4, r5, r3, cr3
     d08:	4f435f45 	svcmi	0x00435f45
     d0c:	00544e55 	subseq	r4, r4, r5, asr lr
     d10:	6c667562 	cfstr64vs	mvdx7, [r6], #-392	; 0xfffffe78
     d14:	4e006e65 	cdpmi	14, 0, cr6, cr0, cr5, {3}
     d18:	53495f52 	movtpl	r5, #40786	; 0x9f52
     d1c:	54414c4f 	strbpl	r4, [r1], #-3151	; 0xfffff3b1
     d20:	415f4445 	cmpmi	pc, r5, asr #8
     d24:	004e4f4e 	subeq	r4, lr, lr, asr #30
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:490
	}
	/*enable fast charge */
	axp_regmap_update(map, 0x31, 0x04, 0x04);
	/*set POR time as 16s*/
	axp_regmap_update(map, AXP2585_POK_SET, 0x30, 0x30);
	for (i = 0; i < ARRAY_SIZE(update_min_times); i++) {
     d28:	6f6e6769 	svcvs	0x006e6769
     d2c:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
     d30:	646c6968 	strbtvs	r6, [ip], #-2408	; 0xfffff698
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:494
		if (update_min_times[i] == axp2585_config.pmu_update_min_time)
			break;
	}
	axp_regmap_update(map, AXP2585_ADJUST_PARA, i, 0x7);
     d34:	006e6572 	rsbeq	r6, lr, r2, ror r5
     d38:	45574f50 	ldrbmi	r4, [r7, #-3920]	; 0xfffff0b0
     d3c:	55535f52 	ldrbpl	r5, [r3, #-3922]	; 0xfffff0ae
     d40:	594c5050 	stmdbpl	ip, {r4, r6, ip, lr}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:497
	/*initial the ocv_cou_adjust_time*/
	for (i = 0; i < ARRAY_SIZE(ocv_cou_adjust_time); i++) {
		if (ocv_cou_adjust_time[i] == axp2585_config.pmu_ocv_cou_adjust_time)
     d44:	4f52505f 	svcmi	0x0052505f
     d48:	4e455f50 	mcrmi	15, 2, r5, cr5, cr0, {2}
     d4c:	59475245 	stmdbpl	r7, {r0, r2, r6, r9, ip, lr}^
     d50:	504d455f 	subpl	r4, sp, pc, asr r5
     d54:	445f5954 	ldrbmi	r5, [pc], #-2388	; d5c <.debug_str+0xd5c>
     d58:	47495345 	strbmi	r5, [r9, -r5, asr #6]
     d5c:	6e69004e 	cdpvs	0, 6, cr0, cr9, cr14, {2}
     d60:	6f68735f 	svcvs	0x0068735f
     d64:	69007472 	stmdbvs	r0, {r1, r4, r5, r6, sl, ip, sp, lr}
     d68:	63736964 	cmnvs	r3, #100, 18	; 0x190000
     d6c:	5f726168 	svcpl	0x00726168
     d70:	00736572 	rsbseq	r6, r3, r2, ror r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:496
		if (update_min_times[i] == axp2585_config.pmu_update_min_time)
			break;
	}
	axp_regmap_update(map, AXP2585_ADJUST_PARA, i, 0x7);
	/*initial the ocv_cou_adjust_time*/
	for (i = 0; i < ARRAY_SIZE(ocv_cou_adjust_time); i++) {
     d74:	32707861 	rsbscc	r7, r0, #6356992	; 0x610000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:497
		if (ocv_cou_adjust_time[i] == axp2585_config.pmu_ocv_cou_adjust_time)
     d78:	5f353835 	svcpl	0x00353835
     d7c:	5f746567 	svcpl	0x00746567
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:501
			break;
	}
	i <<= 6;
	axp_regmap_update(map, AXP2585_ADJUST_PARA1, i, 0xC0);
     d80:	5f627375 	svcpl	0x00627375
     d84:	6c6f6869 	stclvs	8, cr6, [pc], #-420	; be8 <.debug_str+0xbe8>
     d88:	524e0064 	subpl	r0, lr, #100	; 0x64
     d8c:	4c4c415f 	stfmie	f4, [ip], {95}	; 0x5f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:502
	printk("==%s==line:%d==file:%s==\n",__func__,__LINE__,__FILE__);
     d90:	425f434f 	subsmi	r4, pc, #1006632961	; 0x3c000001
     d94:	48435441 	stmdami	r3, {r0, r6, sl, ip, lr}^
     d98:	50435000 	subpl	r5, r3, r0
     d9c:	43465f55 	movtmi	r5, #28501	; 0x6f55
     da0:	5455415f 	ldrbpl	r4, [r5], #-351	; 0xfffffea1
     da4:	6564004f 	strbvs	r0, [r4, #-79]!	; 0xffffffb1
     da8:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:662
	battery_data.voltage_min_design = axp2585_config.pmu_pwroff_vol
								* 1000;
	battery_data.energy_full_design = axp2585_config.pmu_battery_cap;

	axp2585_charger_init(axp_dev);
    printk("==%s==line:%d==file:%s==\n",__func__,__LINE__,__FILE__);
     dac:	4e5f4e00 	cdpmi	14, 5, cr4, cr15, cr0, {0}
     db0:	414d524f 	cmpmi	sp, pc, asr #4
     db4:	454d5f4c 	strbmi	r5, [sp, #-3916]	; 0xfffff0b4
     db8:	59524f4d 	ldmdbpl	r2, {r0, r2, r3, r6, r8, r9, sl, fp, lr}^
     dbc:	6e6f7a00 	vmulvs.f32	s15, s30, s0
     dc0:	61775f65 	cmnvs	r7, r5, ror #30
     dc4:	6d726574 	cfldr64vs	mvdx6, [r2, #-464]!	; 0xfffffe30
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:664

	chg_dev = axp_power_supply_register(&pdev->dev, axp_dev,
     dc8:	736b7261 	cmnvc	fp, #268435462	; 0x10000006
     dcc:	4d505200 	lfmmi	f5, 2, [r0, #-0]
     dd0:	5145525f 	cmppl	r5, pc, asr r2
     dd4:	5455415f 	ldrbpl	r4, [r5], #-351	; 0xfffffea1
     dd8:	5355534f 	cmppl	r5, #1006632961	; 0x3c000001
     ddc:	444e4550 	strbmi	r4, [lr], #-1360	; 0xfffffab0
     de0:	746f7400 	strbtvc	r7, [pc], #-1024	; de8 <.debug_str+0xde8>
IS_ERR_OR_NULL():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/err.h:40
     de4:	65726c61 	ldrbvs	r6, [r2, #-3169]!	; 0xfffff39f
     de8:	76726573 			; <UNDEFINED> instruction: 0x76726573
     dec:	61705f65 	cmnvs	r0, r5, ror #30
     df0:	00736567 	rsbseq	r6, r3, r7, ror #10
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:670
					&battery_data, &axp2585_spy_info);
	if (IS_ERR_OR_NULL(chg_dev))
		goto fail;
	chg_dev->private_debug = axp2585_private_debug;
	chg_dev->pmic_temp_offset = 0x56;
	chg_dev->spy_info->batt->bat_temp_offset = 0x58;
     df4:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:668

	chg_dev = axp_power_supply_register(&pdev->dev, axp_dev,
					&battery_data, &axp2585_spy_info);
	if (IS_ERR_OR_NULL(chg_dev))
		goto fail;
	chg_dev->private_debug = axp2585_private_debug;
     df8:	676e6967 	strbvs	r6, [lr, -r7, ror #18]!
     dfc:	696c625f 	stmdbvs	ip!, {r0, r1, r2, r3, r4, r6, r9, sp, lr}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:669
	chg_dev->pmic_temp_offset = 0x56;
     e00:	665f6b6e 	ldrbvs	r6, [pc], -lr, ror #22
     e04:	5f6c6c75 	svcpl	0x006c6c75
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:670
	chg_dev->spy_info->batt->bat_temp_offset = 0x58;
     e08:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:668

	chg_dev = axp_power_supply_register(&pdev->dev, axp_dev,
					&battery_data, &axp2585_spy_info);
	if (IS_ERR_OR_NULL(chg_dev))
		goto fail;
	chg_dev->private_debug = axp2585_private_debug;
     e0c:	72745f64 	rsbsvc	r5, r4, #100, 30	; 0x190
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:670
	chg_dev->pmic_temp_offset = 0x56;
	chg_dev->spy_info->batt->bat_temp_offset = 0x58;
     e10:	6e5f6769 	cdpvs	7, 5, cr6, cr15, cr9, {3}
     e14:	00656d61 	rsbeq	r6, r5, r1, ror #26
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:676

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
		if (irq < 0)
			continue;
       printk("[axp2585]i=%d ,irq=%d in line:%d of %s\n",i,irq,__LINE__,__func__);
     e18:	50435f4e 	subpl	r5, r3, lr, asr #30
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:699
           {
            printk("[axp2585]axp_dev->int irq in line:%d of %d is %s NOT NULL\n",__LINE__,axp_dev->irq,__func__ );
           }
           else
             {
               printk("[axp2585]axp_dev->irq in line:%d of %s is  NULL\n",__LINE__,__func__ );
     e1c:	58410055 	stmdapl	r1, {r0, r2, r4, r6}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:676

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
		if (irq < 0)
			continue;
       printk("[axp2585]i=%d ,irq=%d in line:%d of %s\n",i,irq,__LINE__,__func__);
     e20:	45525f50 	ldrbmi	r5, [r2, #-3920]	; 0xfffff0b0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:670
					&battery_data, &axp2585_spy_info);
	if (IS_ERR_OR_NULL(chg_dev))
		goto fail;
	chg_dev->private_debug = axp2585_private_debug;
	chg_dev->pmic_temp_offset = 0x56;
	chg_dev->spy_info->batt->bat_temp_offset = 0x58;
     e24:	50414d47 	subpl	r4, r1, r7, asr #26
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:676

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
		if (irq < 0)
			continue;
       printk("[axp2585]i=%d ,irq=%d in line:%d of %s\n",i,irq,__LINE__,__func__);
     e28:	4952415f 	ldmdbmi	r2, {r0, r1, r2, r3, r4, r6, r8, lr}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:670
					&battery_data, &axp2585_spy_info);
	if (IS_ERR_OR_NULL(chg_dev))
		goto fail;
	chg_dev->private_debug = axp2585_private_debug;
	chg_dev->pmic_temp_offset = 0x56;
	chg_dev->spy_info->batt->bat_temp_offset = 0x58;
     e2c:	545f4353 	ldrbpl	r4, [pc], #-851	; e34 <.debug_str+0xe34>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:699
           {
            printk("[axp2585]axp_dev->int irq in line:%d of %d is %s NOT NULL\n",__LINE__,axp_dev->irq,__func__ );
           }
           else
             {
               printk("[axp2585]axp_dev->irq in line:%d of %s is  NULL\n",__LINE__,__func__ );
     e30:	61004957 	tstvs	r0, r7, asr r9
     e34:	65727063 	ldrbvs	r7, [r2, #-99]!	; 0xffffff9d
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:670
					&battery_data, &axp2585_spy_info);
	if (IS_ERR_OR_NULL(chg_dev))
		goto fail;
	chg_dev->private_debug = axp2585_private_debug;
	chg_dev->pmic_temp_offset = 0x56;
	chg_dev->spy_info->batt->bat_temp_offset = 0x58;
     e38:	746e6573 	strbtvc	r6, [lr], #-1395	; 0xfffffa8d
     e3c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     e40:	636f6c00 	cmnvs	pc, #0, 24
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:673

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
     e44:	7375006b 	cmnvc	r5, #107	; 0x6b
     e48:	726f7762 	rsbvc	r7, pc, #25690112	; 0x1880000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:674
		if (irq < 0)
     e4c:	6272006b 	rsbsvs	r0, r2, #107	; 0x6b
     e50:	66656c5f 			; <UNDEFINED> instruction: 0x66656c5f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:672
		goto fail;
	chg_dev->private_debug = axp2585_private_debug;
	chg_dev->pmic_temp_offset = 0x56;
	chg_dev->spy_info->batt->bat_temp_offset = 0x58;

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
     e54:	63610074 	cmnvs	r1, #116	; 0x74
     e58:	6168635f 	cmnvs	r8, pc, asr r3
     e5c:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
dev_set_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:903
}

static inline void dev_set_drvdata(struct device *dev, void *data)
{
	dev->driver_data = data;
     e60:	4f500067 	svcmi	0x00500067
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:716
			axp2585_charger_irq[i].name, irq, ret);
	}
	}

	platform_set_drvdata(pdev, chg_dev);
	ret = sysfs_create_group(&pdev->dev.kobj, &bmu_control_attr_group);
     e64:	5f524557 	svcpl	0x00524557
     e68:	50505553 	subspl	r5, r0, r3, asr r5
     e6c:	545f594c 	ldrbpl	r5, [pc], #-2380	; e74 <.debug_str+0xe74>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:717
	if (ret)
     e70:	4e484345 	cdpmi	3, 4, cr4, cr8, cr5, {2}
     e74:	474f4c4f 	strbmi	r4, [pc, -pc, asr #24]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:731
			continue;
		axp_free_irq(axp_dev, irq);
	}
fail:
	return -1;
}
     e78:	694e5f59 	stmdbvs	lr, {r0, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     e7c:	6100484d 	tstvs	r0, sp, asr #16
axp2585_charger_init():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:459
		axp_regmap_write(map, AXP2585_RDC0, ((rdc >> 8) & 0x1F)|0x80);
		axp_regmap_write(map, AXP2585_RDC1, rdc & 0x00FF);
	}

	axp_regmap_read(map, AXP2585_BATCAP0, &val);
	if ((axp2585_config.pmu_battery_cap) && (!(val & 0x80))) {
     e80:	35327078 	ldrcc	r7, [r2, #-120]!	; 0xffffff88
     e84:	735f3538 	cmpvc	pc, #56, 10	; 0xe000000
     e88:	635f7465 	cmpvs	pc, #1694498816	; 0x65000000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:461
		cur_coulomb_counter = axp2585_config.pmu_battery_cap
					* 1000 / 1456;
     e8c:	635f6768 	cmpvs	pc, #104, 14	; 0x1a00000
     e90:	77007275 	smlsdxvc	r0, r5, r2, r7
     e94:	75656b61 	strbvc	r6, [r5, #-2913]!	; 0xfffff49f
     e98:	6f735f70 	svcvs	0x00735f70
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:462
		axp_regmap_write(map, AXP2585_BATCAP0,
     e9c:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
     ea0:	61686300 	cmnvs	r8, r0, lsl #6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:461
	}

	axp_regmap_read(map, AXP2585_BATCAP0, &val);
	if ((axp2585_config.pmu_battery_cap) && (!(val & 0x80))) {
		cur_coulomb_counter = axp2585_config.pmu_battery_cap
					* 1000 / 1456;
     ea4:	5f656772 	svcpl	0x00656772
     ea8:	74706d65 	ldrbtvc	r6, [r0], #-3429	; 0xfffff29b
     eac:	65645f79 	strbvs	r5, [r4, #-3961]!	; 0xfffff087
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:462
		axp_regmap_write(map, AXP2585_BATCAP0,
     eb0:	6e676973 	mcrvs	9, 3, r6, cr7, cr3, {3}
     eb4:	6b617700 	blvs	185eabc <axp2585_set_usb_vhold+0x185d878>
     eb8:	5f707565 	svcpl	0x00707565
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:464
					((cur_coulomb_counter >> 8) | 0x80));
		axp_regmap_write(map, AXP2585_BATCAP1,
     ebc:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
     ec0:	61620074 	smcvs	8196	; 0x2004
     ec4:	72657474 	rsbvc	r7, r5, #116, 8	; 0x74000000
     ec8:	61645f79 	smcvs	17913	; 0x45f9
     ecc:	6a006174 	bvs	194a4 <axp2585_set_usb_vhold+0x18260>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:428

	/*Init CHGLED function*/
	if (axp2585_config.pmu_chgled_func)
		axp_regmap_set_bits(map, 0x90, 0x80); /* control by charger */
	else
		axp_regmap_clr_bits(map, 0x90, 0x80); /* drive MOTO */
     ed0:	5f706d75 	svcpl	0x00706d75
     ed4:	72746e65 	rsbsvc	r6, r4, #1616	; 0x650
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:448

	/*battery detect enable*/
	if (axp2585_config.pmu_batdeten)
		axp_regmap_set_bits(map, 0x8e, 0x08);
	else
		axp_regmap_clr_bits(map, 0x8e, 0x08);
     ed8:	00736569 	rsbseq	r6, r3, r9, ror #10
     edc:	454e4f5a 	strbmi	r4, [lr, #-3930]	; 0xfffff0a6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:442
#endif
	/*Init battery capacity correct function*/
	if (axp2585_config.pmu_batt_cap_correct)
		axp_regmap_set_bits(map, 0xb8, 0x20); /* enable */
	else
		axp_regmap_clr_bits(map, 0xb8, 0x20); /* disable */
     ee0:	564f4d5f 			; <UNDEFINED> instruction: 0x564f4d5f
     ee4:	454c4241 	strbmi	r4, [ip, #-577]	; 0xfffffdbf
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:383
		((axp2585_config.pmu_battery_warning_level1 - 5) << 4)
		+ axp2585_config.pmu_battery_warning_level2);

	if (axp2585_config.pmu_init_chgvol < 3840)
		axp2585_config.pmu_init_chgvol = 3840;
	val = (axp2585_config.pmu_init_chgvol - 3840)/16;
     ee8:	756d7000 	strbvc	r7, [sp, #-0]!
     eec:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:384
	if (val > 0x30)
     ef0:	735f7465 	cmpvc	pc, #1694498816	; 0x65000000
     ef4:	64747568 	ldrbtvs	r7, [r4], #-1384	; 0xfffffa98
     ef8:	5f6e776f 	svcpl	0x006e776f
     efc:	64006e65 	strvs	r6, [r0], #-3685	; 0xfffff19b
     f00:	705f7665 	subsvc	r7, pc, r5, ror #12
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:477
		axp2585_spy_info.batt->det_unused = 1;
	else
		axp2585_spy_info.batt->det_unused = 0;

	if (axp2585_config.pmu_bat_temp_enable != 0) {
		axp_regmap_write(map, AXP2585_VLTF_CHARGE,
     f04:	6e695f6d 	cdpvs	15, 6, cr5, cr9, cr13, {3}
     f08:	6c006f66 	stcvs	15, cr6, [r0], {102}	; 0x66
     f0c:	6c5f7572 	cfldr64vs	mvdx7, [pc], {114}	; 0x72
     f10:	006b636f 	rsbeq	r6, fp, pc, ror #6
     f14:	5f444456 	svcpl	0x00444456
     f18:	54534554 	ldrbpl	r4, [r3], #-1364	; 0xfffffaac
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:479
				axp2585_config.pmu_bat_charge_ltf * 10 / 128);
		axp_regmap_write(map, AXP2585_VHTF_CHARGE,
     f1c:	5449425f 	strbpl	r4, [r9], #-607	; 0xfffffda1
     f20:	72696400 	rsbvc	r6, r9, #0, 8
     f24:	5f746365 	svcpl	0x00746365
     f28:	706d6f63 	rsbvc	r6, sp, r3, ror #30
     f2c:	6574656c 	ldrbvs	r6, [r4, #-1388]!	; 0xfffffa94
     f30:	726f7700 	rsbvc	r7, pc, #0, 14
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:481
				axp2585_config.pmu_bat_charge_htf * 10 / 128);
		axp_regmap_write(map, AXP2585_VLTF_WORK,
     f34:	6f6b006b 	svcvs	0x006b006b
     f38:	6e5f6a62 	vnmlavs.f32	s13, s30, s5
     f3c:	79745f73 	ldmdbvc	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     f40:	64006570 	strvs	r6, [r0], #-1392	; 0xfffffa90
     f44:	705f616d 	subsvc	r6, pc, sp, ror #2
     f48:	736d7261 	cmnvc	sp, #268435462	; 0x10000006
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:483
				axp2585_config.pmu_bat_shutdown_ltf * 10 / 128);
		axp_regmap_write(map, AXP2585_VHTF_WORK,
     f4c:	44454c00 	strbmi	r4, [r5], #-3072	; 0xfffff400
     f50:	4c55465f 	mrrcmi	6, 5, r4, r5, cr15
     f54:	6f73004c 	svcvs	0x0073004c
     f58:	6e006b63 	vmlsvs.f64	d6, d0, d19
     f5c:	75625f72 	strbvc	r5, [r2, #-3954]!	; 0xfffff08e
     f60:	62007973 	andvs	r7, r0, #1884160	; 0x1cc000
     f64:	74736f6f 	ldrbtvc	r6, [r3], #-3951	; 0xfffff091
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:718
	}

	platform_set_drvdata(pdev, chg_dev);
	ret = sysfs_create_group(&pdev->dev.kobj, &bmu_control_attr_group);
	if (ret)
		dev_warn(&pdev->dev, "failed to create attr group\n");
     f68:	646f6d5f 	strbtvs	r6, [pc], #-3423	; f70 <.debug_str+0xf70>
     f6c:	5f5f0065 	svcpl	0x005f0065
     f70:	70003875 	andvc	r3, r0, r5, ror r8
     f74:	755f756d 	ldrbvc	r7, [pc, #-1389]	; a0f <.debug_str+0xa0f>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:720

	return 0;
     f78:	63706273 	cmnvs	r0, #805306375	; 0x30000007
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:731
			continue;
		axp_free_irq(axp_dev, irq);
	}
fail:
	return -1;
}
     f7c:	6c6f765f 	stclvs	6, cr7, [pc], #-380	; e08 <.debug_str+0xe08>
     f80:	63636100 	cmnvs	r3, #0, 2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:676

	for (i = 0; i < ARRAY_SIZE(axp2585_charger_irq); i++) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
		if (irq < 0)
			continue;
       printk("[axp2585]i=%d ,irq=%d in line:%d of %s\n",i,irq,__LINE__,__func__);
     f84:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     f88:	5f676e69 	svcpl	0x00676e69
     f8c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
     f90:	6d617473 	cfstrdvs	mvd7, [r1, #-460]!	; 0xfffffe34
     f94:	524e0070 	subpl	r0, lr, #112	; 0x70
     f98:	4d48535f 	stclmi	3, cr5, [r8, #-380]	; 0xfffffe84
     f9c:	70004d45 	andvc	r4, r0, r5, asr #26
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:679


      if(axp_dev->irq_data!=NULL)
     fa0:	705f756d 	subsvc	r7, pc, sp, ror #10
     fa4:	656b776f 	strbvs	r7, [fp, #-1903]!	; 0xfffff891
     fa8:	666f5f79 	uqsub16vs	r5, pc, r9	; <UNPREDICTABLE>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:681
      {
       printk("[axp2585]axp_dev->irq_data in line:%d of %s is NOT NULL\n",__LINE__,__func__ );
     fac:	6e655f66 	cdpvs	15, 6, cr5, cr5, cr6, {3}
     fb0:	6f747300 	svcvs	0x00747300
     fb4:	625f6572 	subsvs	r6, pc, #478150656	; 0x1c800000
     fb8:	74736f6f 	ldrbtvc	r6, [r3], #-3951	; 0xfffff091
     fbc:	646f6d5f 	strbtvs	r6, [pc], #-3423	; fc4 <.debug_str+0xfc4>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:682
         if(axp_dev->irq_data->irqs!=NULL)
     fc0:	78610065 	stmdavc	r1!, {r0, r2, r5, r6}^
     fc4:	65645f70 	strbvs	r5, [r4, #-3952]!	; 0xfffff090
     fc8:	65680076 	strbvs	r0, [r8, #-118]!	; 0xffffff8a
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:684
           {
             printk("[axp2585]axp_dev->irq_data->irqs in line:%d of %s is NOT NULL\n",__LINE__,__func__ );
     fcc:	73615f78 	cmnvc	r1, #120, 30	; 0x1e0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:687
           }
             else{
             printk("[axp2585]axp_dev->irq_data->irqs in line:%d of %s is  NULL\n",__LINE__,__func__ );
     fd0:	70755f63 	rsbsvc	r5, r5, r3, ror #30
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:684
      if(axp_dev->irq_data!=NULL)
      {
       printk("[axp2585]axp_dev->irq_data in line:%d of %s is NOT NULL\n",__LINE__,__func__ );
         if(axp_dev->irq_data->irqs!=NULL)
           {
             printk("[axp2585]axp_dev->irq_data->irqs in line:%d of %s is NOT NULL\n",__LINE__,__func__ );
     fd4:	00726570 	rsbseq	r6, r2, r0, ror r5
     fd8:	765f7473 			; <UNDEFINED> instruction: 0x765f7473
     fdc:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:687
           }
             else{
             printk("[axp2585]axp_dev->irq_data->irqs in line:%d of %s is  NULL\n",__LINE__,__func__ );
     fe0:	61627600 	cmnvs	r2, r0, lsl #12
     fe4:	656c0074 	strbvs	r0, [ip, #-116]!	; 0xffffff8c
     fe8:	76656464 	strbtvc	r6, [r5], -r4, ror #8
     fec:	73696c5f 	cmnvc	r9, #24320	; 0x5f00
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:693
            }
      }
      else
          printk("[axp2585]axp_dev->irq_data in line:%d of %s is  NULL\n",__LINE__,__func__ );

      if(axp_dev->irq!=NULL)
     ff0:	6f6c5f74 	svcvs	0x006c5f74
     ff4:	7a006b63 	bvc	1bd88 <axp2585_set_usb_vhold+0x1ab44>
     ff8:	5f656e6f 	svcpl	0x00656e6f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:695
           {
            printk("[axp2585]axp_dev->int irq in line:%d of %d is %s NOT NULL\n",__LINE__,axp_dev->irq,__func__ );
     ffc:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    1000:	66705f74 	uhsub16vs	r5, r0, r4
    1004:	4f50006e 	svcmi	0x0050006e
    1008:	5f524557 	svcpl	0x00524557
    100c:	50505553 	subspl	r5, r0, r3, asr r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:701
           }
           else
             {
               printk("[axp2585]axp_dev->irq in line:%d of %s is  NULL\n",__LINE__,__func__ );
             }
      if(axp_dev->irq_data!=NULL){
    1010:	545f594c 	ldrbpl	r5, [pc], #-2380	; 1018 <.debug_str+0x1018>
    1014:	4e484345 	cdpmi	3, 4, cr4, cr8, cr5, {2}
    1018:	474f4c4f 	strbmi	r4, [pc, -pc, asr #24]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:702
		ret = axp_request_irq(axp_dev, irq,
    101c:	494c5f59 	stmdbmi	ip, {r0, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    1020:	73004e4f 	movwvc	r4, #3663	; 0xe4f
    1024:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    1028:	71775f6d 	cmnvc	r7, sp, ror #30
    102c:	574f5000 	strbpl	r5, [pc, -r0]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:704
				axp2585_charger_irq[i].isr, chg_dev);
		if (ret != 0) {
    1030:	535f5245 	cmppl	pc, #1342177284	; 0x50000004
    1034:	4c505055 	mrrcmi	0, 5, r5, r0, cr5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:705
			dev_err(&pdev->dev, "failed to request %s IRQ %d: %d\n",
    1038:	52505f59 	subspl	r5, r0, #356	; 0x164
    103c:	565f504f 	ldrbpl	r5, [pc], -pc, asr #32
    1040:	41544c4f 	cmpmi	r4, pc, asr #24
    1044:	4d5f4547 	cfldr64mi	mvdx4, [pc, #-284]	; f30 <.debug_str+0xf30>
    1048:	70004e49 	andvc	r4, r0, r9, asr #28
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:723
		dev_warn(&pdev->dev, "failed to create attr group\n");

	return 0;
    printk("[axp2585]Quit %s\n",__func__);
out_irq:
	for (i = i - 1; i >= 0; i--) {
    104c:	735f756d 	cmpvc	pc, #457179136	; 0x1b400000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:705
             }
      if(axp_dev->irq_data!=NULL){
		ret = axp_request_irq(axp_dev, irq,
				axp2585_charger_irq[i].isr, chg_dev);
		if (ret != 0) {
			dev_err(&pdev->dev, "failed to request %s IRQ %d: %d\n",
    1050:	64747568 	ldrbtvs	r7, [r4], #-1384	; 0xfffffa98
    1054:	5f6e776f 	svcpl	0x006e776f
    1058:	63676863 	cmnvs	r7, #6488064	; 0x630000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:723
		dev_warn(&pdev->dev, "failed to create attr group\n");

	return 0;
    printk("[axp2585]Quit %s\n",__func__);
out_irq:
	for (i = i - 1; i >= 0; i--) {
    105c:	70007275 	andvc	r7, r0, r5, ror r2
    1060:	625f756d 	subsvs	r7, pc, #457179136	; 0x1b400000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:724
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
    1064:	745f7461 	ldrbvc	r7, [pc], #-1121	; 106c <.debug_str+0x106c>
    1068:	5f706d65 	svcpl	0x00706d65
    106c:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:723
		dev_warn(&pdev->dev, "failed to create attr group\n");

	return 0;
    printk("[axp2585]Quit %s\n",__func__);
out_irq:
	for (i = i - 1; i >= 0; i--) {
    1070:	7000656c 	andvc	r6, r0, ip, ror #10
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:724
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
    1074:	625f756d 	subsvs	r7, pc, #457179136	; 0x1b400000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:725
		if (irq < 0)
    1078:	635f7461 	cmpvs	pc, #1627389952	; 0x61000000
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:727
			continue;
		axp_free_irq(axp_dev, irq);
    107c:	67726168 	ldrbvs	r6, [r2, -r8, ror #2]!
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:725
	return 0;
    printk("[axp2585]Quit %s\n",__func__);
out_irq:
	for (i = i - 1; i >= 0; i--) {
		irq = platform_get_irq_byname(pdev, axp2585_charger_irq[i].name);
		if (irq < 0)
    1080:	74685f65 	strbtvc	r5, [r8], #-3941	; 0xfffff09b
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:727
			continue;
		axp_free_irq(axp_dev, irq);
    1084:	73750066 	cmnvc	r5, #102	; 0x66
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:723 (discriminator 2)
		dev_warn(&pdev->dev, "failed to create attr group\n");

	return 0;
    printk("[axp2585]Quit %s\n",__func__);
out_irq:
	for (i = i - 1; i >= 0; i--) {
    1088:	6e635f65 	cdpvs	15, 6, cr5, cr3, cr5, {3}
    108c:	43560074 	cmpmi	r6, #116	; 0x74
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:730
		if (irq < 0)
			continue;
		axp_free_irq(axp_dev, irq);
	}
fail:
	return -1;
    1090:	50435f43 	subpl	r5, r3, r3, asr #30
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:731
}
    1094:	5f444456 	svcpl	0x00444456
    1098:	00544942 	subseq	r4, r4, r2, asr #18
    109c:	495f524e 	ldmdbmi	pc, {r1, r2, r3, r6, r9, ip, lr}^	; <UNPREDICTABLE>
    10a0:	5443414e 	strbpl	r4, [r3], #-334	; 0xfffffeb2
axp2585_charger_init():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:363
		val &= ~(3 << 5);
		val |= 1 << 5;
		break;
	case 4:
		val &= ~(3 << 5);
		val |= 2 << 5;
    10a4:	5f455649 	svcpl	0x00455649
    10a8:	454c4946 	strbmi	r4, [ip, #-2374]	; 0xfffff6ba
    10ac:	61706b00 	cmnvs	r0, r0, lsl #22
    10b0:	5f6d6172 	svcpl	0x006d6172
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:359
	case 1:
		val &= ~(3 << 5);
		break;
	case 2:
		val &= ~(3 << 5);
		val |= 1 << 5;
    10b4:	69727473 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    10b8:	6200676e 	andvs	r6, r0, #28835840	; 0x1b80000
    10bc:	6b6e696c 	blvs	1b9b674 <axp2585_set_usb_vhold+0x1b9a430>
    10c0:	6972625f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r9, sp, lr}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:355
						| AXP2585_ADC_TSVOL_ENABLE);

	axp_regmap_read(map, AXP2585_TS_PIN_CONTROL, &val);
	switch (axp2585_config.pmu_init_adc_freq / 100) {
	case 1:
		val &= ~(3 << 5);
    10c4:	6e746867 	cdpvs	8, 7, cr6, cr4, cr7, {3}
    10c8:	00737365 	rsbseq	r7, r3, r5, ror #6
    10cc:	5f756d70 	svcpl	0x00756d70
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:453
		axp_regmap_clr_bits(map, 0x8e, 0x08);

	/* RDC initial */
	axp_regmap_read(map, AXP2585_RDC0, &val);
	if ((axp2585_config.pmu_battery_rdc) && (!(val & 0x40))) {
		rdc = (axp2585_config.pmu_battery_rdc * 10000 + 5371) / 10742;
    10d0:	5f746162 	svcpl	0x00746162
    10d4:	74756873 	ldrbtvc	r6, [r5], #-2163	; 0xfffff78d
    10d8:	6e776f64 	cdpvs	15, 7, cr6, cr7, cr4, {3}
    10dc:	66746c5f 			; <UNDEFINED> instruction: 0x66746c5f
    10e0:	574f5000 	strbpl	r5, [pc, -r0]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:454
		axp_regmap_write(map, AXP2585_RDC0, ((rdc >> 8) & 0x1F)|0x80);
    10e4:	535f5245 	cmppl	pc, #1342177284	; 0x50000004
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:453
		axp_regmap_clr_bits(map, 0x8e, 0x08);

	/* RDC initial */
	axp_regmap_read(map, AXP2585_RDC0, &val);
	if ((axp2585_config.pmu_battery_rdc) && (!(val & 0x40))) {
		rdc = (axp2585_config.pmu_battery_rdc * 10000 + 5371) / 10742;
    10e8:	4c505055 	mrrcmi	0, 5, r5, r0, cr5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:454
		axp_regmap_write(map, AXP2585_RDC0, ((rdc >> 8) & 0x1F)|0x80);
    10ec:	52505f59 	subspl	r5, r0, #356	; 0x164
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:453
		axp_regmap_clr_bits(map, 0x8e, 0x08);

	/* RDC initial */
	axp_regmap_read(map, AXP2585_RDC0, &val);
	if ((axp2585_config.pmu_battery_rdc) && (!(val & 0x40))) {
		rdc = (axp2585_config.pmu_battery_rdc * 10000 + 5371) / 10742;
    10f0:	435f504f 	cmpmi	pc, #79	; 0x4f
    10f4:	47524148 	ldrbmi	r4, [r2, -r8, asr #2]
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:454
		axp_regmap_write(map, AXP2585_RDC0, ((rdc >> 8) & 0x1F)|0x80);
    10f8:	4f435f45 	svcmi	0x00435f45
    10fc:	45544e55 	ldrbmi	r4, [r4, #-3669]	; 0xfffff1ab
    1100:	656c0052 	strbvs	r0, [ip, #-82]!	; 0xffffffae
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:455
		axp_regmap_write(map, AXP2585_RDC1, rdc & 0x00FF);
    1104:	006c6576 	rsbeq	r6, ip, r6, ror r5
    1108:	45574f50 	ldrbmi	r4, [r7, #-3920]	; 0xfffff0b0
    110c:	55535f52 	ldrbpl	r5, [r3, #-3922]	; 0xfffff0ae
    1110:	594c5050 	stmdbpl	ip, {r4, r6, ip, lr}^
    1114:	4345545f 	movtmi	r5, #21599	; 0x545f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:496
		if (update_min_times[i] == axp2585_config.pmu_update_min_time)
			break;
	}
	axp_regmap_update(map, AXP2585_ADJUST_PARA, i, 0x7);
	/*initial the ocv_cou_adjust_time*/
	for (i = 0; i < ARRAY_SIZE(ocv_cou_adjust_time); i++) {
    1118:	4c4f4e48 	mcrrmi	14, 4, r4, pc, cr8
    111c:	5f59474f 	svcpl	0x0059474f
    1120:	4f50494c 	svcmi	0x0050494c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:491
	/*enable fast charge */
	axp_regmap_update(map, 0x31, 0x04, 0x04);
	/*set POR time as 16s*/
	axp_regmap_update(map, AXP2585_POK_SET, 0x30, 0x30);
	for (i = 0; i < ARRAY_SIZE(update_min_times); i++) {
		if (update_min_times[i] == axp2585_config.pmu_update_min_time)
    1124:	70786100 	rsbsvc	r6, r8, r0, lsl #2
    1128:	35383532 	ldrcc	r3, [r8, #-1330]!	; 0xffffface
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:638

	if (pdev->dev.of_node) {
		/* get dt and sysconfig */
		ret = axp_charger_dt_parse(pdev->dev.of_node, &axp2585_config);
		if (ret) {
			pr_err("%s parse device tree err\n", __func__);
    112c:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
    1130:	6162695f 	cmnvs	r2, pc, asr r9
    1134:	6f6d0074 	svcvs	0x006d0074
    1138:	656c7564 	strbvs	r7, [ip, #-1380]!	; 0xfffffa9c
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:639
			return -EINVAL;
    113c:	65726600 	ldrbvs	r6, [r2, #-1536]!	; 0xfffffa00
    1140:	72615f65 	rsbvc	r5, r1, #404	; 0x194
axp2585_charger_init():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:497
			break;
	}
	axp_regmap_update(map, AXP2585_ADJUST_PARA, i, 0x7);
	/*initial the ocv_cou_adjust_time*/
	for (i = 0; i < ARRAY_SIZE(ocv_cou_adjust_time); i++) {
		if (ocv_cou_adjust_time[i] == axp2585_config.pmu_ocv_cou_adjust_time)
    1144:	62006165 	andvs	r6, r0, #1073741849	; 0x40000019
    1148:	68676972 	stmdavs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
axp2585_charger_probe():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:699
           {
            printk("[axp2585]axp_dev->int irq in line:%d of %d is %s NOT NULL\n",__LINE__,axp_dev->irq,__func__ );
           }
           else
             {
               printk("[axp2585]axp_dev->irq in line:%d of %s is  NULL\n",__LINE__,__func__ );
    114c:	73656e74 	cmnvc	r5, #116, 28	; 0x740
    1150:	65735f73 	ldrbvs	r5, [r3, #-3955]!	; 0xfffff08d
    1154:	74730074 	ldrbtvc	r0, [r3], #-116	; 0xffffff8c
    1158:	5f657461 	svcpl	0x00657461
    115c:	5f646461 	svcpl	0x00646461
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:691
             else{
             printk("[axp2585]axp_dev->irq_data->irqs in line:%d of %s is  NULL\n",__LINE__,__func__ );
            }
      }
      else
          printk("[axp2585]axp_dev->irq_data in line:%d of %s is  NULL\n",__LINE__,__func__ );
    1160:	65766575 	ldrbvs	r6, [r6, #-1397]!	; 0xfffffa8b
    1164:	735f746e 	cmpvc	pc, #1845493760	; 0x6e000000
    1168:	00746e65 	rsbseq	r6, r4, r5, ror #28
    116c:	635f6361 	cmpvs	pc, #-2080374783	; 0x84000001
    1170:	61007275 	tstvs	r0, r5, ror r2
    1174:	695f7078 	ldmdbvs	pc, {r3, r4, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:642
		if (ret) {
			pr_err("%s parse device tree err\n", __func__);
			return -EINVAL;
		}
	} else {
		pr_err("axp2585 charger device tree err!\n");
    1178:	635f7172 	cmpvs	pc, #-2147483620	; 0x8000001c
    117c:	5f706968 	svcpl	0x00706968
    1180:	61746164 	cmnvs	r4, r4, ror #2
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:643
		return -EBUSY;
    1184:	72656b00 	rsbvc	r6, r5, #0, 22
    1188:	5f73666e 	svcpl	0x0073666e
    118c:	6e65706f 	cdpvs	0, 6, cr7, cr5, cr15, {3}
    1190:	646f6e5f 	strbtvs	r6, [pc], #-3679	; 1198 <.debug_str+0x1198>
    1194:	72680065 	rsbvc	r0, r8, #101	; 0x65
    1198:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    119c:	61625f72 	smcvs	9714	; 0x25f2
axp2585_set_usb_ihold():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:104
static int axp2585_set_usb_ihold(struct axp_charger_dev *cdev, int cur)
{
	u8 tmp;
	struct axp_regmap *map = cdev->chip->regmap;

	if (cur) {
    11a0:	745f6573 	ldrbvc	r6, [pc], #-1395	; 11a8 <.debug_str+0x11a8>
    11a4:	00657079 	rsbeq	r7, r5, r9, ror r0
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:100
	axp_regmap_read(map, 0x11, &tmp);
	return (tmp*80 + 3880);
}

static int axp2585_set_usb_ihold(struct axp_charger_dev *cdev, int cur)
{
    11a8:	5f756d70 	svcpl	0x00756d70
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:106
	u8 tmp;
	struct axp_regmap *map = cdev->chip->regmap;

	if (cur) {
		/*axp_regmap_set_bits(map, 0xff,0x60);*/
		if (cur >= 100 && cur <= 3250) {
    11ac:	61647075 	smcvs	18181	; 0x4705
    11b0:	6d5f6574 	cfldr64vs	mvdx6, [pc, #-464]	; fe8 <.debug_str+0xfe8>
    11b4:	745f6e69 	ldrbvc	r6, [pc], #-3689	; 11bc <.debug_str+0x11bc>
    11b8:	00656d69 	rsbeq	r6, r5, r9, ror #26
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:108
			tmp = (cur - 100)/50;
			axp_regmap_update(map, 0x10, tmp, 0x3f);
    11bc:	5f707861 	svcpl	0x00707861
    11c0:	65657266 	strbvs	r7, [r5, #-614]!	; 0xfffffd9a
    11c4:	7172695f 	cmnvc	r2, pc, asr r9
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:102
}

static int axp2585_set_usb_ihold(struct axp_charger_dev *cdev, int cur)
{
	u8 tmp;
	struct axp_regmap *map = cdev->chip->regmap;
    11c8:	5f494800 	svcpl	0x00494800
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:108

	if (cur) {
		/*axp_regmap_set_bits(map, 0xff,0x60);*/
		if (cur >= 100 && cur <= 3250) {
			tmp = (cur - 100)/50;
			axp_regmap_update(map, 0x10, tmp, 0x3f);
    11cc:	54464f53 	strbpl	r4, [r6], #-3923	; 0xfffff0ad
    11d0:	00515249 	subseq	r5, r1, r9, asr #4
    11d4:	70737573 	rsbsvc	r7, r3, r3, ror r5
    11d8:	5f646e65 	svcpl	0x00646e65
    11dc:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    11e0:	6d700072 	ldclvs	0, cr0, [r0, #-456]!	; 0xfffffe38
    11e4:	61625f75 	smcvs	9717	; 0x25f5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:117
		}
	} else {
		/*axp_regmap_clr_bits(map, 0xff,0x60);*/
	}
	return 0;
}
    11e8:	72657474 	rsbvc	r7, r5, #116, 8	; 0x74000000
    11ec:	64725f79 	ldrbtvs	r5, [r2], #-3961	; 0xfffff087
    11f0:	6f700063 	svcvs	0x00700063
    11f4:	5f726577 	svcpl	0x00726577
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:81
		/*axp_regmap_set_bits(map, 0xff,0x60);*/
		if (vol >= 3880 && vol <= 5080) {
			tmp = (vol - 3880)/80;
			axp_regmap_update(map, 0x11, tmp, 0x0f);
		} else {
			pr_err("set usb limit voltage error, %d mV\n",
    11f8:	70707573 	rsbsvc	r7, r0, r3, ror r5
    11fc:	645f796c 	ldrbvs	r7, [pc], #-2412	; 1204 <.debug_str+0x1204>
    1200:	00637365 	rsbeq	r7, r3, r5, ror #6
    1204:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
    1208:	616d6d00 	cmnvs	sp, r0, lsl #26
    120c:	64657070 	strbtvs	r7, [r5], #-112	; 0xffffff90
    1210:	5f524e00 	svcpl	0x00524e00
    1214:	434f4c4d 	movtmi	r4, #64589	; 0xfc4d
    1218:	7566004b 	strbvc	r0, [r6, #-75]!	; 0xffffffb5
    121c:	7000636e 	andvc	r6, r0, lr, ror #6
    1220:	7265776f 	rsbvc	r7, r5, #29097984	; 0x1bc0000
    1224:	6174735f 	cmnvs	r4, pc, asr r3
    1228:	61007472 	tstvs	r0, r2, ror r4
    122c:	736f7475 	cmnvc	pc, #1962934272	; 0x75000000
    1230:	7065656c 	rsbvc	r6, r5, ip, ror #10
    1234:	616e655f 	cmnvs	lr, pc, asr r5
    1238:	64656c62 	strbtvs	r6, [r5], #-3170	; 0xfffff39e
    123c:	6e776f00 	cdpvs	15, 7, cr6, cr7, cr0, {0}
    1240:	69007265 	stmdbvs	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
axp2585_set_usb_vhold():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:75
static int axp2585_set_usb_vhold(struct axp_charger_dev *cdev, int vol)
{
	u8 tmp;
	struct axp_regmap *map = cdev->chip->regmap;

	if (vol) {
    1244:	5f737172 	svcpl	0x00737172
    1248:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:71
{
	return 0;
}

static int axp2585_set_usb_vhold(struct axp_charger_dev *cdev, int vol)
{
    124c:	0064656c 	rsbeq	r6, r4, ip, ror #10
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:77
	u8 tmp;
	struct axp_regmap *map = cdev->chip->regmap;

	if (vol) {
		/*axp_regmap_set_bits(map, 0xff,0x60);*/
		if (vol >= 3880 && vol <= 5080) {
    1250:	65666564 	strbvs	r6, [r6, #-1380]!	; 0xfffffa9c
    1254:	64657272 	strbtvs	r7, [r5], #-626	; 0xfffffd8e
    1258:	6765725f 			; <UNDEFINED> instruction: 0x6765725f
    125c:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:79
			tmp = (vol - 3880)/80;
			axp_regmap_update(map, 0x11, tmp, 0x0f);
    1260:	6f775f72 	svcvs	0x00775f72
    1264:	4d006b72 	vstrmi	d6, [r0, #-456]	; 0xfffffe38
    1268:	41524749 	cmpmi	r2, r9, asr #14
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:73
}

static int axp2585_set_usb_vhold(struct axp_charger_dev *cdev, int vol)
{
	u8 tmp;
	struct axp_regmap *map = cdev->chip->regmap;
    126c:	505f4554 	subspl	r4, pc, r4, asr r5	; <UNPREDICTABLE>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:79

	if (vol) {
		/*axp_regmap_set_bits(map, 0xff,0x60);*/
		if (vol >= 3880 && vol <= 5080) {
			tmp = (vol - 3880)/80;
			axp_regmap_update(map, 0x11, tmp, 0x0f);
    1270:	59545043 	ldmdbpl	r4, {r0, r1, r6, ip, lr}^
    1274:	00534550 	subseq	r4, r3, r0, asr r5
    1278:	5f64656c 	svcpl	0x0064656c
    127c:	73616c63 	cmnvc	r1, #25344	; 0x6300
    1280:	76656473 			; <UNDEFINED> instruction: 0x76656473
    1284:	61686300 	cmnvs	r8, r0, lsl #6
    1288:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:88
		}
	} else {
		/*axp_regmap_clr_bits(map, 0xff,0x60);*/
	}
	return 0;
}
    128c:	72745f67 	rsbsvc	r5, r4, #412	; 0x19c
    1290:	6e5f6769 	cdpvs	7, 5, cr6, cr15, cr9, {3}
    1294:	00656d61 	rsbeq	r6, r5, r1, ror #26
    1298:	5f76636f 	svcpl	0x0076636f
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:81
		/*axp_regmap_set_bits(map, 0xff,0x60);*/
		if (vol >= 3880 && vol <= 5080) {
			tmp = (vol - 3880)/80;
			axp_regmap_update(map, 0x11, tmp, 0x0f);
		} else {
			pr_err("set usb limit voltage error, %d mV\n",
    129c:	63726570 	cmnvs	r2, #112, 10	; 0x1c000000
    12a0:	00746e65 	rsbseq	r6, r4, r5, ror #28
    12a4:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    12a8:	72705f74 	rsbsvc	r5, r0, #116, 30	; 0x1d0
    12ac:	6e657665 	cdpvs	6, 6, cr7, cr5, cr5, {3}
    12b0:	69745f74 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    12b4:	6100656d 	tstvs	r0, sp, ror #10
    12b8:	76697463 	strbtvc	r7, [r9], -r3, ror #8
    12bc:	696a5f65 	stmdbvs	sl!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    12c0:	65696666 	strbvs	r6, [r9, #-1638]!	; 0xfffff99a
    12c4:	78610073 	stmdavc	r1!, {r0, r1, r4, r5, r6}^
    12c8:	6f705f70 	svcvs	0x00705f70
    12cc:	5f726577 	svcpl	0x00726577
    12d0:	70707573 	rsbsvc	r7, r0, r3, ror r5
    12d4:	755f796c 	ldrbvc	r7, [pc, #-2412]	; 970 <.debug_str+0x970>
    12d8:	6765726e 	strbvs	r7, [r5, -lr, ror #4]!
    12dc:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    12e0:	6f630072 	svcvs	0x00630072
    12e4:	735f6572 	cmpvc	pc, #478150656	; 0x1c800000
    12e8:	00657a69 	rsbeq	r7, r5, r9, ror #20
    12ec:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
    12f0:	72610065 	rsbvc	r0, r1, #101	; 0x65
    12f4:	705f6863 	subsvc	r6, pc, r3, ror #16
    12f8:	5f737968 	svcpl	0x00737968
    12fc:	695f6f74 	ldmdbvs	pc, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^	; <UNPREDICTABLE>
    1300:	70616d64 	rsbvc	r6, r1, r4, ror #26
    1304:	66666f5f 	uqsaxvs	r6, r6, pc	; <UNPREDICTABLE>
    1308:	00746573 	rsbseq	r6, r4, r3, ror r5
    130c:	65776f70 	ldrbvs	r6, [r7, #-3952]!	; 0xfffff090
    1310:	66666f72 	uqsub16vs	r6, r6, r2
    1314:	74616c5f 	strbtvc	r6, [r1], #-3167	; 0xfffff3a1
    1318:	44560065 	ldrbmi	r0, [r6], #-101	; 0xffffff9b
    131c:	45525f44 	ldrbmi	r5, [r2, #-3908]	; 0xfffff0bc
    1320:	425f3153 	subsmi	r3, pc, #-1073741804	; 0xc0000014
    1324:	72005449 	andvc	r5, r0, #1224736768	; 0x49000000
    1328:	6f747365 	svcvs	0x00747365
    132c:	655f6572 	ldrbvs	r6, [pc, #-1394]	; dc2 <.debug_str+0xdc2>
    1330:	796c7261 	stmdbvc	ip!, {r0, r5, r6, r9, ip, sp, lr}^
    1334:	776f7000 	strbvc	r7, [pc, -r0]!
    1338:	735f7265 	cmpvc	pc, #1342177286	; 0x50000006
    133c:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    1340:	574f5000 	strbpl	r5, [pc, -r0]
    1344:	535f5245 	cmppl	pc, #1342177284	; 0x50000004
    1348:	4c505055 	mrrcmi	0, 5, r5, r0, cr5
    134c:	52505f59 	subspl	r5, r0, #356	; 0x164
    1350:	435f504f 	cmpmi	pc, #79	; 0x4f
    1354:	54534e4f 	ldrbpl	r4, [r3], #-3663	; 0xfffff1b1
    1358:	5f544e41 	svcpl	0x00544e41
    135c:	52414843 	subpl	r4, r1, #4390912	; 0x430000
    1360:	435f4547 	cmpmi	pc, #297795584	; 0x11c00000
    1364:	45525255 	ldrbmi	r5, [r2, #-597]	; 0xfffffdab
    1368:	4d00544e 	cfstrsmi	mvf5, [r0, #-312]	; 0xfffffec8
    136c:	4c55444f 	cfldrdmi	mvd4, [r5], {79}	; 0x4f
    1370:	54535f45 	ldrbpl	r5, [r3], #-3909	; 0xfffff0bb
    1374:	5f455441 	svcpl	0x00455441
    1378:	4556494c 	ldrbmi	r4, [r6, #-2380]	; 0xfffff6b4
    137c:	72656b00 	rsbvc	r6, r5, #0, 22
    1380:	5f6c656e 	svcpl	0x006c656e
    1384:	626d7973 	rsbvs	r7, sp, #1884160	; 0x1cc000
    1388:	6d006c6f 	stcvs	12, cr6, [r0, #-444]	; 0xfffffe44
    138c:	6e5f646f 	cdpvs	4, 5, cr6, cr15, cr15, {3}
    1390:	00656d61 	rsbeq	r6, r5, r1, ror #26
    1394:	5f766564 	svcpl	0x00766564
    1398:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
    139c:	72656b00 	rsbvc	r6, r5, #0, 22
    13a0:	5f73666e 	svcpl	0x0073666e
    13a4:	6e65706f 	cdpvs	0, 6, cr7, cr5, cr15, {3}
    13a8:	6c69665f 	stclvs	6, cr6, [r9], #-380	; 0xfffffe84
    13ac:	6d700065 	ldclvs	0, cr0, [r0, #-404]!	; 0xfffffe6c
    13b0:	73615f75 	cmnvc	r1, #468	; 0x1d4
    13b4:	616c735f 	cmnvs	ip, pc, asr r3
    13b8:	69006576 	stmdbvs	r0, {r1, r2, r4, r5, r6, r8, sl, sp, lr}
    13bc:	7463616e 	strbtvc	r6, [r3], #-366	; 0xfffffe92
    13c0:	5f657669 	svcpl	0x00657669
    13c4:	00656761 	rsbeq	r6, r5, r1, ror #14
    13c8:	33666c45 	cmncc	r6, #17664	; 0x4500
    13cc:	79535f32 	ldmdbvc	r3, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
    13d0:	6966006d 	stmdbvs	r6!, {r0, r2, r3, r5, r6}^
    13d4:	7265746c 	rsbvc	r7, r5, #108, 8	; 0x6c000000
    13d8:	71657300 	cmnvc	r5, r0, lsl #6
    13dc:	65706f5f 	ldrbvs	r6, [r0, #-3935]!	; 0xfffff0a1
    13e0:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
    13e4:	00736e6f 	rsbseq	r6, r3, pc, ror #28
    13e8:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    13ec:	705f7265 	subsvc	r7, pc, r5, ror #4
    13f0:	61766972 	cmnvs	r6, r2, ror r9
    13f4:	4d006574 	cfstr32mi	mvfx6, [r0, #-464]	; 0xfffffe30
    13f8:	41524749 	cmpmi	r2, r9, asr #14
    13fc:	525f4554 	subspl	r4, pc, #84, 10	; 0x15000000
    1400:	414c4345 	cmpmi	ip, r5, asr #6
    1404:	42414d49 	submi	r4, r1, #4672	; 0x1240
    1408:	5000454c 	andpl	r4, r0, ip, asr #10
    140c:	5245574f 	subpl	r5, r5, #20709376	; 0x13c0000
    1410:	5055535f 	subspl	r5, r5, pc, asr r3
    1414:	5f594c50 	svcpl	0x00594c50
    1418:	504f5250 	subpl	r5, pc, r0, asr r2	; <UNPREDICTABLE>
    141c:	4c4f565f 	mcrrmi	6, 5, r5, pc, cr15
    1420:	45474154 	strbmi	r4, [r7, #-340]	; 0xfffffeac
    1424:	56434f5f 			; <UNDEFINED> instruction: 0x56434f5f
    1428:	71657300 	cmnvc	r5, r0, lsl #6
    142c:	6f68735f 	svcvs	0x0068735f
    1430:	68630077 	stmdavs	r3!, {r0, r1, r2, r4, r5, r6}^
    1434:	69677261 	stmdbvs	r7!, {r0, r5, r6, r9, ip, sp, lr}^
    1438:	665f676e 	ldrbvs	r6, [pc], -lr, ror #14
    143c:	5f6c6c75 	svcpl	0x006c6c75
    1440:	67697274 			; <UNDEFINED> instruction: 0x67697274
    1444:	756d7000 	strbvc	r7, [sp, #-0]!
    1448:	6e75725f 	mrcvs	2, 3, r7, cr5, cr15, {2}
    144c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    1450:	6768635f 			; <UNDEFINED> instruction: 0x6768635f
    1454:	00727563 	rsbseq	r7, r2, r3, ror #10
    1458:	7473616c 	ldrbtvc	r6, [r3], #-364	; 0xfffffe94
    145c:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    1460:	4f500065 	svcmi	0x00500065
    1464:	5f524557 	svcpl	0x00524557
    1468:	50505553 	subspl	r5, r0, r3, asr r5
    146c:	545f594c 	ldrbpl	r5, [pc], #-2380	; 1474 <.debug_str+0x1474>
    1470:	5f455059 	svcpl	0x00455059
    1474:	5f425355 	svcpl	0x00425355
    1478:	00414341 	subeq	r4, r1, r1, asr #6
    147c:	69747268 	ldmdbvs	r4!, {r3, r5, r6, r9, ip, sp, lr}^
    1480:	5f72656d 	svcpl	0x0072656d
    1484:	6f736572 	svcvs	0x00736572
    1488:	6974756c 	ldmdbvs	r4!, {r2, r3, r5, r6, r8, sl, ip, sp, lr}^
    148c:	70006e6f 	andvc	r6, r0, pc, ror #28
    1490:	6674616c 	ldrbtvs	r6, [r4], -ip, ror #2
    1494:	5f6d726f 	svcpl	0x006d726f
    1498:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    149c:	61007265 	tstvs	r0, r5, ror #4
    14a0:	35327078 	ldrcc	r7, [r2, #-120]!	; 0xffffff88
    14a4:	695f3538 	ldmdbvs	pc, {r3, r4, r5, r8, sl, ip, sp}^	; <UNPREDICTABLE>
    14a8:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
    14ac:	745f6567 	ldrbvc	r6, [pc], #-1383	; 14b4 <.debug_str+0x14b4>
    14b0:	416d5f6f 	cmnmi	sp, pc, ror #30
    14b4:	72777000 	rsbsvc	r7, r7, #0
    14b8:	5f637273 	svcpl	0x00637273
    14bc:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
    14c0:	6b007465 	blvs	1e65c <axp2585_set_usb_vhold+0x1d418>
    14c4:	666e7265 	strbtvs	r7, [lr], -r5, ror #4
    14c8:	6c655f73 	stclvs	15, cr5, [r5], #-460	; 0xfffffe34
    14cc:	615f6d65 	cmpvs	pc, r5, ror #26
    14d0:	00727474 	rsbseq	r7, r2, r4, ror r4
    14d4:	5f627375 	svcpl	0x00627375
    14d8:	696c6176 	stmdbvs	ip!, {r1, r2, r4, r5, r6, r8, sp, lr}^
    14dc:	72700064 	rsbsvc	r0, r0, #100	; 0x64
    14e0:	6e657665 	cdpvs	6, 6, cr7, cr5, cr5, {3}
    14e4:	6c735f74 	ldclvs	15, cr5, [r3], #-464	; 0xfffffe30
    14e8:	5f706565 	svcpl	0x00706565
    14ec:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    14f0:	756d7000 	strbvc	r7, [sp, #-0]!
    14f4:	7277705f 	rsbsvc	r7, r7, #95	; 0x5f
    14f8:	765f6e6f 	ldrbvc	r6, [pc], -pc, ror #28
    14fc:	50006c6f 	andpl	r6, r0, pc, ror #24
    1500:	5245574f 	subpl	r5, r5, #20709376	; 0x13c0000
    1504:	5055535f 	subspl	r5, r5, pc, asr r3
    1508:	5f594c50 	svcpl	0x00594c50
    150c:	504f5250 	subpl	r5, pc, r0, asr r2	; <UNPREDICTABLE>
    1510:	5255435f 	subspl	r4, r5, #2080374785	; 0x7c000001
    1514:	544e4552 	strbpl	r4, [lr], #-1362	; 0xfffffaae
    1518:	4f4f425f 	svcmi	0x004f425f
    151c:	43560054 	cmpmi	r6, #84	; 0x54
    1520:	4c505f43 	mrrcmi	15, 4, r5, r0, cr3
    1524:	49425f4c 	stmdbmi	r2, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    1528:	78610054 	stmdavc	r1!, {r2, r4, r6}^
    152c:	38353270 	ldmdacc	r5!, {r4, r5, r6, r9, ip, sp}
    1530:	68635f35 	stmdavs	r3!, {r0, r2, r4, r5, r8, r9, sl, fp, ip, lr}^
    1534:	65677261 	strbvs	r7, [r7, #-609]!	; 0xfffffd9f
    1538:	72695f72 	rsbvc	r5, r9, #456	; 0x1c8
    153c:	65640071 	strbvs	r0, [r4, #-113]!	; 0xffffff8f
    1540:	6d705f76 	ldclvs	15, cr5, [r0, #-472]!	; 0xfffffe28
    1544:	73706f5f 	cmnvc	r0, #380	; 0x17c
    1548:	44445600 	strbmi	r5, [r4], #-1536	; 0xfffffa00
    154c:	5550435f 	ldrbpl	r4, [r0, #-863]	; 0xfffffca1
    1550:	49425f41 	stmdbmi	r2, {r0, r6, r8, r9, sl, fp, ip, lr}^
    1554:	75720054 	ldrbvc	r0, [r2, #-84]!	; 0xffffffac
    1558:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
    155c:	74735f65 	ldrbtvc	r5, [r3], #-3941	; 0xfffff09b
    1560:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    1564:	47494d00 	strbmi	r4, [r9, -r0, lsl #26]
    1568:	45544152 	ldrbmi	r4, [r4, #-338]	; 0xfffffeae
axp2585_charger_initcall():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:814

static int __init axp2585_charger_initcall(void)
{
	int ret;

	ret = platform_driver_register(&axp2585_charger_driver);
    156c:	4749485f 	smlsldmi	r4, r9, pc, r8	; <UNPREDICTABLE>
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:811
	.resume   = axp2585_charger_resume,
	.shutdown = axp2585_charger_shutdown,
};

static int __init axp2585_charger_initcall(void)
{
    1570:	4f544148 	svcmi	0x00544148
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:814
	int ret;

	ret = platform_driver_register(&axp2585_charger_driver);
    1574:	0043494d 	subeq	r4, r3, sp, asr #18
    1578:	5f444456 	svcpl	0x00444456
    157c:	00544942 	subseq	r4, r4, r2, asr #18
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:815
	if (IS_ERR_VALUE(ret)) {
    1580:	6c6c6f70 	stclvs	15, cr6, [ip], #-448	; 0xfffffe40
    1584:	5f676e69 	svcpl	0x00676e69
    1588:	616c6564 	cmnvs	ip, r4, ror #10
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:816
		pr_err("%s: failed, errno %d\n", __func__, ret);
    158c:	74730079 	ldrbtvc	r0, [r3], #-121	; 0xffffff87
    1590:	5f657461 	svcpl	0x00657461
    1594:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    1598:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
    159c:	0064657a 	rsbeq	r6, r4, sl, ror r5
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:817
		return -EINVAL;
    15a0:	45574f50 	ldrbmi	r4, [r7, #-3920]	; 0xfffff0b0
    15a4:	55535f52 	ldrbpl	r5, [r3, #-3922]	; 0xfffff0ae
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:820
	}

	return 0;
    15a8:	594c5050 	stmdbpl	ip, {r4, r6, ip, lr}^
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:821
}
    15ac:	4145485f 	cmpmi	r5, pc, asr r8
    15b0:	5f48544c 	svcpl	0x0048544c
    15b4:	5245564f 	subpl	r5, r5, #82837504	; 0x4f00000
    15b8:	54414548 	strbpl	r4, [r1], #-1352	; 0xfffffab8
    15bc:	695f5f00 	ldmdbvs	pc, {r8, r9, sl, fp, ip, lr}^	; <UNPREDICTABLE>
    15c0:	6374696e 	cmnvs	r4, #1802240	; 0x1b8000
    15c4:	5f6c6c61 	svcpl	0x006c6c61
    15c8:	32707861 	rsbscc	r7, r0, #6356992	; 0x610000
    15cc:	5f353835 	svcpl	0x00353835
    15d0:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
    15d4:	5f726567 	svcpl	0x00726567
    15d8:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    15dc:	6c6c6163 	stfvse	f6, [ip], #-396	; 0xfffffe74
    15e0:	4f4b0037 	svcmi	0x004b0037
    15e4:	4e5f4a42 	vnmlami.f32	s9, s30, s4
    15e8:	59545f53 	ldmdbpl	r4, {r0, r1, r4, r6, r8, r9, sl, fp, ip, lr}^
    15ec:	4e5f4550 	mrcmi	5, 2, r4, cr15, cr0, {2}
    15f0:	65005445 	strvs	r5, [r0, #-1093]	; 0xfffffbbb
    15f4:	72657478 	rsbvc	r7, r5, #120, 8	; 0x78000000
    15f8:	5f6c616e 	svcpl	0x006c616e
    15fc:	65776f70 	ldrbvs	r6, [r7, #-3952]!	; 0xfffff090
    1600:	68635f72 	stmdavs	r3!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1604:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
    1608:	74730064 	ldrbtvc	r0, [r3], #-100	; 0xffffff9c
    160c:	62617472 	rsbvs	r7, r1, #1912602624	; 0x72000000
    1610:	69617700 	stmdbvs	r1!, {r8, r9, sl, ip, sp, lr}^
    1614:	75715f74 	ldrbvc	r5, [r1, #-3956]!	; 0xfffff08c
    1618:	5f657565 	svcpl	0x00657565
    161c:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
    1620:	5000745f 	andpl	r7, r0, pc, asr r4
    1624:	5245574f 	subpl	r5, r5, #20709376	; 0x13c0000
    1628:	5055535f 	subspl	r5, r5, pc, asr r3
    162c:	5f594c50 	svcpl	0x00594c50
    1630:	504f5250 	subpl	r5, pc, r0, asr r2	; <UNPREDICTABLE>
    1634:	5245535f 	subpl	r5, r5, #2080374785	; 0x7c000001
    1638:	5f4c4149 	svcpl	0x004c4149
    163c:	424d554e 	submi	r5, sp, #327155712	; 0x13800000
    1640:	56005245 	strpl	r5, [r0], -r5, asr #4
    1644:	4c5f4343 	mrrcmi	3, 4, r4, pc, cr3	; <UNPREDICTABLE>
    1648:	4e494f44 	cdpmi	15, 4, cr4, cr9, cr4, {2}
    164c:	5449425f 	strbpl	r4, [r9], #-607	; 0xfffffda1
    1650:	574f5000 	strbpl	r5, [pc, -r0]
    1654:	535f5245 	cmppl	pc, #1342177284	; 0x50000004
    1658:	4c505055 	mrrcmi	0, 5, r5, r0, cr5
    165c:	52505f59 	subspl	r5, r0, #356	; 0x164
    1660:	505f504f 	subspl	r5, pc, pc, asr #32
    1664:	5245574f 	subpl	r5, r5, #20709376	; 0x13c0000
    1668:	574f4e5f 	smlsldpl	r4, pc, pc, lr	; <UNPREDICTABLE>
    166c:	53415400 	movtpl	r5, #5120	; 0x1400
    1670:	54454c4b 	strbpl	r4, [r5], #-3147	; 0xfffff3b5
    1674:	464f535f 			; <UNDEFINED> instruction: 0x464f535f
    1678:	51524954 	cmppl	r2, r4, asr r9
    167c:	70786100 	rsbsvc	r6, r8, r0, lsl #2
    1680:	6168635f 	cmnvs	r8, pc, asr r3
    1684:	72656772 	rsbvc	r6, r5, #29884416	; 0x1c80000
    1688:	5f74645f 	svcpl	0x0074645f
    168c:	73726170 	cmnvc	r2, #112, 2
    1690:	6d700065 	ldclvs	0, cr0, [r0, #-404]!	; 0xfffffe6c
    1694:	6e695f75 	mcrvs	15, 3, r5, cr9, cr5, {3}
    1698:	625f7469 	subsvs	r7, pc, #1761607680	; 0x69000000
    169c:	6e655f63 	cdpvs	15, 6, cr5, cr5, cr3, {3}
    16a0:	70786100 	rsbsvc	r6, r8, r0, lsl #2
    16a4:	35383532 	ldrcc	r3, [r8, #-1330]!	; 0xffffface
    16a8:	6168635f 	cmnvs	r8, pc, asr r3
    16ac:	72656772 	rsbvc	r6, r5, #29884416	; 0x1c80000
    16b0:	7375735f 	cmnvc	r5, #2080374785	; 0x7c000001
    16b4:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
    16b8:	69727400 	ldmdbvs	r2!, {sl, ip, sp, lr}^
    16bc:	696c5f67 	stmdbvs	ip!, {r0, r1, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    16c0:	6d007473 	cfstrsvs	mvf7, [r0, #-460]	; 0xfffffe34
    16c4:	6c75646f 	cfldrdvs	mvd6, [r5], #-444	; 0xfffffe44
    16c8:	74615f65 	strbtvc	r5, [r1], #-3941	; 0xfffff09b
    16cc:	62697274 	rsbvs	r7, r9, #116, 4	; 0x40000007
    16d0:	00657475 	rsbeq	r7, r5, r5, ror r4
    16d4:	5f4d5241 	svcpl	0x004d5241
    16d8:	5f434553 	svcpl	0x00434553
    16dc:	45564544 	ldrbmi	r4, [r6, #-1348]	; 0xfffffabc
    16e0:	00544958 	subseq	r4, r4, r8, asr r9
    16e4:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
    16e8:	616d6400 	cmnvs	sp, r0, lsl #8
    16ec:	6e66705f 	mcrvs	0, 3, r7, cr6, cr15, {2}
    16f0:	66666f5f 	uqsaxvs	r6, r6, pc	; <UNPREDICTABLE>
    16f4:	00746573 	rsbseq	r6, r4, r3, ror r5
    16f8:	45574f50 	ldrbmi	r4, [r7, #-3920]	; 0xfffff0b0
    16fc:	55535f52 	ldrbpl	r5, [r3, #-3922]	; 0xfffff0ae
    1700:	594c5050 	stmdbpl	ip, {r4, r6, ip, lr}^
    1704:	4f52505f 	svcmi	0x0052505f
    1708:	55415f50 	strbpl	r5, [r1, #-3920]	; 0xfffff0b0
    170c:	4e454854 	mcrmi	8, 2, r4, cr5, cr4, {2}
    1710:	00434954 	subeq	r4, r3, r4, asr r9
    1714:	5f64666d 	svcpl	0x0064666d
    1718:	6c6c6563 	cfstr64vs	mvdx6, [ip], #-396	; 0xfffffe74
    171c:	574f5000 	strbpl	r5, [pc, -r0]
    1720:	535f5245 	cmppl	pc, #1342177284	; 0x50000004
    1724:	4c505055 	mrrcmi	0, 5, r5, r0, cr5
    1728:	52505f59 	subspl	r5, r0, #356	; 0x164
    172c:	545f504f 	ldrbpl	r5, [pc], #-79	; 1734 <.debug_str+0x1734>
    1730:	5f454d49 	svcpl	0x00454d49
    1734:	465f4f54 	usaxmi	r4, pc, r4	; <UNPREDICTABLE>
    1738:	5f4c4c55 	svcpl	0x004c4c55
    173c:	00475641 	subeq	r5, r7, r1, asr #12
    1740:	665f726e 	ldrbvs	r7, [pc], -lr, ror #4
    1744:	00656572 	rsbeq	r6, r5, r2, ror r5
    1748:	45574f50 	ldrbmi	r4, [r7, #-3920]	; 0xfffff0b0
    174c:	55535f52 	ldrbpl	r5, [r3, #-3922]	; 0xfffff0ae
    1750:	594c5050 	stmdbpl	ip, {r4, r6, ip, lr}^
    1754:	4345545f 	movtmi	r5, #21599	; 0x545f
    1758:	4c4f4e48 	mcrrmi	14, 4, r4, pc, cr8
    175c:	5f59474f 	svcpl	0x0059474f
    1760:	4e4b4e55 	mcrmi	14, 2, r4, cr11, cr5, {2}
    1764:	004e574f 	subeq	r5, lr, pc, asr #14
    1768:	5f756d70 	svcpl	0x00756d70
    176c:	6b776f70 	blvs	1ddd534 <axp2585_set_usb_vhold+0x1ddc2f0>
    1770:	6f5f7965 	svcvs	0x005f7965
    1774:	69745f6e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    1778:	7000656d 	andvc	r6, r0, sp, ror #10
    177c:	625f756d 	subsvs	r7, pc, #457179136	; 0x1b400000
    1780:	745f7461 	ldrbvc	r7, [pc], #-1121	; 1788 <.debug_str+0x1788>
    1784:	5f706d65 	svcpl	0x00706d65
    1788:	61726170 	cmnvs	r2, r0, ror r1
    178c:	6d700031 	ldclvs	0, cr0, [r0, #-196]!	; 0xffffff3c
    1790:	61625f75 	smcvs	9717	; 0x25f5
    1794:	65745f74 	ldrbvs	r5, [r4, #-3956]!	; 0xfffff08c
    1798:	705f706d 	subsvc	r7, pc, sp, rrx
    179c:	32617261 	rsbcc	r7, r1, #268435462	; 0x10000006
    17a0:	756d7000 	strbvc	r7, [sp, #-0]!
    17a4:	7461625f 	strbtvc	r6, [r1], #-607	; 0xfffffda1
    17a8:	6d65745f 	cfstrdvs	mvd7, [r5, #-380]!	; 0xfffffe84
    17ac:	61705f70 	cmnvs	r0, r0, ror pc
    17b0:	00336172 	eorseq	r6, r3, r2, ror r1
    17b4:	5f756d70 	svcpl	0x00756d70
    17b8:	5f746162 	svcpl	0x00746162
    17bc:	706d6574 	rsbvc	r6, sp, r4, ror r5
    17c0:	7261705f 	rsbvc	r7, r1, #95	; 0x5f
    17c4:	70003461 	andvc	r3, r0, r1, ror #8
    17c8:	625f756d 	subsvs	r7, pc, #457179136	; 0x1b400000
    17cc:	745f7461 	ldrbvc	r7, [pc], #-1121	; 17d4 <.debug_str+0x17d4>
    17d0:	5f706d65 	svcpl	0x00706d65
    17d4:	61726170 	cmnvs	r2, r0, ror r1
    17d8:	6d700035 	ldclvs	0, cr0, [r0, #-212]!	; 0xffffff2c
    17dc:	61625f75 	smcvs	9717	; 0x25f5
    17e0:	65745f74 	ldrbvs	r5, [r4, #-3956]!	; 0xfffff08c
    17e4:	705f706d 	subsvc	r7, pc, sp, rrx
    17e8:	36617261 	strbtcc	r7, [r1], -r1, ror #4
    17ec:	646f6d00 	strbtvs	r6, [pc], #-3328	; 17f4 <.debug_str+0x17f4>
    17f0:	6372615f 	cmnvs	r2, #-1073741801	; 0xc0000017
    17f4:	70735f68 	rsbsvc	r5, r3, r8, ror #30
    17f8:	66696365 	strbtvs	r6, [r9], -r5, ror #6
    17fc:	70006369 	andvc	r6, r0, r9, ror #6
    1800:	625f756d 	subsvs	r7, pc, #457179136	; 0x1b400000
    1804:	745f7461 	ldrbvc	r7, [pc], #-1121	; 180c <.debug_str+0x180c>
    1808:	5f706d65 	svcpl	0x00706d65
    180c:	61726170 	cmnvs	r2, r0, ror r1
    1810:	6d700038 	ldclvs	0, cr0, [r0, #-224]!	; 0xffffff20
    1814:	61625f75 	smcvs	9717	; 0x25f5
    1818:	65745f74 	ldrbvs	r5, [r4, #-3956]!	; 0xfffff08c
    181c:	705f706d 	subsvc	r7, pc, sp, rrx
    1820:	39617261 	stmdbcc	r1!, {r0, r5, r6, r9, ip, sp, lr}^
    1824:	62737500 	rsbsvs	r7, r3, #0, 10
    1828:	5f63705f 	svcpl	0x0063705f
    182c:	00727563 	rsbseq	r7, r2, r3, ror #10
    1830:	6f6f425f 	svcvs	0x006f425f
    1834:	656e006c 	strbvs	r0, [lr, #-108]!	; 0xffffff94
    1838:	6e696c74 	mcrvs	12, 3, r6, cr9, cr4, {3}
    183c:	736e5f6b 	cmnvc	lr, #428	; 0x1ac
    1840:	6e6f7a00 	vmulvs.f32	s15, s30, s0
    1844:	72660065 	rsbvc	r0, r6, #101	; 0x65
    1848:	6c5f6565 	cfldr64vs	mvdx6, [pc], {101}	; 0x65
    184c:	00747369 	rsbseq	r7, r4, r9, ror #6
    1850:	45574f50 	ldrbmi	r4, [r7, #-3920]	; 0xfffff0b0
    1854:	55535f52 	ldrbpl	r5, [r3, #-3922]	; 0xfffff0ae
    1858:	594c5050 	stmdbpl	ip, {r4, r6, ip, lr}^
    185c:	4145485f 	cmpmi	r5, pc, asr r8
    1860:	5f48544c 	svcpl	0x0048544c
    1864:	4e4b4e55 	mcrmi	14, 2, r4, cr11, cr5, {2}
    1868:	004e574f 	subeq	r5, lr, pc, asr #14
    186c:	65726170 	ldrbvs	r6, [r2, #-368]!	; 0xfffffe90
    1870:	6700746e 	strvs	r7, [r0, -lr, ror #8]
    1874:	725f7465 	subsvc	r7, pc, #1694498816	; 0x65000000
    1878:	5f747365 	svcpl	0x00747365
    187c:	00706163 	rsbseq	r6, r0, r3, ror #2
    1880:	696c6176 	stmdbvs	ip!, {r1, r2, r4, r5, r6, r8, sp, lr}^
    1884:	69625f64 	stmdbvs	r2!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    1888:	6c720074 	ldclvs	0, cr0, [r2], #-464	; 0xfffffe30
    188c:	006b636f 	rsbeq	r6, fp, pc, ror #6
    1890:	5f756d70 	svcpl	0x00756d70
    1894:	73756276 	cmnvc	r5, #1610612743	; 0x60000007
    1898:	665f6e65 	ldrbvs	r6, [pc], -r5, ror #28
    189c:	00636e75 	rsbeq	r6, r3, r5, ror lr
    18a0:	63616564 	cmnvs	r1, #100, 10	; 0x19000000
    18a4:	61766974 	cmnvs	r6, r4, ror r9
    18a8:	775f6574 			; <UNDEFINED> instruction: 0x775f6574
    18ac:	71746961 	cmnvc	r4, r1, ror #18
    18b0:	616c7000 	cmnvs	ip, r0
    18b4:	726f6674 	rsbvc	r6, pc, #116, 12	; 0x7400000
    18b8:	65735f6d 	ldrbvs	r5, [r3, #-3949]!	; 0xfffff093
    18bc:	72645f74 	rsbvc	r5, r4, #116, 30	; 0x1d0
    18c0:	74616476 	strbtvc	r6, [r1], #-1142	; 0xfffffb8a
    18c4:	62760061 	rsbsvs	r0, r6, #97	; 0x61
    18c8:	72707375 	rsbsvc	r7, r0, #-738197503	; 0xd4000001
    18cc:	6e657365 	cdpvs	3, 6, cr7, cr5, cr5, {3}
    18d0:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    18d4:	65670074 	strbvs	r0, [r7, #-116]!	; 0xffffff8c
    18d8:	62695f74 	rsbvs	r5, r9, #116, 30	; 0x1d0
    18dc:	70007461 	andvc	r7, r0, r1, ror #8
    18e0:	625f756d 	subsvs	r7, pc, #457179136	; 0x1b400000
    18e4:	5f747461 	svcpl	0x00747461
    18e8:	5f706163 	svcpl	0x00706163
    18ec:	72726f63 	rsbsvc	r6, r2, #396	; 0x18c
    18f0:	00746365 	rsbseq	r6, r4, r5, ror #6
    18f4:	626f7270 	rsbvs	r7, pc, #112, 4
    18f8:	6c450065 	mcrrvs	0, 6, r0, r5, cr5
    18fc:	5f323366 	svcpl	0x00323366
    1900:	64726f57 	ldrbtvs	r6, [r2], #-3927	; 0xfffff0a9
    1904:	74746100 	ldrbtvc	r6, [r4], #-256	; 0xffffff00
    1908:	6c007372 	stcvs	3, cr7, [r0], {114}	; 0x72
    190c:	68637461 	stmdavs	r3!, {r0, r5, r6, sl, ip, sp, lr}^
    1910:	6572745f 	ldrbvs	r7, [r2, #-1119]!	; 0xfffffba1
    1914:	6f6e5f65 	svcvs	0x006e5f65
    1918:	61006564 	tstvs	r0, r4, ror #10
    191c:	76697463 	strbtvc	r7, [r9], -r3, ror #8
    1920:	00657461 	rsbeq	r7, r5, r1, ror #8
    1924:	5f767264 	svcpl	0x00767264
    1928:	756f7267 	strbvc	r7, [pc, #-615]!	; 16c9 <.debug_str+0x16c9>
    192c:	66007370 			; <UNDEFINED> instruction: 0x66007370
    1930:	5f6c6c75 	svcpl	0x006c6c75
    1934:	67697274 			; <UNDEFINED> instruction: 0x67697274
    1938:	70786100 	rsbsvc	r6, r8, r0, lsl #2
    193c:	6265645f 	rsbvs	r6, r5, #1593835520	; 0x5f000000
    1940:	6d5f6775 	ldclvs	7, cr6, [pc, #-468]	; 1774 <.debug_str+0x1774>
    1944:	006b7361 	rsbeq	r7, fp, r1, ror #6
    1948:	5f756d70 	svcpl	0x00756d70
    194c:	765f6361 	ldrbvc	r6, [pc], -r1, ror #6
    1950:	73006c6f 	movwvc	r6, #3183	; 0xc6f
    1954:	70757465 	rsbsvc	r7, r5, r5, ror #8
    1958:	69727000 	ldmdbvs	r2!, {ip, sp, lr}^
    195c:	65746176 	ldrbvs	r6, [r4, #-374]!	; 0xfffffe8a
    1960:	6265645f 	rsbvs	r6, r5, #1593835520	; 0x5f000000
    1964:	69006775 	stmdbvs	r0, {r0, r2, r4, r5, r6, r8, r9, sl, sp, lr}
    1968:	616c5f73 	smcvs	50675	; 0xc5f3
    196c:	735f6574 	cmpvc	pc, #116, 10	; 0x1d000000
    1970:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
    1974:	6465646e 	strbtvs	r6, [r5], #-1134	; 0xfffffb92
    1978:	4f525000 	svcmi	0x00525000
    197c:	445f4542 	ldrbmi	r4, [pc], #-1346	; 1984 <.debug_str+0x1984>
    1980:	55414645 	strbpl	r4, [r1, #-1605]	; 0xfffff9bb
    1984:	535f544c 	cmppl	pc, #76, 8	; 0x4c000000
    1988:	54415254 	strbpl	r5, [r1], #-596	; 0xfffffdac
    198c:	00594745 	subseq	r4, r9, r5, asr #14
    1990:	6276636f 	rsbsvs	r6, r6, #-1140850687	; 0xbc000001
    1994:	725f7461 	subsvc	r7, pc, #1627389952	; 0x61000000
    1998:	70007365 	andvc	r7, r0, r5, ror #6
    199c:	7265776f 	rsbvc	r7, r5, #29097984	; 0x1bc0000
    19a0:	7075735f 	rsbsvc	r7, r5, pc, asr r3
    19a4:	00796c70 	rsbseq	r6, r9, r0, ror ip
    19a8:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
    19ac:	6e6f7a5f 	mcrvs	10, 3, r7, cr15, cr15, {2}
    19b0:	56007365 	strpl	r7, [r0], -r5, ror #6
    19b4:	505f4343 	subspl	r4, pc, r3, asr #6
    19b8:	49425f4c 	stmdbmi	r2, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    19bc:	6d640054 	stclvs	0, cr0, [r4, #-336]!	; 0xfffffeb0
    19c0:	706f5f61 	rsbvc	r5, pc, r1, ror #30
    19c4:	4e470073 	mcrmi	0, 2, r0, cr7, cr3, {3}
    19c8:	38432055 	stmdacc	r3, {r0, r2, r4, r6, sp}^
    19cc:	2e352039 	mrccs	0, 1, r2, cr5, cr9, {1}
    19d0:	20312e33 	eorscs	r2, r1, r3, lsr lr
    19d4:	36313032 			; <UNDEFINED> instruction: 0x36313032
    19d8:	33313130 	teqcc	r1, #48, 2
    19dc:	6c6d2d20 	stclvs	13, cr2, [sp], #-128	; 0xffffff80
    19e0:	6c747469 	cfldrdvs	mvd7, [r4], #-420	; 0xfffffe5c
    19e4:	6e652d65 	cdpvs	13, 6, cr2, cr5, cr5, {3}
    19e8:	6e616964 	cdpvs	9, 6, cr6, cr1, cr4, {3}
    19ec:	616d2d20 	cmnvs	sp, r0, lsr #26
    19f0:	613d6962 	teqvs	sp, r2, ror #18
    19f4:	73637061 	cmnvc	r3, #97	; 0x61
    19f8:	6e696c2d 	cdpvs	12, 6, cr6, cr9, cr13, {1}
    19fc:	2d207875 	stccs	8, cr7, [r0, #-468]!	; 0xfffffe2c
    1a00:	2d6f6e6d 	stclcs	14, cr6, [pc, #-436]!	; 1854 <.debug_str+0x1854>
    1a04:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
    1a08:	6e692d62 	cdpvs	13, 6, cr2, cr9, cr2, {3}
    1a0c:	77726574 			; <UNDEFINED> instruction: 0x77726574
    1a10:	206b726f 	rsbcs	r7, fp, pc, ror #4
    1a14:	70666d2d 	rsbvc	r6, r6, sp, lsr #26
    1a18:	66763d75 			; <UNDEFINED> instruction: 0x66763d75
    1a1c:	6d2d2070 	stcvs	0, cr2, [sp, #-448]!	; 0xfffffe40
    1a20:	206d7261 	rsbcs	r7, sp, r1, ror #4
    1a24:	72616d2d 	rsbvc	r6, r1, #2880	; 0xb40
    1a28:	613d6863 	teqvs	sp, r3, ror #16
    1a2c:	37766d72 			; <UNDEFINED> instruction: 0x37766d72
    1a30:	2d20612d 	stfcss	f6, [r0, #-180]!	; 0xffffff4c
    1a34:	6f6c666d 	svcvs	0x006c666d
    1a38:	612d7461 	teqvs	sp, r1, ror #8
    1a3c:	733d6962 	teqvc	sp, #1605632	; 0x188000
    1a40:	2074666f 	rsbscs	r6, r4, pc, ror #12
    1a44:	75746d2d 	ldrbvc	r6, [r4, #-3373]!	; 0xfffff2d3
    1a48:	633d656e 	teqvs	sp, #461373440	; 0x1b800000
    1a4c:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    1a50:	39612d78 	stmdbcc	r1!, {r3, r4, r5, r6, r8, sl, fp, sp}^
    1a54:	746d2d20 	strbtvc	r2, [sp], #-3360	; 0xfffff2e0
    1a58:	642d736c 	strtvs	r7, [sp], #-876	; 0xfffffc94
    1a5c:	656c6169 	strbvs	r6, [ip, #-361]!	; 0xfffffe97
    1a60:	673d7463 	ldrvs	r7, [sp, -r3, ror #8]!
    1a64:	2d20756e 	cfstr32cs	mvfx7, [r0, #-440]!	; 0xfffffe48
    1a68:	4f2d2067 	svcmi	0x002d2067
    1a6c:	732d2032 	teqvc	sp, #50	; 0x32
    1a70:	673d6474 			; <UNDEFINED> instruction: 0x673d6474
    1a74:	3039756e 	eorscc	r7, r9, lr, ror #10
    1a78:	6e662d20 	cdpvs	13, 6, cr2, cr6, cr0, {1}
    1a7c:	74732d6f 	ldrbtvc	r2, [r3], #-3439	; 0xfffff291
    1a80:	74636972 	strbtvc	r6, [r3], #-2418	; 0xfffff68e
    1a84:	696c612d 	stmdbvs	ip!, {r0, r2, r3, r5, r8, sp, lr}^
    1a88:	6e697361 	cdpvs	3, 6, cr7, cr9, cr1, {3}
    1a8c:	662d2067 	strtvs	r2, [sp], -r7, rrx
    1a90:	632d6f6e 	teqvs	sp, #440	; 0x1b8
    1a94:	6f6d6d6f 	svcvs	0x006d6d6f
    1a98:	662d206e 	strtvs	r2, [sp], -lr, rrx
    1a9c:	502d6f6e 	eorpl	r6, sp, lr, ror #30
    1aa0:	2d204549 	cfstr32cs	mvfx4, [r0, #-292]!	; 0xfffffedc
    1aa4:	2d6f6e66 	stclcs	14, cr6, [pc, #-408]!	; 1914 <.debug_str+0x1914>
    1aa8:	72617764 	rsbvc	r7, r1, #100, 14	; 0x1900000
    1aac:	632d3266 	teqvs	sp, #1610612742	; 0x60000006
    1ab0:	612d6966 	teqvs	sp, r6, ror #18
    1ab4:	2d206d73 	stccs	13, cr6, [r0, #-460]!	; 0xfffffe34
    1ab8:	2d6f6e66 	stclcs	14, cr6, [pc, #-408]!	; 1928 <.debug_str+0x1928>
    1abc:	2d617069 	stclcs	0, cr7, [r1, #-420]!	; 0xfffffe5c
    1ac0:	20617273 	rsbcs	r7, r1, r3, ror r2
    1ac4:	6e75662d 	cdpvs	6, 7, cr6, cr5, cr13, {1}
    1ac8:	646e6977 	strbtvs	r6, [lr], #-2423	; 0xfffff689
    1acc:	6261742d 	rsbvs	r7, r1, #754974720	; 0x2d000000
    1ad0:	2073656c 	rsbscs	r6, r3, ip, ror #10
    1ad4:	6f6e662d 	svcvs	0x006e662d
    1ad8:	6c65642d 	cfstrdvs	mvd6, [r5], #-180	; 0xffffff4c
    1adc:	2d657465 	cfstrdcs	mvd7, [r5, #-404]!	; 0xfffffe6c
    1ae0:	6c6c756e 	cfstr64vs	mvdx7, [ip], #-440	; 0xfffffe48
    1ae4:	696f702d 	stmdbvs	pc!, {r0, r2, r3, r5, ip, sp, lr}^	; <UNPREDICTABLE>
    1ae8:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    1aec:	6568632d 	strbvs	r6, [r8, #-813]!	; 0xfffffcd3
    1af0:	20736b63 	rsbscs	r6, r3, r3, ror #22
    1af4:	6f6e662d 	svcvs	0x006e662d
    1af8:	6174732d 	cmnvs	r4, sp, lsr #6
    1afc:	702d6b63 	eorvc	r6, sp, r3, ror #22
    1b00:	65746f72 	ldrbvs	r6, [r4, #-3954]!	; 0xfffff08e
    1b04:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
    1b08:	6f662d20 	svcvs	0x00662d20
    1b0c:	2d74696d 	ldclcs	9, cr6, [r4, #-436]!	; 0xfffffe4c
    1b10:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
    1b14:	6f702d65 	svcvs	0x00702d65
    1b18:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
    1b1c:	662d2072 			; <UNDEFINED> instruction: 0x662d2072
    1b20:	762d6f6e 	strtvc	r6, [sp], -lr, ror #30
    1b24:	742d7261 	strtvc	r7, [sp], #-609	; 0xfffffd9f
    1b28:	6b636172 	blvs	18da0f8 <axp2585_set_usb_vhold+0x18d8eb4>
    1b2c:	2d676e69 	stclcs	14, cr6, [r7, #-420]!	; 0xfffffe5c
    1b30:	69737361 	ldmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    1b34:	656d6e67 	strbvs	r6, [sp, #-3687]!	; 0xfffff199
    1b38:	2073746e 	rsbscs	r7, r3, lr, ror #8
    1b3c:	6f6e662d 	svcvs	0x006e662d
    1b40:	7274732d 	rsbsvc	r7, r4, #-1275068416	; 0xb4000000
    1b44:	2d746369 	ldclcs	3, cr6, [r4, #-420]!	; 0xfffffe5c
    1b48:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    1b4c:	776f6c66 	strbvc	r6, [pc, -r6, ror #24]!
    1b50:	63662d20 	cmnvs	r6, #32, 26	; 0x800
    1b54:	65736e6f 	ldrbvs	r6, [r3, #-3695]!	; 0xfffff191
    1b58:	2d657672 	stclcs	6, cr7, [r5, #-456]!	; 0xfffffe38
    1b5c:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    1b60:	2d2d206b 	stccs	0, cr2, [sp, #-428]!	; 0xfffffe54
    1b64:	61726170 	cmnvs	r2, r0, ror r1
    1b68:	6c61206d 	stclvs	0, cr2, [r1], #-436	; 0xfffffe4c
    1b6c:	2d776f6c 	ldclcs	15, cr6, [r7, #-432]!	; 0xfffffe50
    1b70:	726f7473 	rsbvc	r7, pc, #1929379840	; 0x73000000
    1b74:	61642d65 	cmnvs	r4, r5, ror #26
    1b78:	722d6174 	eorvc	r6, sp, #116, 2
    1b7c:	73656361 	cmnvc	r5, #-2080374783	; 0x84000001
    1b80:	7300303d 	movwvc	r3, #61	; 0x3d
    1b84:	79736275 	ldmdbvc	r3!, {r0, r2, r4, r5, r6, r9, sp, lr}^
    1b88:	72705f73 	rsbsvc	r5, r0, #460	; 0x1cc
    1b8c:	74617669 	strbtvc	r7, [r1], #-1641	; 0xfffff997
    1b90:	61770065 	cmnvs	r7, r5, rrx
    1b94:	745f7469 	ldrbvc	r7, [pc], #-1129	; 1b9c <.debug_str+0x1b9c>
    1b98:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    1b9c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    1ba0:	65640073 	strbvs	r0, [r4, #-115]!	; 0xffffff8d
    1ba4:	68636174 	stmdavs	r3!, {r2, r4, r5, r6, r8, sp, lr}^
    1ba8:	6f747300 	svcvs	0x00747300
    1bac:	70006572 	andvc	r6, r0, r2, ror r5
    1bb0:	6674616c 	ldrbtvs	r6, [r4], -ip, ror #2
    1bb4:	5f6d726f 	svcpl	0x006d726f
    1bb8:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
    1bbc:	695f6563 	ldmdbvs	pc, {r0, r1, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    1bc0:	524c0064 	subpl	r0, ip, #100	; 0x64
    1bc4:	4e495f55 	mcrmi	15, 2, r5, cr9, cr5, {2}
    1bc8:	49544341 	ldmdbmi	r4, {r0, r6, r8, r9, lr}^
    1bcc:	465f4556 			; <UNDEFINED> instruction: 0x465f4556
    1bd0:	00454c49 	subeq	r4, r5, r9, asr #24
    1bd4:	5f6c7067 	svcpl	0x006c7067
    1bd8:	75747566 	ldrbvc	r7, [r4, #-1382]!	; 0xfffffa9a
    1bdc:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
    1be0:	00736372 	rsbseq	r6, r3, r2, ror r3
    1be4:	555f524e 	ldrbpl	r5, [pc, #-590]	; 199e <.debug_str+0x199e>
    1be8:	4154534e 	cmpmi	r4, lr, asr #6
    1bec:	5f454c42 	svcpl	0x00454c42
    1bf0:	0053464e 	subseq	r4, r3, lr, asr #12
    1bf4:	5f616d64 	svcpl	0x00616d64
    1bf8:	6b73616d 	blvs	1cda1b4 <axp2585_set_usb_vhold+0x1cd8f70>
    1bfc:	776e7500 	strbvc	r7, [lr, -r0, lsl #10]!
    1c00:	5f646e69 	svcpl	0x00646e69
    1c04:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
    1c08:	72700065 	rsbsvc	r0, r0, #101	; 0x65
    1c0c:	69745f65 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    1c10:	735f656d 	cmpvc	pc, #457179136	; 0x1b400000
    1c14:	67007465 	strvs	r7, [r0, -r5, ror #8]
    1c18:	635f6c70 	cmpvs	pc, #112, 24	; 0x7000
    1c1c:	00736372 	rsbseq	r6, r3, r2, ror r3
    1c20:	73637263 	cmnvc	r3, #805306374	; 0x30000006
    1c24:	574f5000 	strbpl	r5, [pc, -r0]
    1c28:	535f5245 	cmppl	pc, #1342177284	; 0x50000004
    1c2c:	4c505055 	mrrcmi	0, 5, r5, r0, cr5
    1c30:	52505f59 	subspl	r5, r0, #356	; 0x164
    1c34:	435f504f 	cmpmi	pc, #79	; 0x4f
    1c38:	47524148 	ldrbmi	r4, [r2, -r8, asr #2]
    1c3c:	4d455f45 	stclmi	15, cr5, [r5, #-276]	; 0xfffffeec
    1c40:	00595450 	subseq	r5, r9, r0, asr r4
    1c44:	5f736c63 	svcpl	0x00736c63
    1c48:	006b736d 	rsbeq	r7, fp, sp, ror #6
    1c4c:	6e5f7369 	cdpvs	3, 5, cr7, cr15, cr9, {3}
    1c50:	7172696f 	cmnvc	r2, pc, ror #18
    1c54:	7375735f 	cmnvc	r5, #2080374785	; 0x7c000001
    1c58:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
    1c5c:	41006465 	tstmi	r0, r5, ror #8
    1c60:	535f4d52 	cmppl	pc, #5248	; 0x1480
    1c64:	4d5f4345 	ldclmi	3, cr4, [pc, #-276]	; 1b58 <.debug_str+0x1b58>
    1c68:	64005841 	strvs	r5, [r0], #-2113	; 0xfffff7bf
    1c6c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1c70:	766f5f72 	uqsub16vc	r5, pc, r2	; <UNPREDICTABLE>
    1c74:	69727265 	ldmdbvs	r2!, {r0, r2, r5, r6, r9, ip, sp, lr}^
    1c78:	61006564 	tstvs	r0, r4, ror #10
    1c7c:	5f686372 	svcpl	0x00686372
    1c80:	6e697073 	mcrvs	0, 3, r7, cr9, cr3, {3}
    1c84:	6b636f6c 	blvs	18dda3c <axp2585_set_usb_vhold+0x18dc7f8>
    1c88:	6400745f 	strvs	r7, [r0], #-1119	; 0xfffffba1
    1c8c:	6d5f616d 	ldfvse	f6, [pc, #-436]	; 1ae0 <.debug_str+0x1ae0>
    1c90:	61006d65 	tstvs	r0, r5, ror #26
    1c94:	35327078 	ldrcc	r7, [r2, #-120]!	; 0xffffff88
    1c98:	635f3538 	cmpvs	pc, #56, 10	; 0xe000000
    1c9c:	67726168 	ldrbvs	r6, [r2, -r8, ror #2]!
    1ca0:	705f7265 	subsvc	r7, pc, r5, ror #4
    1ca4:	65626f72 	strbvs	r6, [r2, #-3954]!	; 0xfffff08e
    1ca8:	70786100 	rsbsvc	r6, r8, r0, lsl #2
    1cac:	35383532 	ldrcc	r3, [r8, #-1330]!	; 0xffffface
    1cb0:	6162765f 	cmnvs	r2, pc, asr r6
    1cb4:	6f745f74 	svcvs	0x00745f74
    1cb8:	00566d5f 	subseq	r6, r6, pc, asr sp
    1cbc:	45574f50 	ldrbmi	r4, [r7, #-3920]	; 0xfffff0b0
    1cc0:	55535f52 	ldrbpl	r5, [r3, #-3922]	; 0xfffff0ae
    1cc4:	594c5050 	stmdbpl	ip, {r4, r6, ip, lr}^
    1cc8:	4f52505f 	svcmi	0x0052505f
    1ccc:	45545f50 	ldrbmi	r5, [r4, #-3920]	; 0xfffff0b0
    1cd0:	4f4e4843 	svcmi	0x004e4843
    1cd4:	59474f4c 	stmdbpl	r7, {r2, r3, r6, r8, r9, sl, fp, lr}^
    1cd8:	74656400 	strbtvc	r6, [r5], #-1024	; 0xfffffc00
    1cdc:	756e755f 	strbvc	r7, [lr, #-1375]!	; 0xfffffaa1
    1ce0:	00646573 	rsbeq	r6, r4, r3, ror r5
    1ce4:	62617267 	rsbvs	r7, r1, #1879048198	; 0x70000006
    1ce8:	7275635f 	rsbsvc	r6, r5, #2080374785	; 0x7c000001
    1cec:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    1cf0:	00736e5f 	rsbseq	r6, r3, pc, asr lr
    1cf4:	656e6f7a 	strbvs	r6, [lr, #-3962]!	; 0xfffff086
    1cf8:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    1cfc:	682f0065 	stmdavs	pc!, {r0, r2, r5, r6}	; <UNPREDICTABLE>
    1d00:	2f656d6f 	svccs	0x00656d6f
    1d04:	69742f61 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sl, fp, sp}^
    1d08:	6f72702d 	svcvs	0x0072702d
    1d0c:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    1d10:	732d726f 	teqvc	sp, #-268435450	; 0xf0000006
    1d14:	6c2d6b64 	stcvs	11, cr6, [sp], #-400	; 0xfffffe70
    1d18:	78756e69 	ldmdavc	r5!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
    1d1c:	336d612d 	cmncc	sp, #1073741835	; 0x4000000b
    1d20:	2d783533 	cfldr64cs	mvdx3, [r8, #-204]!	; 0xffffff34
    1d24:	2d6d7665 	stclcs	6, cr7, [sp, #-404]!	; 0xfffffe6c
    1d28:	302e3330 	eorcc	r3, lr, r0, lsr r3
    1d2c:	30302e33 	eorscc	r2, r0, r3, lsr lr
    1d30:	2f34302e 	svccs	0x0034302e
    1d34:	72616f62 	rsbvc	r6, r1, #392	; 0x188
    1d38:	75732d64 	ldrbvc	r2, [r3, #-3428]!	; 0xfffff29c
    1d3c:	726f7070 	rsbvc	r7, pc, #112	; 0x70
    1d40:	696c2f74 	stmdbvs	ip!, {r2, r4, r5, r6, r8, r9, sl, fp, sp}^
    1d44:	2d78756e 	cfldr64cs	mvdx7, [r8, #-440]!	; 0xfffffe48
    1d48:	2e342e34 	mrccs	14, 1, r2, cr4, cr4, {1}
    1d4c:	672b3134 			; <UNDEFINED> instruction: 0x672b3134
    1d50:	55417469 	strbpl	r7, [r1, #-1129]	; 0xfffffb97
    1d54:	4e494f54 	mcrmi	15, 2, r4, cr9, cr4, {2}
    1d58:	39662b43 	stmdbcc	r6!, {r0, r1, r6, r8, r9, fp, sp}^
    1d5c:	30663666 	rsbcc	r3, r6, r6, ror #12
    1d60:	64326264 	ldrtvs	r6, [r2], #-612	; 0xfffffd9c
    1d64:	3966672d 	stmdbcc	r6!, {r0, r2, r3, r5, r8, r9, sl, sp, lr}^
    1d68:	30663666 	rsbcc	r3, r6, r6, ror #12
    1d6c:	64326264 	ldrtvs	r6, [r2], #-612	; 0xfffffd9c
    1d70:	6f69002f 	svcvs	0x0069002f
    1d74:	5f756d6d 	svcpl	0x00756d6d
    1d78:	756f7267 	strbvc	r7, [pc, #-615]!	; 1b19 <.debug_str+0x1b19>
    1d7c:	65750070 	ldrbvs	r0, [r5, #-112]!	; 0xffffff90
    1d80:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
    1d84:	6d6f6300 	stclvs	3, cr6, [pc, #-0]	; 1d8c <.debug_str+0x1d8c>
    1d88:	74636170 	strbtvc	r6, [r3], #-368	; 0xfffffe90
    1d8c:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    1d90:	65646973 	strbvs	r6, [r4, #-2419]!	; 0xfffff68d
    1d94:	00646572 	rsbeq	r6, r4, r2, ror r5
    1d98:	6a626f6b 	bvs	189db4c <axp2585_set_usb_vhold+0x189c908>
    1d9c:	6d6f635f 	stclvs	3, cr6, [pc, #-380]!	; 1c28 <.debug_str+0x1c28>
    1da0:	74656c70 	strbtvc	r6, [r5], #-3184	; 0xfffff390
    1da4:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    1da8:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
    1dac:	4f500078 	svcmi	0x00500078
    1db0:	5f524557 	svcpl	0x00524557
    1db4:	50505553 	subspl	r5, r0, r3, asr r5
    1db8:	485f594c 	ldmdami	pc, {r2, r3, r6, r8, fp, ip, lr}^	; <UNPREDICTABLE>
    1dbc:	544c4145 	strbpl	r4, [ip], #-325	; 0xfffffebb
    1dc0:	41535f48 	cmpmi	r3, r8, asr #30
    1dc4:	59544546 	ldmdbpl	r4, {r1, r2, r6, r8, sl, lr}^
    1dc8:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
    1dcc:	455f5245 	ldrbmi	r5, [pc, #-581]	; 1b8f <.debug_str+0x1b8f>
    1dd0:	52495058 	subpl	r5, r9, #88	; 0x58
    1dd4:	75730045 	ldrbvc	r0, [r3, #-69]!	; 0xffffffbb
    1dd8:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
    1ddc:	68635f64 	stmdavs	r3!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    1de0:	72756367 	rsbsvc	r6, r5, #-1677721599	; 0x9c000001
    1de4:	76656400 	strbtvc	r6, [r5], -r0, lsl #8
    1de8:	5f6d705f 	svcpl	0x006d705f
    1dec:	00736f71 	rsbseq	r6, r3, r1, ror pc
    1df0:	69727473 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    1df4:	4500676e 	strmi	r6, [r0, #-1902]	; 0xfffff892
    1df8:	3233666c 	eorscc	r6, r3, #108, 12	; 0x6c00000
    1dfc:	6464415f 	strbtvs	r4, [r4], #-351	; 0xfffffea1
    1e00:	64690072 	strbtvs	r0, [r9], #-114	; 0xffffff8e
    1e04:	6572665f 	ldrbvs	r6, [r2, #-1631]!	; 0xfffff9a1
    1e08:	68740065 	ldmdavs	r4!, {r0, r2, r5, r6}^
    1e0c:	6e5f7761 	cdpvs	7, 5, cr7, cr15, cr1, {3}
    1e10:	7172696f 	cmnvc	r2, pc, ror #18
    1e14:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
    1e18:	73755f74 	cmnvc	r5, #116, 30	; 0x1d0
    1e1c:	6e5f7265 	cdpvs	2, 5, cr7, cr15, cr5, {3}
    1e20:	77720073 			; <UNDEFINED> instruction: 0x77720073
    1e24:	6b636f6c 	blvs	18ddbdc <axp2585_set_usb_vhold+0x18dc998>
    1e28:	7500745f 	strvc	r7, [r0, #-1119]	; 0xfffffba1
    1e2c:	635f6273 	cmpvs	pc, #805306375	; 0x30000007
    1e30:	72007275 	andvc	r7, r0, #1342177287	; 0x50000007
    1e34:	6e656365 	cdpvs	3, 6, cr6, cr5, cr5, {3}
    1e38:	6f725f74 	svcvs	0x00725f74
    1e3c:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    1e40:	76740064 	ldrbtvc	r0, [r4], -r4, rrx
    1e44:	56003436 			; <UNDEFINED> instruction: 0x56003436
    1e48:	475f4444 	ldrbmi	r4, [pc, -r4, asr #8]
    1e4c:	425f5550 	subsmi	r5, pc, #80, 10	; 0x14000000
    1e50:	50005449 	andpl	r5, r0, r9, asr #8
    1e54:	5245574f 	subpl	r5, r5, #20709376	; 0x13c0000
    1e58:	5055535f 	subspl	r5, r5, pc, asr r3
    1e5c:	5f594c50 	svcpl	0x00594c50
    1e60:	504f5250 	subpl	r5, pc, r0, asr r2	; <UNPREDICTABLE>
    1e64:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
    1e68:	4f545f45 	svcmi	0x00545f45
    1e6c:	4c55465f 	mrrcmi	6, 5, r4, r5, cr15
    1e70:	4f4e5f4c 	svcmi	0x004e5f4c
    1e74:	4f4d0057 	svcmi	0x004d0057
    1e78:	454c5544 	strbmi	r5, [ip, #-1348]	; 0xfffffabc
    1e7c:	4154535f 	cmpmi	r4, pc, asr r3
    1e80:	475f4554 			; <UNDEFINED> instruction: 0x475f4554
    1e84:	474e494f 	strbmi	r4, [lr, -pc, asr #18]
    1e88:	696c6200 	stmdbvs	ip!, {r9, sp, lr}^
    1e8c:	735f6b6e 	cmpvc	pc, #112640	; 0x1b800
    1e90:	61007465 	tstvs	r0, r5, ror #8
    1e94:	615f7078 	cmpvs	pc, r8, ror r0	; <UNPREDICTABLE>
    1e98:	725f6364 	subsvc	r6, pc, #100, 6	; 0x90000001
    1e9c:	50007365 	andpl	r7, r0, r5, ror #6
    1ea0:	5245574f 	subpl	r5, r5, #20709376	; 0x13c0000
    1ea4:	5055535f 	subspl	r5, r5, pc, asr r3
    1ea8:	5f594c50 	svcpl	0x00594c50
    1eac:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
    1eb0:	4253555f 	subsmi	r5, r3, #398458880	; 0x17c00000
    1eb4:	5044435f 	subpl	r4, r4, pc, asr r3
    1eb8:	61686300 	cmnvs	r8, r0, lsl #6
    1ebc:	5f656772 	svcpl	0x00656772
    1ec0:	6c6c7566 	cfstr64vs	mvdx7, [ip], #-408	; 0xfffffe68
    1ec4:	7365645f 	cmnvc	r5, #1593835520	; 0x5f000000
    1ec8:	006e6769 	rsbeq	r6, lr, r9, ror #14
    1ecc:	5f746573 	svcpl	0x00746573
    1ed0:	695f6361 	ldmdbvs	pc, {r0, r5, r6, r8, r9, sp, lr}^	; <UNPREDICTABLE>
    1ed4:	646c6f68 	strbtvs	r6, [ip], #-3944	; 0xfffff098
    1ed8:	574f5000 	strbpl	r5, [pc, -r0]
    1edc:	535f5245 	cmppl	pc, #1342177284	; 0x50000004
    1ee0:	4c505055 	mrrcmi	0, 5, r5, r0, cr5
    1ee4:	52505f59 	subspl	r5, r0, #356	; 0x164
    1ee8:	545f504f 	ldrbpl	r5, [pc], #-79	; 1ef0 <.debug_str+0x1ef0>
    1eec:	00455059 	subeq	r5, r5, r9, asr r0
    1ef0:	5f786568 	svcpl	0x00786568
    1ef4:	00637361 	rsbeq	r7, r3, r1, ror #6
    1ef8:	5f746573 	svcpl	0x00746573
    1efc:	765f6361 	ldrbvc	r6, [pc], -r1, ror #6
    1f00:	646c6f68 	strbtvs	r6, [ip], #-3944	; 0xfffff098
    1f04:	574f5000 	strbpl	r5, [pc, -r0]
    1f08:	535f5245 	cmppl	pc, #1342177284	; 0x50000004
    1f0c:	4c505055 	mrrcmi	0, 5, r5, r0, cr5
    1f10:	59545f59 	ldmdbpl	r4, {r0, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    1f14:	555f4550 	ldrbpl	r4, [pc, #-1360]	; 19cc <.debug_str+0x19cc>
    1f18:	4f4e4b4e 	svcmi	0x004e4b4e
    1f1c:	69004e57 	stmdbvs	r0, {r0, r1, r2, r4, r6, r9, sl, fp, lr}
    1f20:	6c735f73 	ldclvs	15, cr5, [r3], #-460	; 0xfffffe34
    1f24:	00657661 	rsbeq	r7, r5, r1, ror #12
    1f28:	5f4d5241 	svcpl	0x004d5241
    1f2c:	5f434553 	svcpl	0x00434553
    1f30:	54494e49 	strbpl	r4, [r9], #-3657	; 0xfffff1b7
    1f34:	72747300 	rsbsvc	r7, r4, #0, 6
    1f38:	006c6176 	rsbeq	r6, ip, r6, ror r1
    1f3c:	45574f50 	ldrbmi	r4, [r7, #-3920]	; 0xfffff0b0
    1f40:	55535f52 	ldrbpl	r5, [r3, #-3922]	; 0xfffff0ae
    1f44:	594c5050 	stmdbpl	ip, {r4, r6, ip, lr}^
    1f48:	4f52505f 	svcmi	0x0052505f
    1f4c:	52505f50 	subspl	r5, r0, #80, 30	; 0x140
    1f50:	4e455345 	cdpmi	3, 4, cr5, cr5, cr5, {2}
    1f54:	616d0054 	qdsubvs	r0, r4, sp
    1f58:	00686374 	rsbeq	r6, r8, r4, ror r3
    1f5c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    1f60:	6d700072 	ldclvs	0, cr0, [r0, #-456]!	; 0xfffffe38
    1f64:	73755f75 	cmnvc	r5, #468	; 0x1d4
    1f68:	56006465 	strpl	r6, [r0], -r5, ror #8
    1f6c:	445f4343 	ldrbmi	r4, [pc], #-835	; 1f74 <.debug_str+0x1f74>
    1f70:	5f4d4152 	svcpl	0x004d4152
    1f74:	00544942 	subseq	r4, r4, r2, asr #18
    1f78:	5f756d70 	svcpl	0x00756d70
    1f7c:	6b776f70 	blvs	1dddd44 <axp2585_set_usb_vhold+0x1ddcb00>
    1f80:	6f5f7965 	svcvs	0x005f7965
    1f84:	645f6666 	ldrbvs	r6, [pc], #-1638	; 1f8c <.debug_str+0x1f8c>
    1f88:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    1f8c:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    1f90:	6d640065 	stclvs	0, cr0, [r4, #-404]!	; 0xfffffe6c
    1f94:	6f635f61 	svcvs	0x00635f61
    1f98:	65726568 	ldrbvs	r6, [r2, #-1384]!	; 0xfffffa98
    1f9c:	6d5f746e 	cfldrdvs	mvd7, [pc, #-440]	; 1dec <.debug_str+0x1dec>
    1fa0:	6d006d65 	stcvs	13, cr6, [r0, #-404]	; 0xfffffe6c
    1fa4:	745f7861 	ldrbvc	r7, [pc], #-2145	; 1fac <.debug_str+0x1fac>
    1fa8:	00656d69 	rsbeq	r6, r5, r9, ror #26
    1fac:	45484353 	strbmi	r4, [r8, #-851]	; 0xfffffcad
    1fb0:	4f535f44 	svcmi	0x00535f44
    1fb4:	52495446 	subpl	r5, r9, #1174405120	; 0x46000000
    1fb8:	75730051 	ldrbvc	r0, [r3, #-81]!	; 0xffffffaf
    1fbc:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
    1fc0:	616c5f64 	cmnvs	ip, r4, ror #30
    1fc4:	41006574 	tstmi	r0, r4, ror r5
    1fc8:	525f5058 	subspl	r5, pc, #88	; 0x58
    1fcc:	414d4745 	cmpmi	sp, r5, asr #14
    1fd0:	59545f50 	ldmdbpl	r4, {r4, r6, r8, r9, sl, fp, ip, lr}^
    1fd4:	70004550 	andvc	r4, r0, r0, asr r5
    1fd8:	6d656d66 	stclvs	13, cr6, [r5, #-408]!	; 0xfffffe68
    1fdc:	6f6c6c61 	svcvs	0x006c6c61
    1fe0:	61775f63 	cmnvs	r7, r3, ror #30
    1fe4:	72007469 	andvc	r7, r0, #1761607680	; 0x69000000
    1fe8:	65735f77 	ldrbvs	r5, [r3, #-3959]!	; 0xfffff089
    1fec:	6870616d 	ldmdavs	r0!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    1ff0:	0065726f 	rsbeq	r7, r5, pc, ror #4
    1ff4:	45574f50 	ldrbmi	r4, [r7, #-3920]	; 0xfffff0b0
    1ff8:	55535f52 	ldrbpl	r5, [r3, #-3922]	; 0xfffff0ae
    1ffc:	594c5050 	stmdbpl	ip, {r4, r6, ip, lr}^
    2000:	4f52505f 	svcmi	0x0052505f
    2004:	45545f50 	ldrbmi	r5, [r4, #-3920]	; 0xfffff0b0
    2008:	7000504d 	andvc	r5, r0, sp, asr #32
    200c:	625f756d 	subsvs	r7, pc, #457179136	; 0x1b400000
    2010:	705f7461 	subsvc	r7, pc, r1, ror #8
    2014:	31617261 	cmncc	r1, r1, ror #4
    2018:	6d700030 	ldclvs	0, cr0, [r0, #-192]!	; 0xffffff40
    201c:	61625f75 	smcvs	9717	; 0x25f5
    2020:	61705f74 	cmnvs	r0, r4, ror pc
    2024:	31316172 	teqcc	r1, r2, ror r1
    2028:	756d7000 	strbvc	r7, [sp, #-0]!
    202c:	7461625f 	strbtvc	r6, [r1], #-607	; 0xfffffda1
    2030:	7261705f 	rsbvc	r7, r1, #95	; 0x5f
    2034:	00323161 	eorseq	r3, r2, r1, ror #2
    2038:	5f756d70 	svcpl	0x00756d70
    203c:	5f746162 	svcpl	0x00746162
    2040:	61726170 	cmnvs	r2, r0, ror r1
    2044:	70003331 	andvc	r3, r0, r1, lsr r3
    2048:	625f756d 	subsvs	r7, pc, #457179136	; 0x1b400000
    204c:	705f7461 	subsvc	r7, pc, r1, ror #8
    2050:	31617261 	cmncc	r1, r1, ror #4
    2054:	6d700034 	ldclvs	0, cr0, [r0, #-208]!	; 0xffffff30
    2058:	61625f75 	smcvs	9717	; 0x25f5
    205c:	61705f74 	cmnvs	r0, r4, ror pc
    2060:	35316172 	ldrcc	r6, [r1, #-370]!	; 0xfffffe8e
    2064:	756d7000 	strbvc	r7, [sp, #-0]!
    2068:	7461625f 	strbtvc	r6, [r1], #-607	; 0xfffffda1
    206c:	7261705f 	rsbvc	r7, r1, #95	; 0x5f
    2070:	00363161 	eorseq	r3, r6, r1, ror #2
    2074:	5f756d70 	svcpl	0x00756d70
    2078:	5f746162 	svcpl	0x00746162
    207c:	61726170 	cmnvs	r2, r0, ror r1
    2080:	70003731 	andvc	r3, r0, r1, lsr r7
    2084:	625f756d 	subsvs	r7, pc, #457179136	; 0x1b400000
    2088:	705f7461 	subsvc	r7, pc, r1, ror #8
    208c:	31617261 	cmncc	r1, r1, ror #4
    2090:	6d700038 	ldclvs	0, cr0, [r0, #-224]!	; 0xffffff20
    2094:	61625f75 	smcvs	9717	; 0x25f5
    2098:	61705f74 	cmnvs	r0, r4, ror pc
    209c:	39316172 	ldmdbcc	r1!, {r1, r4, r5, r6, r8, sp, lr}
    20a0:	636f6c00 	cmnvs	pc, #0, 24
    20a4:	6c635f6b 	stclvs	15, cr5, [r3], #-428	; 0xfffffe54
    20a8:	5f737361 	svcpl	0x00737361
    20ac:	0079656b 	rsbseq	r6, r9, fp, ror #10
    20b0:	6c6c6563 	cfstr64vs	mvdx6, [ip], #-396	; 0xfffffe74
    20b4:	44560073 	ldrbmi	r0, [r6], #-115	; 0xffffff8d
    20b8:	45525f44 	ldrbmi	r5, [r2, #-3908]	; 0xfffff0bc
    20bc:	425f3253 	subsmi	r3, pc, #805306373	; 0x30000005
    20c0:	70005449 	andvc	r5, r0, r9, asr #8
    20c4:	00656761 	rsbeq	r6, r5, r1, ror #14
    20c8:	5f756d70 	svcpl	0x00756d70
    20cc:	5f746162 	svcpl	0x00746162
    20d0:	61726170 	cmnvs	r2, r0, ror r1
    20d4:	70003032 	andvc	r3, r0, r2, lsr r0
    20d8:	625f756d 	subsvs	r7, pc, #457179136	; 0x1b400000
    20dc:	705f7461 	subsvc	r7, pc, r1, ror #8
    20e0:	32617261 	rsbcc	r7, r1, #268435462	; 0x10000006
    20e4:	6d700031 	ldclvs	0, cr0, [r0, #-196]!	; 0xffffff3c
    20e8:	61625f75 	smcvs	9717	; 0x25f5
    20ec:	61705f74 	cmnvs	r0, r4, ror pc
    20f0:	32326172 	eorscc	r6, r2, #-2147483620	; 0x8000001c
    20f4:	756d7000 	strbvc	r7, [sp, #-0]!
    20f8:	7461625f 	strbtvc	r6, [r1], #-607	; 0xfffffda1
    20fc:	7261705f 	rsbvc	r7, r1, #95	; 0x5f
    2100:	00333261 	eorseq	r3, r3, r1, ror #4
    2104:	5f756d70 	svcpl	0x00756d70
    2108:	5f746162 	svcpl	0x00746162
    210c:	61726170 	cmnvs	r2, r0, ror r1
    2110:	70003432 	andvc	r3, r0, r2, lsr r4
    2114:	625f756d 	subsvs	r7, pc, #457179136	; 0x1b400000
    2118:	705f7461 	subsvc	r7, pc, r1, ror #8
    211c:	32617261 	rsbcc	r7, r1, #268435462	; 0x10000006
    2120:	6d700035 	ldclvs	0, cr0, [r0, #-212]!	; 0xffffff2c
    2124:	61625f75 	smcvs	9717	; 0x25f5
    2128:	61705f74 	cmnvs	r0, r4, ror pc
    212c:	36326172 			; <UNDEFINED> instruction: 0x36326172
    2130:	756d7000 	strbvc	r7, [sp, #-0]!
    2134:	7461625f 	strbtvc	r6, [r1], #-607	; 0xfffffda1
    2138:	7261705f 	rsbvc	r7, r1, #95	; 0x5f
    213c:	00373261 	eorseq	r3, r7, r1, ror #4
    2140:	5f756d70 	svcpl	0x00756d70
    2144:	5f746162 	svcpl	0x00746162
    2148:	61726170 	cmnvs	r2, r0, ror r1
    214c:	70003832 	andvc	r3, r0, r2, lsr r8
    2150:	625f756d 	subsvs	r7, pc, #457179136	; 0x1b400000
    2154:	705f7461 	subsvc	r7, pc, r1, ror #8
    2158:	32617261 	rsbcc	r7, r1, #268435462	; 0x10000006
    215c:	69640039 	stmdbvs	r4!, {r0, r3, r4, r5}^
    2160:	65725f73 	ldrbvs	r5, [r2, #-3955]!	; 0xfffff08d
    2164:	6f7a0073 	svcvs	0x007a0073
    2168:	695f656e 	ldmdbvs	pc, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    216c:	70007864 	andvc	r7, r0, r4, ror #16
    2170:	625f756d 	subsvs	r7, pc, #457179136	; 0x1b400000
    2174:	755f7461 	ldrbvc	r7, [pc, #-1121]	; 1d1b <.debug_str+0x1d1b>
    2178:	6573756e 	ldrbvs	r7, [r3, #-1390]!	; 0xfffffa92
    217c:	6d700064 	ldclvs	0, cr0, [r0, #-400]!	; 0xfffffe70
    2180:	61625f75 	smcvs	9717	; 0x25f5
    2184:	68635f74 	stmdavs	r3!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2188:	65677261 	strbvs	r7, [r7, #-609]!	; 0xfffffd9f
    218c:	66746c5f 			; <UNDEFINED> instruction: 0x66746c5f
    2190:	485f4e00 	ldmdami	pc, {r9, sl, fp, lr}^	; <UNPREDICTABLE>
    2194:	5f484749 	svcpl	0x00484749
    2198:	4f4d454d 	svcmi	0x004d454d
    219c:	62005952 	andvs	r5, r0, #1343488	; 0x148000
    21a0:	745f7461 	ldrbvc	r7, [pc], #-1121	; 21a8 <.debug_str+0x21a8>
    21a4:	5f706d65 	svcpl	0x00706d65
    21a8:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
    21ac:	6b007465 	blvs	1f348 <axp2585_set_usb_vhold+0x1e104>
    21b0:	666e7265 	strbtvs	r7, [lr], -r5, ror #4
    21b4:	6c655f73 	stclvs	15, cr5, [r5], #-460	; 0xfffffe34
    21b8:	645f6d65 	ldrbvs	r6, [pc], #-3429	; 21c0 <.debug_str+0x21c0>
    21bc:	70007269 	andvc	r7, r0, r9, ror #4
    21c0:	625f756d 	subsvs	r7, pc, #457179136	; 0x1b400000
    21c4:	705f7461 	subsvc	r7, pc, r1, ror #8
    21c8:	33617261 	cmncc	r1, #268435462	; 0x10000006
    21cc:	6d700030 	ldclvs	0, cr0, [r0, #-192]!	; 0xffffff40
    21d0:	61625f75 	smcvs	9717	; 0x25f5
    21d4:	61705f74 	cmnvs	r0, r4, ror pc
    21d8:	31336172 	teqcc	r3, r2, ror r1
    21dc:	756d7000 	strbvc	r7, [sp, #-0]!
    21e0:	7461625f 	strbtvc	r6, [r1], #-607	; 0xfffffda1
    21e4:	7261705f 	rsbvc	r7, r1, #95	; 0x5f
    21e8:	00323361 	eorseq	r3, r2, r1, ror #6
    21ec:	5f646967 	svcpl	0x00646967
    21f0:	6f630074 	svcvs	0x00630074
    21f4:	6361706d 	cmnvs	r1, #109	; 0x6d
    21f8:	61635f74 	smcvs	13812	; 0x35f4
    21fc:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
    2200:	6572665f 	ldrbvs	r6, [r2, #-1631]!	; 0xfffff9a1
    2204:	66705f65 	ldrbtvs	r5, [r0], -r5, ror #30
    2208:	6873006e 	ldmdavs	r3!, {r1, r2, r3, r5, r6}^
    220c:	2074726f 	rsbscs	r7, r4, pc, ror #4
    2210:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
    2214:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
    2218:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
    221c:	66657200 	strbtvs	r7, [r5], -r0, lsl #4
    2220:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    2224:	68630074 	stmdavs	r3!, {r2, r4, r5, r6}^
    2228:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
    222c:	6f6c5f64 	svcvs	0x006c5f64
    2230:	4e006b63 	vmlsmi.f64	d6, d0, d19
    2234:	52575f52 	subspl	r5, r7, #328	; 0x148
    2238:	45545449 	ldrbmi	r5, [r4, #-1097]	; 0xfffffbb7
    223c:	6570004e 	ldrbvs	r0, [r0, #-78]!	; 0xffffffb2
    2240:	70635f72 	rsbvc	r5, r3, r2, ror pc
    2244:	61705f75 	cmnvs	r0, r5, ror pc
    2248:	00736567 	rsbseq	r6, r3, r7, ror #10
    224c:	75646f6d 	strbvc	r6, [r4, #-3949]!	; 0xfffff093
    2250:	695f656c 	ldmdbvs	pc, {r2, r3, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    2254:	0074696e 	rsbseq	r6, r4, lr, ror #18
    2258:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
    225c:	6e695f65 	cdpvs	15, 6, cr5, cr9, cr5, {3}
    2260:	7379735f 	cmnvc	r9, #2080374785	; 0x7c000001
    2264:	50007366 	andpl	r7, r0, r6, ror #6
    2268:	5f555043 	svcpl	0x00555043
    226c:	455f4346 	ldrbmi	r4, [pc, #-838]	; 1f2e <.debug_str+0x1f2e>
    2270:	4445424d 	strbmi	r4, [r5], #-589	; 0xfffffdb3
    2274:	61686300 	cmnvs	r8, r0, lsl #6
    2278:	72656772 	rsbvc	r6, r5, #29884416	; 0x1c80000
    227c:	636f6c5f 	cmnvs	pc, #24320	; 0x5f00
    2280:	6c62006b 	stclvs	0, cr0, [r2], #-428	; 0xfffffe54
    2284:	5f6b6e69 	svcpl	0x006b6e69
    2288:	616c6564 	cmnvs	ip, r4, ror #10
    228c:	666f5f79 	uqsub16vs	r5, pc, r9	; <UNPREDICTABLE>
    2290:	494d0066 	stmdbmi	sp, {r1, r2, r5, r6}^
    2294:	54415247 	strbpl	r5, [r1], #-583	; 0xfffffdb9
    2298:	53495f45 	movtpl	r5, #40773	; 0x9f45
    229c:	54414c4f 	strbpl	r4, [r1], #-3151	; 0xfffff3b1
    22a0:	6f770045 	svcvs	0x00770045
    22a4:	735f6b72 	cmpvc	pc, #116736	; 0x1c800
    22a8:	63757274 	cmnvs	r5, #116, 4	; 0x40000007
    22ac:	756e0074 	strbvc	r0, [lr, #-116]!	; 0xffffff8c
    22b0:	78655f6d 	stmdavc	r5!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    22b4:	72746e65 	rsbsvc	r6, r4, #1616	; 0x650
    22b8:	00736569 	rsbseq	r6, r3, r9, ror #10
    22bc:	65776f70 	ldrbvs	r6, [r7, #-3952]!	; 0xfffff090
    22c0:	66666f72 	uqsub16vs	r6, r6, r2
    22c4:	756d7000 	strbvc	r7, [sp, #-0]!
    22c8:	7172695f 	cmnvc	r2, pc, asr r9
    22cc:	6b61775f 	blvs	1860050 <axp2585_set_usb_vhold+0x185ee0c>
    22d0:	00707565 	rsbseq	r7, r0, r5, ror #10
    22d4:	5f6d756e 	svcpl	0x006d756e
    22d8:	706d756a 	rsbvc	r7, sp, sl, ror #10
    22dc:	746e655f 	strbtvc	r6, [lr], #-1375	; 0xfffffaa1
    22e0:	73656972 	cmnvc	r5, #1867776	; 0x1c8000
    22e4:	70786100 	rsbsvc	r6, r8, r0, lsl #2
    22e8:	6765725f 			; <UNDEFINED> instruction: 0x6765725f
    22ec:	0070616d 	rsbseq	r6, r0, sp, ror #2
    22f0:	454e4f5a 	strbmi	r4, [lr, #-3930]	; 0xfffff0a6
    22f4:	4749485f 	smlsldmi	r4, r9, pc, r8	; <UNPREDICTABLE>
    22f8:	4d454d48 	stclmi	13, cr4, [r5, #-288]	; 0xfffffee0
    22fc:	6d657200 	sfmvs	f7, 2, [r5, #-0]
    2300:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    2304:	0073665f 	rsbseq	r6, r3, pc, asr r6
    2308:	735f6e69 	cmpvc	pc, #1680	; 0x690
    230c:	74726f68 	ldrbtvc	r6, [r2], #-3944	; 0xfffff098
    2310:	66666f5f 	uqsaxvs	r6, r6, pc	; <UNPREDICTABLE>
    2314:	00746573 	rsbseq	r6, r4, r3, ror r5
    2318:	5f444456 	svcpl	0x00444456
    231c:	42555043 	subsmi	r5, r5, #67	; 0x43
    2320:	5449425f 	strbpl	r4, [r9], #-607	; 0xfffffda1
    2324:	6e757200 	cdpvs	2, 7, cr7, cr5, cr0, {0}
    2328:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    232c:	6768635f 			; <UNDEFINED> instruction: 0x6768635f
    2330:	00727563 	rsbseq	r7, r2, r3, ror #10
    2334:	565f524e 	ldrbpl	r5, [pc], -lr, asr #4
    2338:	4143534d 	cmpmi	r3, sp, asr #6
    233c:	52575f4e 	subspl	r5, r7, #312	; 0x138
    2340:	00455449 	subeq	r5, r5, r9, asr #8
    2344:	6d6f7461 	cfstrdvs	mvd7, [pc, #-388]!	; 21c8 <.debug_str+0x21c8>
    2348:	775f6369 	ldrbvc	r6, [pc, -r9, ror #6]
    234c:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    2350:	6e656c5f 	mcrvs	12, 3, r6, cr5, cr15, {2}
    2354:	61646900 	cmnvs	r4, r0, lsl #18
    2358:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    235c:	0070616d 	rsbseq	r6, r0, sp, ror #2
    2360:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
    2364:	6575715f 	ldrbvs	r7, [r5, #-351]!	; 0xfffffea1
    2368:	49006575 	stmdbmi	r0, {r0, r2, r4, r5, r6, r8, sl, sp, lr}
    236c:	575f5152 			; <UNDEFINED> instruction: 0x575f5152
    2370:	5f454b41 	svcpl	0x00454b41
    2374:	45524854 	ldrbmi	r4, [r2, #-2132]	; 0xfffff7ac
    2378:	63004441 	movwvs	r4, #1089	; 0x441
    237c:	61706d6f 	cmnvs	r0, pc, ror #26
    2380:	645f7463 	ldrbvs	r7, [pc], #-1123	; 2388 <.debug_str+0x2388>
    2384:	72656665 	rsbvc	r6, r5, #105906176	; 0x6500000
    2388:	6968735f 	stmdbvs	r8!, {r0, r1, r2, r3, r4, r6, r8, r9, ip, sp, lr}^
    238c:	64007466 	strvs	r7, [r0], #-1126	; 0xfffffb9a
    2390:	675f7665 	ldrbvs	r7, [pc, -r5, ror #12]
    2394:	645f7465 	ldrbvs	r7, [pc], #-1125	; 239c <.debug_str+0x239c>
    2398:	61647672 	smcvs	18274	; 0x4762
    239c:	73006174 	movwvc	r6, #372	; 0x174
    23a0:	665f7165 	ldrbvs	r7, [pc], -r5, ror #2
    23a4:	00656c69 	rsbeq	r6, r5, r9, ror #24
    23a8:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
    23ac:	00745f38 	rsbseq	r5, r4, r8, lsr pc
    23b0:	6a626f6b 	bvs	189e164 <axp2585_set_usb_vhold+0x189cf20>
    23b4:	5f736900 	svcpl	0x00736900
    23b8:	70657270 	rsbvc	r7, r5, r0, ror r2
    23bc:	64657261 	strbtvs	r7, [r5], #-609	; 0xfffffd9f
    23c0:	69727000 	ldmdbvs	r2!, {ip, sp, lr}^
    23c4:	006b746e 	rsbeq	r7, fp, lr, ror #8
    23c8:	6e616863 	cdpvs	8, 6, cr6, cr1, cr3, {3}
    23cc:	5f646567 	svcpl	0x00646567
    23d0:	6b726f77 	blvs	1c9e1b4 <axp2585_set_usb_vhold+0x1c9cf70>
    23d4:	69617700 	stmdbvs	r1!, {r8, r9, sl, ip, sp, lr}^
    23d8:	4f570074 	svcmi	0x00570074
    23dc:	4e494b52 	vmovmi.8	d9[2], r4
    23e0:	54455347 	strbpl	r5, [r5], #-839	; 0xfffffcb9
    23e4:	444f4e5f 	strbmi	r4, [pc], #-3679	; 23ec <.debug_str+0x23ec>
    23e8:	43455245 	movtmi	r5, #21061	; 0x5245
    23ec:	4d49414c 	stfmie	f4, [r9, #-304]	; 0xfffffed0
    23f0:	50584100 	subspl	r4, r8, r0, lsl #2
    23f4:	4745525f 	smlsldmi	r5, r5, pc, r2	; <UNPREDICTABLE>
    23f8:	5f50414d 	svcpl	0x0050414d
    23fc:	53495241 	movtpl	r5, #37441	; 0x9241
    2400:	53525f43 	cmppl	r2, #268	; 0x10c
    2404:	58410042 	stmdapl	r1, {r1, r6}^
    2408:	4f4e5f50 	svcmi	0x004e5f50
    240c:	55535f54 	ldrbpl	r5, [r3, #-3924]	; 0xfffff0ac
    2410:	4e455053 	mcrmi	0, 2, r5, cr5, cr3, {2}
    2414:	6d700044 	ldclvs	0, cr0, [r0, #-272]!	; 0xfffffef0
    2418:	68635f75 	stmdavs	r3!, {r0, r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    241c:	6e655f67 	cdpvs	15, 6, cr5, cr5, cr7, {3}
    2420:	6e6f5f64 	cdpvs	15, 6, cr5, cr15, cr4, {3}
    2424:	006e655f 	rsbeq	r6, lr, pc, asr r5
    2428:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
    242c:	6c617672 	stclvs	6, cr7, [r1], #-456	; 0xfffffe38
    2430:	6c6f7000 	stclvs	0, cr7, [pc], #-0	; 2438 <.debug_str+0x2438>
    2434:	76655f6c 	strbtvc	r5, [r5], -ip, ror #30
    2438:	00746e65 	rsbseq	r6, r4, r5, ror #28
    243c:	695f726e 	ldmdbvs	pc, {r1, r2, r3, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
    2440:	616c6f73 	smcvs	50931	; 0xc6f3
    2444:	705f6574 	subsvc	r6, pc, r4, ror r5	; <UNPREDICTABLE>
    2448:	62656761 	rsbvs	r6, r5, #25427968	; 0x1840000
    244c:	6b636f6c 	blvs	18de204 <axp2585_set_usb_vhold+0x18dcfc0>
    2450:	74616200 	strbtvc	r6, [r1], #-512	; 0xfffffe00
    2454:	6d700074 	ldclvs	0, cr0, [r0, #-464]!	; 0xfffffe30
    2458:	68635f75 	stmdavs	r3!, {r0, r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    245c:	64656c67 	strbtvs	r6, [r5], #-3175	; 0xfffff399
    2460:	6e75665f 	mrcvs	6, 3, r6, cr5, cr15, {2}
    2464:	49540063 	ldmdbmi	r4, {r0, r1, r5, r6}^
    2468:	5f52454d 	svcpl	0x0052454d
    246c:	54464f53 	strbpl	r4, [r6], #-3923	; 0xfffff0ad
    2470:	00515249 	subseq	r5, r1, r9, asr #4
    2474:	75706370 	ldrbvc	r6, [r0, #-880]!	; 0xfffffc90
    2478:	0063665f 	rsbeq	r6, r3, pc, asr r6
    247c:	5f6e746d 	svcpl	0x006e746d
    2480:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    2484:	71726900 	cmnvc	r2, r0, lsl #18
    2488:	6e61685f 	mcrvs	8, 3, r6, cr1, cr15, {2}
    248c:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    2490:	6300745f 	movwvs	r7, #1119	; 0x45f
    2494:	6c706d6f 	ldclvs	13, cr6, [r0], #-444	; 0xfffffe44
    2498:	6f697465 	svcvs	0x00697465
    249c:	6d76006e 	ldclvs	0, cr0, [r6, #-440]!	; 0xfffffe48
    24a0:	6572615f 	ldrbvs	r6, [r2, #-351]!	; 0xfffffea1
    24a4:	74735f61 	ldrbtvc	r5, [r3], #-3937	; 0xfffff09f
    24a8:	74637572 	strbtvc	r7, [r3], #-1394	; 0xfffffa8e
    24ac:	71657200 	cmnvc	r5, r0, lsl #4
    24b0:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
    24b4:	78616d00 	stmdavc	r1!, {r8, sl, fp, sp, lr}^
    24b8:	006e656c 	rsbeq	r6, lr, ip, ror #10
    24bc:	696c6770 	stmdbvs	ip!, {r4, r5, r6, r8, r9, sl, sp, lr}^
    24c0:	645f7473 	ldrbvs	r7, [pc], #-1139	; 24c8 <.debug_str+0x24c8>
    24c4:	00617461 	rsbeq	r7, r1, r1, ror #8
    24c8:	63737973 	cmnvs	r3, #1884160	; 0x1cc000
    24cc:	0065726f 	rsbeq	r7, r5, pc, ror #4
    24d0:	75646f6d 	strbvc	r6, [r4, #-3949]!	; 0xfffff093
    24d4:	735f656c 	cmpvc	pc, #108, 10	; 0x1b000000
    24d8:	5f746365 	svcpl	0x00746365
    24dc:	72747461 	rsbsvc	r7, r4, #1627389952	; 0x61000000
    24e0:	68730073 	ldmdavs	r3!, {r0, r1, r4, r5, r6}^
    24e4:	6900776f 	stmdbvs	r0, {r0, r1, r2, r3, r5, r6, r8, r9, sl, ip, sp, lr}
    24e8:	6c5f7264 	lfmvs	f7, 2, [pc], {100}	; 0x64
    24ec:	72657961 	rsbvc	r7, r5, #1589248	; 0x184000
    24f0:	61686300 	cmnvs	r8, r0, lsl #6
    24f4:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
    24f8:	78610067 	stmdavc	r1!, {r0, r1, r2, r5, r6}^
    24fc:	63615f70 	cmnvs	r1, #112, 30	; 0x1c0
    2500:	666e695f 			; <UNDEFINED> instruction: 0x666e695f
    2504:	4f50006f 	svcmi	0x0050006f
    2508:	5f524557 	svcpl	0x00524557
    250c:	50505553 	subspl	r5, r0, r3, asr r5
    2510:	545f594c 	ldrbpl	r5, [pc], #-2380	; 2518 <.debug_str+0x2518>
    2514:	5f455059 	svcpl	0x00455059
    2518:	54544142 	ldrbpl	r4, [r4], #-322	; 0xfffffebe
    251c:	00595245 	subseq	r5, r9, r5, asr #4
    2520:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
    2524:	6261745f 	rsbvs	r7, r1, #1593835520	; 0x5f000000
    2528:	685f656c 	ldmdavs	pc, {r2, r3, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    252c:	5f687361 	svcpl	0x00687361
    2530:	655f726e 	ldrbvs	r7, [pc, #-622]	; 22ca <.debug_str+0x22ca>
    2534:	6972746e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    2538:	4e007365 	cdpmi	3, 0, cr7, cr0, cr5, {3}
    253c:	545f5445 	ldrbpl	r5, [pc], #-1093	; 2544 <.debug_str+0x2544>
    2540:	4f535f58 	svcmi	0x00535f58
    2544:	52495446 	subpl	r5, r9, #1174405120	; 0x46000000
    2548:	6e750051 	mrcvs	0, 3, r0, cr5, cr1, {2}
    254c:	6e676973 	mcrvs	9, 3, r6, cr7, cr3, {3}
    2550:	63206465 	teqvs	r0, #1694498816	; 0x65000000
    2554:	00726168 	rsbseq	r6, r2, r8, ror #2
    2558:	5f736f70 	svcpl	0x00736f70
    255c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    2560:	7465735f 	strbtvc	r7, [r5], #-863	; 0xfffffca1
    2564:	6d797300 	ldclvs	3, cr7, [r9, #-0]
    2568:	00626174 	rsbeq	r6, r2, r4, ror r1
    256c:	5f756d70 	svcpl	0x00756d70
    2570:	5f746162 	svcpl	0x00746162
    2574:	706d6574 	rsbvc	r6, sp, r4, ror r5
    2578:	7261705f 	rsbvc	r7, r1, #95	; 0x5f
    257c:	73003761 	movwvc	r3, #1889	; 0x761
    2580:	746f5f74 	strbtvc	r5, [pc], #-3956	; 2588 <.debug_str+0x2588>
    2584:	00726568 	rsbseq	r6, r2, r8, ror #10
    2588:	69707865 	ldmdbvs	r0!, {r0, r2, r5, r6, fp, ip, sp, lr}^
    258c:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
    2590:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    2594:	74616200 	strbtvc	r6, [r1], #-512	; 0xfffffe00
    2598:	7275635f 	rsbsvc	r6, r5, #2080374785	; 0x7c000001
    259c:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    25a0:	7269645f 	rsbvc	r6, r9, #1593835520	; 0x5f000000
    25a4:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    25a8:	6d006e6f 	stcvs	14, cr6, [r0, #-444]	; 0xfffffe44
    25ac:	6c5f6973 	mrrcvs	9, 7, r6, pc, cr3	; <UNPREDICTABLE>
    25b0:	00747369 	rsbseq	r7, r4, r9, ror #6
    25b4:	5f746573 	svcpl	0x00746573
    25b8:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
    25bc:	00646567 	rsbeq	r6, r4, r7, ror #10
    25c0:	62725f5f 	rsbsvs	r5, r2, #380	; 0x17c
    25c4:	7261705f 	rsbvc	r7, r1, #95	; 0x5f
    25c8:	5f746e65 	svcpl	0x00746e65
    25cc:	6f6c6f63 	svcvs	0x006c6f63
    25d0:	73720072 	cmnvc	r2, #114	; 0x72
    25d4:	64646162 	strbtvs	r6, [r4], #-354	; 0xfffffe9e
    25d8:	6c700072 	ldclvs	0, cr0, [r0], #-456	; 0xfffffe38
    25dc:	6f667461 	svcvs	0x00667461
    25e0:	645f6d72 	ldrbvs	r6, [pc], #-3442	; 25e8 <.debug_str+0x25e8>
    25e4:	63697665 	cmnvs	r9, #105906176	; 0x6500000
    25e8:	6c630065 	stclvs	0, cr0, [r3], #-404	; 0xfffffe6c
    25ec:	00737361 	rsbseq	r7, r3, r1, ror #6
    25f0:	67697274 			; <UNDEFINED> instruction: 0x67697274
    25f4:	5f726567 	svcpl	0x00726567
    25f8:	61746164 	cmnvs	r4, r4, ror #2
    25fc:	6e657200 	cdpvs	2, 6, cr7, cr5, cr0, {0}
    2600:	00656d61 	rsbeq	r6, r5, r1, ror #26
    2604:	5f746564 	svcpl	0x00746564
    2608:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
    260c:	62007465 	andvs	r7, r0, #1694498816	; 0x65000000
    2610:	615f6e69 	cmpvs	pc, r9, ror #28
    2614:	69727474 	ldmdbvs	r2!, {r2, r4, r5, r6, sl, ip, sp, lr}^
    2618:	65747562 	ldrbvs	r7, [r4, #-1378]!	; 0xfffffa9e
    261c:	79687000 	stmdbvc	r8!, {ip, sp, lr}^
    2620:	64615f73 	strbtvs	r5, [r1], #-3955	; 0xfffff08d
    2624:	745f7264 	ldrbvc	r7, [pc], #-612	; 262c <.debug_str+0x262c>
    2628:	6f726400 	svcvs	0x00726400
    262c:	736e5f70 	cmnvc	lr, #112, 30	; 0x1c0
    2630:	6c656400 	cfstrdvs	mvd6, [r5], #-0
    2634:	76007961 	strvc	r7, [r0], -r1, ror #18
    2638:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
    263c:	6e007461 	cdpvs	4, 0, cr7, cr0, cr1, {3}
    2640:	725f6d75 	subsvc	r6, pc, #7488	; 0x1d40
    2644:	756f7365 	strbvc	r7, [pc, #-869]!	; 22e7 <.debug_str+0x22e7>
    2648:	73656372 	cmnvc	r5, #-939524095	; 0xc8000001
    264c:	756d7000 	strbvc	r7, [sp, #-0]!
    2650:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    2654:	64615f74 	strbtvs	r5, [r1], #-3956	; 0xfffff08c
    2658:	5f737463 	svcpl	0x00737463
    265c:	71657266 	cmnvc	r5, r6, ror #4
    2660:	696c6300 	stmdbvs	ip!, {r8, r9, sp, lr}^
    2664:	00746e65 	rsbseq	r6, r4, r5, ror #28
    2668:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
    266c:	676e6967 	strbvs	r6, [lr, -r7, ror #18]!
    2670:	6c75665f 	ldclvs	6, cr6, [r5], #-380	; 0xfffffe84
    2674:	72745f6c 	rsbsvc	r5, r4, #108, 30	; 0x1b0
    2678:	6e5f6769 	cdpvs	7, 5, cr6, cr15, cr9, {3}
    267c:	00656d61 	rsbeq	r6, r5, r1, ror #26
    2680:	5f4d5052 	svcpl	0x004d5052
    2684:	5f514552 	svcpl	0x00514552
    2688:	454e4f4e 	strbmi	r4, [lr, #-3918]	; 0xfffff0b2
    268c:	746f6e00 	strbtvc	r6, [pc], #-3584	; 2694 <.debug_str+0x2694>
    2690:	5f796669 	svcpl	0x00796669
    2694:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
    2698:	776f7000 	strbvc	r7, [pc, -r0]!
    269c:	735f7265 	cmpvc	pc, #1342177286	; 0x50000006
    26a0:	6c707075 	ldclvs	0, cr7, [r0], #-468	; 0xfffffe2c
    26a4:	72705f79 	rsbsvc	r5, r0, #484	; 0x1e4
    26a8:	7265706f 	rsbvc	r7, r5, #111	; 0x6f
    26ac:	56007974 			; <UNDEFINED> instruction: 0x56007974
    26b0:	505f4343 	subspl	r4, pc, r3, asr #6
    26b4:	49425f4d 	stmdbmi	r2, {r0, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    26b8:	494d0054 	stmdbmi	sp, {r2, r4, r6}^
    26bc:	54415247 	strbpl	r5, [r1], #-583	; 0xfffffdb9
    26c0:	4f4d5f45 	svcmi	0x004d5f45
    26c4:	4c424156 	stfmie	f4, [r2], {86}	; 0x56
    26c8:	74730045 	ldrbtvc	r0, [r3], #-69	; 0xffffffbb
    26cc:	666e695f 			; <UNDEFINED> instruction: 0x666e695f
    26d0:	6c70006f 	ldclvs	0, cr0, [r0], #-444	; 0xfffffe44
    26d4:	6f667461 	svcvs	0x00667461
    26d8:	645f6d72 	ldrbvs	r6, [pc], #-3442	; 26e0 <.debug_str+0x26e0>
    26dc:	00617461 	rsbeq	r7, r1, r1, ror #8
    26e0:	6177736b 	cmnvs	r7, fp, ror #6
    26e4:	775f6470 			; <UNDEFINED> instruction: 0x775f6470
    26e8:	00746961 	rsbseq	r6, r4, r1, ror #18
    26ec:	45574f50 	ldrbmi	r4, [r7, #-3920]	; 0xfffff0b0
    26f0:	55535f52 	ldrbpl	r5, [r3, #-3922]	; 0xfffff0ae
    26f4:	594c5050 	stmdbpl	ip, {r4, r6, ip, lr}^
    26f8:	4f52505f 	svcmi	0x0052505f
    26fc:	4f505f50 	svcmi	0x00505f50
    2700:	5f524557 	svcpl	0x00524557
    2704:	00475641 	subeq	r5, r7, r1, asr #12
    2708:	5f717269 	svcpl	0x00717269
    270c:	65666173 	strbvs	r6, [r6, #-371]!	; 0xfffffe8d
    2710:	574f5000 	strbpl	r5, [pc, -r0]
    2714:	535f5245 	cmppl	pc, #1342177284	; 0x50000004
    2718:	4c505055 	mrrcmi	0, 5, r5, r0, cr5
    271c:	52505f59 	subspl	r5, r0, #356	; 0x164
    2720:	545f504f 	ldrbpl	r5, [pc], #-79	; 2728 <.debug_str+0x2728>
    2724:	5f504d45 	svcpl	0x00504d45
    2728:	0058414d 	subseq	r4, r8, sp, asr #2
    272c:	6b726f77 	blvs	1c9e510 <axp2585_set_usb_vhold+0x1c9d2cc>
    2730:	75657571 	strbvc	r7, [r5, #-1393]!	; 0xfffffa8f
    2734:	74735f65 	ldrbtvc	r5, [r3], #-3941	; 0xfffff09b
    2738:	74637572 	strbtvc	r7, [r3], #-1394	; 0xfffffa8e
    273c:	756d7000 	strbvc	r7, [sp, #-0]!
    2740:	7277705f 	rsbsvc	r7, r7, #95	; 0x5f
    2744:	5f66666f 	svcpl	0x0066666f
    2748:	006c6f76 	rsbeq	r6, ip, r6, ror pc
    274c:	67617375 			; <UNDEFINED> instruction: 0x67617375
    2750:	6f635f65 	svcvs	0x00635f65
    2754:	00746e75 	rsbseq	r6, r4, r5, ror lr
    2758:	5f756d70 	svcpl	0x00756d70
    275c:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    2760:	6768635f 			; <UNDEFINED> instruction: 0x6768635f
    2764:	7473635f 	ldrbtvc	r6, [r3], #-863	; 0xfffffca1
    2768:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    276c:	5f637400 	svcpl	0x00637400
    2770:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
    2774:	70797400 	rsbsvc	r7, r9, r0, lsl #8
    2778:	6d700065 	ldclvs	0, cr0, [r0, #-404]!	; 0xfffffe6c
    277c:	6f705f75 	svcvs	0x00705f75
    2780:	79656b77 	stmdbvc	r5!, {r0, r1, r2, r4, r5, r6, r8, r9, fp, sp, lr}^
    2784:	66666f5f 	uqsaxvs	r6, r6, pc	; <UNPREDICTABLE>
    2788:	6e75665f 	mrcvs	6, 3, r6, cr5, cr15, {2}
    278c:	62760063 	rsbsvs	r0, r6, #99	; 0x63
    2790:	725f7461 	subsvc	r7, pc, #1627389952	; 0x61000000
    2794:	72007365 	andvc	r7, r0, #-1811939327	; 0x94000001
    2798:	756f7365 	strbvc	r7, [pc, #-869]!	; 243b <.debug_str+0x243b>
    279c:	5f656372 	svcpl	0x00656372
    27a0:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
    27a4:	6300745f 	movwvs	r7, #1119	; 0x45f
    27a8:	5f65726f 	svcpl	0x0065726f
    27ac:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
    27b0:	7a69735f 	bvc	1a5f534 <axp2585_set_usb_vhold+0x1a5e2f0>
    27b4:	78610065 	stmdavc	r1!, {r0, r2, r5, r6}^
    27b8:	38353270 	ldmdacc	r5!, {r4, r5, r6, r9, ip, sp}
    27bc:	72705f35 	rsbsvc	r5, r0, #53, 30	; 0xd4
    27c0:	74617669 	strbtvc	r7, [r1], #-1641	; 0xfffff997
    27c4:	65645f65 	strbvs	r5, [r4, #-3941]!	; 0xfffff09b
    27c8:	00677562 	rsbeq	r7, r7, r2, ror #10
    27cc:	6f6d6572 	svcvs	0x006d6572
    27d0:	62006576 	andvs	r6, r0, #494927872	; 0x1d800000
    27d4:	765f7461 	ldrbvc	r7, [pc], -r1, ror #8
    27d8:	63006c6f 	movwvs	r6, #3183	; 0xc6f
    27dc:	646c6968 	strbtvs	r6, [ip], #-2408	; 0xfffff698
    27e0:	756f635f 	strbvc	r6, [pc, #-863]!	; 2489 <.debug_str+0x2489>
    27e4:	5000746e 	andpl	r7, r0, lr, ror #8
    27e8:	5245574f 	subpl	r5, r5, #20709376	; 0x13c0000
    27ec:	5055535f 	subspl	r5, r5, pc, asr r3
    27f0:	5f594c50 	svcpl	0x00594c50
    27f4:	504f5250 	subpl	r5, pc, r0, asr r2	; <UNPREDICTABLE>
    27f8:	4c4e4f5f 	mcrrmi	15, 5, r4, lr, cr15
    27fc:	00454e49 	subeq	r4, r5, r9, asr #28
    2800:	656e6f64 	strbvs	r6, [lr, #-3940]!	; 0xfffff09c
    2804:	6f746100 	svcvs	0x00746100
    2808:	5f63696d 	svcpl	0x0063696d
    280c:	6c650074 	stclvs	0, cr0, [r5], #-464	; 0xfffffe30
    2810:	64006d65 	strvs	r6, [r0], #-3429	; 0xfffff29b
    2814:	6d5f616d 	ldfvse	f6, [pc, #-436]	; 2668 <.debug_str+0x2668>
    2818:	6f5f7061 	svcvs	0x005f7061
    281c:	72007370 	andvc	r7, r0, #112, 6	; 0xc0000001
    2820:	6f747365 	svcvs	0x00747365
    2824:	70006572 	andvc	r6, r0, r2, ror r5
    2828:	635f756d 	cmpvs	pc, #457179136	; 0x1b400000
    282c:	695f6768 	ldmdbvs	pc, {r3, r5, r6, r8, r9, sl, sp, lr}^	; <UNPREDICTABLE>
    2830:	65745f63 	ldrbvs	r5, [r4, #-3939]!	; 0xfffff09d
    2834:	6300706d 	movwvs	r7, #109	; 0x6d
    2838:	756c756f 	strbvc	r7, [ip, #-1391]!	; 0xfffffa91
    283c:	635f626d 	cmpvs	pc, #-805306362	; 0xd0000006
    2840:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    2844:	72007265 	andvc	r7, r0, #1342177286	; 0x50000006
    2848:	69746e75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
    284c:	615f656d 	cmpvs	pc, sp, ror #10
    2850:	006f7475 	rsbeq	r7, pc, r5, ror r4	; <UNPREDICTABLE>
    2854:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    2858:	55524c00 	ldrbpl	r4, [r2, #-3072]	; 0xfffff400
    285c:	414e495f 	cmpmi	lr, pc, asr r9
    2860:	56495443 	strbpl	r5, [r9], -r3, asr #8
    2864:	4e415f45 	cdpmi	15, 4, cr5, cr1, cr5, {2}
    2868:	70004e4f 	andvc	r4, r0, pc, asr #28
    286c:	65736572 	ldrbvs	r6, [r3, #-1394]!	; 0xfffffa8e
    2870:	705f746e 	subsvc	r7, pc, lr, ror #8
    2874:	73656761 	cmnvc	r5, #25427968	; 0x1840000
    2878:	72756300 	rsbsvc	r6, r5, #0, 6
    287c:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    2880:	6174735f 	cmnvs	r4, pc, asr r3
    2884:	705f6b63 	subsvc	r6, pc, r3, ror #22
    2888:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
    288c:	66007265 	strvs	r7, [r0], -r5, ror #4
    2890:	00656572 	rsbeq	r6, r5, r2, ror r5
    2894:	32707861 	rsbscc	r7, r0, #6356992	; 0x610000
    2898:	5f353835 	svcpl	0x00353835
    289c:	74746162 	ldrbtvc	r6, [r4], #-354	; 0xfffffe9e
    28a0:	666e695f 			; <UNDEFINED> instruction: 0x666e695f
    28a4:	5841006f 	stmdapl	r1, {r0, r1, r2, r3, r5, r6}^
    28a8:	45525f50 	ldrbmi	r5, [r2, #-3920]	; 0xfffff0b0
    28ac:	50414d47 	subpl	r4, r1, r7, asr #26
    28b0:	4332495f 	teqmi	r2, #1556480	; 0x17c000
    28b4:	76656400 	strbtvc	r6, [r5], -r0, lsl #8
    28b8:	7474615f 	ldrbtvc	r6, [r4], #-351	; 0xfffffea1
    28bc:	63745f72 	cmnvs	r4, #456	; 0x1c8
    28c0:	646f6d5f 	strbtvs	r6, [pc], #-3423	; 28c8 <.debug_str+0x28c8>
    28c4:	5f5f0065 	svcpl	0x005f0065
    28c8:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
    28cc:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	; 0xfffffe68
    28d0:	6972645f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, sp, lr}^
    28d4:	5f726576 	svcpl	0x00726576
    28d8:	69676572 	stmdbvs	r7!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    28dc:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    28e0:	6d656d00 	stclvs	13, cr6, [r5, #-0]
    28e4:	6f6c6c61 	svcvs	0x006c6c61
    28e8:	6f6e5f63 	svcvs	0x006e5f63
    28ec:	50006f69 	andpl	r6, r0, r9, ror #30
    28f0:	5245574f 	subpl	r5, r5, #20709376	; 0x13c0000
    28f4:	5055535f 	subspl	r5, r5, pc, asr r3
    28f8:	5f594c50 	svcpl	0x00594c50
    28fc:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
    2900:	49414d5f 	stmdbmi	r1, {r0, r1, r2, r3, r4, r6, r8, sl, fp, lr}^
    2904:	7700534e 	strvc	r5, [r0, -lr, asr #6]
    2908:	75656b61 	strbvc	r6, [r5, #-2913]!	; 0xfffff49f
    290c:	61760070 	cmnvs	r6, r0, ror r0
    2910:	0065756c 	rsbeq	r7, r5, ip, ror #10
    2914:	65746f6e 	ldrbvs	r6, [r4, #-3950]!	; 0xfffff092
    2918:	74615f73 	strbtvc	r5, [r1], #-3955	; 0xfffff08d
    291c:	00737274 	rsbseq	r7, r3, r4, ror r2
    2920:	5f4d5052 	svcpl	0x004d5052
    2924:	5f514552 	svcpl	0x00514552
    2928:	55534552 	ldrbpl	r4, [r3, #-1362]	; 0xfffffaae
    292c:	6b00454d 	blvs	13e68 <axp2585_set_usb_vhold+0x12c24>
    2930:	5f6a626f 	svcpl	0x006a626f
    2934:	65766575 	ldrbvs	r6, [r6, #-1397]!	; 0xfffffa8b
    2938:	655f746e 	ldrbvs	r7, [pc, #-1134]	; 24d2 <.debug_str+0x24d2>
    293c:	6400766e 	strvs	r7, [r0], #-1646	; 0xfffff992
    2940:	65727665 	ldrbvs	r7, [r2, #-1637]!	; 0xfffff99b
    2944:	65685f73 	strbvs	r5, [r8, #-3955]!	; 0xfffff08d
    2948:	4e006461 	cdpmi	4, 0, cr6, cr0, cr1, {3}
    294c:	4f425f52 	svcmi	0x00425f52
    2950:	45434e55 	strbmi	r4, [r3, #-3669]	; 0xfffff1ab
    2954:	5f524e00 	svcpl	0x00524e00
    2958:	454c4946 	strbmi	r4, [ip, #-2374]	; 0xfffff6ba
    295c:	50414d5f 	subpl	r4, r1, pc, asr sp
    2960:	00444550 	subeq	r4, r4, r0, asr r5
    2964:	45574f50 	ldrbmi	r4, [r7, #-3920]	; 0xfffff0b0
    2968:	55535f52 	ldrbpl	r5, [r3, #-3922]	; 0xfffff0ae
    296c:	594c5050 	stmdbpl	ip, {r4, r6, ip, lr}^
    2970:	4f52505f 	svcmi	0x0052505f
    2974:	45545f50 	ldrbmi	r5, [r4, #-3920]	; 0xfffff0b0
    2978:	415f504d 	cmpmi	pc, sp, asr #32
    297c:	5452454c 	ldrbpl	r4, [r2], #-1356	; 0xfffffab4
    2980:	58414d5f 	stmdapl	r1, {r0, r1, r2, r3, r4, r6, r8, sl, fp, lr}^
    2984:	47494d00 	strbmi	r4, [r9, -r0, lsl #26]
    2988:	45544152 	ldrbmi	r4, [r4, #-338]	; 0xfffffeae
    298c:	4d4e555f 	cfstr64mi	mvdx5, [lr, #-380]	; 0xfffffe84
    2990:	4241564f 	submi	r5, r1, #82837504	; 0x4f00000
    2994:	7400454c 	strvc	r4, [r0], #-1356	; 0xfffffab4
    2998:	736b6369 	cmnvc	fp, #-1543503871	; 0xa4000001
    299c:	7265705f 	rsbvc	r7, r5, #95	; 0x5f
    29a0:	66696a5f 			; <UNDEFINED> instruction: 0x66696a5f
    29a4:	73007966 	movwvc	r7, #2406	; 0x966
    29a8:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
    29ac:	6e5f646e 	cdpvs	4, 5, cr6, cr15, cr14, {3}
    29b0:	7172696f 	cmnvc	r2, pc, ror #18
    29b4:	69676b00 	stmdbvs	r7!, {r8, r9, fp, sp, lr}^
    29b8:	00745f64 	rsbseq	r5, r4, r4, ror #30
    29bc:	65746177 	ldrbvs	r6, [r4, #-375]!	; 0xfffffe89
    29c0:	72616d72 	rsbvc	r6, r1, #7296	; 0x1c80
    29c4:	6f63006b 	svcvs	0x0063006b
    29c8:	6b5f6572 	blvs	17dbf98 <axp2585_set_usb_vhold+0x17dad54>
    29cc:	736c6c61 	cmnvc	ip, #24832	; 0x6100
    29d0:	00736d79 	rsbseq	r6, r3, r9, ror sp
    29d4:	646c6f68 	strbtvs	r6, [ip], #-3944	; 0xfffff098
    29d8:	5f737265 	svcpl	0x00737265
    29dc:	00726964 	rsbseq	r6, r2, r4, ror #18
    29e0:	32707861 	rsbscc	r7, r0, #6356992	; 0x610000
    29e4:	5f353835 	svcpl	0x00353835
    29e8:	5f746573 	svcpl	0x00746573
    29ec:	5f676863 	svcpl	0x00676863
    29f0:	006c6f76 	rsbeq	r6, ip, r6, ror pc
    29f4:	5f74756f 	svcpl	0x0074756f
    29f8:	00717269 	rsbseq	r7, r1, r9, ror #4
    29fc:	73616c63 	cmnvc	r1, #25344	; 0x6300
    2a00:	65725f73 	ldrbvs	r5, [r2, #-3955]!	; 0xfffff08d
    2a04:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
    2a08:	68630065 	stmdavs	r3!, {r0, r2, r5, r6}^
    2a0c:	61747367 	cmnvs	r4, r7, ror #6
    2a10:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2a14:	61770074 	cmnvs	r7, r4, ror r0
    2a18:	7269656b 	rsbvc	r6, r9, #448790528	; 0x1ac00000
    2a1c:	50520071 	subspl	r0, r2, r1, ror r0
    2a20:	45525f4d 	ldrbmi	r5, [r2, #-3917]	; 0xfffff0b3
    2a24:	55535f51 	ldrbpl	r5, [r3, #-3921]	; 0xfffff0af
    2a28:	4e455053 	mcrmi	0, 2, r5, cr5, cr3, {2}
    2a2c:	74610044 	strbtvc	r0, [r1], #-68	; 0xffffffbc
    2a30:	62697274 	rsbvs	r7, r9, #116, 4	; 0x40000007
    2a34:	00657475 	rsbeq	r7, r5, r5, ror r4
    2a38:	415f524e 	cmpmi	pc, lr, asr #4
    2a3c:	56495443 	strbpl	r5, [r9], -r3, asr #8
    2a40:	49465f45 	stmdbmi	r6, {r0, r2, r6, r8, r9, sl, fp, ip, lr}^
    2a44:	6900454c 	stmdbvs	r0, {r2, r3, r6, r8, sl, lr}
    2a48:	75615f64 	strbvc	r5, [r1, #-3940]!	; 0xfffff09c
    2a4c:	70006f74 	andvc	r6, r0, r4, ror pc
    2a50:	6f5f756d 	svcvs	0x005f756d
    2a54:	655f7663 	ldrbvs	r7, [pc, #-1635]	; 23f9 <.debug_str+0x23f9>
    2a58:	5f5f006e 	svcpl	0x005f006e
    2a5c:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    2a60:	6c5f6c65 	mrrcvs	12, 6, r6, pc, cr5	; <UNPREDICTABLE>
    2a64:	5f66666f 	svcpl	0x0066666f
    2a68:	6e690074 	mcrvs	0, 3, r0, cr9, cr4, {3}
    2a6c:	61697469 	cmnvs	r9, r9, ror #8
    2a70:	736e5f6c 	cmnvc	lr, #108, 30	; 0x1b0
    2a74:	70757300 	rsbsvc	r7, r5, r0, lsl #6
    2a78:	73657270 	cmnvc	r5, #112, 4
    2a7c:	69625f73 	stmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2a80:	615f646e 	cmpvs	pc, lr, ror #8
    2a84:	73727474 	cmnvc	r2, #116, 8	; 0x74000000
    2a88:	44454c00 	strbmi	r4, [r5], #-3072	; 0xfffff400
    2a8c:	46464f5f 			; <UNDEFINED> instruction: 0x46464f5f
    2a90:	5f6d7000 	svcpl	0x006d7000
    2a94:	73627573 	cmnvc	r2, #482344960	; 0x1cc00000
    2a98:	645f7379 	ldrbvs	r7, [pc], #-889	; 2aa0 <.debug_str+0x2aa0>
    2a9c:	00617461 	rsbeq	r7, r1, r1, ror #8
    2aa0:	69646f6d 	stmdbvs	r4!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    2aa4:	5f6f666e 	svcpl	0x006f666e
    2aa8:	72747461 	rsbsvc	r7, r4, #1627389952	; 0x61000000
    2aac:	6f630073 	svcvs	0x00630073
    2ab0:	65746e75 	ldrbvs	r6, [r4, #-3701]!	; 0xfffff18b
    2ab4:	65670072 	strbvs	r0, [r7, #-114]!	; 0xffffff8e
    2ab8:	73755f74 	cmnvc	r5, #116, 30	; 0x1d0
    2abc:	6f765f62 	svcvs	0x00765f62
    2ac0:	6761746c 	strbvs	r7, [r1, -ip, ror #8]!
    2ac4:	6f6e0065 	svcvs	0x006e0065
    2ac8:	735f6564 	cmpvc	pc, #100, 10	; 0x19000000
    2acc:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    2ad0:	6f630073 	svcvs	0x00630073
    2ad4:	00746e75 	rsbseq	r6, r4, r5, ror lr
    2ad8:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
    2adc:	6165685f 	cmnvs	r5, pc, asr r8
    2ae0:	78610064 	stmdavc	r1!, {r2, r5, r6}^
    2ae4:	65725f70 	ldrbvs	r5, [r2, #-3952]!	; 0xfffff090
    2ae8:	70616d67 	rsbvc	r6, r1, r7, ror #26
    2aec:	7172695f 	cmnvc	r2, pc, asr r9
    2af0:	6968635f 	stmdbvs	r8!, {r0, r1, r2, r3, r4, r6, r8, r9, sp, lr}^
    2af4:	70700070 	rsbsvc	r0, r0, r0, ror r0
    2af8:	00766572 	rsbseq	r6, r6, r2, ror r5
    2afc:	746c6f76 	strbtvc	r6, [ip], #-3958	; 0xfffff08a
    2b00:	5f656761 	svcpl	0x00656761
    2b04:	5f78616d 	svcpl	0x0078616d
    2b08:	69736564 	ldmdbvs	r3!, {r2, r5, r6, r8, sl, sp, lr}^
    2b0c:	5f006e67 	svcpl	0x00006e67
    2b10:	656e6f7a 	strbvs	r6, [lr, #-3962]!	; 0xfffff086
    2b14:	73666572 	cmnvc	r6, #478150656	; 0x1c800000
    2b18:	574f5000 	strbpl	r5, [pc, -r0]
    2b1c:	535f5245 	cmppl	pc, #1342177284	; 0x50000004
    2b20:	4c505055 	mrrcmi	0, 5, r5, r0, cr5
    2b24:	52505f59 	subspl	r5, r0, #356	; 0x164
    2b28:	545f504f 	ldrbpl	r5, [pc], #-79	; 2b30 <.debug_str+0x2b30>
    2b2c:	5f504d45 	svcpl	0x00504d45
    2b30:	004e494d 	subeq	r4, lr, sp, asr #18
    2b34:	5f746162 	svcpl	0x00746162
    2b38:	00746564 	rsbseq	r6, r4, r4, ror #10
    2b3c:	5f444456 	svcpl	0x00444456
    2b40:	33534552 	cmpcc	r3, #343932928	; 0x14800000
    2b44:	5449425f 	strbpl	r4, [r9], #-607	; 0xfffffda1
    2b48:	6d707200 	lfmvs	f7, 2, [r0, #-0]
    2b4c:	6174735f 	cmnvs	r4, pc, asr r3
    2b50:	00737574 	rsbseq	r7, r3, r4, ror r5
    2b54:	5f4d5052 	svcpl	0x004d5052
    2b58:	55534552 	ldrbpl	r4, [r3, #-1362]	; 0xfffffaae
    2b5c:	474e494d 	strbmi	r4, [lr, -sp, asr #18]
    2b60:	5f736900 	svcpl	0x00736900
    2b64:	5f6e6962 	svcpl	0x006e6962
    2b68:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
    2b6c:	00656c62 	rsbeq	r6, r5, r2, ror #24
    2b70:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
    2b74:	745f6563 	ldrbvc	r6, [pc], #-1379	; 2b7c <.debug_str+0x2b7c>
    2b78:	00657079 	rsbeq	r7, r5, r9, ror r0
    2b7c:	5f646975 	svcpl	0x00646975
    2b80:	72660074 	rsbvc	r0, r6, #116	; 0x74
    2b84:	657a6565 	ldrbvs	r6, [sl, #-1381]!	; 0xfffffa9b
    2b88:	73657400 	cmnvc	r5, #0, 8
    2b8c:	6f630074 	svcvs	0x00630074
    2b90:	7461706d 	strbtvc	r7, [r1], #-109	; 0xffffff93
    2b94:	656c6269 	strbvs	r6, [ip, #-617]!	; 0xfffffd97
    2b98:	574f5000 	strbpl	r5, [pc, -r0]
    2b9c:	535f5245 	cmppl	pc, #1342177284	; 0x50000004
    2ba0:	4c505055 	mrrcmi	0, 5, r5, r0, cr5
    2ba4:	52505f59 	subspl	r5, r0, #356	; 0x164
    2ba8:	435f504f 	cmpmi	pc, #79	; 0x4f
    2bac:	47524148 	ldrbmi	r4, [r2, -r8, asr #2]
    2bb0:	4f435f45 	svcmi	0x00435f45
    2bb4:	4f52544e 	svcmi	0x0052544e
    2bb8:	494c5f4c 	stmdbmi	ip, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    2bbc:	5f54494d 	svcpl	0x0054494d
    2bc0:	0058414d 	subseq	r4, r8, sp, asr #2
    2bc4:	32707861 	rsbscc	r7, r0, #6356992	; 0x610000
    2bc8:	5f353835 	svcpl	0x00353835
    2bcc:	5f746567 	svcpl	0x00746567
    2bd0:	74616276 	strbtvc	r6, [r1], #-630	; 0xfffffd8a
    2bd4:	66656400 	strbtvs	r6, [r5], -r0, lsl #8
    2bd8:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    2bdc:	7474615f 	ldrbtvc	r6, [r4], #-351	; 0xfffffea1
    2be0:	6e007372 	mcrvs	3, 0, r7, cr0, cr2, {3}
    2be4:	61635f6f 	cmnvs	r3, pc, ror #30
    2be8:	61626c6c 	cmnvs	r2, ip, ror #24
    2bec:	00736b63 	rsbseq	r6, r3, r3, ror #22
    2bf0:	5f727563 	svcpl	0x00727563
    2bf4:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
    2bf8:	6f697463 	svcvs	0x00697463
    2bfc:	69625f6e 	stmdbvs	r2!, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    2c00:	65720074 	ldrbvs	r0, [r2, #-116]!	; 0xffffff8c
    2c04:	656d7573 	strbvs	r7, [sp, #-1395]!	; 0xfffffa8d
    2c08:	7261655f 	rsbvc	r6, r1, #398458880	; 0x17c00000
    2c0c:	6100796c 	tstvs	r0, ip, ror #18
    2c10:	5f686372 	svcpl	0x00686372
    2c14:	6f6c7772 	svcvs	0x006c7772
    2c18:	745f6b63 	ldrbvc	r6, [pc], #-2915	; 2c20 <.debug_str+0x2c20>
    2c1c:	5f524e00 	svcpl	0x00524e00
    2c20:	5a5f4d56 	bpl	17d6180 <axp2585_set_usb_vhold+0x17d4f3c>
    2c24:	5f454e4f 	svcpl	0x00454e4f
    2c28:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
    2c2c:	4554495f 	ldrbmi	r4, [r4, #-2399]	; 0xfffff6a1
    2c30:	4d00534d 	stcmi	3, cr5, [r0, #-308]	; 0xfffffecc
    2c34:	41524749 	cmpmi	r2, r9, asr #14
    2c38:	435f4554 	cmpmi	pc, #84, 10	; 0x15000000
    2c3c:	7200414d 	andvc	r4, r0, #1073741843	; 0x40000013
    2c40:	00746f6f 	rsbseq	r6, r4, pc, ror #30
    2c44:	5f627375 	svcpl	0x00627375
    2c48:	635f6370 	cmpvs	pc, #112, 6	; 0xc0000001
    2c4c:	67726168 	ldrbvs	r6, [r2, -r8, ror #2]!
    2c50:	00676e69 	rsbeq	r6, r7, r9, ror #28
    2c54:	52414d57 	subpl	r4, r1, #5568	; 0x15c0
    2c58:	4f4c5f4b 	svcmi	0x004c5f4b
    2c5c:	75730057 	ldrbvc	r0, [r3, #-87]!	; 0xffffffa9
    2c60:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
    2c64:	5f646564 	svcpl	0x00646564
    2c68:	6666696a 	strbtvs	r6, [r6], -sl, ror #18
    2c6c:	00736569 	rsbseq	r6, r3, r9, ror #10
    2c70:	5f746564 	svcpl	0x00746564
    2c74:	00746962 	rsbseq	r6, r4, r2, ror #18
    2c78:	4c5f524e 	lfmmi	f5, 2, [pc], {78}	; 0x4e
    2c7c:	425f5552 	subsmi	r5, pc, #343932928	; 0x14800000
    2c80:	00455341 	subeq	r5, r5, r1, asr #6
    2c84:	5f6d756e 	svcpl	0x006d756e
    2c88:	736d7973 	cmnvc	sp, #1884160	; 0x1cc000
    2c8c:	73696c00 	cmnvc	r9, #0, 24
    2c90:	6f007374 	svcvs	0x00007374
    2c94:	6f6e5f66 	svcvs	0x006e5f66
    2c98:	70006564 	andvc	r6, r0, r4, ror #10
    2c9c:	6f5f756d 	svcvs	0x005f756d
    2ca0:	635f7663 	cmpvs	pc, #103809024	; 0x6300000
    2ca4:	615f756f 	cmpvs	pc, pc, ror #10
    2ca8:	73756a64 	cmnvc	r5, #100, 20	; 0x64000
    2cac:	69745f74 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2cb0:	6100656d 	tstvs	r0, sp, ror #10
    2cb4:	725f7078 	subsvc	r7, pc, #120	; 0x78
    2cb8:	616d6765 	cmnvs	sp, r5, ror #14
    2cbc:	65735f70 	ldrbvs	r5, [r3, #-3952]!	; 0xfffff090
    2cc0:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2cc4:	73007374 	movwvc	r7, #884	; 0x374
    2cc8:	735f7165 	cmpvc	pc, #1073741849	; 0x40000019
    2ccc:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    2cd0:	5f666f00 	svcpl	0x00666f00
    2cd4:	6374616d 	cmnvs	r4, #1073741851	; 0x4000001b
    2cd8:	61745f68 	cmnvs	r4, r8, ror #30
    2cdc:	00656c62 	rsbeq	r6, r5, r2, ror #24
    2ce0:	5f434356 	svcpl	0x00434356
    2ce4:	4444504c 	strbmi	r5, [r4], #-76	; 0xffffffb4
    2ce8:	49425f52 	stmdbmi	r2, {r1, r4, r6, r8, r9, sl, fp, ip, lr}^
    2cec:	61770054 	cmnvs	r7, r4, asr r0
    2cf0:	7075656b 	rsbsvc	r6, r5, fp, ror #10
    2cf4:	7461705f 	strbtvc	r7, [r1], #-95	; 0xffffffa1
    2cf8:	6f6d0068 	svcvs	0x006d0068
    2cfc:	656c7564 	strbvs	r7, [ip, #-1380]!	; 0xfffffa9c
    2d00:	746f6e5f 	strbtvc	r6, [pc], #-3679	; 2d08 <.debug_str+0x2d08>
    2d04:	615f7365 	cmpvs	pc, r5, ror #6
    2d08:	73727474 	cmnvc	r2, #116, 8	; 0x74000000
    2d0c:	574f5000 	strbpl	r5, [pc, -r0]
    2d10:	535f5245 	cmppl	pc, #1342177284	; 0x50000004
    2d14:	4c505055 	mrrcmi	0, 5, r5, r0, cr5
    2d18:	52505f59 	subspl	r5, r0, #356	; 0x164
    2d1c:	435f504f 	cmpmi	pc, #79	; 0x4f
    2d20:	47524148 	ldrbmi	r4, [r2, -r8, asr #2]
    2d24:	4f435f45 	svcmi	0x00435f45
    2d28:	4f52544e 	svcmi	0x0052544e
    2d2c:	494c5f4c 	stmdbmi	ip, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    2d30:	0054494d 	subseq	r4, r4, sp, asr #18
    2d34:	72717269 	rsbsvc	r7, r1, #-1879048186	; 0x90000006
    2d38:	72757465 	rsbsvc	r7, r5, #1694498816	; 0x65000000
    2d3c:	00745f6e 	rsbseq	r5, r4, lr, ror #30
    2d40:	616c6564 	cmnvs	ip, r4, ror #10
    2d44:	5f646579 	svcpl	0x00646579
    2d48:	5f746573 	svcpl	0x00746573
    2d4c:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
    2d50:	746b0065 	strbtvc	r0, [fp], #-101	; 0xffffff9b
    2d54:	00657079 	rsbeq	r7, r5, r9, ror r0
    2d58:	5f6d756e 	svcpl	0x006d756e
    2d5c:	70707573 	rsbsvc	r7, r0, r3, ror r5
    2d60:	6163696c 	cmnvs	r3, ip, ror #18
    2d64:	0073746e 	rsbseq	r7, r3, lr, ror #8
    2d68:	49545248 	ldmdbmi	r4, {r3, r6, r9, ip, lr}^
    2d6c:	5f52454d 	svcpl	0x0052454d
    2d70:	45534142 	ldrbmi	r4, [r3, #-322]	; 0xfffffebe
    2d74:	4145525f 	cmpmi	r5, pc, asr r2
    2d78:	4d49544c 	cfstrdmi	mvd5, [r9, #-304]	; 0xfffffed0
    2d7c:	52480045 	subpl	r0, r8, #69	; 0x45
    2d80:	454d4954 	strbmi	r4, [sp, #-2388]	; 0xfffff6ac
    2d84:	41425f52 	cmpmi	r2, r2, asr pc
    2d88:	4d5f4553 	cfldr64mi	mvdx4, [pc, #-332]	; 2c44 <.debug_str+0x2c44>
    2d8c:	544f4e4f 	strbpl	r4, [pc], #-3663	; 2d94 <.debug_str+0x2d94>
    2d90:	43494e4f 	movtmi	r4, #40527	; 0x9e4f
    2d94:	6d756e00 	ldclvs	14, cr6, [r5, #-0]
    2d98:	7172695f 	cmnvc	r2, pc, asr r9
    2d9c:	4f500073 	svcmi	0x00500073
    2da0:	5f524557 	svcpl	0x00524557
    2da4:	50505553 	subspl	r5, r0, r3, asr r5
    2da8:	485f594c 	ldmdami	pc, {r2, r3, r6, r8, fp, ip, lr}^	; <UNPREDICTABLE>
    2dac:	544c4145 	strbpl	r4, [ip], #-325	; 0xfffffebb
    2db0:	4f475f48 	svcmi	0x00475f48
    2db4:	5000444f 	andpl	r4, r0, pc, asr #8
    2db8:	5245574f 	subpl	r5, r5, #20709376	; 0x13c0000
    2dbc:	5055535f 	subspl	r5, r5, pc, asr r3
    2dc0:	5f594c50 	svcpl	0x00594c50
    2dc4:	504f5250 	subpl	r5, pc, r0, asr r2	; <UNPREDICTABLE>
    2dc8:	504e495f 	subpl	r4, lr, pc, asr r9
    2dcc:	435f5455 	cmpmi	pc, #1426063360	; 0x55000000
    2dd0:	45525255 	ldrbmi	r5, [r2, #-597]	; 0xfffffdab
    2dd4:	4c5f544e 	cfldrdmi	mvd5, [pc], {78}	; 0x4e
    2dd8:	54494d49 	strbpl	r4, [r9], #-3401	; 0xfffff2b7
    2ddc:	72617400 	rsbvc	r7, r1, #0, 8
    2de0:	00746567 	rsbseq	r6, r4, r7, ror #10
    2de4:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
    2de8:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	; 0xfffffe68
    2dec:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
    2df0:	7172695f 	cmnvc	r2, pc, asr r9
    2df4:	6e79625f 	mrcvs	2, 3, r6, cr9, cr15, {2}
    2df8:	00656d61 	rsbeq	r6, r5, r1, ror #26
    2dfc:	6d69746b 	cfstrdvs	mvd7, [r9, #-428]!	; 0xfffffe54
    2e00:	00745f65 	rsbseq	r5, r4, r5, ror #30
    2e04:	5f76636f 	svcpl	0x0076636f
    2e08:	6c756f63 	ldclvs	15, cr6, [r5], #-396	; 0xfffffe74
    2e0c:	5f626d75 	svcpl	0x00626d75
    2e10:	00303031 	eorseq	r3, r0, r1, lsr r0
    2e14:	45574f50 	ldrbmi	r4, [r7, #-3920]	; 0xfffff0b0
    2e18:	55535f52 	ldrbpl	r5, [r3, #-3922]	; 0xfffff0ae
    2e1c:	594c5050 	stmdbpl	ip, {r4, r6, ip, lr}^
    2e20:	4f52505f 	svcmi	0x0052505f
    2e24:	4f4d5f50 	svcmi	0x004d5f50
    2e28:	5f4c4544 	svcpl	0x004c4544
    2e2c:	454d414e 	strbmi	r4, [sp, #-334]	; 0xfffffeb2
    2e30:	74786500 	ldrbtvc	r6, [r8], #-1280	; 0xfffffb00
    2e34:	6c61765f 	stclvs	6, cr7, [r1], #-380	; 0xfffffe84
    2e38:	64006469 	strvs	r6, [r0], #-1129	; 0xfffffb97
    2e3c:	63697665 	cmnvs	r9, #105906176	; 0x6500000
    2e40:	72645f65 	rsbvc	r5, r4, #404	; 0x194
    2e44:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    2e48:	505f4e00 	subspl	r4, pc, r0, lsl #28
    2e4c:	4953534f 	ldmdbmi	r3, {r0, r1, r2, r3, r6, r8, r9, ip, lr}^
    2e50:	00454c42 	subeq	r4, r5, r2, asr #24
    2e54:	45574f50 	ldrbmi	r4, [r7, #-3920]	; 0xfffff0b0
    2e58:	55535f52 	ldrbpl	r5, [r3, #-3922]	; 0xfffff0ae
    2e5c:	594c5050 	stmdbpl	ip, {r4, r6, ip, lr}^
    2e60:	4f52505f 	svcmi	0x0052505f
    2e64:	45545f50 	ldrbmi	r5, [r4, #-3920]	; 0xfffff0b0
    2e68:	415f504d 	cmpmi	pc, sp, asr #32
    2e6c:	5452454c 	ldrbpl	r4, [r2], #-1356	; 0xfffffab4
    2e70:	4e494d5f 	mcrmi	13, 2, r4, cr9, cr15, {2}
    2e74:	50435000 	subpl	r5, r3, r0
    2e78:	43465f55 	movtmi	r5, #28501	; 0x6f55
    2e7c:	00524e5f 	subseq	r4, r2, pc, asr lr
    2e80:	706d756a 	rsbvc	r7, sp, sl, ror #10
    2e84:	746e655f 	strbtvc	r6, [lr], #-1375	; 0xfffffaa1
    2e88:	64007972 	strvs	r7, [r0], #-2418	; 0xfffff68e
    2e8c:	635f616d 	cmpvs	pc, #1073741851	; 0x4000001b
    2e90:	7265686f 	rsbvc	r6, r5, #7274496	; 0x6f0000
    2e94:	00746e65 	rsbseq	r6, r4, r5, ror #28
    2e98:	5f766564 	svcpl	0x00766564
    2e9c:	00727265 	rsbseq	r7, r2, r5, ror #4
    2ea0:	6d6f7266 	sfmvs	f7, 2, [pc, #-408]!	; 2d10 <.debug_str+0x2d10>
    2ea4:	616d6400 	cmnvs	sp, r0, lsl #8
    2ea8:	6f6f705f 	svcvs	0x006f705f
    2eac:	7000736c 	andvc	r7, r0, ip, ror #6
    2eb0:	656d5f6d 	strbvs	r5, [sp, #-3949]!	; 0xfffff093
    2eb4:	67617373 			; <UNDEFINED> instruction: 0x67617373
    2eb8:	65640065 	strbvs	r0, [r4, #-101]!	; 0xffffff9b
    2ebc:	74615f76 	strbtvc	r5, [r1], #-3958	; 0xfffff08a
    2ec0:	625f7274 	subsvs	r7, pc, #116, 4	; 0x40000007
    2ec4:	74736f6f 	ldrbtvc	r6, [r3], #-3951	; 0xfffff091
    2ec8:	646f6d5f 	strbtvs	r6, [pc], #-3423	; 2ed0 <.debug_str+0x2ed0>
    2ecc:	72640065 	rsbvc	r0, r4, #101	; 0x65
    2ed0:	61645f76 	smcvs	17910	; 0x45f6
    2ed4:	64006174 	strvs	r6, [r0], #-372	; 0xfffffe8c
    2ed8:	63697665 	cmnvs	r9, #105906176	; 0x6500000
    2edc:	72705f65 	rsbsvc	r5, r0, #404	; 0x194
    2ee0:	74617669 	strbtvc	r7, [r1], #-1641	; 0xfffff997
    2ee4:	726e0065 	rsbvc	r0, lr, #101	; 0x65
    2ee8:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
    2eec:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
    2ef0:	69685f64 	stmdbvs	r8!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    2ef4:	74616867 	strbtvc	r6, [r1], #-2151	; 0xfffff799
    2ef8:	63696d6f 	cmnvs	r9, #7104	; 0x1bc0
    2efc:	74656700 	strbtvc	r6, [r5], #-1792	; 0xfffff900
    2f00:	756d705f 	strbvc	r7, [sp, #-95]!	; 0xffffffa1
    2f04:	7275635f 	rsbsvc	r6, r5, #2080374785	; 0x7c000001
    2f08:	6d616e5f 	stclvs	14, cr6, [r1, #-380]!	; 0xfffffe84
    2f0c:	43560065 	cmpmi	r6, #101	; 0x65
    2f10:	4f495f43 	svcmi	0x00495f43
    2f14:	5449425f 	strbpl	r4, [r9], #-607	; 0xfffffda1
    2f18:	574f5000 	strbpl	r5, [pc, -r0]
    2f1c:	535f5245 	cmppl	pc, #1342177284	; 0x50000004
    2f20:	4c505055 	mrrcmi	0, 5, r5, r0, cr5
    2f24:	52505f59 	subspl	r5, r0, #356	; 0x164
    2f28:	435f504f 	cmpmi	pc, #79	; 0x4f
    2f2c:	47524148 	ldrbmi	r4, [r2, -r8, asr #2]
    2f30:	45545f45 	ldrbmi	r5, [r4, #-3909]	; 0xfffff0bb
    2f34:	435f4d52 	cmpmi	pc, #5248	; 0x1480
    2f38:	45525255 	ldrbmi	r5, [r2, #-597]	; 0xfffffdab
    2f3c:	4b00544e 	blmi	1807c <axp2585_set_usb_vhold+0x16e38>
    2f40:	5f4a424f 	svcpl	0x004a424f
    2f44:	545f534e 	ldrbpl	r5, [pc], #-846	; 2f4c <.debug_str+0x2f4c>
    2f48:	5f455059 	svcpl	0x00455059
    2f4c:	454e4f4e 	strbmi	r4, [lr, #-3918]	; 0xfffff0b2
    2f50:	70786100 	rsbsvc	r6, r8, r0, lsl #2
    2f54:	35383532 	ldrcc	r3, [r8, #-1330]!	; 0xffffface
    2f58:	6162695f 	cmnvs	r2, pc, asr r9
    2f5c:	6f745f74 	svcvs	0x00745f74
    2f60:	00416d5f 	subeq	r6, r1, pc, asr sp
    2f64:	32707861 	rsbscc	r7, r0, #6356992	; 0x610000
    2f68:	5f353835 	svcpl	0x00353835
    2f6c:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
    2f70:	5f726567 	svcpl	0x00726567
    2f74:	695f7464 	ldmdbvs	pc, {r2, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    2f78:	70007364 	andvc	r7, r0, r4, ror #6
    2f7c:	625f756d 	subsvs	r7, pc, #457179136	; 0x1b400000
    2f80:	705f7461 	subsvc	r7, pc, r1, ror #8
    2f84:	34617261 	strbtcc	r7, [r1], #-609	; 0xfffffd9f
    2f88:	5f736e00 	svcpl	0x00736e00
    2f8c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    2f90:	5f636100 	svcpl	0x00636100
    2f94:	006c6f76 	rsbeq	r6, ip, r6, ror pc
    2f98:	5f746573 	svcpl	0x00746573
    2f9c:	5f627375 	svcpl	0x00627375
    2fa0:	6c6f6869 	stclvs	8, cr6, [pc], #-420	; 2e04 <.debug_str+0x2e04>
    2fa4:	68730064 	ldmdavs	r3!, {r2, r5, r6}^
    2fa8:	6f647475 	svcvs	0x00647475
    2fac:	73006e77 	movwvc	r6, #3703	; 0xe77
    2fb0:	755f7465 	ldrbvc	r7, [pc, #-1125]	; 2b53 <.debug_str+0x2b53>
    2fb4:	765f6273 			; <UNDEFINED> instruction: 0x765f6273
    2fb8:	646c6f68 	strbtvs	r6, [ip], #-3944	; 0xfffff098
    2fbc:	63326900 	teqvs	r2, #0, 18
    2fc0:	696c635f 	stmdbvs	ip!, {r0, r1, r2, r3, r4, r6, r8, r9, sp, lr}^
    2fc4:	00746e65 	rsbseq	r6, r4, r5, ror #28
    2fc8:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
    2fcc:	5f636100 	svcpl	0x00636100
    2fd0:	696c6176 	stmdbvs	ip!, {r1, r2, r4, r5, r6, r8, sp, lr}^
    2fd4:	6f740064 	svcvs	0x00740064
    2fd8:	5f6c6174 	svcpl	0x006c6174
    2fdc:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    2fe0:	70786100 	rsbsvc	r6, r8, r0, lsl #2
    2fe4:	35383532 	ldrcc	r3, [r8, #-1330]!	; 0xffffface
    2fe8:	6168635f 	cmnvs	r8, pc, asr r3
    2fec:	72656772 	rsbvc	r6, r5, #29884416	; 0x1c80000
    2ff0:	6972645f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, sp, lr}^
    2ff4:	00726576 	rsbseq	r6, r2, r6, ror r5
    2ff8:	5f766564 	svcpl	0x00766564
    2ffc:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
    3000:	00657361 	rsbeq	r7, r5, r1, ror #6
    3004:	415f524e 	cmpmi	pc, lr, asr #4
    3008:	5f4e4f4e 	svcpl	0x004e4f4e
    300c:	45474150 	strbmi	r4, [r7, #-336]	; 0xfffffeb0
    3010:	6e650053 	mcrvs	0, 3, r0, cr5, cr3, {2}
    3014:	00797274 	rsbseq	r7, r9, r4, ror r2
    3018:	65776f70 	ldrbvs	r6, [r7, #-3952]!	; 0xfffff090
    301c:	5f5f0072 	svcpl	0x005f0072
    3020:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    3024:	735f6c65 	cmpvc	pc, #25856	; 0x6500
    3028:	5f657a69 	svcpl	0x00657a69
    302c:	6c700074 	ldclvs	0, cr0, [r0], #-464	; 0xfffffe30
    3030:	6f667461 	svcvs	0x00667461
    3034:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    3038:	645f7465 	ldrbvs	r7, [pc], #-1125	; 3040 <.debug_str+0x3040>
    303c:	61647672 	smcvs	18274	; 0x4762
    3040:	50006174 	andpl	r6, r0, r4, ror r1
    3044:	5245574f 	subpl	r5, r5, #20709376	; 0x13c0000
    3048:	5055535f 	subspl	r5, r5, pc, asr r3
    304c:	5f594c50 	svcpl	0x00594c50
    3050:	504f5250 	subpl	r5, pc, r0, asr r2	; <UNPREDICTABLE>
    3054:	5041435f 	subpl	r4, r1, pc, asr r3
    3058:	54494341 	strbpl	r4, [r9], #-833	; 0xfffffcbf
    305c:	65640059 	strbvs	r0, [r4, #-89]!	; 0xffffffa7
    3060:	69705f76 	ldmdbvs	r0!, {r1, r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    3064:	6e695f6e 	cdpvs	15, 6, cr5, cr9, cr14, {3}
    3068:	73006f66 	movwvc	r6, #3942	; 0xf66
    306c:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
    3070:	696c5f65 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    3074:	73007473 	movwvc	r7, #1139	; 0x473
    3078:	74726f68 	ldrbtvc	r6, [r2], #-3944	; 0xfffff098
    307c:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
    3080:	6b5f5f00 	blvs	17dac88 <axp2585_set_usb_vhold+0x17d9a44>
    3084:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    3088:	65645f6c 	strbvs	r5, [r4, #-3948]!	; 0xfffff094
    308c:	00745f76 	rsbseq	r5, r4, r6, ror pc
    3090:	45574f50 	ldrbmi	r4, [r7, #-3920]	; 0xfffff0b0
    3094:	55535f52 	ldrbpl	r5, [r3, #-3922]	; 0xfffff0ae
    3098:	594c5050 	stmdbpl	ip, {r4, r6, ip, lr}^
    309c:	4f52505f 	svcmi	0x0052505f
    30a0:	48435f50 	stmdami	r3, {r4, r6, r8, r9, sl, fp, ip, lr}^
    30a4:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    30a8:	4c55465f 	mrrcmi	6, 5, r4, r5, cr15
    30ac:	7369004c 	cmnvc	r9, #76	; 0x4c
    30b0:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
    30b4:	6100796d 	tstvs	r0, sp, ror #18
    30b8:	35327078 	ldrcc	r7, [r2, #-120]!	; 0xffffff88
    30bc:	675f3538 	smmlarvs	pc, r8, r5, r3	; <UNPREDICTABLE>
    30c0:	725f7465 	subsvc	r7, pc, #1694498816	; 0x65000000
    30c4:	5f747365 	svcpl	0x00747365
    30c8:	00706163 	rsbseq	r6, r0, r3, ror #2
    30cc:	6d656d6b 	stclvs	13, cr6, [r5, #-428]!	; 0xfffffe54
    30d0:	6361635f 	cmnvs	r1, #2080374785	; 0x7c000001
    30d4:	6f006568 	svcvs	0x00006568
    30d8:	6e696c6e 	cdpvs	12, 6, cr6, cr9, cr14, {3}
    30dc:	72745f65 	rsbsvc	r5, r4, #404	; 0x194
    30e0:	64006769 	strvs	r6, [r0], #-1897	; 0xfffff897
    30e4:	72656665 	rsbvc	r6, r5, #105906176	; 0x6500000
    30e8:	5f646572 	svcpl	0x00646572
    30ec:	75736572 	ldrbvc	r6, [r3, #-1394]!	; 0xfffffa8e
    30f0:	6100656d 	tstvs	r0, sp, ror #10
    30f4:	76697463 	strbtvc	r7, [r9], -r3, ror #8
    30f8:	78610065 	stmdavc	r1!, {r0, r2, r5, r6}^
    30fc:	38353270 	ldmdacc	r5!, {r4, r5, r6, r9, ip, sp}
    3100:	68635f35 	stmdavs	r3!, {r0, r2, r4, r5, r8, r9, sl, fp, ip, lr}^
    3104:	65677261 	strbvs	r7, [r7, #-609]!	; 0xfffffd9f
    3108:	6e695f72 	mcrvs	15, 3, r5, cr9, cr2, {3}
    310c:	61637469 	cmnvs	r3, r9, ror #8
    3110:	73006c6c 	movwvc	r6, #3180	; 0xc6c
    3114:	6c5f7465 	cfldrdvs	mvd7, [pc], {101}	; 0x65
    3118:	6e657461 	cdpvs	4, 6, cr7, cr5, cr1, {3}
    311c:	745f7963 	ldrbvc	r7, [pc], #-2403	; 3124 <.debug_str+0x3124>
    3120:	72656c6f 	rsbvc	r6, r5, #28416	; 0x6f00
    3124:	65636e61 	strbvs	r6, [r3, #-3681]!	; 0xfffff19f
    3128:	61686300 	cmnvs	r8, r0, lsl #6
    312c:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
    3130:	72745f67 	rsbsvc	r5, r4, #412	; 0x19c
    3134:	67006769 	strvs	r6, [r0, -r9, ror #14]
    3138:	645f7465 	ldrbvs	r7, [pc], #-1125	; 3140 <.debug_str+0x3140>
    313c:	62697369 	rsbvs	r7, r9, #-1543503871	; 0xa4000001
    3140:	75007461 	strvc	r7, [r0, #-1121]	; 0xfffffb9f
    3144:	735f6273 	cmpvc	pc, #805306375	; 0x30000007
    3148:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0xfffffe8c
    314c:	69745f73 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    3150:	0072656d 	rsbseq	r6, r2, sp, ror #10
    3154:	45574f50 	ldrbmi	r4, [r7, #-3920]	; 0xfffff0b0
    3158:	55535f52 	ldrbpl	r5, [r3, #-3922]	; 0xfffff0ae
    315c:	594c5050 	stmdbpl	ip, {r4, r6, ip, lr}^
    3160:	4f52505f 	svcmi	0x0052505f
    3164:	4f435f50 	svcmi	0x00435f50
    3168:	4154534e 	cmpmi	r4, lr, asr #6
    316c:	435f544e 	cmpmi	pc, #1308622848	; 0x4e000000
    3170:	47524148 	ldrbmi	r4, [r2, -r8, asr #2]
    3174:	55435f45 	strbpl	r5, [r3, #-3909]	; 0xfffff0bb
    3178:	4e455252 	mcrmi	2, 2, r5, cr5, cr2, {2}
    317c:	414d5f54 	cmpmi	sp, r4, asr pc
    3180:	69660058 	stmdbvs	r6!, {r3, r4, r6}^
    3184:	6b00656c 	blvs	1c73c <axp2585_set_usb_vhold+0x1b4f8>
    3188:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
    318c:	646f6e5f 	strbtvs	r6, [pc], #-3679	; 3194 <.debug_str+0x3194>
    3190:	69620065 	stmdbvs	r2!, {r0, r2, r5, r6}^
    3194:	74615f6e 	strbtvc	r5, [r1], #-3950	; 0xfffff092
    3198:	00737274 	rsbseq	r7, r3, r4, ror r2
    319c:	7a5f726e 	bvc	17dfb5c <axp2585_set_usb_vhold+0x17de918>
    31a0:	73656e6f 	cmnvc	r5, #1776	; 0x6f0
    31a4:	76656400 	strbtvc	r6, [r5], -r0, lsl #8
    31a8:	7665755f 			; <UNDEFINED> instruction: 0x7665755f
    31ac:	00746e65 	rsbseq	r6, r4, r5, ror #28
    31b0:	6d6f7461 	cfstrdvs	mvd7, [pc, #-388]!	; 3034 <.debug_str+0x3034>
    31b4:	6c5f6369 	mrrcvs	3, 6, r6, pc, cr9	; <UNPREDICTABLE>
    31b8:	5f676e6f 	svcpl	0x00676e6f
    31bc:	72610074 	rsbvc	r0, r1, #116	; 0x74
    31c0:	61646863 	cmnvs	r4, r3, ror #16
    31c4:	73006174 	movwvc	r6, #372	; 0x174
    31c8:	73667379 	cmnvc	r6, #-469762047	; 0xe4000001
    31cc:	73706f5f 	cmnvc	r0, #380	; 0x17c
    31d0:	69726200 	ldmdbvs	r2!, {r9, sp, lr}^
    31d4:	6e746867 	cdpvs	8, 7, cr6, cr4, cr7, {3}
    31d8:	5f737365 	svcpl	0x00737365
    31dc:	00746567 	rsbseq	r6, r4, r7, ror #10
    31e0:	5f707861 	svcpl	0x00707861
    31e4:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
    31e8:	5f726567 	svcpl	0x00726567
    31ec:	70737573 	rsbsvc	r7, r3, r3, ror r5
    31f0:	00646e65 	rsbeq	r6, r4, r5, ror #28
    31f4:	5f707861 	svcpl	0x00707861
    31f8:	6d676572 	cfstr64vs	mvdx6, [r7, #-456]!	; 0xfffffe38
    31fc:	635f7061 	cmpvs	pc, #97	; 0x61
    3200:	625f726c 	subsvs	r7, pc, #108, 4	; 0xc0000006
    3204:	00737469 	rsbseq	r7, r3, r9, ror #8
    3208:	656b5f5f 	strbvs	r5, [fp, #-3935]!	; 0xfffff0a1
    320c:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    3210:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    3214:	66666964 	strbtvs	r6, [r6], -r4, ror #18
    3218:	6e00745f 	cfmvsrvs	mvf0, r7
    321c:	73656d61 	cmnvc	r5, #6208	; 0x1840
    3220:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
    3224:	73696400 	cmnvc	r9, #0, 8
    3228:	7373696d 	cmnvc	r3, #1785856	; 0x1b4000
    322c:	69726200 	ldmdbvs	r2!, {r9, sp, lr}^
    3230:	6e746867 	cdpvs	8, 7, cr6, cr4, cr7, {3}
    3234:	00737365 	rsbseq	r7, r3, r5, ror #6
    3238:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    323c:	725f7366 	subsvc	r7, pc, #-1744830463	; 0x98000001
    3240:	00746f6f 	rsbseq	r6, r4, pc, ror #30
    3244:	5f677562 	svcpl	0x00677562
    3248:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
    324c:	74656700 	strbtvc	r6, [r5], #-1792	; 0xfffff900
    3250:	6f72705f 	svcvs	0x0072705f
    3254:	74726570 	ldrbtvc	r6, [r2], #-1392	; 0xfffffa90
    3258:	6d630079 	stclvs	0, cr0, [r3, #-484]!	; 0xfffffe1c
    325c:	72615f61 	rsbvc	r5, r1, #388	; 0x184
    3260:	6d006165 	stfvss	f6, [r0, #-404]	; 0xfffffe6c
    3264:	745f646f 	ldrbvc	r6, [pc], #-1135	; 326c <.debug_str+0x326c>
    3268:	5f656572 	svcpl	0x00656572
    326c:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
    3270:	776f7000 	strbvc	r7, [pc, -r0]!
    3274:	735f7265 	cmpvc	pc, #1342177286	; 0x50000006
    3278:	6c707075 	ldclvs	0, cr7, [r0], #-468	; 0xfffffe2c
    327c:	6e695f79 	mcrvs	15, 3, r5, cr9, cr9, {3}
    3280:	73006f66 	movwvc	r6, #3942	; 0xf66
    3284:	64747568 	ldrbtvs	r7, [r4], #-1384	; 0xfffffa98
    3288:	5f6e776f 	svcpl	0x006e776f
    328c:	63676863 	cmnvs	r7, #6488064	; 0x630000
    3290:	75007275 	strvc	r7, [r0, #-629]	; 0xfffffd8b
    3294:	6e69776e 	cdpvs	7, 6, cr7, cr9, cr14, {3}
    3298:	68630064 	stmdavs	r3!, {r2, r5, r6}^
    329c:	65645f67 	strbvs	r5, [r4, #-3943]!	; 0xfffff099
    32a0:	6f6e0076 	svcvs	0x006e0076
    32a4:	6d5f6564 	cfldr64vs	mvdx6, [pc, #-400]	; 311c <.debug_str+0x311c>
    32a8:	6d5f6d65 	ldclvs	13, cr6, [pc, #-404]	; 311c <.debug_str+0x311c>
    32ac:	4e007061 	cdpmi	0, 0, cr7, cr0, cr1, {3}
    32b0:	4c535f52 	mrrcmi	15, 5, r5, r3, cr2
    32b4:	555f4241 	ldrbpl	r4, [pc, #-577]	; 307b <.debug_str+0x307b>
    32b8:	4345524e 	movtmi	r5, #21070	; 0x524e
    32bc:	4d49414c 	stfmie	f4, [r9, #-304]	; 0xfffffed0
    32c0:	454c4241 	strbmi	r4, [ip, #-577]	; 0xfffffdbf
    32c4:	574f5000 	strbpl	r5, [pc, -r0]
    32c8:	535f5245 	cmppl	pc, #1342177284	; 0x50000004
    32cc:	4c505055 	mrrcmi	0, 5, r5, r0, cr5
    32d0:	45485f59 	strbmi	r5, [r8, #-3929]	; 0xfffff0a7
    32d4:	48544c41 	ldmdami	r4, {r0, r6, sl, fp, lr}^
    32d8:	534e555f 	movtpl	r5, #58719	; 0xe55f
    32dc:	5f434550 	svcpl	0x00434550
    32e0:	4c494146 	stfmie	f4, [r9], {70}	; 0x46
    32e4:	00455255 	subeq	r5, r5, r5, asr r2
    32e8:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
    32ec:	6972745f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}^
    32f0:	736b0067 	cmnvc	fp, #103	; 0x67
    32f4:	61007465 	tstvs	r0, r5, ror #8
    32f8:	725f7078 	subsvc	r7, pc, #120	; 0x78
    32fc:	616d6765 	cmnvs	sp, r5, ror #14
    3300:	72775f70 	rsbsvc	r5, r7, #112, 30	; 0x1c0
    3304:	73657469 	cmnvc	r5, #1761607680	; 0x69000000
    3308:	74616200 	strbtvc	r6, [r1], #-512	; 0xfffffe00
    330c:	616d5f74 	smcvs	54772	; 0xd5f4
    3310:	61635f78 	smcvs	13816	; 0x35f8
    3314:	52500070 	subspl	r0, r0, #112	; 0x70
    3318:	5f45424f 	svcpl	0x0045424f
    331c:	43524f46 	cmpmi	r2, #280	; 0x118
    3320:	59535f45 	ldmdbpl	r3, {r0, r2, r6, r8, r9, sl, fp, ip, lr}^
    3324:	5248434e 	subpl	r4, r8, #939524097	; 0x38000001
    3328:	554f4e4f 	strbpl	r4, [pc, #-3663]	; 24e1 <.debug_str+0x24e1>
    332c:	524e0053 	subpl	r0, lr, #83	; 0x53
    3330:	534d565f 	movtpl	r5, #54879	; 0xd65f
    3334:	5f4e4143 	svcpl	0x004e4143
    3338:	454d4d49 	strbmi	r4, [sp, #-3401]	; 0xfffff2b7
    333c:	54414944 	strbpl	r4, [r1], #-2372	; 0xfffff6bc
    3340:	63610045 	cmnvs	r1, #69	; 0x45
    3344:	61766974 	cmnvs	r6, r4, ror r9
    3348:	00646574 	rsbeq	r6, r4, r4, ror r5
    334c:	5f6d756e 	svcpl	0x006d756e
    3350:	746d7973 	strbtvc	r7, [sp], #-2419	; 0xfffff68d
    3354:	50006261 	andpl	r6, r0, r1, ror #4
    3358:	5245574f 	subpl	r5, r5, #20709376	; 0x13c0000
    335c:	5055535f 	subspl	r5, r5, pc, asr r3
    3360:	5f594c50 	svcpl	0x00594c50
    3364:	4c414548 	cfstr64mi	mvdx4, [r1], {72}	; 0x48
    3368:	435f4854 	cmpmi	pc, #84, 16	; 0x540000
    336c:	00444c4f 	subeq	r4, r4, pc, asr #24
    3370:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
    3374:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
    3378:	54524800 	ldrbpl	r4, [r2], #-2048	; 0xfffff800
    337c:	52454d49 	subpl	r4, r5, #4672	; 0x1240
    3380:	464f535f 			; <UNDEFINED> instruction: 0x464f535f
    3384:	51524954 	cmppl	r2, r4, asr r9
    3388:	44454c00 	strbmi	r4, [r5], #-3072	; 0xfffff400
    338c:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    3390:	6f700046 	svcvs	0x00700046
    3394:	5f726577 	svcpl	0x00726577
    3398:	70707573 	rsbsvc	r7, r0, r3, ror r5
    339c:	745f796c 	ldrbvc	r7, [pc], #-2412	; 33a4 <.debug_str+0x33a4>
    33a0:	00657079 	rsbeq	r7, r5, r9, ror r0
    33a4:	706e6373 	rsbvc	r6, lr, r3, ror r3
    33a8:	746e6972 	strbtvc	r6, [lr], #-2418	; 0xfffff68e
    33ac:	65640066 	strbvs	r0, [r4, #-102]!	; 0xffffff9a
    33b0:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
    33b4:	646f6e5f 	strbtvs	r6, [pc], #-3679	; 33bc <.debug_str+0x33bc>
    33b8:	756e0065 	strbvc	r0, [lr, #-101]!	; 0xffffff9b
    33bc:	70675f6d 	rsbvc	r5, r7, sp, ror #30
    33c0:	79735f6c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    33c4:	5000736d 	andpl	r7, r0, sp, ror #6
    33c8:	5245574f 	subpl	r5, r5, #20709376	; 0x13c0000
    33cc:	5055535f 	subspl	r5, r5, pc, asr r3
    33d0:	5f594c50 	svcpl	0x00594c50
    33d4:	504f5250 	subpl	r5, pc, r0, asr r2	; <UNPREDICTABLE>
    33d8:	4c4f565f 	mcrrmi	6, 5, r5, pc, cr15
    33dc:	45474154 	strbmi	r4, [r7, #-340]	; 0xfffffeac
    33e0:	4e494d5f 	mcrmi	13, 2, r4, cr9, cr15, {2}
    33e4:	5345445f 	movtpl	r4, #21599	; 0x545f
    33e8:	004e4749 	subeq	r4, lr, r9, asr #14
    33ec:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    33f0:	78610074 	stmdavc	r1!, {r2, r4, r5, r6}^
    33f4:	73755f70 	cmnvc	r5, #112, 30	; 0x1c0
    33f8:	6e695f62 	cdpvs	15, 6, cr5, cr9, cr2, {3}
    33fc:	63006f66 	movwvs	r6, #3942	; 0xf66
    3400:	61706d6f 	cmnvs	r0, pc, ror #26
    3404:	6f5f7463 	svcvs	0x005f7463
    3408:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
    340c:	6961665f 	stmdbvs	r1!, {r0, r1, r2, r3, r4, r6, r9, sl, sp, lr}^
    3410:	0064656c 	rsbeq	r6, r4, ip, ror #10
    3414:	65636572 	strbvs	r6, [r3, #-1394]!	; 0xfffffa8e
    3418:	735f746e 	cmpvc	pc, #1845493760	; 0x6e000000
    341c:	6e6e6163 	powvsez	f6, f6, f3
    3420:	56006465 	strpl	r6, [r0], -r5, ror #8
    3424:	415f4343 	cmpmi	pc, r3, asr #6
    3428:	425f4344 	subsmi	r4, pc, #68, 6	; 0x10000001
    342c:	75005449 	strvc	r5, [r0, #-1097]	; 0xfffffbb7
    3430:	705f6273 	subsvc	r6, pc, r3, ror r2	; <UNPREDICTABLE>
    3434:	6f765f63 	svcvs	0x00765f63
    3438:	524e006c 	subpl	r0, lr, #108	; 0x6c
    343c:	444f4e5f 	strbmi	r4, [pc], #-3679	; 3444 <.debug_str+0x3444>
    3440:	54535f45 	ldrbpl	r5, [r3], #-3909	; 0xfffff0bb
    3444:	53455441 	movtpl	r5, #21569	; 0x5441
    3448:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
    344c:	6c616374 	stclvs	3, cr6, [r1], #-464	; 0xfffffe30
    3450:	00745f6c 	rsbseq	r5, r4, ip, ror #30
    3454:	5f766564 	svcpl	0x00766564
    3458:	72747461 	rsbsvc	r7, r4, #1627389952	; 0x61000000
    345c:	6d700073 	ldclvs	0, cr0, [r0, #-460]!	; 0xfffffe34
    3460:	77705f75 			; <UNDEFINED> instruction: 0x77705f75
    3464:	656f6e72 	strbvs	r6, [pc, #-3698]!	; 25fa <.debug_str+0x25fa>
    3468:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    346c:	65730065 	ldrbvs	r0, [r3, #-101]!	; 0xffffff9b
    3470:	68635f74 	stmdavs	r3!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    3474:	75635f67 	strbvc	r5, [r3, #-3943]!	; 0xfffff099
    3478:	6f630072 	svcvs	0x00630072
    347c:	65726568 	ldrbvs	r6, [r2, #-1384]!	; 0xfffffa98
    3480:	645f746e 	ldrbvs	r7, [pc], #-1134	; 3488 <.debug_str+0x3488>
    3484:	6d5f616d 	ldfvse	f6, [pc, #-436]	; 32d8 <.debug_str+0x32d8>
    3488:	006b7361 	rsbeq	r7, fp, r1, ror #6
    348c:	74636573 	strbtvc	r6, [r3], #-1395	; 0xfffffa8d
    3490:	7474615f 	ldrbtvc	r6, [r4], #-351	; 0xfffffea1
    3494:	73007372 	movwvc	r7, #882	; 0x372
    3498:	696c6d79 	stmdbvs	ip!, {r0, r3, r4, r5, r6, r8, sl, fp, sp, lr}^
    349c:	50006b6e 	andpl	r6, r0, lr, ror #22
    34a0:	5245574f 	subpl	r5, r5, #20709376	; 0x13c0000
    34a4:	5055535f 	subspl	r5, r5, pc, asr r3
    34a8:	5f594c50 	svcpl	0x00594c50
    34ac:	48434554 	stmdami	r3, {r2, r4, r6, r8, sl, lr}^
    34b0:	4f4c4f4e 	svcmi	0x004c4f4e
    34b4:	4c5f5947 	mrrcmi	9, 4, r5, pc, cr7	; <UNPREDICTABLE>
    34b8:	00654669 	rsbeq	r4, r5, r9, ror #12
    34bc:	5f766564 	svcpl	0x00766564
    34c0:	6a626f6b 	bvs	189f274 <axp2585_set_usb_vhold+0x189e030>
    34c4:	5f524e00 	svcpl	0x00524e00
    34c8:	45455246 	strbmi	r5, [r5, #-582]	; 0xfffffdba
    34cc:	414d435f 	cmpmi	sp, pc, asr r3
    34d0:	4741505f 	smlsldmi	r5, r1, pc, r0	; <UNPREDICTABLE>
    34d4:	50005345 	andpl	r5, r0, r5, asr #6
    34d8:	5245574f 	subpl	r5, r5, #20709376	; 0x13c0000
    34dc:	5055535f 	subspl	r5, r5, pc, asr r3
    34e0:	5f594c50 	svcpl	0x00594c50
    34e4:	504f5250 	subpl	r5, pc, r0, asr r2	; <UNPREDICTABLE>
    34e8:	5255435f 	subspl	r4, r5, #2080374785	; 0x7c000001
    34ec:	544e4552 	strbpl	r4, [lr], #-1362	; 0xfffffaae
    34f0:	4756415f 			; <UNDEFINED> instruction: 0x4756415f
    34f4:	574f5000 	strbpl	r5, [pc, -r0]
    34f8:	535f5245 	cmppl	pc, #1342177284	; 0x50000004
    34fc:	4c505055 	mrrcmi	0, 5, r5, r0, cr5
    3500:	52505f59 	subspl	r5, r0, #356	; 0x164
    3504:	545f504f 	ldrbpl	r5, [pc], #-79	; 350c <.debug_str+0x350c>
    3508:	5f504d45 	svcpl	0x00504d45
    350c:	49424d41 	stmdbmi	r2, {r0, r6, r8, sl, fp, lr}^
    3510:	00544e45 	subseq	r4, r4, r5, asr #28
    3514:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    3518:	6e5f7366 	cdpvs	3, 5, cr7, cr15, cr6, {3}
    351c:	0065646f 	rsbeq	r6, r5, pc, ror #8
    3520:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
    3524:	656b0065 	strbvs	r0, [fp, #-101]!	; 0xffffff9b
    3528:	73666e72 	cmnvc	r6, #1824	; 0x720
    352c:	7461695f 	strbtvc	r6, [r1], #-2399	; 0xfffff6a1
    3530:	00737274 	rsbseq	r7, r3, r4, ror r2
    3534:	636e6970 	cmnvs	lr, #112, 18	; 0x1c0000
    3538:	006c7274 	rsbeq	r7, ip, r4, ror r2
    353c:	735f7369 	cmpvc	pc, #-1543503871	; 0xa4000001
    3540:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
    3544:	6465646e 	strbtvs	r6, [r5], #-1134	; 0xfffffb92
    3548:	72657000 	rsbvc	r7, r5, #0
    354c:	7270006d 	rsbsvc	r0, r0, #109	; 0x6d
    3550:	6e657665 	cdpvs	6, 6, cr7, cr5, cr5, {3}
    3554:	65645f74 	strbvs	r5, [r4, #-3956]!	; 0xfffff08c
    3558:	72726566 	rsbsvc	r6, r2, #427819008	; 0x19800000
    355c:	705f6465 	subsvc	r6, pc, r5, ror #8
    3560:	65626f72 	strbvs	r6, [r2, #-3954]!	; 0xfffff08e
    3564:	70786100 	rsbsvc	r6, r8, r0, lsl #2
    3568:	35383532 	ldrcc	r3, [r8, #-1330]!	; 0xffffface
    356c:	6168635f 	cmnvs	r8, pc, asr r3
    3570:	72656772 	rsbvc	r6, r5, #29884416	; 0x1c80000
    3574:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
    3578:	00656d75 	rsbeq	r6, r5, r5, ror sp
    357c:	5f6e6163 	svcpl	0x006e6163
    3580:	656b6177 	strbvs	r6, [fp, #-375]!	; 0xfffffe89
    3584:	72007075 	andvc	r7, r0, #117	; 0x75
    3588:	775f6e75 			; <UNDEFINED> instruction: 0x775f6e75
    358c:	00656b61 	rsbeq	r6, r5, r1, ror #22
    3590:	63616564 	cmnvs	r1, #100, 10	; 0x19000000
    3594:	61766974 	cmnvs	r6, r4, ror r9
    3598:	6b006574 	blvs	1cb70 <axp2585_set_usb_vhold+0x1b92c>
    359c:	5f646975 	svcpl	0x00646975
    35a0:	64630074 	strbtvs	r0, [r3], #-116	; 0xffffff8c
    35a4:	41007665 	tstmi	r0, r5, ror #12
    35a8:	535f4d52 	cmppl	pc, #5248	; 0x1480
    35ac:	435f4345 	cmpmi	pc, #335544321	; 0x14000001
    35b0:	0045524f 	subeq	r5, r5, pc, asr #4
    35b4:	555f524e 	ldrbpl	r5, [pc, #-590]	; 336e <.debug_str+0x336e>
    35b8:	4956454e 	ldmdbmi	r6, {r1, r2, r3, r6, r8, sl, lr}^
    35bc:	42415443 	submi	r5, r1, #1124073472	; 0x43000000
    35c0:	7000454c 	andvc	r4, r0, ip, asr #10
    35c4:	695f756d 	ldmdbvs	pc, {r0, r2, r3, r5, r6, r8, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    35c8:	6f68736e 	svcvs	0x0068736e
    35cc:	41007472 	tstmi	r0, r2, ror r4
    35d0:	535f4d52 	cmppl	pc, #5248	; 0x1480
    35d4:	445f4345 	ldrbmi	r4, [pc], #-837	; 35dc <.debug_str+0x35dc>
    35d8:	4e495645 	cdpmi	6, 4, cr5, cr9, cr5, {2}
    35dc:	73005449 	movwvc	r5, #1097	; 0x449
    35e0:	6c707075 	ldclvs	0, cr7, [r0], #-468	; 0xfffffe2c
    35e4:	5f646569 	svcpl	0x00646569
    35e8:	6d6f7266 	sfmvs	f7, 2, [pc, #-408]!	; 3458 <.debug_str+0x3458>
    35ec:	414d5700 	cmpmi	sp, r0, lsl #14
    35f0:	485f4b52 	ldmdami	pc, {r1, r4, r6, r8, r9, fp, lr}^	; <UNPREDICTABLE>
    35f4:	00484749 	subeq	r4, r8, r9, asr #14
    35f8:	63746162 	cmnvs	r4, #-2147483624	; 0x80000018
    35fc:	766f0068 	strbtvc	r0, [pc], -r8, rrx
    3600:	6c667265 	sfmvs	f7, 2, [r6], #-404	; 0xfffffe6c
    3604:	6975776f 	ldmdbvs	r5!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, ip, sp, lr}^
    3608:	6f6e0064 	svcvs	0x006e0064
    360c:	735f6564 	cmpvc	pc, #100, 10	; 0x19000000
    3610:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    3614:	6e66705f 	mcrvs	0, 3, r7, cr6, cr15, {2}
    3618:	7a697300 	bvc	1a60220 <axp2585_set_usb_vhold+0x1a5efdc>
    361c:	70797465 	rsbsvc	r7, r9, r5, ror #8
    3620:	61700065 	cmnvs	r0, r5, rrx
    3624:	6e755f64 	cdpvs	15, 7, cr5, cr5, cr4, {3}
    3628:	006c6974 	rsbeq	r6, ip, r4, ror r9
    362c:	32707861 	rsbscc	r7, r0, #6356992	; 0x610000
    3630:	5f353835 	svcpl	0x00353835
    3634:	5f746573 	svcpl	0x00746573
    3638:	695f6361 	ldmdbvs	pc, {r0, r5, r6, r8, r9, sp, lr}^	; <UNPREDICTABLE>
    363c:	646c6f68 	strbtvs	r6, [ip], #-3944	; 0xfffff098
    3640:	70786100 	rsbsvc	r6, r8, r0, lsl #2
    3644:	7165725f 	cmnvc	r5, pc, asr r2
    3648:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
    364c:	7172695f 	cmnvc	r2, pc, asr r9
    3650:	65737500 	ldrbvs	r7, [r3, #-1280]!	; 0xfffffb00
    3654:	726f665f 	rsbvc	r6, pc, #99614720	; 0x5f00000
    3658:	6d70615f 	ldfvse	f6, [r0, #-380]!	; 0xfffffe84
    365c:	646f6d00 	strbtvs	r6, [pc], #-3328	; 3664 <.debug_str+0x3664>
    3660:	5f656c75 	svcpl	0x00656c75
    3664:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
    3668:	4f4d0065 	svcmi	0x004d0065
    366c:	454c5544 	strbmi	r5, [ip, #-1348]	; 0xfffffabc
    3670:	4154535f 	cmpmi	r4, pc, asr r3
    3674:	555f4554 	ldrbpl	r4, [pc, #-1364]	; 3128 <.debug_str+0x3128>
    3678:	524f464e 	subpl	r4, pc, #81788928	; 0x4e00000
    367c:	0044454d 	subeq	r4, r4, sp, asr #10
    3680:	706f7270 	rsbvc	r7, pc, r0, ror r2	; <UNPREDICTABLE>
    3684:	69747265 	ldmdbvs	r4!, {r0, r2, r5, r6, r9, ip, sp, lr}^
    3688:	50007365 	andpl	r7, r0, r5, ror #6
    368c:	5245574f 	subpl	r5, r5, #20709376	; 0x13c0000
    3690:	5055535f 	subspl	r5, r5, pc, asr r3
    3694:	5f594c50 	svcpl	0x00594c50
    3698:	504f5250 	subpl	r5, pc, r0, asr r2	; <UNPREDICTABLE>
    369c:	4e4f435f 	mcrmi	3, 2, r4, cr15, cr15, {2}
    36a0:	4e415453 	mcrmi	4, 2, r5, cr1, cr3, {2}
    36a4:	48435f54 	stmdami	r3, {r2, r4, r6, r8, r9, sl, fp, ip, lr}^
    36a8:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    36ac:	4c4f565f 	mcrrmi	6, 5, r5, pc, cr15
    36b0:	45474154 	strbmi	r4, [r7, #-340]	; 0xfffffeac
    36b4:	58414d5f 	stmdapl	r1, {r0, r1, r2, r3, r4, r6, r8, sl, fp, lr}^
    36b8:	65727000 	ldrbvs	r7, [r2, #-0]!
    36bc:	6f630076 	svcvs	0x00630076
    36c0:	50006564 	andpl	r6, r0, r4, ror #10
    36c4:	5245574f 	subpl	r5, r5, #20709376	; 0x13c0000
    36c8:	5055535f 	subspl	r5, r5, pc, asr r3
    36cc:	5f594c50 	svcpl	0x00594c50
    36d0:	504f5250 	subpl	r5, pc, r0, asr r2	; <UNPREDICTABLE>
    36d4:	454e455f 	strbmi	r4, [lr, #-1375]	; 0xfffffaa1
    36d8:	5f594752 	svcpl	0x00594752
    36dc:	4c4c5546 	cfstr64mi	mvdx5, [ip], {70}	; 0x46
    36e0:	5345445f 	movtpl	r4, #21599	; 0x545f
    36e4:	004e4749 	subeq	r4, lr, r9, asr #14
    36e8:	535f524e 	cmppl	pc, #-536870908	; 0xe0000004
    36ec:	4954464f 	ldmdbmi	r4, {r0, r1, r2, r3, r6, r9, sl, lr}^
    36f0:	00535152 	subseq	r5, r3, r2, asr r1
    36f4:	6e657665 	cdpvs	6, 6, cr7, cr5, cr5, {3}
    36f8:	6f635f74 	svcvs	0x00635f74
    36fc:	00746e75 	rsbseq	r6, r4, r5, ror lr
    3700:	465f524e 	ldrbmi	r5, [pc], -lr, asr #4
    3704:	5f454552 	svcpl	0x00454552
    3708:	45474150 	strbmi	r4, [r7, #-336]	; 0xfffffeb0
    370c:	524e0053 	subpl	r0, lr, #83	; 0x53
    3710:	5443415f 	strbpl	r4, [r3], #-351	; 0xfffffea1
    3714:	5f455649 	svcpl	0x00455649
    3718:	4e4f4e41 	cdpmi	14, 4, cr4, cr15, cr1, {2}
    371c:	70786100 	rsbsvc	r6, r8, r0, lsl #2
    3720:	7075735f 	rsbsvc	r7, r5, pc, asr r3
    3724:	5f796c70 	svcpl	0x00796c70
    3728:	6f666e69 	svcvs	0x00666e69
    372c:	574f5000 	strbpl	r5, [pc, -r0]
    3730:	535f5245 	cmppl	pc, #1342177284	; 0x50000004
    3734:	4c505055 	mrrcmi	0, 5, r5, r0, cr5
    3738:	52505f59 	subspl	r5, r0, #356	; 0x164
    373c:	435f504f 	cmpmi	pc, #79	; 0x4f
    3740:	42494c41 	submi	r4, r9, #16640	; 0x4100
    3744:	45544152 	ldrbmi	r4, [r4, #-338]	; 0xfffffeae
    3748:	72656b00 	rsbvc	r6, r5, #0, 22
    374c:	5f73666e 	svcpl	0x0073666e
    3750:	0073706f 	rsbseq	r7, r3, pc, rrx
    3754:	5f54454e 	svcpl	0x0054454e
    3758:	535f5852 	cmppl	pc, #5373952	; 0x520000
    375c:	4954464f 	ldmdbmi	r4, {r0, r1, r2, r3, r6, r9, sl, lr}^
    3760:	64005152 	strvs	r5, [r0], #-338	; 0xfffffeae
    3764:	615f7665 	cmpvs	pc, r5, ror #12
    3768:	5f727474 	svcpl	0x00727474
    376c:	65776f70 	ldrbvs	r6, [r7, #-3952]!	; 0xfffff090
    3770:	78610072 	stmdavc	r1!, {r1, r4, r5, r6}^
    3774:	38353270 	ldmdacc	r5!, {r4, r5, r6, r9, ip, sp}
    3778:	6f635f35 	svcvs	0x00635f35
    377c:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    3780:	76656400 	strbtvc	r6, [r5], -r0, lsl #8
    3784:	5f656369 	svcpl	0x00656369
    3788:	5f616d64 	svcpl	0x00616d64
    378c:	61726170 	cmnvs	r2, r0, ror r1
    3790:	6574656d 	ldrbvs	r6, [r4, #-1389]!	; 0xfffffa93
    3794:	6e007372 	mcrvs	3, 0, r7, cr0, cr2, {3}
    3798:	5f65646f 	svcpl	0x0065646f
    379c:	656e6f7a 	strbvs	r6, [lr, #-3962]!	; 0xfffff086
    37a0:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
    37a4:	4f500073 	svcmi	0x00500073
    37a8:	5f524557 	svcpl	0x00524557
    37ac:	50505553 	subspl	r5, r0, r3, asr r5
    37b0:	505f594c 	subspl	r5, pc, ip, asr #18
    37b4:	5f504f52 	svcpl	0x00504f52
    37b8:	4c414548 	cfstr64mi	mvdx4, [r1], {72}	; 0x48
    37bc:	50004854 	andpl	r4, r0, r4, asr r8
    37c0:	5245574f 	subpl	r5, r5, #20709376	; 0x13c0000
    37c4:	5055535f 	subspl	r5, r5, pc, asr r3
    37c8:	5f594c50 	svcpl	0x00594c50
    37cc:	504f5250 	subpl	r5, pc, r0, asr r2	; <UNPREDICTABLE>
    37d0:	4148435f 	cmpmi	r8, pc, asr r3
    37d4:	5f454752 	svcpl	0x00454752
    37d8:	00574f4e 	subseq	r4, r7, lr, asr #30
    37dc:	6c6b5f6e 	stclvs	15, cr5, [fp], #-440	; 0xfffffe48
    37e0:	00747369 	rsbseq	r7, r4, r9, ror #6
    37e4:	5f756d70 	svcpl	0x00756d70
    37e8:	6c676863 	stclvs	8, cr6, [r7], #-396	; 0xfffffe74
    37ec:	745f6465 	ldrbvc	r6, [pc], #-1125	; 37f4 <.debug_str+0x37f4>
    37f0:	00657079 	rsbeq	r7, r5, r9, ror r0
    37f4:	6c656475 	cfstrdvs	mvd6, [r5], #-468	; 0xfffffe2c
    37f8:	67007961 	strvs	r7, [r0, -r1, ror #18]
    37fc:	615f7465 	cmpvs	pc, r5, ror #8
    3800:	6f765f63 	svcvs	0x00765f63
    3804:	6761746c 	strbvs	r7, [r1, -ip, ror #8]!
    3808:	52410065 	subpl	r0, r1, #101	; 0x65
    380c:	45535f4d 	ldrbmi	r5, [r3, #-3917]	; 0xfffff0b3
    3810:	4f485f43 	svcmi	0x00485f43
    3814:	4f5a0054 	svcmi	0x005a0054
    3818:	4e5f454e 	cdpmi	5, 5, cr4, cr15, cr14, {2}
    381c:	414d524f 	cmpmi	sp, pc, asr #4
    3820:	7473004c 	ldrbtvc	r0, [r3], #-76	; 0xffffffb4
    3824:	5f65726f 	svcpl	0x0065726f
    3828:	6d5f6374 	ldclvs	3, cr6, [pc, #-464]	; 3660 <.debug_str+0x3660>
    382c:	0065646f 	rsbeq	r6, r5, pc, ror #8
    3830:	75646f6d 	strbvc	r6, [r4, #-3949]!	; 0xfffff093
    3834:	635f656c 	cmpvs	pc, #108, 10	; 0x1b000000
    3838:	0065726f 	rsbeq	r7, r5, pc, ror #4
    383c:	7974635f 	ldmdbvc	r4!, {r0, r1, r2, r3, r4, r6, r8, r9, sp, lr}^
    3840:	65006570 	strvs	r6, [r0, #-1392]	; 0xfffffa90
    3844:	72697078 	rsbvc	r7, r9, #120	; 0x78
    3848:	63007365 	movwvs	r7, #869	; 0x365
    384c:	646c6968 	strbtvs	r6, [ip], #-2408	; 0xfffff698
    3850:	006e6572 	rsbeq	r6, lr, r2, ror r5
    3854:	725f7374 	subsvc	r7, pc, #116, 6	; 0xd0000001
    3858:	75007365 	strvc	r7, [r0, #-869]	; 0xfffffc9b
    385c:	765f6273 			; <UNDEFINED> instruction: 0x765f6273
    3860:	70006c6f 	andvc	r6, r0, pc, ror #24
    3864:	65706f72 	ldrbvs	r6, [r0, #-3954]!	; 0xfffff08e
    3868:	5f797472 	svcpl	0x00797472
    386c:	775f7369 	ldrbvc	r7, [pc, -r9, ror #6]
    3870:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    3874:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    3878:	70636100 	rsbvc	r6, r3, r0, lsl #2
    387c:	616d5f69 	cmnvs	sp, r9, ror #30
    3880:	5f686374 	svcpl	0x00686374
    3884:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
    3888:	6f7a0065 	svcvs	0x007a0065
    388c:	705f656e 	subsvc	r6, pc, lr, ror #10
    3890:	74616467 	strbtvc	r6, [r1], #-1127	; 0xfffffb99
    3894:	70786100 	rsbsvc	r6, r8, r0, lsl #2
    3898:	776f705f 			; <UNDEFINED> instruction: 0x776f705f
    389c:	735f7265 	cmpvc	pc, #1342177286	; 0x50000006
    38a0:	6c707075 	ldclvs	0, cr7, [r0], #-468	; 0xfffffe2c
    38a4:	65725f79 	ldrbvs	r5, [r2, #-3961]!	; 0xfffff087
    38a8:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    38ac:	73007265 	movwvc	r7, #613	; 0x265
    38b0:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0xfffffe8c
    38b4:	61625f73 	smcvs	9715	; 0x25f3
    38b8:	73006573 	movwvc	r6, #1395	; 0x573
    38bc:	68735f74 	ldmdavs	r3!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    38c0:	0078646e 	rsbseq	r6, r8, lr, ror #8
    38c4:	45574f50 	ldrbmi	r4, [r7, #-3920]	; 0xfffff0b0
    38c8:	55535f52 	ldrbpl	r5, [r3, #-3922]	; 0xfffff0ae
    38cc:	594c5050 	stmdbpl	ip, {r4, r6, ip, lr}^
    38d0:	4345545f 	movtmi	r5, #21599	; 0x545f
    38d4:	4c4f4e48 	mcrrmi	14, 4, r4, pc, cr8
    38d8:	5f59474f 	svcpl	0x0059474f
    38dc:	6e4d694c 	cdpvs	9, 4, cr6, cr13, cr12, {2}
    38e0:	69727000 	ldmdbvs	r2!, {ip, sp, lr}^
    38e4:	65720076 	ldrbvs	r0, [r2, #-118]!	; 0xffffff8a
    38e8:	5f78616c 	svcpl	0x0078616c
    38ec:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    38f0:	4f500074 	svcmi	0x00500074
    38f4:	5f524557 	svcpl	0x00524557
    38f8:	50505553 	subspl	r5, r0, r3, asr r5
    38fc:	505f594c 	subspl	r5, pc, ip, asr #18
    3900:	5f504f52 	svcpl	0x00504f52
    3904:	544c4f56 	strbpl	r4, [ip], #-3926	; 0xfffff0aa
    3908:	5f454741 	svcpl	0x00454741
    390c:	00475641 	subeq	r5, r7, r1, asr #12
    3910:	6e766564 	cdpvs	5, 7, cr6, cr6, cr4, {3}
    3914:	0065646f 	rsbeq	r6, r5, pc, ror #8
    3918:	6c66666f 	stclvs	6, cr6, [r6], #-444	; 0xfffffe44
    391c:	5f656e69 	svcpl	0x00656e69
    3920:	61736964 	cmnvs	r3, r4, ror #18
    3924:	64656c62 	strbtvs	r6, [r5], #-3170	; 0xfffff39e
    3928:	62737500 	rsbsvs	r7, r3, #0, 10
    392c:	6164615f 	cmnvs	r4, pc, asr r1
    3930:	72657470 	rsbvc	r7, r5, #112, 8	; 0x70000000
    3934:	6168635f 	cmnvs	r8, pc, asr r3
    3938:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
    393c:	736b0067 	cmnvc	fp, #103	; 0x67
    3940:	6f747274 	svcvs	0x00747274
    3944:	00746e69 	rsbseq	r6, r4, r9, ror #28
    3948:	6b726f77 	blvs	1c9f72c <axp2585_set_usb_vhold+0x1c9e4e8>
    394c:	6e75665f 	mrcvs	6, 3, r6, cr5, cr15, {2}
    3950:	00745f63 	rsbseq	r5, r4, r3, ror #30
    3954:	70766e65 	rsbsvc	r6, r6, r5, ror #28
    3958:	70636100 	rsbvc	r6, r3, r0, lsl #2
    395c:	65645f69 	strbvs	r5, [r4, #-3945]!	; 0xfffff097
    3960:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
    3964:	0064695f 	rsbeq	r6, r4, pc, asr r9
    3968:	706d6f63 	rsbvc	r6, sp, r3, ror #30
    396c:	6574656c 	ldrbvs	r6, [r4, #-1388]!	; 0xfffffa94
    3970:	574f5000 	strbpl	r5, [pc, -r0]
    3974:	535f5245 	cmppl	pc, #1342177284	; 0x50000004
    3978:	4c505055 	mrrcmi	0, 5, r5, r0, cr5
    397c:	52505f59 	subspl	r5, r0, #356	; 0x164
    3980:	435f504f 	cmpmi	pc, #79	; 0x4f
    3984:	45525255 	ldrbmi	r5, [r2, #-597]	; 0xfffffdab
    3988:	4e5f544e 	cdpmi	4, 5, cr5, cr15, cr14, {2}
    398c:	6700574f 	strvs	r5, [r0, -pc, asr #14]
    3990:	70756f72 	rsbsvc	r6, r5, r2, ror pc
    3994:	61680073 	smcvs	32771	; 0x8003
    3998:	50006873 	andpl	r6, r0, r3, ror r8
    399c:	5245574f 	subpl	r5, r5, #20709376	; 0x13c0000
    39a0:	5055535f 	subspl	r5, r5, pc, asr r3
    39a4:	5f594c50 	svcpl	0x00594c50
    39a8:	4c414548 	cfstr64mi	mvdx4, [r1], {72}	; 0x48
    39ac:	4f5f4854 	svcmi	0x005f4854
    39b0:	56524556 			; <UNDEFINED> instruction: 0x56524556
    39b4:	41544c4f 	cmpmi	r4, pc, asr #24
    39b8:	61004547 	tstvs	r0, r7, asr #10
    39bc:	35327078 	ldrcc	r7, [r2, #-120]!	; 0xffffff88
    39c0:	735f3538 	cmpvc	pc, #56, 10	; 0xe000000
    39c4:	695f7970 	ldmdbvs	pc, {r4, r5, r6, r8, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    39c8:	006f666e 	rsbeq	r6, pc, lr, ror #12
    39cc:	736d7973 	cmnvc	sp, #1884160	; 0x1cc000
    39d0:	4d505200 	lfmmi	f5, 2, [r0, #-0]
    39d4:	5443415f 	strbpl	r4, [r3], #-351	; 0xfffffea1
    39d8:	00455649 	subeq	r5, r5, r9, asr #12
    39dc:	67697274 			; <UNDEFINED> instruction: 0x67697274
    39e0:	5f726567 	svcpl	0x00726567
    39e4:	6b636f6c 	blvs	18df79c <axp2585_set_usb_vhold+0x18de558>
    39e8:	6e746d00 	cdpvs	13, 7, cr6, cr4, cr0, {0}
    39ec:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
    39f0:	78610065 	stmdavc	r1!, {r0, r2, r5, r6}^
    39f4:	65725f70 	ldrbvs	r5, [r2, #-3952]!	; 0xfffff090
    39f8:	70616d67 	rsbvc	r6, r1, r7, ror #26
    39fc:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
    3a00:	72006574 	andvc	r6, r0, #116, 10	; 0x1d000000
    3a04:	69725f62 	ldmdbvs	r2!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
    3a08:	00746867 	rsbseq	r6, r4, r7, ror #16
    3a0c:	6e676973 	mcrvs	9, 3, r6, cr7, cr3, {3}
    3a10:	63206465 	teqvs	r0, #1694498816	; 0x65000000
    3a14:	00726168 	rsbseq	r6, r2, r8, ror #2
    3a18:	5f6c7067 	svcpl	0x006c7067
    3a1c:	75747566 	ldrbvc	r7, [r4, #-1382]!	; 0xfffffa9a
    3a20:	735f6572 	cmpvc	pc, #478150656	; 0x1c800000
    3a24:	00736d79 	rsbseq	r6, r3, r9, ror sp
    3a28:	636e7973 	cmnvs	lr, #1884160	; 0x1cc000
    3a2c:	6c706700 	ldclvs	7, cr6, [r0], #-0
    3a30:	6d79735f 	ldclvs	3, cr7, [r9, #-380]!	; 0xfffffe84
    3a34:	65640073 	strbvs	r0, [r4, #-115]!	; 0xffffff8d
    3a38:	61775f76 	cmnvs	r7, r6, ror pc
    3a3c:	5f006e72 	svcpl	0x00006e72
    3a40:	6e75665f 	mrcvs	6, 3, r6, cr5, cr15, {2}
    3a44:	005f5f63 	subseq	r5, pc, r3, ror #30
    3a48:	495f524e 	ldmdbmi	pc, {r1, r2, r3, r6, r9, ip, lr}^	; <UNPREDICTABLE>
    3a4c:	5443414e 	strbpl	r4, [r3], #-334	; 0xfffffeb2
    3a50:	5f455649 	svcpl	0x00455649
    3a54:	4e4f4e41 	cdpmi	14, 4, cr4, cr15, cr1, {2}
    3a58:	63726100 	cmnvs	r2, #0, 2
    3a5c:	65640068 	strbvs	r0, [r4, #-104]!	; 0xffffff98
    3a60:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    3a64:	72745f74 	rsbsvc	r5, r4, #116, 30	; 0x1d0
    3a68:	65676769 	strbvs	r6, [r7, #-1897]!	; 0xfffff897
    3a6c:	616d0072 	smcvs	53250	; 0xd002
    3a70:	72625f78 	rsbvc	r5, r2, #120, 30	; 0x1e0
    3a74:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    3a78:	7373656e 	cmnvc	r3, #461373440	; 0x1b800000
    3a7c:	5f524e00 	svcpl	0x00524e00
    3a80:	54524944 	ldrbpl	r4, [r2], #-2372	; 0xfffff6bc
    3a84:	00444549 	subeq	r4, r4, r9, asr #10
    3a88:	5f505841 	svcpl	0x00505841
    3a8c:	00474843 	subeq	r4, r7, r3, asr #16
    3a90:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    3a94:	736f705f 	cmnvc	pc, #95	; 0x5f
    3a98:	71726900 	cmnvc	r2, r0, lsl #18
    3a9c:	58410073 	stmdapl	r1, {r0, r1, r4, r5, r6}^
    3aa0:	41575f50 	cmpmi	r7, r0, asr pc
    3aa4:	55535f53 	ldrbpl	r5, [r3, #-3923]	; 0xfffff0ad
    3aa8:	4e455053 	mcrmi	0, 2, r5, cr5, cr3, {2}
    3aac:	78610044 	stmdavc	r1!, {r2, r6}^
    3ab0:	38353270 	ldmdacc	r5!, {r4, r5, r6, r9, ip, sp}
    3ab4:	6f705f35 	svcvs	0x00705f35
    3ab8:	5f726577 	svcpl	0x00726577
    3abc:	776f6873 			; <UNDEFINED> instruction: 0x776f6873
    3ac0:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
    3ac4:	616e5f74 	smcvs	58868	; 0xe5f4
    3ac8:	6b00656d 	blvs	1d084 <axp2585_set_usb_vhold+0x1be40>
    3acc:	61726170 	cmnvs	r2, r0, ror r1
    3ad0:	72615f6d 	rsbvc	r5, r1, #436	; 0x1b4
    3ad4:	00796172 	rsbseq	r6, r9, r2, ror r1
    3ad8:	76746e69 	ldrbtvc	r6, [r4], -r9, ror #28
    3adc:	6d006c61 	stcvs	12, cr6, [r0, #-388]	; 0xfffffe7c
    3ae0:	0070616d 	rsbseq	r6, r0, sp, ror #2
    3ae4:	575f524e 	ldrbpl	r5, [pc, -lr, asr #4]
    3ae8:	45544952 	ldrbmi	r4, [r4, #-2386]	; 0xfffff6ae
    3aec:	4b434142 	blmi	10d3ffc <axp2585_set_usb_vhold+0x10d2db8>
    3af0:	6f6e6b00 	svcvs	0x006e6b00
    3af4:	635f6564 	cmpvs	pc, #100, 10	; 0x19000000
    3af8:	7373616c 	cmnvc	r3, #108, 2
    3afc:	696c6800 	stmdbvs	ip!, {fp, sp, lr}^
    3b00:	6e5f7473 	mrcvs	4, 2, r7, cr15, cr3, {3}
    3b04:	0065646f 	rsbeq	r6, r5, pc, ror #8
    3b08:	6574756d 	ldrbvs	r7, [r4, #-1389]!	; 0xfffffa93
    3b0c:	65670078 	strbvs	r0, [r7, #-120]!	; 0xffffff88
    3b10:	73755f74 	cmnvc	r5, #116, 30	; 0x1d0
    3b14:	75635f62 	strbvc	r5, [r3, #-3938]!	; 0xfffff09e
    3b18:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
    3b1c:	72660074 	rsbvc	r0, r6, #116	; 0x74
    3b20:	657a6565 	ldrbvs	r6, [sl, #-1381]!	; 0xfffffa9b
    3b24:	696f6e5f 	stmdbvs	pc!, {r0, r1, r2, r3, r4, r6, r9, sl, fp, sp, lr}^	; <UNPREDICTABLE>
    3b28:	70007172 	andvc	r7, r0, r2, ror r1
    3b2c:	705f756d 	subsvc	r7, pc, sp, ror #10
    3b30:	656b776f 	strbvs	r7, [fp, #-1903]!	; 0xfffff891
    3b34:	6f6c5f79 	svcvs	0x006c5f79
    3b38:	745f676e 	ldrbvc	r6, [pc], #-1902	; 3b40 <.debug_str+0x3b40>
    3b3c:	00656d69 	rsbeq	r6, r5, r9, ror #26
    3b40:	5f627375 	svcpl	0x00627375
    3b44:	635f6461 	cmpvs	pc, #1627389952	; 0x61000000
    3b48:	66007275 			; <UNDEFINED> instruction: 0x66007275
    3b4c:	5f6c6c75 	svcpl	0x006c6c75
    3b50:	67697274 			; <UNDEFINED> instruction: 0x67697274
    3b54:	6d616e5f 	stclvs	14, cr6, [r1, #-380]!	; 0xfffffe84
    3b58:	73750065 	cmnvc	r5, #101	; 0x65
    3b5c:	65645f62 	strbvs	r5, [r4, #-3938]!	; 0xfffff09e
    3b60:	52490074 	subpl	r0, r9, #116	; 0x74
    3b64:	4f4e5f51 	svcmi	0x004e5f51
    3b68:	6200454e 	andvs	r4, r0, #327155712	; 0x13800000
    3b6c:	65747461 	ldrbvs	r7, [r4, #-1121]!	; 0xfffffb9f
    3b70:	695f7972 	ldmdbvs	pc, {r1, r4, r5, r6, r8, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    3b74:	006f666e 	rsbeq	r6, pc, lr, ror #12
    3b78:	6d69746b 	cfstrdvs	mvd7, [r9, #-428]!	; 0xfffffe54
    3b7c:	4f500065 	svcmi	0x00500065
    3b80:	5f524557 	svcpl	0x00524557
    3b84:	50505553 	subspl	r5, r0, r3, asr r5
    3b88:	505f594c 	subspl	r5, pc, ip, asr #18
    3b8c:	5f504f52 	svcpl	0x00504f52
    3b90:	52414843 	subpl	r4, r1, #4390912	; 0x430000
    3b94:	465f4547 	ldrbmi	r4, [pc], -r7, asr #10
    3b98:	5f4c4c55 	svcpl	0x004c4c55
    3b9c:	49534544 	ldmdbmi	r3, {r2, r6, r8, sl, lr}^
    3ba0:	70004e47 	andvc	r4, r0, r7, asr #28
    3ba4:	62656761 	rsbvs	r6, r5, #25427968	; 0x1840000
    3ba8:	6b636f6c 	blvs	18df960 <axp2585_set_usb_vhold+0x18de71c>
    3bac:	616c665f 	cmnvs	ip, pc, asr r6
    3bb0:	61007367 	tstvs	r0, r7, ror #6
    3bb4:	35327078 	ldrcc	r7, [r2, #-120]!	; 0xffffff88
    3bb8:	735f3538 	cmpvc	pc, #56, 10	; 0xe000000
    3bbc:	755f7465 	ldrbvc	r7, [pc, #-1125]	; 375f <.debug_str+0x375f>
    3bc0:	695f6273 	ldmdbvs	pc, {r0, r1, r4, r5, r6, r9, sp, lr}^	; <UNPREDICTABLE>
    3bc4:	646c6f68 	strbtvs	r6, [ip], #-3944	; 0xfffff098
    3bc8:	756d7000 	strbvc	r7, [sp, #-0]!
    3bcc:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
    3bd0:	6c6f7674 	stclvs	6, cr7, [pc], #-464	; 3a08 <.debug_str+0x3a08>
    3bd4:	6a64615f 	bvs	191c158 <axp2585_set_usb_vhold+0x191af14>
    3bd8:	5f747375 	svcpl	0x00747375
    3bdc:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    3be0:	64656c00 	strbtvs	r6, [r5], #-3072	; 0xfffff400
    3be4:	6972745f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}^
    3be8:	72656767 	rsbvc	r6, r5, #27000832	; 0x19c0000
    3bec:	6e697500 	cdpvs	5, 6, cr7, cr9, cr0, {0}
    3bf0:	5f363174 	svcpl	0x00363174
    3bf4:	78610074 	stmdavc	r1!, {r2, r4, r5, r6}^
    3bf8:	38353270 	ldmdacc	r5!, {r4, r5, r6, r9, ip, sp}
    3bfc:	65735f35 	ldrbvs	r5, [r3, #-3893]!	; 0xfffff0cb
    3c00:	73755f74 	cmnvc	r5, #116, 30	; 0x1d0
    3c04:	68765f62 	ldmdavs	r6!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
    3c08:	00646c6f 	rsbeq	r6, r4, pc, ror #24
    3c0c:	63616c73 	cmnvs	r1, #29440	; 0x7300
    3c10:	7861006b 	stmdavc	r1!, {r0, r1, r3, r5, r6}^
    3c14:	38353270 	ldmdacc	r5!, {r4, r5, r6, r9, ip, sp}
    3c18:	63615f35 	cmnvs	r1, #53, 30	; 0xd4
    3c1c:	666e695f 			; <UNDEFINED> instruction: 0x666e695f
    3c20:	5841006f 	stmdapl	r1, {r0, r1, r2, r3, r5, r6}^
    3c24:	494d5f50 	stmdbmi	sp, {r4, r6, r8, r9, sl, fp, ip, lr}^
    3c28:	6f004353 	svcvs	0x00004353
    3c2c:	635f7663 	cmpvs	pc, #103809024	; 0x6300000
    3c30:	70007061 	andvc	r7, r0, r1, rrx
    3c34:	625f756d 	subsvs	r7, pc, #457179136	; 0x1b400000
    3c38:	705f7461 	subsvc	r7, pc, r1, ror #8
    3c3c:	31617261 	cmncc	r1, r1, ror #4
    3c40:	756d7000 	strbvc	r7, [sp, #-0]!
    3c44:	7461625f 	strbtvc	r6, [r1], #-607	; 0xfffffda1
    3c48:	7261705f 	rsbvc	r7, r1, #95	; 0x5f
    3c4c:	70003261 	andvc	r3, r0, r1, ror #4
    3c50:	625f756d 	subsvs	r7, pc, #457179136	; 0x1b400000
    3c54:	705f7461 	subsvc	r7, pc, r1, ror #8
    3c58:	33617261 	cmncc	r1, #268435462	; 0x10000006
    3c5c:	6f687300 	svcvs	0x00687300
    3c60:	706f5f77 	rsbvc	r5, pc, r7, ror pc	; <UNPREDICTABLE>
    3c64:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
    3c68:	6d700073 	ldclvs	0, cr0, [r0, #-460]!	; 0xfffffe34
    3c6c:	61625f75 	smcvs	9717	; 0x25f5
    3c70:	61705f74 	cmnvs	r0, r4, ror pc
    3c74:	00356172 	eorseq	r6, r5, r2, ror r1
    3c78:	5f756d70 	svcpl	0x00756d70
    3c7c:	5f746162 	svcpl	0x00746162
    3c80:	61726170 	cmnvs	r2, r0, ror r1
    3c84:	6d700036 	ldclvs	0, cr0, [r0, #-216]!	; 0xffffff28
    3c88:	61625f75 	smcvs	9717	; 0x25f5
    3c8c:	61705f74 	cmnvs	r0, r4, ror pc
    3c90:	00376172 	eorseq	r6, r7, r2, ror r1
    3c94:	5f756d70 	svcpl	0x00756d70
    3c98:	5f746162 	svcpl	0x00746162
    3c9c:	61726170 	cmnvs	r2, r0, ror r1
    3ca0:	6d700038 	ldclvs	0, cr0, [r0, #-224]!	; 0xffffff20
    3ca4:	61625f75 	smcvs	9717	; 0x25f5
    3ca8:	61705f74 	cmnvs	r0, r4, ror pc
    3cac:	00396172 	eorseq	r6, r9, r2, ror r1
    3cb0:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
    3cb4:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
    3cb8:	6e752067 	cdpvs	0, 7, cr2, cr5, cr7, {3}
    3cbc:	6e676973 	mcrvs	9, 3, r6, cr7, cr3, {3}
    3cc0:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
    3cc4:	7400746e 	strvc	r7, [r0], #-1134	; 0xfffffb92
    3cc8:	5f776168 	svcpl	0x00776168
    3ccc:	6c726165 	ldfvse	f6, [r2], #-404	; 0xfffffe6c
    3cd0:	5f5f0079 	svcpl	0x005f0079
    3cd4:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    3cd8:	755f6c65 	ldrbvc	r6, [pc, #-3173]	; 307b <.debug_str+0x307b>
    3cdc:	32336469 	eorscc	r6, r3, #1761607680	; 0x69000000
    3ce0:	6100745f 	tstvs	r0, pc, asr r4
    3ce4:	76697463 	strbtvc	r7, [r9], -r3, ror #8
    3ce8:	6f635f65 	svcvs	0x00635f65
    3cec:	00746e75 	rsbseq	r6, r4, r5, ror lr
    3cf0:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
    3cf4:	6261745f 	rsbvs	r7, r1, #1593835520	; 0x5f000000
    3cf8:	6100656c 	tstvs	r0, ip, ror #10
    3cfc:	625f7078 	subsvs	r7, pc, #120	; 0x78
    3d00:	65747461 	ldrbvs	r7, [r4, #-1121]!	; 0xfffffb9f
    3d04:	695f7972 	ldmdbvs	pc, {r1, r4, r5, r6, r8, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    3d08:	006f666e 	rsbeq	r6, pc, lr, ror #12
    3d0c:	72717269 	rsbsvc	r7, r1, #-1879048186	; 0x90000006
    3d10:	72757465 	rsbsvc	r7, r5, #1694498816	; 0x65000000
    3d14:	6d70006e 	ldclvs	0, cr0, [r0, #-440]!	; 0xfffffe48
    3d18:	745f6369 	ldrbvc	r6, [pc], #-873	; 3d20 <.debug_str+0x3d20>
    3d1c:	5f706d65 	svcpl	0x00706d65
    3d20:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
    3d24:	72007465 	andvc	r7, r0, #1694498816	; 0x65000000
    3d28:	6f747365 	svcvs	0x00747365
    3d2c:	6e5f6572 	mrcvs	5, 2, r6, cr15, cr2, {3}
    3d30:	7172696f 	cmnvc	r2, pc, ror #18
    3d34:	616c6300 	cmnvs	ip, r0, lsl #6
    3d38:	615f7373 	cmpvs	pc, r3, ror r3	; <UNPREDICTABLE>
    3d3c:	73727474 	cmnvc	r2, #116, 8	; 0x74000000
    3d40:	574f5000 	strbpl	r5, [pc, -r0]
    3d44:	535f5245 	cmppl	pc, #1342177284	; 0x50000004
    3d48:	4c505055 	mrrcmi	0, 5, r5, r0, cr5
    3d4c:	52505f59 	subspl	r5, r0, #356	; 0x164
    3d50:	565f504f 	ldrbpl	r5, [pc], -pc, asr #32
    3d54:	41544c4f 	cmpmi	r4, pc, asr #24
    3d58:	4e5f4547 	cdpmi	5, 5, cr4, cr15, cr7, {2}
    3d5c:	5000574f 	andpl	r5, r0, pc, asr #14
    3d60:	5245574f 	subpl	r5, r5, #20709376	; 0x13c0000
    3d64:	5055535f 	subspl	r5, r5, pc, asr r3
    3d68:	5f594c50 	svcpl	0x00594c50
    3d6c:	4c414548 	cfstr64mi	mvdx4, [r1], {72}	; 0x48
    3d70:	445f4854 	ldrbmi	r4, [pc], #-2132	; 3d78 <.debug_str+0x3d78>
    3d74:	00444145 	subeq	r4, r4, r5, asr #2
    3d78:	61775f5f 	cmnvs	r7, pc, asr pc
    3d7c:	715f7469 	cmpvc	pc, r9, ror #8
    3d80:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    3d84:	6165685f 	cmnvs	r5, pc, asr r8
    3d88:	6c450064 	mcrrvs	0, 6, r0, r5, cr4
    3d8c:	5f323366 	svcpl	0x00323366
    3d90:	666c6148 	strbtvs	r6, [ip], -r8, asr #2
    3d94:	76656400 	strbtvc	r6, [r5], -r0, lsl #8
    3d98:	6f6f725f 	svcvs	0x006f725f
    3d9c:	78610074 	stmdavc	r1!, {r2, r4, r5, r6}^
    3da0:	68635f70 	stmdavs	r3!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    3da4:	65677261 	strbvs	r7, [r7, #-609]!	; 0xfffffd9f
    3da8:	65725f72 	ldrbvs	r5, [r2, #-3954]!	; 0xfffff08e
    3dac:	656d7573 	strbvs	r7, [sp, #-1395]!	; 0xfffffa8d
    3db0:	6d756e00 	ldclvs	14, cr6, [r5, #-0]
    3db4:	7075735f 	rsbsvc	r7, r5, pc, asr r3
    3db8:	65696c70 	strbvs	r6, [r9, #-3184]!	; 0xfffff390
    3dbc:	524e0073 	subpl	r0, lr, #115	; 0x73
    3dc0:	55524c5f 	ldrbpl	r4, [r2, #-3167]	; 0xfffff3a1
    3dc4:	53494c5f 	movtpl	r4, #40031	; 0x9c5f
    3dc8:	50005354 	andpl	r5, r0, r4, asr r3
    3dcc:	5245574f 	subpl	r5, r5, #20709376	; 0x13c0000
    3dd0:	5055535f 	subspl	r5, r5, pc, asr r3
    3dd4:	5f594c50 	svcpl	0x00594c50
    3dd8:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
    3ddc:	5350555f 	cmppl	r0, #398458880	; 0x17c00000
    3de0:	6b617700 	blvs	18619e8 <axp2585_set_usb_vhold+0x18607a4>
    3de4:	5f707565 	svcpl	0x00707565
    3de8:	6e657665 	cdpvs	6, 6, cr7, cr5, cr5, {3}
    3dec:	72690074 	rsbvc	r0, r9, #116	; 0x74
    3df0:	61645f71 	smcvs	17905	; 0x45f1
    3df4:	70006174 	andvc	r6, r0, r4, ror r1
    3df8:	695f756d 	ldmdbvs	pc, {r0, r2, r3, r5, r6, r8, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    3dfc:	5f74696e 	svcpl	0x0074696e
    3e00:	5f676863 	svcpl	0x00676863
    3e04:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
    3e08:	0064656c 	rsbeq	r6, r4, ip, ror #10
    3e0c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    3e10:	75615f72 	strbvc	r5, [r1, #-3954]!	; 0xfffff08e
    3e14:	75736f74 	ldrbvc	r6, [r3, #-3956]!	; 0xfffff08c
    3e18:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
    3e1c:	6d007364 	stcvs	3, cr7, [r0, #-400]	; 0xfffffe70
    3e20:	6a626f6b 	bvs	189fbd4 <axp2585_set_usb_vhold+0x189e990>
    3e24:	666c6500 	strbtvs	r6, [ip], -r0, lsl #10
    3e28:	735f3233 	cmpvc	pc, #805306371	; 0x30000003
    3e2c:	6e006d79 	mcrvs	13, 0, r6, cr0, cr9, {3}
    3e30:	68745f6f 	ldmdavs	r4!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    3e34:	616d7265 	cmnvs	sp, r5, ror #4
    3e38:	6f63006c 	svcvs	0x0063006c
    3e3c:	5f74736e 	svcpl	0x0074736e
    3e40:	6c656475 	cfstrdvs	mvd6, [r5], #-468	; 0xfffffe2c
    3e44:	69007961 	stmdbvs	r0, {r0, r5, r6, r8, fp, ip, sp, lr}
    3e48:	756d6d6f 	strbvc	r6, [sp, #-3439]!	; 0xfffff291
    3e4c:	73706f5f 	cmnvc	r0, #380	; 0x17c
    3e50:	69707300 	ldmdbvs	r0!, {r8, r9, ip, sp, lr}^
    3e54:	636f6c6e 	cmnvs	pc, #28160	; 0x6e00
    3e58:	00745f6b 	rsbseq	r5, r4, fp, ror #30
    3e5c:	5f55524c 	svcpl	0x0055524c
    3e60:	49544341 	ldmdbmi	r4, {r0, r6, r8, r9, lr}^
    3e64:	465f4556 			; <UNDEFINED> instruction: 0x465f4556
    3e68:	00454c49 	subeq	r4, r5, r9, asr #24
    3e6c:	62737576 	rsbsvs	r7, r3, #494927872	; 0x1d800000
    3e70:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
    3e74:	66657200 	strbtvs	r7, [r5], -r0, lsl #4
    3e78:	00746e63 	rsbseq	r6, r4, r3, ror #28
    3e7c:	6a626f6b 	bvs	189fc30 <axp2585_set_usb_vhold+0x189e9ec>
    3e80:	00746365 	rsbseq	r6, r4, r5, ror #6
    3e84:	626f7270 	rsbvs	r7, pc, #112, 4
    3e88:	79745f65 	ldmdbvc	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    3e8c:	70006570 	andvc	r6, r0, r0, ror r5
    3e90:	625f756d 	subsvs	r7, pc, #457179136	; 0x1b400000
    3e94:	745f7461 	ldrbvc	r7, [pc], #-1121	; 3e9c <.debug_str+0x3e9c>
    3e98:	5f706d65 	svcpl	0x00706d65
    3e9c:	61726170 	cmnvs	r2, r0, ror r1
    3ea0:	70003031 	andvc	r3, r0, r1, lsr r0
    3ea4:	625f756d 	subsvs	r7, pc, #457179136	; 0x1b400000
    3ea8:	745f7461 	ldrbvc	r7, [pc], #-1121	; 3eb0 <.debug_str+0x3eb0>
    3eac:	5f706d65 	svcpl	0x00706d65
    3eb0:	61726170 	cmnvs	r2, r0, ror r1
    3eb4:	70003131 	andvc	r3, r0, r1, lsr r1
    3eb8:	625f756d 	subsvs	r7, pc, #457179136	; 0x1b400000
    3ebc:	745f7461 	ldrbvc	r7, [pc], #-1121	; 3ec4 <.debug_str+0x3ec4>
    3ec0:	5f706d65 	svcpl	0x00706d65
    3ec4:	61726170 	cmnvs	r2, r0, ror r1
    3ec8:	70003231 	andvc	r3, r0, r1, lsr r2
    3ecc:	625f756d 	subsvs	r7, pc, #457179136	; 0x1b400000
    3ed0:	745f7461 	ldrbvc	r7, [pc], #-1121	; 3ed8 <.debug_str+0x3ed8>
    3ed4:	5f706d65 	svcpl	0x00706d65
    3ed8:	61726170 	cmnvs	r2, r0, ror r1
    3edc:	70003331 	andvc	r3, r0, r1, lsr r3
    3ee0:	625f756d 	subsvs	r7, pc, #457179136	; 0x1b400000
    3ee4:	745f7461 	ldrbvc	r7, [pc], #-1121	; 3eec <.debug_str+0x3eec>
    3ee8:	5f706d65 	svcpl	0x00706d65
    3eec:	61726170 	cmnvs	r2, r0, ror r1
    3ef0:	70003431 	andvc	r3, r0, r1, lsr r4
    3ef4:	625f756d 	subsvs	r7, pc, #457179136	; 0x1b400000
    3ef8:	745f7461 	ldrbvc	r7, [pc], #-1121	; 3f00 <.debug_str+0x3f00>
    3efc:	5f706d65 	svcpl	0x00706d65
    3f00:	61726170 	cmnvs	r2, r0, ror r1
    3f04:	70003531 	andvc	r3, r0, r1, lsr r5
    3f08:	625f756d 	subsvs	r7, pc, #457179136	; 0x1b400000
    3f0c:	745f7461 	ldrbvc	r7, [pc], #-1121	; 3f14 <.debug_str+0x3f14>
    3f10:	5f706d65 	svcpl	0x00706d65
    3f14:	61726170 	cmnvs	r2, r0, ror r1
    3f18:	62003631 	andvs	r3, r0, #51380224	; 0x3100000
    3f1c:	00737469 	rsbseq	r7, r3, r9, ror #8
    3f20:	6a626f6b 	bvs	189fcd4 <axp2585_set_usb_vhold+0x189ea90>
    3f24:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    3f28:	72610065 	rsbvc	r0, r1, #101	; 0x65
    3f2c:	61007367 	tstvs	r0, r7, ror #6
    3f30:	00766772 	rsbseq	r6, r6, r2, ror r7
    3f34:	5f756d70 	svcpl	0x00756d70
    3f38:	70627375 	rsbvc	r7, r2, r5, ror r3
    3f3c:	75635f63 	strbvc	r5, [r3, #-3939]!	; 0xfffff09d
    3f40:	6c660072 	stclvs	0, cr0, [r6], #-456	; 0xfffffe38
    3f44:	00736761 	rsbseq	r6, r3, r1, ror #14
    3f48:	5f64656c 	svcpl	0x0064656c
    3f4c:	65636361 	strbvs	r6, [r3, #-865]!	; 0xfffffc9f
    3f50:	73007373 	movwvc	r7, #883	; 0x373
    3f54:	735f7165 	cmpvc	pc, #1073741849	; 0x40000019
    3f58:	00706f74 	rsbseq	r6, r0, r4, ror pc
    3f5c:	61657270 	smcvs	22304	; 0x5720
    3f60:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
    3f64:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
    3f68:	69707300 	ldmdbvs	r0!, {r8, r9, ip, sp, lr}^
    3f6c:	636f6c6e 	cmnvs	pc, #28160	; 0x6e00
    3f70:	7562006b 	strbvc	r0, [r2, #-107]!	; 0xffffff95
    3f74:	6e655f67 	cdpvs	15, 6, cr5, cr5, cr7, {3}
    3f78:	00797274 	rsbseq	r7, r9, r4, ror r2
    3f7c:	45574f50 	ldrbmi	r4, [r7, #-3920]	; 0xfffff0b0
    3f80:	55535f52 	ldrbpl	r5, [r3, #-3922]	; 0xfffff0ae
    3f84:	594c5050 	stmdbpl	ip, {r4, r6, ip, lr}^
    3f88:	5059545f 	subspl	r5, r9, pc, asr r4
    3f8c:	53555f45 	cmppl	r5, #276	; 0x114
    3f90:	50520042 	subspl	r0, r2, r2, asr #32
    3f94:	45525f4d 	ldrbmi	r5, [r2, #-3917]	; 0xfffff0b3
    3f98:	44495f51 	strbmi	r5, [r9], #-3921	; 0xfffff0af
    3f9c:	6300454c 	movwvs	r4, #1356	; 0x54c
    3fa0:	616d7570 	smcvs	55120	; 0xd750
    3fa4:	5f006b73 	svcpl	0x00006b73
    3fa8:	72656b5f 	rsbvc	r6, r5, #97280	; 0x17c00
    3fac:	5f6c656e 	svcpl	0x006c656e
    3fb0:	7a697373 	bvc	1a60d84 <axp2585_set_usb_vhold+0x1a5fb40>
    3fb4:	00745f65 	rsbseq	r5, r4, r5, ror #30
    3fb8:	5f707861 	svcpl	0x00707861
    3fbc:	6d676572 	cfstr64vs	mvdx6, [r7, #-456]!	; 0xfffffe38
    3fc0:	755f7061 	ldrbvc	r7, [pc, #-97]	; 3f67 <.debug_str+0x3f67>
    3fc4:	74616470 	strbtvc	r6, [r1], #-1136	; 0xfffffb90
    3fc8:	756e0065 	strbvc	r0, [lr, #-101]!	; 0xffffff9b
    3fcc:	65725f6d 	ldrbvs	r5, [r2, #-3949]!	; 0xfffff093
    3fd0:	70007367 	andvc	r7, r0, r7, ror #6
    3fd4:	00736e69 	rsbseq	r6, r3, r9, ror #28
    3fd8:	45574f50 	ldrbmi	r4, [r7, #-3920]	; 0xfffff0b0
    3fdc:	55535f52 	ldrbpl	r5, [r3, #-3922]	; 0xfffff0ae
    3fe0:	594c5050 	stmdbpl	ip, {r4, r6, ip, lr}^
    3fe4:	4f52505f 	svcmi	0x0052505f
    3fe8:	4f565f50 	svcmi	0x00565f50
    3fec:	4741544c 	strbmi	r5, [r1, -ip, asr #8]
    3ff0:	414d5f45 	cmpmi	sp, r5, asr #30
    3ff4:	45445f58 	strbmi	r5, [r4, #-3928]	; 0xfffff0a8
    3ff8:	4e474953 	mcrmi	9, 2, r4, cr7, cr3, {2}
    3ffc:	70786100 	rsbsvc	r6, r8, r0, lsl #2
    4000:	6765725f 			; <UNDEFINED> instruction: 0x6765725f
    4004:	5f70616d 	svcpl	0x0070616d
    4008:	00717269 	rsbseq	r7, r1, r9, ror #4
    400c:	5f797073 	svcpl	0x00797073
    4010:	6f666e69 	svcvs	0x00666e69
    4014:	61686300 	cmnvs	r8, r0, lsl #6
    4018:	6d700072 	ldclvs	0, cr0, [r0, #-456]!	; 0xfffffe38
    401c:	6f685f75 	svcvs	0x00685f75
    4020:	68735f74 	ldmdavs	r3!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    4024:	6f647475 	svcvs	0x00647475
    4028:	50006e77 	andpl	r6, r0, r7, ror lr
    402c:	5245574f 	subpl	r5, r5, #20709376	; 0x13c0000
    4030:	5055535f 	subspl	r5, r5, pc, asr r3
    4034:	5f594c50 	svcpl	0x00594c50
    4038:	504f5250 	subpl	r5, pc, r0, asr r2	; <UNPREDICTABLE>
    403c:	454e455f 	strbmi	r4, [lr, #-1375]	; 0xfffffaa1
    4040:	5f594752 	svcpl	0x00594752
    4044:	4c4c5546 	cfstr64mi	mvdx5, [ip], {70}	; 0x46
    4048:	574f5000 	strbpl	r5, [pc, -r0]
    404c:	535f5245 	cmppl	pc, #1342177284	; 0x50000004
    4050:	4c505055 	mrrcmi	0, 5, r5, r0, cr5
    4054:	52505f59 	subspl	r5, r0, #356	; 0x164
    4058:	455f504f 	ldrbmi	r5, [pc, #-79]	; 4011 <.debug_str+0x4011>
    405c:	4752454e 	ldrbmi	r4, [r2, -lr, asr #10]
    4060:	56415f59 			; <UNDEFINED> instruction: 0x56415f59
    4064:	65730047 	ldrbvs	r0, [r3, #-71]!	; 0xffffffb9
    4068:	72705f74 	rsbsvc	r5, r0, #116, 30	; 0x1d0
    406c:	7265706f 	rsbvc	r7, r5, #111	; 0x6f
    4070:	63007974 	movwvs	r7, #2420	; 0x974
    4074:	625f7570 	subsvs	r7, pc, #112, 10	; 0x1c000000
    4078:	625f7469 	subsvs	r7, pc, #1761607680	; 0x69000000
    407c:	616d7469 	cmnvs	sp, r9, ror #8
    4080:	70750070 	rsbsvc	r0, r5, r0, ror r0
    4084:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
    4088:	6e696d5f 	mcrvs	13, 3, r6, cr9, cr15, {2}
    408c:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    4090:	64007365 	strvs	r7, [r0], #-869	; 0xfffffc9b
    4094:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    4098:	61645f72 	smcvs	17906	; 0x45f2
    409c:	74006174 	strvc	r6, [r0], #-372	; 0xfffffe8c
    40a0:	6e686365 	cdpvs	3, 6, cr6, cr8, cr5, {3}
    40a4:	676f6c6f 	strbvs	r6, [pc, -pc, ror #24]!
    40a8:	6b6d0079 	blvs	1b44294 <axp2585_set_usb_vhold+0x1b43050>
    40ac:	00726964 	rsbseq	r6, r2, r4, ror #18
    40b0:	63737973 	cmnvs	r3, #1884160	; 0x1cc000
    40b4:	5f6c6c61 	svcpl	0x006c6c61
    40b8:	0073706f 	rsbseq	r7, r3, pc, rrx
    40bc:	5f6d756e 	svcpl	0x006d756e
    40c0:	6300706b 	movwvs	r7, #107	; 0x6b
    40c4:	5f65726f 	svcpl	0x0065726f
    40c8:	735f6f72 	cmpvc	pc, #456	; 0x1c8
    40cc:	00657a69 	rsbeq	r7, r5, r9, ror #20
    40d0:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    40d4:	7a69735f 	bvc	1a60e58 <axp2585_set_usb_vhold+0x1a5fc14>
    40d8:	6d760065 	ldclvs	0, cr0, [r6, #-404]!	; 0xfffffe6c
    40dc:	65706f5f 	ldrbvs	r6, [r0, #-3935]!	; 0xfffff0a1
    40e0:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
    40e4:	5f736e6f 	svcpl	0x00736e6f
    40e8:	75727473 	ldrbvc	r7, [r2, #-1139]!	; 0xfffffb8d
    40ec:	50007463 	andpl	r7, r0, r3, ror #8
    40f0:	5245574f 	subpl	r5, r5, #20709376	; 0x13c0000
    40f4:	5055535f 	subspl	r5, r5, pc, asr r3
    40f8:	5f594c50 	svcpl	0x00594c50
    40fc:	504f5250 	subpl	r5, pc, r0, asr r2	; <UNPREDICTABLE>
    4100:	4154535f 	cmpmi	r4, pc, asr r3
    4104:	00535554 	subseq	r5, r3, r4, asr r5
    4108:	6d656c65 	stclvs	12, cr6, [r5, #-404]!	; 0xfffffe6c
    410c:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
    4110:	73617400 	cmnvc	r1, #0, 8
    4114:	74735f6b 	ldrbtvc	r5, [r3], #-3947	; 0xfffff095
    4118:	74637572 	strbtvc	r7, [r3], #-1394	; 0xfffffa8e
    411c:	74756100 	ldrbtvc	r6, [r5], #-256	; 0xffffff00
    4120:	7375736f 	cmnvc	r5, #-1140850687	; 0xbc000001
    4124:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
    4128:	6c65645f 	cfstrdvs	mvd6, [r5], #-380	; 0xfffffe84
    412c:	61007961 	tstvs	r0, r1, ror #18
    4130:	35327078 	ldrcc	r7, [r2, #-120]!	; 0xffffff88
    4134:	755f3538 	ldrbvc	r3, [pc, #-1336]	; 3c04 <.debug_str+0x3c04>
    4138:	695f6273 	ldmdbvs	pc, {r0, r1, r4, r5, r6, r9, sp, lr}^	; <UNPREDICTABLE>
    413c:	006f666e 	rsbeq	r6, pc, lr, ror #12
    4140:	5f756d70 	svcpl	0x00756d70
    4144:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    4148:	6768635f 			; <UNDEFINED> instruction: 0x6768635f
    414c:	5f646e65 	svcpl	0x00646e65
    4150:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0xfffffe8e
    4154:	6e6f7a00 	vmulvs.f32	s15, s30, s0
    4158:	73696c65 	cmnvc	r9, #25856	; 0x6500
    415c:	43500074 	cmpmi	r0, #116	; 0x74
    4160:	465f5550 			; <UNDEFINED> instruction: 0x465f5550
    4164:	41505f43 	cmpmi	r0, r3, asr #30
    4168:	69004547 	stmdbvs	r0, {r0, r1, r2, r6, r8, sl, lr}
    416c:	00746162 	rsbseq	r6, r4, r2, ror #2
    4170:	45574f50 	ldrbmi	r4, [r7, #-3920]	; 0xfffff0b0
    4174:	55535f52 	ldrbpl	r5, [r3, #-3922]	; 0xfffff0ae
    4178:	594c5050 	stmdbpl	ip, {r4, r6, ip, lr}^
    417c:	4f52505f 	svcmi	0x0052505f
    4180:	48435f50 	stmdami	r3, {r4, r6, r8, r9, sl, fp, ip, lr}^
    4184:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    4188:	4756415f 			; <UNDEFINED> instruction: 0x4756415f
    418c:	5f6d7600 	svcpl	0x006d7600
    4190:	0073706f 	rsbseq	r7, r3, pc, rrx
    4194:	5f756d70 	svcpl	0x00756d70
    4198:	006d756e 	rsbeq	r7, sp, lr, ror #10
    419c:	776f6873 			; <UNDEFINED> instruction: 0x776f6873
    41a0:	5f63745f 	svcpl	0x0063745f
    41a4:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
    41a8:	54524800 	ldrbpl	r4, [r2], #-2048	; 0xfffff800
    41ac:	52454d49 	subpl	r4, r5, #4672	; 0x1240
    41b0:	5341425f 	movtpl	r4, #4703	; 0x125f
    41b4:	41545f45 	cmpmi	r4, r5, asr #30
    41b8:	50520049 	subspl	r0, r2, r9, asr #32
    41bc:	55535f4d 	ldrbpl	r5, [r3, #-3917]	; 0xfffff0b3
    41c0:	4e455053 	mcrmi	0, 2, r5, cr5, cr3, {2}
    41c4:	00444544 	subeq	r4, r4, r4, asr #10
    41c8:	696c6e6f 	stmdbvs	ip!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    41cc:	6500656e 	strvs	r6, [r0, #-1390]	; 0xfffffa92
    41d0:	62617478 	rsbvs	r7, r1, #120, 8	; 0x78000000
    41d4:	7200656c 	andvc	r6, r0, #108, 10	; 0x1b000000
    41d8:	69746e75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
    41dc:	695f656d 	ldmdbvs	pc, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    41e0:	00656c64 	rsbeq	r6, r5, r4, ror #24
    41e4:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
    41e8:	6572705f 	ldrbvs	r7, [r2, #-95]!	; 0xffffffa1
    41ec:	746e6573 	strbtvc	r6, [lr], #-1395	; 0xfffffa8d
    41f0:	6761705f 			; <UNDEFINED> instruction: 0x6761705f
    41f4:	69007365 	stmdbvs	r0, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    41f8:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
    41fc:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
    4200:	67756200 	ldrbvs	r6, [r5, -r0, lsl #4]!
    4204:	6464615f 	strbtvs	r6, [r4], #-351	; 0xfffffea1
    4208:	61640072 	smcvs	16386	; 0x4002
    420c:	6e006174 	mcrvs	1, 0, r6, cr0, cr4, {3}
    4210:	65635f72 	strbvs	r5, [r3, #-3954]!	; 0xfffff08e
    4214:	00736c6c 	rsbseq	r6, r3, ip, ror #24
    4218:	455f5349 	ldrbmi	r5, [pc, #-841]	; 3ed7 <.debug_str+0x3ed7>
    421c:	4f5f5252 	svcmi	0x005f5252
    4220:	554e5f52 	strbpl	r5, [lr, #-3922]	; 0xfffff0ae
    4224:	62004c4c 	andvs	r4, r0, #76, 24	; 0x4c00
    4228:	616d7469 	cmnvs	sp, r9, ror #8
    422c:	72640070 	rsbvc	r0, r4, #112	; 0x70
    4230:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    4234:	69645f73 	stmdbvs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    4238:	65720072 	ldrbvs	r0, [r2, #-114]!	; 0xffffff8e
    423c:	72756f73 	rsbsvc	r6, r5, #460	; 0x1cc
    4240:	6f006563 	svcvs	0x00006563
    4244:	006e6570 	rsbeq	r6, lr, r0, ror r5
    4248:	6c616d6b 	stclvs	13, cr6, [r1], #-428	; 0xfffffe54
    424c:	5f636f6c 	svcpl	0x00636f6c
    4250:	68636163 	stmdavs	r3!, {r0, r1, r5, r6, r8, sp, lr}^
    4254:	63007365 	movwvs	r7, #869	; 0x365
    4258:	635f7275 	cmpvs	pc, #1342177287	; 0x50000007
    425c:	6f6c756f 	svcvs	0x006c756f
    4260:	635f626d 	cmpvs	pc, #-805306362	; 0xd0000006
    4264:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    4268:	62007265 	andvs	r7, r0, #1342177286	; 0x50000006
    426c:	745f6775 	ldrbvc	r6, [pc], #-1909	; 4274 <.debug_str+0x4274>
    4270:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    4274:	50584100 	subspl	r4, r8, r0, lsl #2
    4278:	4c50535f 	mrrcmi	3, 5, r5, r0, cr15
    427c:	6f6d0059 	svcvs	0x006d0059
    4280:	62006564 	andvs	r6, r0, #100, 10	; 0x19000000
    4284:	745f7375 	ldrbvc	r7, [pc], #-885	; 428c <.debug_str+0x428c>
    4288:	00657079 	rsbeq	r7, r5, r9, ror r0
    428c:	5f756d70 	svcpl	0x00756d70
    4290:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    4294:	6768635f 			; <UNDEFINED> instruction: 0x6768635f
    4298:	006c6f76 	rsbeq	r6, ip, r6, ror pc
    429c:	424f5250 	submi	r5, pc, #80, 4
    42a0:	52505f45 	subspl	r5, r0, #276	; 0x114
    42a4:	52454645 	subpl	r4, r5, #72351744	; 0x4500000
    42a8:	5953415f 	ldmdbpl	r3, {r0, r1, r2, r3, r4, r6, r8, lr}^
    42ac:	5248434e 	subpl	r4, r8, #939524097	; 0x38000001
    42b0:	554f4e4f 	strbpl	r4, [pc, #-3663]	; 3469 <.debug_str+0x3469>
    42b4:	52490053 	subpl	r0, r9, #83	; 0x53
    42b8:	41485f51 	cmpmi	r8, r1, asr pc
    42bc:	454c444e 	strbmi	r4, [ip, #-1102]	; 0xfffffbb2
    42c0:	61700044 	cmnvs	r0, r4, asr #32
    42c4:	65736567 	ldrbvs	r6, [r3, #-1383]!	; 0xfffffa99
    42c8:	74610074 	strbtvc	r0, [r1], #-116	; 0xffffff8c
    42cc:	62697274 	rsbvs	r7, r9, #116, 4	; 0x40000007
    42d0:	5f657475 	svcpl	0x00657475
    42d4:	756f7267 	strbvc	r7, [pc, #-615]!	; 4075 <.debug_str+0x4075>
    42d8:	64690070 	strbtvs	r0, [r9], #-112	; 0xffffff90
    42dc:	6e5f656c 	cdpvs	5, 5, cr6, cr15, cr12, {3}
    42e0:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    42e4:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
    42e8:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    42ec:	5f6d7072 	svcpl	0x006d7072
    42f0:	75716572 	ldrbvc	r6, [r1, #-1394]!	; 0xfffffa8e
    42f4:	00747365 	rsbseq	r7, r4, r5, ror #6
    42f8:	73616c63 	cmnvc	r1, #25344	; 0x6300
    42fc:	6e6f7a73 	mcrvs	10, 3, r7, cr15, cr3, {3}
    4300:	64695f65 	strbtvs	r5, [r9], #-3941	; 0xfffff09b
    4304:	65640078 	strbvs	r0, [r4, #-120]!	; 0xffffff88
    4308:	73657276 	cmnvc	r5, #1610612743	; 0x60000007
    430c:	636f6c5f 	cmnvs	pc, #24320	; 0x5f00
    4310:	7369006b 	cmnvc	r9, #107	; 0x6b
    4314:	7369765f 	cmnvc	r9, #99614720	; 0x5f00000
    4318:	656c6269 	strbvs	r6, [ip, #-617]!	; 0xfffffd97
    431c:	63617600 	cmnvs	r1, #0, 12
    4320:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
    4324:	69617700 	stmdbvs	r1!, {r8, r9, sl, ip, sp, lr}^
    4328:	696c5f74 	stmdbvs	ip!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    432c:	6e007473 	mcrvs	4, 0, r7, cr0, cr3, {3}
    4330:	646f6e5f 	strbtvs	r6, [pc], #-3679	; 4338 <.debug_str+0x4338>
    4334:	656b0065 	strbvs	r0, [fp, #-101]!	; 0xffffff9b
    4338:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    433c:	6f6c755f 	svcvs	0x006c755f
    4340:	745f676e 	ldrbvc	r6, [pc], #-1902	; 4348 <.debug_str+0x4348>
    4344:	626f6b00 	rsbvs	r6, pc, #0, 22
    4348:	736e5f6a 	cmnvc	lr, #424	; 0x1a8
    434c:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    4350:	706f5f65 	rsbvc	r5, pc, r5, ror #30
    4354:	74617265 	strbtvc	r7, [r1], #-613	; 0xfffffd9b
    4358:	736e6f69 	cmnvc	lr, #420	; 0x1a4
    435c:	74616900 	strbtvc	r6, [r1], #-2304	; 0xfffff700
    4360:	6e007274 	mcrvs	2, 0, r7, cr0, cr4, {3}
    4364:	705f6d75 	subsvc	r6, pc, r5, ror sp	; <UNPREDICTABLE>
    4368:	65706f72 	ldrbvs	r6, [r0, #-3954]!	; 0xfffff08e
    436c:	65697472 	strbvs	r7, [r9, #-1138]!	; 0xfffffb8e
    4370:	61720073 	cmnvs	r2, r3, ror r0
    4374:	6f6c5f77 	svcvs	0x006c5f77
    4378:	65006b63 	strvs	r6, [r0, #-2915]	; 0xfffff49d
    437c:	5f70766e 	svcpl	0x0070766e
    4380:	00786469 	rsbseq	r6, r8, r9, ror #8
    4384:	5f756d62 	svcpl	0x00756d62
    4388:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
    438c:	5f6c6f72 	svcpl	0x006c6f72
    4390:	72747461 	rsbsvc	r7, r4, #1627389952	; 0x61000000
    4394:	68630073 	stmdavs	r3!, {r0, r1, r4, r5, r6}^
    4398:	69007069 	stmdbvs	r0, {r0, r3, r5, r6, ip, sp, lr}
    439c:	6e655f64 	cdpvs	15, 6, cr5, cr5, cr4, {3}
    43a0:	00797274 	rsbseq	r7, r9, r4, ror r2
    43a4:	5f776172 	svcpl	0x00776172
    43a8:	6e697073 	mcrvs	0, 3, r7, cr9, cr3, {3}
    43ac:	6b636f6c 	blvs	18e0164 <axp2585_set_usb_vhold+0x18def20>
    43b0:	6100745f 	tstvs	r0, pc, asr r4
    43b4:	635f7078 	cmpvs	pc, #120	; 0x78
    43b8:	67726168 	ldrbvs	r6, [r2, -r8, ror #2]!
    43bc:	645f7265 	ldrbvs	r7, [pc], #-613	; 43c4 <.debug_str+0x43c4>
    43c0:	50007665 	andpl	r7, r0, r5, ror #12
    43c4:	5245574f 	subpl	r5, r5, #20709376	; 0x13c0000
    43c8:	5055535f 	subspl	r5, r5, pc, asr r3
    43cc:	5f594c50 	svcpl	0x00594c50
    43d0:	504f5250 	subpl	r5, pc, r0, asr r2	; <UNPREDICTABLE>
    43d4:	4148435f 	cmpmi	r8, pc, asr r3
    43d8:	5f454752 	svcpl	0x00454752
    43dc:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
    43e0:	74656400 	strbtvc	r6, [r5], #-1024	; 0xfffffc00
    43e4:	6c61765f 	stclvs	6, cr7, [r1], #-380	; 0xfffffe84
    43e8:	625f6469 	subsvs	r6, pc, #1761607680	; 0x69000000
    43ec:	50007469 	andpl	r7, r0, r9, ror #8
    43f0:	5245574f 	subpl	r5, r5, #20709376	; 0x13c0000
    43f4:	5055535f 	subspl	r5, r5, pc, asr r3
    43f8:	5f594c50 	svcpl	0x00594c50
    43fc:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
    4400:	4253555f 	subsmi	r5, r3, #398458880	; 0x17c00000
    4404:	5043445f 	subpl	r4, r3, pc, asr r4
    4408:	6e6f6300 	cdpvs	3, 6, cr6, cr15, cr0, {0}
    440c:	5f676974 	svcpl	0x00676974
    4410:	65676170 	strbvs	r6, [r7, #-368]!	; 0xfffffe90
    4414:	7461645f 	strbtvc	r6, [r1], #-1119	; 0xfffffba1
    4418:	6d700061 	ldclvs	0, cr0, [r0, #-388]!	; 0xfffffe7c
    441c:	6f635f75 	svcvs	0x00635f75
    4420:	6e655f75 	mcrvs	15, 3, r5, cr5, cr5, {3}
    4424:	6c6e6f00 	stclvs	15, cr6, [lr], #-0
    4428:	5f656e69 	svcpl	0x00656e69
    442c:	67697274 			; <UNDEFINED> instruction: 0x67697274
    4430:	6d616e5f 	stclvs	14, cr6, [r1, #-380]!	; 0xfffffe84
    4434:	4f500065 	svcmi	0x00500065
    4438:	5f524557 	svcpl	0x00524557
    443c:	50505553 	subspl	r5, r0, r3, asr r5
    4440:	505f594c 	subspl	r5, pc, ip, asr #18
    4444:	5f504f52 	svcpl	0x00504f52
    4448:	52454e45 	subpl	r4, r5, #1104	; 0x450
    444c:	4e5f5947 	cdpmi	9, 5, cr5, cr15, cr7, {2}
    4450:	6c00574f 	stcvs	7, cr5, [r0], {79}	; 0x4f
    4454:	5f747369 	svcpl	0x00747369
    4458:	6b636f6c 	blvs	18e0210 <axp2585_set_usb_vhold+0x18defcc>
    445c:	574f5000 	strbpl	r5, [pc, -r0]
    4460:	535f5245 	cmppl	pc, #1342177284	; 0x50000004
    4464:	4c505055 	mrrcmi	0, 5, r5, r0, cr5
    4468:	45485f59 	strbmi	r5, [r8, #-3929]	; 0xfffff0a7
    446c:	48544c41 	ldmdami	r4, {r0, r6, sl, fp, lr}^
    4470:	5441575f 	strbpl	r5, [r1], #-1887	; 0xfffff8a1
    4474:	4f444843 	svcmi	0x00444843
    4478:	49545f47 	ldmdbmi	r4, {r0, r1, r2, r6, r8, r9, sl, fp, ip, lr}^
    447c:	5f52454d 	svcpl	0x0052454d
    4480:	49505845 	ldmdbmi	r0, {r0, r2, r6, fp, ip, lr}^
    4484:	72004552 	andvc	r4, r0, #343932928	; 0x14800000
    4488:	616d6765 	cmnvs	sp, r5, ror #14
    448c:	68630070 	stmdavs	r3!, {r4, r5, r6}^
    4490:	00646c69 	rsbeq	r6, r4, r9, ror #24
    4494:	415f524e 	cmpmi	pc, lr, asr #4
    4498:	5f4e4f4e 	svcpl	0x004e4f4e
    449c:	4e415254 	mcrmi	2, 2, r5, cr1, cr4, {2}
    44a0:	52415053 	subpl	r5, r1, #83	; 0x53
    44a4:	5f544e45 	svcpl	0x00544e45
    44a8:	45475548 	strbmi	r5, [r7, #-1352]	; 0xfffffab8
    44ac:	45474150 	strbmi	r4, [r7, #-336]	; 0xfffffeb0
    44b0:	75730053 	ldrbvc	r0, [r3, #-83]!	; 0xffffffad
    44b4:	73726570 	cmnvc	r2, #112, 10	; 0x1c000000
    44b8:	756d7000 	strbvc	r7, [sp, #-0]!
    44bc:	7277705f 	rsbsvc	r7, r7, #95	; 0x5f
    44c0:	745f6b6f 	ldrbvc	r6, [pc], #-2927	; 44c8 <.debug_str+0x44c8>
    44c4:	00656d69 	rsbeq	r6, r5, r9, ror #26
    44c8:	5f64656c 	svcpl	0x0064656c
    44cc:	67697262 	strbvs	r7, [r9, -r2, ror #4]!
    44d0:	656e7468 	strbvs	r7, [lr, #-1128]!	; 0xfffffb98
    44d4:	70007373 	andvc	r7, r0, r3, ror r3
    44d8:	6f645f6d 	svcvs	0x00645f6d
    44dc:	6e69616d 	powvsez	f6, f1, #5.0
    44e0:	74616200 	strbtvc	r6, [r1], #-512	; 0xfffffe00
    44e4:	6d65745f 	cfstrdvs	mvd7, [r5, #-380]!	; 0xfffffe84
    44e8:	52480070 	subpl	r0, r8, #112	; 0x70
    44ec:	454d4954 	strbmi	r4, [sp, #-2388]	; 0xfffff6ac
    44f0:	41425f52 	cmpmi	r2, r2, asr pc
    44f4:	425f4553 	subsmi	r4, pc, #348127232	; 0x14c00000
    44f8:	54544f4f 	ldrbpl	r4, [r4], #-3919	; 0xfffff0b1
    44fc:	00454d49 	subeq	r4, r5, r9, asr #26
    4500:	6c756f63 	ldclvs	15, cr6, [r5], #-396	; 0xfffffe74
    4504:	5f626d6f 	svcpl	0x00626d6f
    4508:	63726570 	cmnvs	r2, #112, 10	; 0x1c000000
    450c:	00746e65 	rsbseq	r6, r4, r5, ror #28
    4510:	31755f5f 	cmncc	r5, pc, asr pc
    4514:	70730036 	rsbsvc	r0, r3, r6, lsr r0
    4518:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
    451c:	61705f64 	cmnvs	r0, r4, ror #30
    4520:	00736567 	rsbseq	r6, r3, r7, ror #10
    4524:	64727470 	ldrbtvs	r7, [r2], #-1136	; 0xfffffb90
    4528:	5f666669 	svcpl	0x00666669
    452c:	78610074 	stmdavc	r1!, {r2, r4, r5, r6}^
    4530:	65725f70 	ldrbvs	r5, [r2, #-3952]!	; 0xfffff090
    4534:	70616d67 	rsbvc	r6, r1, r7, ror #26
    4538:	6165725f 	cmnvs	r5, pc, asr r2
    453c:	75630064 	strbvc	r0, [r3, #-100]!	; 0xffffff9c
    4540:	69645f72 	stmdbvs	r4!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    4544:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
    4548:	5f6e6f69 	svcpl	0x006e6f69
    454c:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
    4550:	6b007465 	blvs	216ec <axp2585_set_usb_vhold+0x204a8>
    4554:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    4558:	61705f6c 	cmnvs	r0, ip, ror #30
    455c:	006d6172 	rsbeq	r6, sp, r2, ror r1
    4560:	6177736b 	cmnvs	r7, fp, ror #6
    4564:	6d5f6470 	cfldrdvs	mvd6, [pc, #-448]	; 43ac <.debug_str+0x43ac>
    4568:	6f5f7861 	svcvs	0x005f7861
    456c:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
    4570:	6e756600 	cdpvs	6, 7, cr6, cr5, cr0, {0}
    4574:	6f697463 	svcvs	0x00697463
    4578:	6172006e 	cmnvs	r2, lr, rrx
    457c:	70735f77 	rsbsvc	r5, r3, r7, ror pc
    4580:	6f6c6e69 	svcvs	0x006c6e69
    4584:	6b006b63 	blvs	1f318 <axp2585_set_usb_vhold+0x1e0d4>
    4588:	70617773 	rsbvc	r7, r1, r3, ror r7
    458c:	4f500064 	svcmi	0x00500064
    4590:	5f524557 	svcpl	0x00524557
    4594:	50505553 	subspl	r5, r0, r3, asr r5
    4598:	505f594c 	subspl	r5, pc, ip, asr #18
    459c:	5f504f52 	svcpl	0x00504f52
    45a0:	554e414d 	strbpl	r4, [lr, #-333]	; 0xfffffeb3
    45a4:	54434146 	strbpl	r4, [r3], #-326	; 0xfffffeba
    45a8:	52455255 	subpl	r5, r5, #1342177285	; 0x50000005
    45ac:	72617400 	rsbvc	r7, r1, #0, 8
    45b0:	5f746567 	svcpl	0x00746567
    45b4:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
    45b8:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
    45bc:	6f725f74 	svcvs	0x00725f74
    45c0:	7a69735f 	bvc	1a61344 <axp2585_set_usb_vhold+0x1a60100>
    45c4:	65700065 	ldrbvs	r0, [r0, #-101]!	; 0xffffff9b
    45c8:	75706372 	ldrbvc	r6, [r0, #-882]!	; 0xfffffc8e
    45cc:	6972645f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, sp, lr}^
    45d0:	6d5f7466 	cfldrdvs	mvd7, [pc, #-408]	; 4440 <.debug_str+0x4440>
    45d4:	006b7261 	rsbeq	r7, fp, r1, ror #4
    45d8:	636f6c63 	cmnvs	pc, #25344	; 0x6300
    45dc:	696c5f6b 	stmdbvs	ip!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    45e0:	73007473 	movwvc	r7, #1139	; 0x473
    45e4:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
    45e8:	6400745f 	strvs	r7, [r0], #-1119	; 0xfffffba1
    45ec:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    45f0:	735f746c 	cmpvc	pc, #108, 8	; 0x6c000000
    45f4:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    45f8:	4d524100 	ldfmie	f4, [r2, #-0]
    45fc:	4345535f 	movtmi	r5, #21343	; 0x535f
    4600:	4c4e555f 	cfstr64mi	mvdx5, [lr], {95}	; 0x5f
    4604:	4c454b49 	mcrrmi	11, 4, r4, r5, cr9
    4608:	68630059 	stmdavs	r3!, {r0, r3, r4, r6}^
    460c:	69677261 	stmdbvs	r7!, {r0, r5, r6, r9, ip, sp, lr}^
    4610:	625f676e 	subsvs	r6, pc, #28835840	; 0x1b80000
    4614:	6b6e696c 	blvs	1b9ebcc <axp2585_set_usb_vhold+0x1b9d988>
    4618:	6c75665f 	ldclvs	6, cr6, [r5], #-380	; 0xfffffe84
    461c:	6f735f6c 	svcvs	0x00735f6c
    4620:	5f64696c 	svcpl	0x0064696c
    4624:	67697274 			; <UNDEFINED> instruction: 0x67697274
    4628:	524f5700 	subpl	r5, pc, #0, 14
    462c:	474e494b 	strbmi	r4, [lr, -fp, asr #18]
    4630:	5f544553 	svcpl	0x00544553
    4634:	41464552 	cmpmi	r6, r2, asr r5
    4638:	00544c55 	subseq	r4, r4, r5, asr ip
    463c:	5f766564 	svcpl	0x00766564
    4640:	524e0074 	subpl	r0, lr, #116	; 0x74
    4644:	414d575f 	cmpmi	sp, pc, asr r7
    4648:	7a004b52 	bvc	17398 <axp2585_set_usb_vhold+0x16154>
    464c:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
    4650:	5f006665 	svcpl	0x00006665
    4654:	3233755f 	eorscc	r7, r3, #398458880	; 0x17c00000
    4658:	524f5700 	subpl	r5, pc, #0, 14
    465c:	474e494b 	strbmi	r4, [lr, -fp, asr #18]
    4660:	5f544553 	svcpl	0x00544553
    4664:	49544341 	ldmdbmi	r4, {r0, r6, r8, r9, lr}^
    4668:	45544156 	ldrbmi	r4, [r4, #-342]	; 0xfffffeaa
    466c:	5f666f00 	svcpl	0x00666f00
    4670:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
    4674:	695f6563 	ldmdbvs	pc, {r0, r1, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    4678:	64700064 	ldrbtvs	r0, [r0], #-100	; 0xffffff9c
    467c:	615f7665 	cmpvs	pc, r5, ror #12
    4680:	64686372 	strbtvs	r6, [r8], #-882	; 0xfffffc8e
    4684:	00617461 	rsbeq	r7, r1, r1, ror #8
    4688:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
    468c:	6170735f 	cmnvs	r0, pc, asr r3
    4690:	64656e6e 	strbtvs	r6, [r5], #-3694	; 0xfffff192
    4694:	6761705f 			; <UNDEFINED> instruction: 0x6761705f
    4698:	73007365 	movwvc	r7, #869	; 0x365
    469c:	625f7465 	subsvs	r7, pc, #1694498816	; 0x65000000
    46a0:	68676972 	stmdavs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    46a4:	73656e74 	cmnvc	r5, #116, 28	; 0x740
    46a8:	6f775f73 	svcvs	0x00775f73
    46ac:	5f006b72 	svcpl	0x00006b72
    46b0:	58414d5f 	stmdapl	r1, {r0, r1, r2, r3, r4, r6, r8, sl, fp, lr}^
    46b4:	5f524e5f 	svcpl	0x00524e5f
    46b8:	454e4f5a 	strbmi	r4, [lr, #-3930]	; 0xfffff0a6
    46bc:	75730053 	ldrbvc	r0, [r3, #-83]!	; 0xffffffad
    46c0:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
    46c4:	745f6465 	ldrbvc	r6, [pc], #-1125	; 46cc <.debug_str+0x46cc>
    46c8:	6567006f 	strbvs	r0, [r7, #-111]!	; 0xffffff91
    46cc:	63615f74 	cmnvs	r1, #116, 30	; 0x1d0
    46d0:	7275635f 	rsbsvc	r6, r5, #2080374785	; 0x7c000001
    46d4:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    46d8:	6b617700 	blvs	18622e0 <axp2585_set_usb_vhold+0x186109c>
    46dc:	72695f65 	rsbvc	r5, r9, #404	; 0x194
    46e0:	6d620071 	stclvs	0, cr0, [r2, #-452]!	; 0xfffffe3c
    46e4:	6f635f75 	svcvs	0x00635f75
    46e8:	6f72746e 	svcvs	0x0072746e
    46ec:	74615f6c 	strbtvc	r5, [r1], #-3948	; 0xfffff094
    46f0:	675f7274 			; <UNDEFINED> instruction: 0x675f7274
    46f4:	70756f72 	rsbsvc	r6, r5, r2, ror pc
    46f8:	6e757200 	cdpvs	2, 7, cr7, cr5, cr0, {0}
    46fc:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    4700:	7272655f 	rsbsvc	r6, r2, #398458880	; 0x17c00000
    4704:	6d00726f 	sfmvs	f7, 4, [r0, #-444]	; 0xfffffe44
    4708:	735f7861 	cmpvc	pc, #6356992	; 0x610000
    470c:	656d6765 	strbvs	r6, [sp, #-1893]!	; 0xfffff89b
    4710:	735f746e 	cmpvc	pc, #1845493760	; 0x6e000000
    4714:	00657a69 	rsbeq	r7, r5, r9, ror #20
    4718:	616c6564 	cmnvs	ip, r4, ror #10
    471c:	5f646579 	svcpl	0x00646579
    4720:	6b726f77 	blvs	1ca0504 <axp2585_set_usb_vhold+0x1c9f2c0>
    4724:	5f524e00 	svcpl	0x00524e00
    4728:	45474150 	strbmi	r4, [r7, #-336]	; 0xfffffeb0
    472c:	4c424154 	stfmie	f4, [r2], {84}	; 0x54
    4730:	616d0045 	cmnvs	sp, r5, asr #32
    4734:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    4738:	61705f64 	cmnvs	r0, r4, ror #30
    473c:	00736567 	rsbseq	r6, r3, r7, ror #10
    4740:	7473616c 	ldrbtvc	r6, [r3], #-364	; 0xfffffe94
    4744:	7375625f 	cmnvc	r5, #-268435451	; 0xf0000005
    4748:	6f700079 	svcvs	0x00700079
    474c:	5f726577 	svcpl	0x00726577
    4750:	70707573 	rsbsvc	r7, r0, r3, ror r5
    4754:	705f796c 	subsvc	r7, pc, ip, ror #18
    4758:	76706f72 	uhsub16vc	r6, r0, r2
    475c:	50006c61 	andpl	r6, r0, r1, ror #24
    4760:	5245574f 	subpl	r5, r5, #20709376	; 0x13c0000
    4764:	5055535f 	subspl	r5, r5, pc, asr r3
    4768:	5f594c50 	svcpl	0x00594c50
    476c:	504f5250 	subpl	r5, pc, r0, asr r2	; <UNPREDICTABLE>
    4770:	5041435f 	subpl	r4, r1, pc, asr r3
    4774:	54494341 	strbpl	r4, [r9], #-833	; 0xfffffcbf
    4778:	4c415f59 	mcrrmi	15, 5, r5, r1, cr9
    477c:	5f545245 	svcpl	0x00545245
    4780:	0058414d 	subseq	r4, r8, sp, asr #2
    4784:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    4788:	75007265 	strvc	r7, [r0, #-613]	; 0xfffffd9b
    478c:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
    4790:	2064656e 	rsbcs	r6, r4, lr, ror #10
    4794:	00746e69 	rsbseq	r6, r4, r9, ror #28
    4798:	5f756d70 	svcpl	0x00756d70
    479c:	635f6361 	cmpvs	pc, #-2080374783	; 0x84000001
    47a0:	64007275 	strvs	r7, [r0], #-629	; 0xfffffd8b
    47a4:	765f7465 	ldrbvc	r7, [pc], -r5, ror #8
    47a8:	64696c61 	strbtvs	r6, [r9], #-3169	; 0xfffff39f
    47ac:	72616500 	rsbvc	r6, r1, #0, 10
    47b0:	695f796c 	ldmdbvs	pc, {r2, r3, r5, r6, r8, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    47b4:	0074696e 	rsbseq	r6, r4, lr, ror #18
    47b8:	745f6469 	ldrbvc	r6, [pc], #-1129	; 47c0 <.debug_str+0x47c0>
    47bc:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    47c0:	地址 0x00000000000047c0 越界。


Disassembly of section .comment:

00000000 <.comment>:
axp2585_set_ac_ihold():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:40
}

static int axp2585_set_ac_ihold(struct axp_charger_dev *cdev, int cur)
{
	return 0;
}
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4c28203a 	stcmi	0, cr2, [r8], #-232	; 0xffffff18
axp2585_get_usb_current():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:68
}

static int axp2585_get_usb_current(struct axp_charger_dev *cdev)
{
	return 0;
}
   8:	72616e69 	rsbvc	r6, r1, #1680	; 0x690
   c:	4347206f 	movtmi	r2, #28783	; 0x706f
axp2585_get_bat_health():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:189
}

static int axp2585_get_bat_health(struct axp_charger_dev *cdev)
{
	return POWER_SUPPLY_HEALTH_GOOD;
}
  10:	2e352043 	cdpcs	0, 3, cr2, cr5, cr3, {2}
  14:	30322d33 	eorscc	r2, r2, r3, lsr sp
axp2585_charger_resume():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:763

	return 0;
}

static int axp2585_charger_resume(struct platform_device *dev)
{
  18:	302e3631 	eorcc	r3, lr, r1, lsr r6
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:768
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);
	int pre_rest_vol;

	if (axp_suspend_flag == AXP_SUSPEND_WITH_IRQ) {
		axp_suspend_flag = AXP_NOT_SUSPEND;
  1c:	35202932 	strcc	r2, [r0, #-2354]!	; 0xfffff6ce
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
#endif
}

static inline void *dev_get_drvdata(const struct device *dev)
{
	return dev->driver_data;
  20:	312e332e 	teqcc	lr, lr, lsr #6
axp2585_charger_resume():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:768
  24:	31303220 	teqcc	r0, r0, lsr #4
  28:	31313036 	teqcc	r1, r6, lsr r0
  2c:	地址 0x000000000000002c 越界。


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
axp2585_set_ac_ihold():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:40
}

static int axp2585_set_ac_ihold(struct axp_charger_dev *cdev, int cur)
{
	return 0;
}
   0:	00002e41 	andeq	r2, r0, r1, asr #28
   4:	61656100 	cmnvs	r5, r0, lsl #2
axp2585_get_usb_current():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:68
}

static int axp2585_get_usb_current(struct axp_charger_dev *cdev)
{
	return 0;
}
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000024 	andeq	r0, r0, r4, lsr #32
axp2585_get_bat_health():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:189
}

static int axp2585_get_bat_health(struct axp_charger_dev *cdev)
{
	return POWER_SUPPLY_HEALTH_GOOD;
}
  10:	412d3705 	teqmi	sp, r5, lsl #14
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
axp2585_charger_resume():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:763

	return 0;
}

static int axp2585_charger_resume(struct platform_device *dev)
{
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:768
	struct axp_charger_dev *chg_dev = platform_get_drvdata(dev);
	int pre_rest_vol;

	if (axp_suspend_flag == AXP_SUSPEND_WITH_IRQ) {
		axp_suspend_flag = AXP_NOT_SUSPEND;
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
dev_get_drvdata():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//include/linux/device.h:898
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
axp2585_charger_resume():
/home/a/ti-processor-sdk-linux-am335x-evm-03.03.00.04/board-support/linux-4.4.41+gitAUTOINC+f9f6f0db2d-gf9f6f0db2d//drivers/power/axp/axp2585/axp2585-charger.c:768
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1e021a01 	vmlane.f32	s2, s4, s2
  2c:	地址 0x000000000000002c 越界。

